<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1061.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="105142"><g><title>[[heap]] (32 samples, 0.03%)</title><rect x="0.0067%" y="997" width="0.0304%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="32"/><text x="0.2567%" y="1007.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="0.0438%" y="981" width="0.0105%" height="15" fill="rgb(217,0,24)" fg:x="46" fg:w="11"/><text x="0.2938%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="0.0552%" y="981" width="0.0114%" height="15" fill="rgb(221,193,54)" fg:x="58" fg:w="12"/><text x="0.3052%" y="991.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 0.01%)</title><rect x="0.0666%" y="981" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="70" fg:w="11"/><text x="0.3166%" y="991.50"></text></g><g><title>core::fmt::write (16 samples, 0.02%)</title><rect x="0.1046%" y="981" width="0.0152%" height="15" fill="rgb(208,68,35)" fg:x="110" fg:w="16"/><text x="0.3546%" y="991.50"></text></g><g><title>[anon] (134 samples, 0.13%)</title><rect x="0.0380%" y="997" width="0.1274%" height="15" fill="rgb(232,128,0)" fg:x="40" fg:w="134"/><text x="0.2880%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (24 samples, 0.02%)</title><rect x="0.1760%" y="981" width="0.0228%" height="15" fill="rgb(207,160,47)" fg:x="185" fg:w="24"/><text x="0.4260%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="0.2102%" y="981" width="0.0162%" height="15" fill="rgb(228,23,34)" fg:x="221" fg:w="17"/><text x="0.4602%" y="991.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (12 samples, 0.01%)</title><rect x="0.2444%" y="933" width="0.0114%" height="15" fill="rgb(218,30,26)" fg:x="257" fg:w="12"/><text x="0.4944%" y="943.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (12 samples, 0.01%)</title><rect x="0.2444%" y="917" width="0.0114%" height="15" fill="rgb(220,122,19)" fg:x="257" fg:w="12"/><text x="0.4944%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="0.2444%" y="901" width="0.0114%" height="15" fill="rgb(250,228,42)" fg:x="257" fg:w="12"/><text x="0.4944%" y="911.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (36 samples, 0.03%)</title><rect x="0.2264%" y="981" width="0.0342%" height="15" fill="rgb(240,193,28)" fg:x="238" fg:w="36"/><text x="0.4764%" y="991.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (17 samples, 0.02%)</title><rect x="0.2444%" y="965" width="0.0162%" height="15" fill="rgb(216,20,37)" fg:x="257" fg:w="17"/><text x="0.4944%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (17 samples, 0.02%)</title><rect x="0.2444%" y="949" width="0.0162%" height="15" fill="rgb(206,188,39)" fg:x="257" fg:w="17"/><text x="0.4944%" y="959.50"></text></g><g><title>core::num::dec2flt::dec2flt (23 samples, 0.02%)</title><rect x="0.3348%" y="981" width="0.0219%" height="15" fill="rgb(217,207,13)" fg:x="352" fg:w="23"/><text x="0.5848%" y="991.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (18 samples, 0.02%)</title><rect x="0.3567%" y="981" width="0.0171%" height="15" fill="rgb(231,73,38)" fg:x="375" fg:w="18"/><text x="0.6067%" y="991.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (17 samples, 0.02%)</title><rect x="0.3776%" y="981" width="0.0162%" height="15" fill="rgb(225,20,46)" fg:x="397" fg:w="17"/><text x="0.6276%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (19 samples, 0.02%)</title><rect x="0.4232%" y="981" width="0.0181%" height="15" fill="rgb(210,31,41)" fg:x="445" fg:w="19"/><text x="0.6732%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (15 samples, 0.01%)</title><rect x="0.4413%" y="981" width="0.0143%" height="15" fill="rgb(221,200,47)" fg:x="464" fg:w="15"/><text x="0.6913%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (15 samples, 0.01%)</title><rect x="0.4413%" y="965" width="0.0143%" height="15" fill="rgb(226,26,5)" fg:x="464" fg:w="15"/><text x="0.6913%" y="975.50"></text></g><g><title>[unknown] (325 samples, 0.31%)</title><rect x="0.1655%" y="997" width="0.3091%" height="15" fill="rgb(249,33,26)" fg:x="174" fg:w="325"/><text x="0.4155%" y="1007.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="0.4889%" y="661" width="0.0171%" height="15" fill="rgb(235,183,28)" fg:x="514" fg:w="18"/><text x="0.7389%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (18 samples, 0.02%)</title><rect x="0.5164%" y="501" width="0.0171%" height="15" fill="rgb(221,5,38)" fg:x="543" fg:w="18"/><text x="0.7664%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (14 samples, 0.01%)</title><rect x="0.5202%" y="485" width="0.0133%" height="15" fill="rgb(247,18,42)" fg:x="547" fg:w="14"/><text x="0.7702%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="0.5231%" y="469" width="0.0105%" height="15" fill="rgb(241,131,45)" fg:x="550" fg:w="11"/><text x="0.7731%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="0.5231%" y="453" width="0.0105%" height="15" fill="rgb(249,31,29)" fg:x="550" fg:w="11"/><text x="0.7731%" y="463.50"></text></g><g><title>async_executor::steal (27 samples, 0.03%)</title><rect x="0.5164%" y="517" width="0.0257%" height="15" fill="rgb(225,111,53)" fg:x="543" fg:w="27"/><text x="0.7664%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="0.5421%" y="517" width="0.0247%" height="15" fill="rgb(238,160,17)" fg:x="570" fg:w="26"/><text x="0.7921%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="0.5545%" y="501" width="0.0124%" height="15" fill="rgb(214,148,48)" fg:x="583" fg:w="13"/><text x="0.8045%" y="511.50"></text></g><g><title>fastrand::usize (11 samples, 0.01%)</title><rect x="0.5678%" y="517" width="0.0105%" height="15" fill="rgb(232,36,49)" fg:x="597" fg:w="11"/><text x="0.8178%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="0.5678%" y="501" width="0.0105%" height="15" fill="rgb(209,103,24)" fg:x="597" fg:w="11"/><text x="0.8178%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="0.5678%" y="485" width="0.0105%" height="15" fill="rgb(229,88,8)" fg:x="597" fg:w="11"/><text x="0.8178%" y="495.50"></text></g><g><title>fastrand::RNG::__getit (11 samples, 0.01%)</title><rect x="0.5678%" y="469" width="0.0105%" height="15" fill="rgb(213,181,19)" fg:x="597" fg:w="11"/><text x="0.8178%" y="479.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="0.5678%" y="453" width="0.0105%" height="15" fill="rgb(254,191,54)" fg:x="597" fg:w="11"/><text x="0.8178%" y="463.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="0.5678%" y="437" width="0.0105%" height="15" fill="rgb(241,83,37)" fg:x="597" fg:w="11"/><text x="0.8178%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="0.5678%" y="421" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="597" fg:w="11"/><text x="0.8178%" y="431.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (75 samples, 0.07%)</title><rect x="0.5098%" y="533" width="0.0713%" height="15" fill="rgb(226,3,54)" fg:x="536" fg:w="75"/><text x="0.7598%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.10%)</title><rect x="0.5079%" y="597" width="0.0961%" height="15" fill="rgb(245,192,40)" fg:x="534" fg:w="101"/><text x="0.7579%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (101 samples, 0.10%)</title><rect x="0.5079%" y="581" width="0.0961%" height="15" fill="rgb(238,167,29)" fg:x="534" fg:w="101"/><text x="0.7579%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (100 samples, 0.10%)</title><rect x="0.5088%" y="565" width="0.0951%" height="15" fill="rgb(232,182,51)" fg:x="535" fg:w="100"/><text x="0.7588%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (100 samples, 0.10%)</title><rect x="0.5088%" y="549" width="0.0951%" height="15" fill="rgb(231,60,39)" fg:x="535" fg:w="100"/><text x="0.7588%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.10%)</title><rect x="0.5060%" y="629" width="0.1018%" height="15" fill="rgb(208,69,12)" fg:x="532" fg:w="107"/><text x="0.7560%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (107 samples, 0.10%)</title><rect x="0.5060%" y="613" width="0.1018%" height="15" fill="rgb(235,93,37)" fg:x="532" fg:w="107"/><text x="0.7560%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="0.6144%" y="549" width="0.0171%" height="15" fill="rgb(213,116,39)" fg:x="646" fg:w="18"/><text x="0.8644%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (18 samples, 0.02%)</title><rect x="0.6144%" y="533" width="0.0171%" height="15" fill="rgb(222,207,29)" fg:x="646" fg:w="18"/><text x="0.8644%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="0.6116%" y="565" width="0.0323%" height="15" fill="rgb(206,96,30)" fg:x="643" fg:w="34"/><text x="0.8616%" y="575.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (11 samples, 0.01%)</title><rect x="0.6496%" y="533" width="0.0105%" height="15" fill="rgb(218,138,4)" fg:x="683" fg:w="11"/><text x="0.8996%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="0.6486%" y="549" width="0.0152%" height="15" fill="rgb(250,191,14)" fg:x="682" fg:w="16"/><text x="0.8986%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="0.6658%" y="517" width="0.0124%" height="15" fill="rgb(239,60,40)" fg:x="700" fg:w="13"/><text x="0.9158%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="0.6667%" y="501" width="0.0114%" height="15" fill="rgb(206,27,48)" fg:x="701" fg:w="12"/><text x="0.9167%" y="511.50"></text></g><g><title>event_listener::List::notify (22 samples, 0.02%)</title><rect x="0.6810%" y="501" width="0.0209%" height="15" fill="rgb(225,35,8)" fg:x="716" fg:w="22"/><text x="0.9310%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (21 samples, 0.02%)</title><rect x="0.6819%" y="485" width="0.0200%" height="15" fill="rgb(250,213,24)" fg:x="717" fg:w="21"/><text x="0.9319%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (21 samples, 0.02%)</title><rect x="0.6819%" y="469" width="0.0200%" height="15" fill="rgb(247,123,22)" fg:x="717" fg:w="21"/><text x="0.9319%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (12 samples, 0.01%)</title><rect x="0.6905%" y="453" width="0.0114%" height="15" fill="rgb(231,138,38)" fg:x="726" fg:w="12"/><text x="0.9405%" y="463.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (44 samples, 0.04%)</title><rect x="0.6658%" y="533" width="0.0418%" height="15" fill="rgb(231,145,46)" fg:x="700" fg:w="44"/><text x="0.9158%" y="543.50"></text></g><g><title>event_listener::Event::notify (31 samples, 0.03%)</title><rect x="0.6781%" y="517" width="0.0295%" height="15" fill="rgb(251,118,11)" fg:x="713" fg:w="31"/><text x="0.9281%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="0.6639%" y="549" width="0.0447%" height="15" fill="rgb(217,147,25)" fg:x="698" fg:w="47"/><text x="0.9139%" y="559.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (22 samples, 0.02%)</title><rect x="0.7209%" y="469" width="0.0209%" height="15" fill="rgb(247,81,37)" fg:x="758" fg:w="22"/><text x="0.9709%" y="479.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (22 samples, 0.02%)</title><rect x="0.7209%" y="453" width="0.0209%" height="15" fill="rgb(209,12,38)" fg:x="758" fg:w="22"/><text x="0.9709%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="0.7466%" y="357" width="0.0105%" height="15" fill="rgb(227,1,9)" fg:x="785" fg:w="11"/><text x="0.9966%" y="367.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="0.7466%" y="389" width="0.0171%" height="15" fill="rgb(248,47,43)" fg:x="785" fg:w="18"/><text x="0.9966%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="0.7466%" y="373" width="0.0171%" height="15" fill="rgb(221,10,30)" fg:x="785" fg:w="18"/><text x="0.9966%" y="383.50"></text></g><g><title>bevy_pbr::render::light::extract_clusters (27 samples, 0.03%)</title><rect x="0.7466%" y="469" width="0.0257%" height="15" fill="rgb(210,229,1)" fg:x="785" fg:w="27"/><text x="0.9966%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="0.7466%" y="453" width="0.0257%" height="15" fill="rgb(222,148,37)" fg:x="785" fg:w="27"/><text x="0.9966%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.03%)</title><rect x="0.7466%" y="437" width="0.0257%" height="15" fill="rgb(234,67,33)" fg:x="785" fg:w="27"/><text x="0.9966%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.03%)</title><rect x="0.7466%" y="421" width="0.0257%" height="15" fill="rgb(247,98,35)" fg:x="785" fg:w="27"/><text x="0.9966%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.03%)</title><rect x="0.7466%" y="405" width="0.0257%" height="15" fill="rgb(247,138,52)" fg:x="785" fg:w="27"/><text x="0.9966%" y="415.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="0.7818%" y="453" width="0.0162%" height="15" fill="rgb(213,79,30)" fg:x="822" fg:w="17"/><text x="1.0318%" y="463.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_sphere (26 samples, 0.02%)</title><rect x="0.8018%" y="453" width="0.0247%" height="15" fill="rgb(246,177,23)" fg:x="843" fg:w="26"/><text x="1.0518%" y="463.50"></text></g><g><title>glam::vec4::Vec4::dot (11 samples, 0.01%)</title><rect x="0.8160%" y="437" width="0.0105%" height="15" fill="rgb(230,62,27)" fg:x="858" fg:w="11"/><text x="1.0660%" y="447.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector4&lt;f32&gt; for core::core_arch::x86::__m128&gt;::dot (11 samples, 0.01%)</title><rect x="0.8160%" y="421" width="0.0105%" height="15" fill="rgb(216,154,8)" fg:x="858" fg:w="11"/><text x="1.0660%" y="431.50"></text></g><g><title>glam::core::sse2::vector::dot4_in_x (11 samples, 0.01%)</title><rect x="0.8160%" y="405" width="0.0105%" height="15" fill="rgb(244,35,45)" fg:x="858" fg:w="11"/><text x="1.0660%" y="415.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (22 samples, 0.02%)</title><rect x="0.8341%" y="453" width="0.0209%" height="15" fill="rgb(251,115,12)" fg:x="877" fg:w="22"/><text x="1.0841%" y="463.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (19 samples, 0.02%)</title><rect x="0.8370%" y="437" width="0.0181%" height="15" fill="rgb(240,54,50)" fg:x="880" fg:w="19"/><text x="1.0870%" y="447.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (19 samples, 0.02%)</title><rect x="0.8370%" y="421" width="0.0181%" height="15" fill="rgb(233,84,52)" fg:x="880" fg:w="19"/><text x="1.0870%" y="431.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (17 samples, 0.02%)</title><rect x="0.8389%" y="405" width="0.0162%" height="15" fill="rgb(207,117,47)" fg:x="882" fg:w="17"/><text x="1.0889%" y="415.50"></text></g><g><title>glam::mat4::Mat4::transform_point3a (17 samples, 0.02%)</title><rect x="0.8550%" y="453" width="0.0162%" height="15" fill="rgb(249,43,39)" fg:x="899" fg:w="17"/><text x="1.1050%" y="463.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::FloatMatrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::transform_float4_as_point3 (17 samples, 0.02%)</title><rect x="0.8550%" y="437" width="0.0162%" height="15" fill="rgb(209,38,44)" fg:x="899" fg:w="17"/><text x="1.1050%" y="447.50"></text></g><g><title>glam::core::traits::vector::FloatVector4::mul_add (13 samples, 0.01%)</title><rect x="0.8588%" y="421" width="0.0124%" height="15" fill="rgb(236,212,23)" fg:x="903" fg:w="13"/><text x="1.1088%" y="431.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (116 samples, 0.11%)</title><rect x="0.7732%" y="469" width="0.1103%" height="15" fill="rgb(242,79,21)" fg:x="813" fg:w="116"/><text x="1.0232%" y="479.50"></text></g><g><title>glam::vec3::Vec3A::length (13 samples, 0.01%)</title><rect x="0.8712%" y="453" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="916" fg:w="13"/><text x="1.1212%" y="463.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::FloatVector3&lt;f32&gt; for core::core_arch::x86::__m128&gt;::length (13 samples, 0.01%)</title><rect x="0.8712%" y="437" width="0.0124%" height="15" fill="rgb(253,215,40)" fg:x="916" fg:w="13"/><text x="1.1212%" y="447.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (18 samples, 0.02%)</title><rect x="0.9197%" y="389" width="0.0171%" height="15" fill="rgb(211,81,21)" fg:x="967" fg:w="18"/><text x="1.1697%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (18 samples, 0.02%)</title><rect x="0.9197%" y="373" width="0.0171%" height="15" fill="rgb(208,190,38)" fg:x="967" fg:w="18"/><text x="1.1697%" y="383.50"></text></g><g><title>f64xsubf128 (18 samples, 0.02%)</title><rect x="0.9197%" y="357" width="0.0171%" height="15" fill="rgb(235,213,38)" fg:x="967" fg:w="18"/><text x="1.1697%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (236 samples, 0.22%)</title><rect x="0.7133%" y="533" width="0.2245%" height="15" fill="rgb(237,122,38)" fg:x="750" fg:w="236"/><text x="0.9633%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (228 samples, 0.22%)</title><rect x="0.7209%" y="517" width="0.2168%" height="15" fill="rgb(244,218,35)" fg:x="758" fg:w="228"/><text x="0.9709%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (228 samples, 0.22%)</title><rect x="0.7209%" y="501" width="0.2168%" height="15" fill="rgb(240,68,47)" fg:x="758" fg:w="228"/><text x="0.9709%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (228 samples, 0.22%)</title><rect x="0.7209%" y="485" width="0.2168%" height="15" fill="rgb(210,16,53)" fg:x="758" fg:w="228"/><text x="0.9709%" y="495.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (54 samples, 0.05%)</title><rect x="0.8864%" y="469" width="0.0514%" height="15" fill="rgb(235,124,12)" fg:x="932" fg:w="54"/><text x="1.1364%" y="479.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (54 samples, 0.05%)</title><rect x="0.8864%" y="453" width="0.0514%" height="15" fill="rgb(224,169,11)" fg:x="932" fg:w="54"/><text x="1.1364%" y="463.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (53 samples, 0.05%)</title><rect x="0.8874%" y="437" width="0.0504%" height="15" fill="rgb(250,166,2)" fg:x="933" fg:w="53"/><text x="1.1374%" y="447.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (46 samples, 0.04%)</title><rect x="0.8940%" y="421" width="0.0438%" height="15" fill="rgb(242,216,29)" fg:x="940" fg:w="46"/><text x="1.1440%" y="431.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (38 samples, 0.04%)</title><rect x="0.9016%" y="405" width="0.0361%" height="15" fill="rgb(230,116,27)" fg:x="948" fg:w="38"/><text x="1.1516%" y="415.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="0.9444%" y="389" width="0.0352%" height="15" fill="rgb(228,99,48)" fg:x="993" fg:w="37"/><text x="1.1944%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="0.9444%" y="373" width="0.0352%" height="15" fill="rgb(253,11,6)" fg:x="993" fg:w="37"/><text x="1.1944%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="0.9444%" y="357" width="0.0352%" height="15" fill="rgb(247,143,39)" fg:x="993" fg:w="37"/><text x="1.1944%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.04%)</title><rect x="0.9444%" y="341" width="0.0352%" height="15" fill="rgb(236,97,10)" fg:x="993" fg:w="37"/><text x="1.1944%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.04%)</title><rect x="0.9444%" y="325" width="0.0352%" height="15" fill="rgb(233,208,19)" fg:x="993" fg:w="37"/><text x="1.1944%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.04%)</title><rect x="0.9444%" y="309" width="0.0352%" height="15" fill="rgb(216,164,2)" fg:x="993" fg:w="37"/><text x="1.1944%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.04%)</title><rect x="0.9444%" y="293" width="0.0352%" height="15" fill="rgb(220,129,5)" fg:x="993" fg:w="37"/><text x="1.1944%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.04%)</title><rect x="0.9444%" y="277" width="0.0352%" height="15" fill="rgb(242,17,10)" fg:x="993" fg:w="37"/><text x="1.1944%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.04%)</title><rect x="0.9444%" y="261" width="0.0352%" height="15" fill="rgb(242,107,0)" fg:x="993" fg:w="37"/><text x="1.1944%" y="271.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (38 samples, 0.04%)</title><rect x="0.9444%" y="453" width="0.0361%" height="15" fill="rgb(251,28,31)" fg:x="993" fg:w="38"/><text x="1.1944%" y="463.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="0.9444%" y="437" width="0.0361%" height="15" fill="rgb(233,223,10)" fg:x="993" fg:w="38"/><text x="1.1944%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="0.9444%" y="421" width="0.0361%" height="15" fill="rgb(215,21,27)" fg:x="993" fg:w="38"/><text x="1.1944%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (38 samples, 0.04%)</title><rect x="0.9444%" y="405" width="0.0361%" height="15" fill="rgb(232,23,21)" fg:x="993" fg:w="38"/><text x="1.1944%" y="415.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (44 samples, 0.04%)</title><rect x="0.9444%" y="469" width="0.0418%" height="15" fill="rgb(244,5,23)" fg:x="993" fg:w="44"/><text x="1.1944%" y="479.50"></text></g><g><title>sysmalloc (101 samples, 0.10%)</title><rect x="1.2231%" y="245" width="0.0961%" height="15" fill="rgb(226,81,46)" fg:x="1286" fg:w="101"/><text x="1.4731%" y="255.50"></text></g><g><title>__GI___libc_malloc (355 samples, 0.34%)</title><rect x="0.9977%" y="277" width="0.3376%" height="15" fill="rgb(247,70,30)" fg:x="1049" fg:w="355"/><text x="1.2477%" y="287.50"></text></g><g><title>_int_malloc (295 samples, 0.28%)</title><rect x="1.0548%" y="261" width="0.2806%" height="15" fill="rgb(212,68,19)" fg:x="1109" fg:w="295"/><text x="1.3048%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (17 samples, 0.02%)</title><rect x="1.3192%" y="245" width="0.0162%" height="15" fill="rgb(240,187,13)" fg:x="1387" fg:w="17"/><text x="1.5692%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (359 samples, 0.34%)</title><rect x="0.9977%" y="325" width="0.3414%" height="15" fill="rgb(223,113,26)" fg:x="1049" fg:w="359"/><text x="1.2477%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (359 samples, 0.34%)</title><rect x="0.9977%" y="309" width="0.3414%" height="15" fill="rgb(206,192,2)" fg:x="1049" fg:w="359"/><text x="1.2477%" y="319.50"></text></g><g><title>alloc::alloc::alloc (359 samples, 0.34%)</title><rect x="0.9977%" y="293" width="0.3414%" height="15" fill="rgb(241,108,4)" fg:x="1049" fg:w="359"/><text x="1.2477%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (360 samples, 0.34%)</title><rect x="0.9977%" y="373" width="0.3424%" height="15" fill="rgb(247,173,49)" fg:x="1049" fg:w="360"/><text x="1.2477%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (360 samples, 0.34%)</title><rect x="0.9977%" y="357" width="0.3424%" height="15" fill="rgb(224,114,35)" fg:x="1049" fg:w="360"/><text x="1.2477%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (360 samples, 0.34%)</title><rect x="0.9977%" y="341" width="0.3424%" height="15" fill="rgb(245,159,27)" fg:x="1049" fg:w="360"/><text x="1.2477%" y="351.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::InstanceMaterialData as bevy_render::render_component::ExtractComponent&gt;::extract_component (24,369 samples, 23.18%)</title><rect x="0.9882%" y="453" width="23.1772%" height="15" fill="rgb(245,172,44)" fg:x="1039" fg:w="24369"/><text x="1.2382%" y="463.50">&lt;stellar_coordinates_test::GPUInstanc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,369 samples, 23.18%)</title><rect x="0.9882%" y="437" width="23.1772%" height="15" fill="rgb(236,23,11)" fg:x="1039" fg:w="24369"/><text x="1.2382%" y="447.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,359 samples, 23.17%)</title><rect x="0.9977%" y="421" width="23.1677%" height="15" fill="rgb(205,117,38)" fg:x="1049" fg:w="24359"/><text x="1.2477%" y="431.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (24,359 samples, 23.17%)</title><rect x="0.9977%" y="405" width="23.1677%" height="15" fill="rgb(237,72,25)" fg:x="1049" fg:w="24359"/><text x="1.2477%" y="415.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,359 samples, 23.17%)</title><rect x="0.9977%" y="389" width="23.1677%" height="15" fill="rgb(244,70,9)" fg:x="1049" fg:w="24359"/><text x="1.2477%" y="399.50">&lt;T as alloc::slice::hack::ConvertVec&gt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (23,999 samples, 22.83%)</title><rect x="1.3401%" y="373" width="22.8253%" height="15" fill="rgb(217,125,39)" fg:x="1409" fg:w="23999"/><text x="1.5901%" y="383.50">core::ptr::const_ptr::&lt;impl *const T..</text></g><g><title>core::intrinsics::copy_nonoverlapping (23,999 samples, 22.83%)</title><rect x="1.3401%" y="357" width="22.8253%" height="15" fill="rgb(235,36,10)" fg:x="1409" fg:w="23999"/><text x="1.5901%" y="367.50">core::intrinsics::copy_nonoverlapping</text></g><g><title>__memcpy_avx_unaligned_erms (23,997 samples, 22.82%)</title><rect x="1.3420%" y="341" width="22.8234%" height="15" fill="rgb(251,123,47)" fg:x="1411" fg:w="23997"/><text x="1.5920%" y="351.50">__memcpy_avx_unaligned_erms</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (119 samples, 0.11%)</title><rect x="24.1654%" y="453" width="0.1132%" height="15" fill="rgb(221,13,13)" fg:x="25408" fg:w="119"/><text x="24.4154%" y="463.50"></text></g><g><title>core::ptr::write (118 samples, 0.11%)</title><rect x="24.1664%" y="437" width="0.1122%" height="15" fill="rgb(238,131,9)" fg:x="25409" fg:w="118"/><text x="24.4164%" y="447.50"></text></g><g><title>bevy_render::render_component::extract_components (24,498 samples, 23.30%)</title><rect x="0.9863%" y="469" width="23.2999%" height="15" fill="rgb(211,50,8)" fg:x="1037" fg:w="24498"/><text x="1.2363%" y="479.50">bevy_render::render_component::extrac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="24.3281%" y="453" width="0.0228%" height="15" fill="rgb(245,182,24)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="24.3281%" y="437" width="0.0228%" height="15" fill="rgb(242,14,37)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="24.3281%" y="421" width="0.0228%" height="15" fill="rgb(246,228,12)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="24.3281%" y="405" width="0.0228%" height="15" fill="rgb(213,55,15)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24 samples, 0.02%)</title><rect x="24.3281%" y="389" width="0.0228%" height="15" fill="rgb(209,9,3)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="24.3281%" y="373" width="0.0228%" height="15" fill="rgb(230,59,30)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="24.3281%" y="357" width="0.0228%" height="15" fill="rgb(209,121,21)" fg:x="25579" fg:w="24"/><text x="24.5781%" y="367.50"></text></g><g><title>core::slice::ascii::is_ascii (26 samples, 0.02%)</title><rect x="24.3794%" y="373" width="0.0247%" height="15" fill="rgb(220,109,13)" fg:x="25633" fg:w="26"/><text x="24.6294%" y="383.50"></text></g><g><title>core::slice::ascii::contains_nonascii (21 samples, 0.02%)</title><rect x="24.3842%" y="357" width="0.0200%" height="15" fill="rgb(232,18,1)" fg:x="25638" fg:w="21"/><text x="24.6342%" y="367.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (27 samples, 0.03%)</title><rect x="24.3794%" y="389" width="0.0257%" height="15" fill="rgb(215,41,42)" fg:x="25633" fg:w="27"/><text x="24.6294%" y="399.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (32 samples, 0.03%)</title><rect x="24.3756%" y="405" width="0.0304%" height="15" fill="rgb(224,123,36)" fg:x="25629" fg:w="32"/><text x="24.6256%" y="415.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (111 samples, 0.11%)</title><rect x="24.5116%" y="133" width="0.1056%" height="15" fill="rgb(240,125,3)" fg:x="25772" fg:w="111"/><text x="24.7616%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned_erms (172 samples, 0.16%)</title><rect x="25.1745%" y="117" width="0.1636%" height="15" fill="rgb(205,98,50)" fg:x="26469" fg:w="172"/><text x="25.4245%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (212 samples, 0.20%)</title><rect x="25.3933%" y="101" width="0.2016%" height="15" fill="rgb(205,185,37)" fg:x="26699" fg:w="212"/><text x="25.6433%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (274 samples, 0.26%)</title><rect x="25.3381%" y="117" width="0.2606%" height="15" fill="rgb(238,207,15)" fg:x="26641" fg:w="274"/><text x="25.5881%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (11 samples, 0.01%)</title><rect x="25.7043%" y="101" width="0.0105%" height="15" fill="rgb(213,199,42)" fg:x="27026" fg:w="11"/><text x="25.9543%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.02%)</title><rect x="25.7166%" y="85" width="0.0162%" height="15" fill="rgb(235,201,11)" fg:x="27039" fg:w="17"/><text x="25.9666%" y="95.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (21 samples, 0.02%)</title><rect x="25.7166%" y="101" width="0.0200%" height="15" fill="rgb(207,46,11)" fg:x="27039" fg:w="21"/><text x="25.9666%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (155 samples, 0.15%)</title><rect x="25.5987%" y="117" width="0.1474%" height="15" fill="rgb(241,35,35)" fg:x="26915" fg:w="155"/><text x="25.8487%" y="127.50"></text></g><g><title>&lt;&amp;mut T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (51 samples, 0.05%)</title><rect x="25.7823%" y="85" width="0.0485%" height="15" fill="rgb(243,32,47)" fg:x="27108" fg:w="51"/><text x="26.0323%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (51 samples, 0.05%)</title><rect x="25.7823%" y="69" width="0.0485%" height="15" fill="rgb(247,202,23)" fg:x="27108" fg:w="51"/><text x="26.0323%" y="79.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (51 samples, 0.05%)</title><rect x="25.7823%" y="53" width="0.0485%" height="15" fill="rgb(219,102,11)" fg:x="27108" fg:w="51"/><text x="26.0323%" y="63.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (51 samples, 0.05%)</title><rect x="25.7823%" y="37" width="0.0485%" height="15" fill="rgb(243,110,44)" fg:x="27108" fg:w="51"/><text x="26.0323%" y="47.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (29 samples, 0.03%)</title><rect x="25.8308%" y="85" width="0.0276%" height="15" fill="rgb(222,74,54)" fg:x="27159" fg:w="29"/><text x="26.0808%" y="95.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (29 samples, 0.03%)</title><rect x="25.8308%" y="69" width="0.0276%" height="15" fill="rgb(216,99,12)" fg:x="27159" fg:w="29"/><text x="26.0808%" y="79.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (29 samples, 0.03%)</title><rect x="25.8308%" y="53" width="0.0276%" height="15" fill="rgb(226,22,26)" fg:x="27159" fg:w="29"/><text x="26.0808%" y="63.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (29 samples, 0.03%)</title><rect x="25.8308%" y="37" width="0.0276%" height="15" fill="rgb(217,163,10)" fg:x="27159" fg:w="29"/><text x="26.0808%" y="47.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (121 samples, 0.12%)</title><rect x="25.7509%" y="117" width="0.1151%" height="15" fill="rgb(213,25,53)" fg:x="27075" fg:w="121"/><text x="26.0009%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::read_u32_le (88 samples, 0.08%)</title><rect x="25.7823%" y="101" width="0.0837%" height="15" fill="rgb(252,105,26)" fg:x="27108" fg:w="88"/><text x="26.0323%" y="111.50"></text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left (16 samples, 0.02%)</title><rect x="25.8660%" y="117" width="0.0152%" height="15" fill="rgb(220,39,43)" fg:x="27196" fg:w="16"/><text x="26.1160%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (1,377 samples, 1.31%)</title><rect x="24.6172%" y="133" width="1.3097%" height="15" fill="rgb(229,68,48)" fg:x="25883" fg:w="1377"/><text x="24.8672%" y="143.50"></text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte (48 samples, 0.05%)</title><rect x="25.8812%" y="117" width="0.0457%" height="15" fill="rgb(252,8,32)" fg:x="27212" fg:w="48"/><text x="26.1312%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (22 samples, 0.02%)</title><rect x="25.9268%" y="133" width="0.0209%" height="15" fill="rgb(223,20,43)" fg:x="27260" fg:w="22"/><text x="26.1768%" y="143.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1,600 samples, 1.52%)</title><rect x="24.4270%" y="149" width="1.5218%" height="15" fill="rgb(229,81,49)" fg:x="25683" fg:w="1600"/><text x="24.6770%" y="159.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1,602 samples, 1.52%)</title><rect x="24.4270%" y="165" width="1.5237%" height="15" fill="rgb(236,28,36)" fg:x="25683" fg:w="1602"/><text x="24.6770%" y="175.50"></text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (1,607 samples, 1.53%)</title><rect x="24.4260%" y="261" width="1.5284%" height="15" fill="rgb(249,185,26)" fg:x="25682" fg:w="1607"/><text x="24.6760%" y="271.50"></text></g><g><title>flate2::zio::read (1,607 samples, 1.53%)</title><rect x="24.4260%" y="245" width="1.5284%" height="15" fill="rgb(249,174,33)" fg:x="25682" fg:w="1607"/><text x="24.6760%" y="255.50"></text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (1,606 samples, 1.53%)</title><rect x="24.4270%" y="229" width="1.5275%" height="15" fill="rgb(233,201,37)" fg:x="25683" fg:w="1606"/><text x="24.6770%" y="239.50"></text></g><g><title>flate2::mem::Decompress::decompress (1,606 samples, 1.53%)</title><rect x="24.4270%" y="213" width="1.5275%" height="15" fill="rgb(221,78,26)" fg:x="25683" fg:w="1606"/><text x="24.6770%" y="223.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1,606 samples, 1.53%)</title><rect x="24.4270%" y="197" width="1.5275%" height="15" fill="rgb(250,127,30)" fg:x="25683" fg:w="1606"/><text x="24.6770%" y="207.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (1,606 samples, 1.53%)</title><rect x="24.4270%" y="181" width="1.5275%" height="15" fill="rgb(230,49,44)" fg:x="25683" fg:w="1606"/><text x="24.6770%" y="191.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1,629 samples, 1.55%)</title><rect x="24.4251%" y="373" width="1.5493%" height="15" fill="rgb(229,67,23)" fg:x="25681" fg:w="1629"/><text x="24.6751%" y="383.50"></text></g><g><title>std::io::Read::read_buf (1,628 samples, 1.55%)</title><rect x="24.4260%" y="357" width="1.5484%" height="15" fill="rgb(249,83,47)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="367.50"></text></g><g><title>std::io::default_read_buf (1,628 samples, 1.55%)</title><rect x="24.4260%" y="341" width="1.5484%" height="15" fill="rgb(215,43,3)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="351.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (1,628 samples, 1.55%)</title><rect x="24.4260%" y="325" width="1.5484%" height="15" fill="rgb(238,154,13)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="335.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1,628 samples, 1.55%)</title><rect x="24.4260%" y="309" width="1.5484%" height="15" fill="rgb(219,56,2)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="319.50"></text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (1,628 samples, 1.55%)</title><rect x="24.4260%" y="293" width="1.5484%" height="15" fill="rgb(233,0,4)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="303.50"></text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (1,628 samples, 1.55%)</title><rect x="24.4260%" y="277" width="1.5484%" height="15" fill="rgb(235,30,7)" fg:x="25682" fg:w="1628"/><text x="24.6760%" y="287.50"></text></g><g><title>crc32fast::Hasher::update (21 samples, 0.02%)</title><rect x="25.9544%" y="261" width="0.0200%" height="15" fill="rgb(250,79,13)" fg:x="27289" fg:w="21"/><text x="26.2044%" y="271.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (21 samples, 0.02%)</title><rect x="25.9544%" y="245" width="0.0200%" height="15" fill="rgb(211,146,34)" fg:x="27289" fg:w="21"/><text x="26.2044%" y="255.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (19 samples, 0.02%)</title><rect x="25.9563%" y="229" width="0.0181%" height="15" fill="rgb(228,22,38)" fg:x="27291" fg:w="19"/><text x="26.2063%" y="239.50"></text></g><g><title>&lt;csv_core::reader::DfaState as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="26.1399%" y="341" width="0.0133%" height="15" fill="rgb(235,168,5)" fg:x="27484" fg:w="14"/><text x="26.3899%" y="351.50"></text></g><g><title>csv_core::reader::Dfa::get_output (93 samples, 0.09%)</title><rect x="26.1532%" y="341" width="0.0885%" height="15" fill="rgb(221,155,16)" fg:x="27498" fg:w="93"/><text x="26.4032%" y="351.50"></text></g><g><title>csv_core::reader::Dfa::new_read_record_result (12 samples, 0.01%)</title><rect x="26.2417%" y="341" width="0.0114%" height="15" fill="rgb(215,215,53)" fg:x="27591" fg:w="12"/><text x="26.4917%" y="351.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (2,329 samples, 2.22%)</title><rect x="24.3680%" y="437" width="2.2151%" height="15" fill="rgb(223,4,10)" fg:x="25621" fg:w="2329"/><text x="24.6180%" y="447.50">c..</text></g><g><title>csv::string_record::StringRecord::read (2,324 samples, 2.21%)</title><rect x="24.3728%" y="421" width="2.2103%" height="15" fill="rgb(234,103,6)" fg:x="25626" fg:w="2324"/><text x="24.6228%" y="431.50">c..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (2,289 samples, 2.18%)</title><rect x="24.4060%" y="405" width="2.1771%" height="15" fill="rgb(227,97,0)" fg:x="25661" fg:w="2289"/><text x="24.6560%" y="415.50">c..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (2,279 samples, 2.17%)</title><rect x="24.4156%" y="389" width="2.1675%" height="15" fill="rgb(234,150,53)" fg:x="25671" fg:w="2279"/><text x="24.6656%" y="399.50">c..</text></g><g><title>csv_core::reader::Reader::read_record (635 samples, 0.60%)</title><rect x="25.9792%" y="373" width="0.6039%" height="15" fill="rgb(228,201,54)" fg:x="27315" fg:w="635"/><text x="26.2292%" y="383.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (626 samples, 0.60%)</title><rect x="25.9877%" y="357" width="0.5954%" height="15" fill="rgb(222,22,37)" fg:x="27324" fg:w="626"/><text x="26.2377%" y="367.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (347 samples, 0.33%)</title><rect x="26.2531%" y="341" width="0.3300%" height="15" fill="rgb(237,53,32)" fg:x="27603" fg:w="347"/><text x="26.5031%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.01%)</title><rect x="26.5907%" y="405" width="0.0124%" height="15" fill="rgb(233,25,53)" fg:x="27958" fg:w="13"/><text x="26.8407%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.01%)</title><rect x="26.6230%" y="325" width="0.0124%" height="15" fill="rgb(210,40,34)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="335.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (13 samples, 0.01%)</title><rect x="26.6230%" y="309" width="0.0124%" height="15" fill="rgb(241,220,44)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="319.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (13 samples, 0.01%)</title><rect x="26.6230%" y="293" width="0.0124%" height="15" fill="rgb(235,28,35)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="303.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.01%)</title><rect x="26.6230%" y="277" width="0.0124%" height="15" fill="rgb(210,56,17)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="287.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (13 samples, 0.01%)</title><rect x="26.6230%" y="261" width="0.0124%" height="15" fill="rgb(224,130,29)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="271.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (13 samples, 0.01%)</title><rect x="26.6230%" y="245" width="0.0124%" height="15" fill="rgb(235,212,8)" fg:x="27992" fg:w="13"/><text x="26.8730%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.01%)</title><rect x="26.6754%" y="213" width="0.0124%" height="15" fill="rgb(223,33,50)" fg:x="28047" fg:w="13"/><text x="26.9254%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.01%)</title><rect x="26.6754%" y="197" width="0.0124%" height="15" fill="rgb(219,149,13)" fg:x="28047" fg:w="13"/><text x="26.9254%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.01%)</title><rect x="26.6754%" y="181" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="28047" fg:w="13"/><text x="26.9254%" y="191.50"></text></g><g><title>serde::de::MapAccess::next_key (84 samples, 0.08%)</title><rect x="26.6230%" y="357" width="0.0799%" height="15" fill="rgb(216,193,19)" fg:x="27992" fg:w="84"/><text x="26.8730%" y="367.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (84 samples, 0.08%)</title><rect x="26.6230%" y="341" width="0.0799%" height="15" fill="rgb(216,135,14)" fg:x="27992" fg:w="84"/><text x="26.8730%" y="351.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (71 samples, 0.07%)</title><rect x="26.6354%" y="325" width="0.0675%" height="15" fill="rgb(241,47,5)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="335.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (71 samples, 0.07%)</title><rect x="26.6354%" y="309" width="0.0675%" height="15" fill="rgb(233,42,35)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="319.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (71 samples, 0.07%)</title><rect x="26.6354%" y="293" width="0.0675%" height="15" fill="rgb(231,13,6)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (71 samples, 0.07%)</title><rect x="26.6354%" y="277" width="0.0675%" height="15" fill="rgb(207,181,40)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (71 samples, 0.07%)</title><rect x="26.6354%" y="261" width="0.0675%" height="15" fill="rgb(254,173,49)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="271.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.07%)</title><rect x="26.6354%" y="245" width="0.0675%" height="15" fill="rgb(221,1,38)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="255.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.07%)</title><rect x="26.6354%" y="229" width="0.0675%" height="15" fill="rgb(206,124,46)" fg:x="28005" fg:w="71"/><text x="26.8854%" y="239.50"></text></g><g><title>csv::byte_record::Bounds::ends (16 samples, 0.02%)</title><rect x="26.6877%" y="213" width="0.0152%" height="15" fill="rgb(249,21,11)" fg:x="28060" fg:w="16"/><text x="26.9377%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.02%)</title><rect x="26.6877%" y="197" width="0.0152%" height="15" fill="rgb(222,201,40)" fg:x="28060" fg:w="16"/><text x="26.9377%" y="207.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="26.7105%" y="213" width="0.0276%" height="15" fill="rgb(235,61,29)" fg:x="28084" fg:w="29"/><text x="26.9605%" y="223.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="26.7124%" y="197" width="0.0257%" height="15" fill="rgb(219,207,3)" fg:x="28086" fg:w="27"/><text x="26.9624%" y="207.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (40 samples, 0.04%)</title><rect x="26.7029%" y="309" width="0.0380%" height="15" fill="rgb(222,56,46)" fg:x="28076" fg:w="40"/><text x="26.9529%" y="319.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (40 samples, 0.04%)</title><rect x="26.7029%" y="293" width="0.0380%" height="15" fill="rgb(239,76,54)" fg:x="28076" fg:w="40"/><text x="26.9529%" y="303.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field_bytes (40 samples, 0.04%)</title><rect x="26.7029%" y="277" width="0.0380%" height="15" fill="rgb(231,124,27)" fg:x="28076" fg:w="40"/><text x="26.9529%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field_bytes (40 samples, 0.04%)</title><rect x="26.7029%" y="261" width="0.0380%" height="15" fill="rgb(249,195,6)" fg:x="28076" fg:w="40"/><text x="26.9529%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (40 samples, 0.04%)</title><rect x="26.7029%" y="245" width="0.0380%" height="15" fill="rgb(237,174,47)" fg:x="28076" fg:w="40"/><text x="26.9529%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="26.7067%" y="229" width="0.0342%" height="15" fill="rgb(206,201,31)" fg:x="28080" fg:w="36"/><text x="26.9567%" y="239.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (23 samples, 0.02%)</title><rect x="26.7410%" y="277" width="0.0219%" height="15" fill="rgb(231,57,52)" fg:x="28116" fg:w="23"/><text x="26.9910%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (23 samples, 0.02%)</title><rect x="26.7410%" y="261" width="0.0219%" height="15" fill="rgb(248,177,22)" fg:x="28116" fg:w="23"/><text x="26.9910%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="26.7429%" y="245" width="0.0200%" height="15" fill="rgb(215,211,37)" fg:x="28118" fg:w="21"/><text x="26.9929%" y="255.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.7448%" y="229" width="0.0181%" height="15" fill="rgb(241,128,51)" fg:x="28120" fg:w="19"/><text x="26.9948%" y="239.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="26.7457%" y="213" width="0.0171%" height="15" fill="rgb(227,165,31)" fg:x="28121" fg:w="18"/><text x="26.9957%" y="223.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (19 samples, 0.02%)</title><rect x="26.9331%" y="213" width="0.0181%" height="15" fill="rgb(228,167,24)" fg:x="28318" fg:w="19"/><text x="27.1831%" y="223.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (88 samples, 0.08%)</title><rect x="26.8684%" y="229" width="0.0837%" height="15" fill="rgb(228,143,12)" fg:x="28250" fg:w="88"/><text x="27.1184%" y="239.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (19 samples, 0.02%)</title><rect x="26.9788%" y="213" width="0.0181%" height="15" fill="rgb(249,149,8)" fg:x="28366" fg:w="19"/><text x="27.2288%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (18 samples, 0.02%)</title><rect x="27.0311%" y="181" width="0.0171%" height="15" fill="rgb(243,35,44)" fg:x="28421" fg:w="18"/><text x="27.2811%" y="191.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_8digits (38 samples, 0.04%)</title><rect x="27.0158%" y="197" width="0.0361%" height="15" fill="rgb(246,89,9)" fg:x="28405" fg:w="38"/><text x="27.2658%" y="207.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::{{closure}} (21 samples, 0.02%)</title><rect x="27.1033%" y="165" width="0.0200%" height="15" fill="rgb(233,213,13)" fg:x="28497" fg:w="21"/><text x="27.3533%" y="175.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::parse_digits (77 samples, 0.07%)</title><rect x="27.0520%" y="181" width="0.0732%" height="15" fill="rgb(233,141,41)" fg:x="28443" fg:w="77"/><text x="27.3020%" y="191.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (178 samples, 0.17%)</title><rect x="26.9588%" y="229" width="0.1693%" height="15" fill="rgb(239,167,4)" fg:x="28345" fg:w="178"/><text x="27.2088%" y="239.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (138 samples, 0.13%)</title><rect x="26.9968%" y="213" width="0.1313%" height="15" fill="rgb(209,217,16)" fg:x="28385" fg:w="138"/><text x="27.2468%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (80 samples, 0.08%)</title><rect x="27.0520%" y="197" width="0.0761%" height="15" fill="rgb(219,88,35)" fg:x="28443" fg:w="80"/><text x="27.3020%" y="207.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,936 samples, 2.79%)</title><rect x="24.3509%" y="453" width="2.7924%" height="15" fill="rgb(220,193,23)" fg:x="25603" fg:w="2936"/><text x="24.6009%" y="463.50">&lt;c..</text></g><g><title>csv::string_record::StringRecord::deserialize (589 samples, 0.56%)</title><rect x="26.5831%" y="437" width="0.5602%" height="15" fill="rgb(230,90,52)" fg:x="27950" fg:w="589"/><text x="26.8331%" y="447.50"></text></g><g><title>csv::deserializer::deserialize_string_record (587 samples, 0.56%)</title><rect x="26.5850%" y="421" width="0.5583%" height="15" fill="rgb(252,106,19)" fg:x="27952" fg:w="587"/><text x="26.8350%" y="431.50"></text></g><g><title>stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize (560 samples, 0.53%)</title><rect x="26.6107%" y="405" width="0.5326%" height="15" fill="rgb(206,74,20)" fg:x="27979" fg:w="560"/><text x="26.8607%" y="415.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (560 samples, 0.53%)</title><rect x="26.6107%" y="389" width="0.5326%" height="15" fill="rgb(230,138,44)" fg:x="27979" fg:w="560"/><text x="26.8607%" y="399.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (557 samples, 0.53%)</title><rect x="26.6135%" y="373" width="0.5298%" height="15" fill="rgb(235,182,43)" fg:x="27982" fg:w="557"/><text x="26.8635%" y="383.50"></text></g><g><title>serde::de::MapAccess::next_value (463 samples, 0.44%)</title><rect x="26.7029%" y="357" width="0.4404%" height="15" fill="rgb(242,16,51)" fg:x="28076" fg:w="463"/><text x="26.9529%" y="367.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed (463 samples, 0.44%)</title><rect x="26.7029%" y="341" width="0.4404%" height="15" fill="rgb(248,9,4)" fg:x="28076" fg:w="463"/><text x="26.9529%" y="351.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (463 samples, 0.44%)</title><rect x="26.7029%" y="325" width="0.4404%" height="15" fill="rgb(210,31,22)" fg:x="28076" fg:w="463"/><text x="26.9529%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (423 samples, 0.40%)</title><rect x="26.7410%" y="309" width="0.4023%" height="15" fill="rgb(239,54,39)" fg:x="28116" fg:w="423"/><text x="26.9910%" y="319.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (423 samples, 0.40%)</title><rect x="26.7410%" y="293" width="0.4023%" height="15" fill="rgb(230,99,41)" fg:x="28116" fg:w="423"/><text x="26.9910%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (399 samples, 0.38%)</title><rect x="26.7638%" y="277" width="0.3795%" height="15" fill="rgb(253,106,12)" fg:x="28140" fg:w="399"/><text x="27.0138%" y="287.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (399 samples, 0.38%)</title><rect x="26.7638%" y="261" width="0.3795%" height="15" fill="rgb(213,46,41)" fg:x="28140" fg:w="399"/><text x="27.0138%" y="271.50"></text></g><g><title>core::num::dec2flt::dec2flt (399 samples, 0.38%)</title><rect x="26.7638%" y="245" width="0.3795%" height="15" fill="rgb(215,133,35)" fg:x="28140" fg:w="399"/><text x="27.0138%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (16 samples, 0.02%)</title><rect x="27.1281%" y="229" width="0.0152%" height="15" fill="rgb(213,28,5)" fg:x="28523" fg:w="16"/><text x="27.3781%" y="239.50"></text></g><g><title>bevy_render::color::Color::hex (49 samples, 0.05%)</title><rect x="27.1585%" y="453" width="0.0466%" height="15" fill="rgb(215,77,49)" fg:x="28555" fg:w="49"/><text x="27.4085%" y="463.50"></text></g><g><title>bevy_render::color::decode_rgb (43 samples, 0.04%)</title><rect x="27.1642%" y="437" width="0.0409%" height="15" fill="rgb(248,100,22)" fg:x="28561" fg:w="43"/><text x="27.4142%" y="447.50"></text></g><g><title>hex::decode_to_slice (26 samples, 0.02%)</title><rect x="27.1804%" y="421" width="0.0247%" height="15" fill="rgb(208,67,9)" fg:x="28578" fg:w="26"/><text x="27.4304%" y="431.50"></text></g><g><title>hex::val (11 samples, 0.01%)</title><rect x="27.1947%" y="405" width="0.0105%" height="15" fill="rgb(219,133,21)" fg:x="28593" fg:w="11"/><text x="27.4447%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (20 samples, 0.02%)</title><rect x="27.2127%" y="453" width="0.0190%" height="15" fill="rgb(246,46,29)" fg:x="28612" fg:w="20"/><text x="27.4627%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="27.2384%" y="165" width="0.0190%" height="15" fill="rgb(246,185,52)" fg:x="28639" fg:w="20"/><text x="27.4884%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="27.2375%" y="293" width="0.0209%" height="15" fill="rgb(252,136,11)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="27.2375%" y="277" width="0.0209%" height="15" fill="rgb(219,138,53)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="27.2375%" y="261" width="0.0209%" height="15" fill="rgb(211,51,23)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="27.2375%" y="245" width="0.0209%" height="15" fill="rgb(247,221,28)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="27.2375%" y="229" width="0.0209%" height="15" fill="rgb(251,222,45)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="239.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="27.2375%" y="213" width="0.0209%" height="15" fill="rgb(217,162,53)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="223.50"></text></g><g><title>__realloc (22 samples, 0.02%)</title><rect x="27.2375%" y="197" width="0.0209%" height="15" fill="rgb(229,93,14)" fg:x="28638" fg:w="22"/><text x="27.4875%" y="207.50"></text></g><g><title>_int_realloc (21 samples, 0.02%)</title><rect x="27.2384%" y="181" width="0.0200%" height="15" fill="rgb(209,67,49)" fg:x="28639" fg:w="21"/><text x="27.4884%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.03%)</title><rect x="27.2375%" y="309" width="0.0266%" height="15" fill="rgb(213,87,29)" fg:x="28638" fg:w="28"/><text x="27.4875%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="27.2650%" y="293" width="0.0171%" height="15" fill="rgb(205,151,52)" fg:x="28667" fg:w="18"/><text x="27.5150%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="27.2831%" y="245" width="0.0152%" height="15" fill="rgb(253,215,39)" fg:x="28686" fg:w="16"/><text x="27.5331%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="27.2831%" y="229" width="0.0152%" height="15" fill="rgb(221,220,41)" fg:x="28686" fg:w="16"/><text x="27.5331%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="27.2831%" y="213" width="0.0152%" height="15" fill="rgb(218,133,21)" fg:x="28686" fg:w="16"/><text x="27.5331%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="27.3088%" y="133" width="0.0105%" height="15" fill="rgb(221,193,43)" fg:x="28713" fg:w="11"/><text x="27.5588%" y="143.50"></text></g><g><title>hashbrown::map::make_insert_hash (43 samples, 0.04%)</title><rect x="27.2831%" y="277" width="0.0409%" height="15" fill="rgb(240,128,52)" fg:x="28686" fg:w="43"/><text x="27.5331%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (43 samples, 0.04%)</title><rect x="27.2831%" y="261" width="0.0409%" height="15" fill="rgb(253,114,12)" fg:x="28686" fg:w="43"/><text x="27.5331%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="27.3012%" y="245" width="0.0228%" height="15" fill="rgb(215,223,47)" fg:x="28705" fg:w="24"/><text x="27.5512%" y="255.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="27.3012%" y="229" width="0.0228%" height="15" fill="rgb(248,225,23)" fg:x="28705" fg:w="24"/><text x="27.5512%" y="239.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (24 samples, 0.02%)</title><rect x="27.3012%" y="213" width="0.0228%" height="15" fill="rgb(250,108,0)" fg:x="28705" fg:w="24"/><text x="27.5512%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (24 samples, 0.02%)</title><rect x="27.3012%" y="197" width="0.0228%" height="15" fill="rgb(228,208,7)" fg:x="28705" fg:w="24"/><text x="27.5512%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash_slice (16 samples, 0.02%)</title><rect x="27.3088%" y="181" width="0.0152%" height="15" fill="rgb(244,45,10)" fg:x="28713" fg:w="16"/><text x="27.5588%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="27.3088%" y="165" width="0.0152%" height="15" fill="rgb(207,125,25)" fg:x="28713" fg:w="16"/><text x="27.5588%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="27.3088%" y="149" width="0.0152%" height="15" fill="rgb(210,195,18)" fg:x="28713" fg:w="16"/><text x="27.5588%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.02%)</title><rect x="27.3288%" y="245" width="0.0152%" height="15" fill="rgb(249,80,12)" fg:x="28734" fg:w="16"/><text x="27.5788%" y="255.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (16 samples, 0.02%)</title><rect x="27.3288%" y="229" width="0.0152%" height="15" fill="rgb(221,65,9)" fg:x="28734" fg:w="16"/><text x="27.5788%" y="239.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="27.3288%" y="213" width="0.0152%" height="15" fill="rgb(235,49,36)" fg:x="28734" fg:w="16"/><text x="27.5788%" y="223.50"></text></g><g><title>glam::vec3::IVec3::cmpeq (16 samples, 0.02%)</title><rect x="27.3288%" y="197" width="0.0152%" height="15" fill="rgb(225,32,20)" fg:x="28734" fg:w="16"/><text x="27.5788%" y="207.50"></text></g><g><title>glam::core::scalar::vector::&lt;impl glam::core::traits::vector::Vector&lt;T&gt; for glam::core::storage::XYZ&lt;T&gt;&gt;::cmpeq (16 samples, 0.02%)</title><rect x="27.3288%" y="181" width="0.0152%" height="15" fill="rgb(215,141,46)" fg:x="28734" fg:w="16"/><text x="27.5788%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (12 samples, 0.01%)</title><rect x="27.3326%" y="165" width="0.0114%" height="15" fill="rgb(250,160,47)" fg:x="28738" fg:w="12"/><text x="27.5826%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (122 samples, 0.12%)</title><rect x="27.2375%" y="341" width="0.1160%" height="15" fill="rgb(216,222,40)" fg:x="28638" fg:w="122"/><text x="27.4875%" y="351.50"></text></g><g><title>itertools::group_map::into_group_map::{{closure}} (122 samples, 0.12%)</title><rect x="27.2375%" y="325" width="0.1160%" height="15" fill="rgb(234,217,39)" fg:x="28638" fg:w="122"/><text x="27.4875%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (94 samples, 0.09%)</title><rect x="27.2641%" y="309" width="0.0894%" height="15" fill="rgb(207,178,40)" fg:x="28666" fg:w="94"/><text x="27.5141%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (75 samples, 0.07%)</title><rect x="27.2822%" y="293" width="0.0713%" height="15" fill="rgb(221,136,13)" fg:x="28685" fg:w="75"/><text x="27.5322%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.03%)</title><rect x="27.3240%" y="277" width="0.0295%" height="15" fill="rgb(249,199,10)" fg:x="28729" fg:w="31"/><text x="27.5740%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (31 samples, 0.03%)</title><rect x="27.3240%" y="261" width="0.0295%" height="15" fill="rgb(249,222,13)" fg:x="28729" fg:w="31"/><text x="27.5740%" y="271.50"></text></g><g><title>itertools::Itertools::into_group_map_by (141 samples, 0.13%)</title><rect x="27.2317%" y="453" width="0.1341%" height="15" fill="rgb(244,185,38)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="463.50"></text></g><g><title>itertools::group_map::into_group_map_by (141 samples, 0.13%)</title><rect x="27.2317%" y="437" width="0.1341%" height="15" fill="rgb(236,202,9)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="447.50"></text></g><g><title>itertools::group_map::into_group_map (141 samples, 0.13%)</title><rect x="27.2317%" y="421" width="0.1341%" height="15" fill="rgb(250,229,37)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (141 samples, 0.13%)</title><rect x="27.2317%" y="405" width="0.1341%" height="15" fill="rgb(206,174,23)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (141 samples, 0.13%)</title><rect x="27.2317%" y="389" width="0.1341%" height="15" fill="rgb(211,33,43)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (141 samples, 0.13%)</title><rect x="27.2317%" y="373" width="0.1341%" height="15" fill="rgb(245,58,50)" fg:x="28632" fg:w="141"/><text x="27.4817%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (135 samples, 0.13%)</title><rect x="27.2375%" y="357" width="0.1284%" height="15" fill="rgb(244,68,36)" fg:x="28638" fg:w="135"/><text x="27.4875%" y="367.50"></text></g><g><title>itertools::group_map::into_group_map_by::{{closure}} (13 samples, 0.01%)</title><rect x="27.3535%" y="341" width="0.0124%" height="15" fill="rgb(232,229,15)" fg:x="28760" fg:w="13"/><text x="27.6035%" y="351.50"></text></g><g><title>stellar_coordinates_test::setup::{{closure}} (13 samples, 0.01%)</title><rect x="27.3535%" y="325" width="0.0124%" height="15" fill="rgb(254,30,23)" fg:x="28760" fg:w="13"/><text x="27.6035%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (52 samples, 0.05%)</title><rect x="27.4210%" y="389" width="0.0495%" height="15" fill="rgb(235,160,14)" fg:x="28831" fg:w="52"/><text x="27.6710%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="27.4210%" y="373" width="0.0495%" height="15" fill="rgb(212,155,44)" fg:x="28831" fg:w="52"/><text x="27.6710%" y="383.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="27.4210%" y="357" width="0.0495%" height="15" fill="rgb(226,2,50)" fg:x="28831" fg:w="52"/><text x="27.6710%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (47 samples, 0.04%)</title><rect x="27.4258%" y="341" width="0.0447%" height="15" fill="rgb(234,177,6)" fg:x="28836" fg:w="47"/><text x="27.6758%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (47 samples, 0.04%)</title><rect x="27.4258%" y="325" width="0.0447%" height="15" fill="rgb(217,24,9)" fg:x="28836" fg:w="47"/><text x="27.6758%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (47 samples, 0.04%)</title><rect x="27.4258%" y="309" width="0.0447%" height="15" fill="rgb(220,13,46)" fg:x="28836" fg:w="47"/><text x="27.6758%" y="319.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (13 samples, 0.01%)</title><rect x="27.5085%" y="277" width="0.0124%" height="15" fill="rgb(239,221,27)" fg:x="28923" fg:w="13"/><text x="27.7585%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="27.5294%" y="261" width="0.0124%" height="15" fill="rgb(222,198,25)" fg:x="28945" fg:w="13"/><text x="27.7794%" y="271.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (48 samples, 0.05%)</title><rect x="27.5019%" y="293" width="0.0457%" height="15" fill="rgb(211,99,13)" fg:x="28916" fg:w="48"/><text x="27.7519%" y="303.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (28 samples, 0.03%)</title><rect x="27.5209%" y="277" width="0.0266%" height="15" fill="rgb(232,111,31)" fg:x="28936" fg:w="28"/><text x="27.7709%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (107 samples, 0.10%)</title><rect x="27.5019%" y="325" width="0.1018%" height="15" fill="rgb(245,82,37)" fg:x="28916" fg:w="107"/><text x="27.7519%" y="335.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (107 samples, 0.10%)</title><rect x="27.5019%" y="309" width="0.1018%" height="15" fill="rgb(227,149,46)" fg:x="28916" fg:w="107"/><text x="27.7519%" y="319.50"></text></g><g><title>std::sys_common::memchr::memrchr (53 samples, 0.05%)</title><rect x="27.5532%" y="293" width="0.0504%" height="15" fill="rgb(218,36,50)" fg:x="28970" fg:w="53"/><text x="27.8032%" y="303.50"></text></g><g><title>std::sys::unix::memchr::memrchr (53 samples, 0.05%)</title><rect x="27.5532%" y="277" width="0.0504%" height="15" fill="rgb(226,80,48)" fg:x="28970" fg:w="53"/><text x="27.8032%" y="287.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (53 samples, 0.05%)</title><rect x="27.5532%" y="261" width="0.0504%" height="15" fill="rgb(238,224,15)" fg:x="28970" fg:w="53"/><text x="27.8032%" y="271.50"></text></g><g><title>__memrchr_avx2 (43 samples, 0.04%)</title><rect x="27.5627%" y="245" width="0.0409%" height="15" fill="rgb(241,136,10)" fg:x="28980" fg:w="43"/><text x="27.8127%" y="255.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (125 samples, 0.12%)</title><rect x="27.4952%" y="357" width="0.1189%" height="15" fill="rgb(208,32,45)" fg:x="28909" fg:w="125"/><text x="27.7452%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (119 samples, 0.11%)</title><rect x="27.5009%" y="341" width="0.1132%" height="15" fill="rgb(207,135,9)" fg:x="28915" fg:w="119"/><text x="27.7509%" y="351.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="27.6036%" y="325" width="0.0105%" height="15" fill="rgb(206,86,44)" fg:x="29023" fg:w="11"/><text x="27.8536%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (11 samples, 0.01%)</title><rect x="27.6036%" y="309" width="0.0105%" height="15" fill="rgb(245,177,15)" fg:x="29023" fg:w="11"/><text x="27.8536%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (11 samples, 0.01%)</title><rect x="27.6036%" y="293" width="0.0105%" height="15" fill="rgb(206,64,50)" fg:x="29023" fg:w="11"/><text x="27.8536%" y="303.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (18 samples, 0.02%)</title><rect x="27.6550%" y="229" width="0.0171%" height="15" fill="rgb(234,36,40)" fg:x="29077" fg:w="18"/><text x="27.9050%" y="239.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (14 samples, 0.01%)</title><rect x="27.6588%" y="213" width="0.0133%" height="15" fill="rgb(213,64,8)" fg:x="29081" fg:w="14"/><text x="27.9088%" y="223.50"></text></g><g><title>__memrchr_avx2 (28 samples, 0.03%)</title><rect x="27.6778%" y="181" width="0.0266%" height="15" fill="rgb(210,75,36)" fg:x="29101" fg:w="28"/><text x="27.9278%" y="191.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (53 samples, 0.05%)</title><rect x="27.6550%" y="261" width="0.0504%" height="15" fill="rgb(229,88,21)" fg:x="29077" fg:w="53"/><text x="27.9050%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (53 samples, 0.05%)</title><rect x="27.6550%" y="245" width="0.0504%" height="15" fill="rgb(252,204,47)" fg:x="29077" fg:w="53"/><text x="27.9050%" y="255.50"></text></g><g><title>std::sys_common::memchr::memrchr (33 samples, 0.03%)</title><rect x="27.6740%" y="229" width="0.0314%" height="15" fill="rgb(208,77,27)" fg:x="29097" fg:w="33"/><text x="27.9240%" y="239.50"></text></g><g><title>std::sys::unix::memchr::memrchr (33 samples, 0.03%)</title><rect x="27.6740%" y="213" width="0.0314%" height="15" fill="rgb(221,76,26)" fg:x="29097" fg:w="33"/><text x="27.9240%" y="223.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (33 samples, 0.03%)</title><rect x="27.6740%" y="197" width="0.0314%" height="15" fill="rgb(225,139,18)" fg:x="29097" fg:w="33"/><text x="27.9240%" y="207.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (70 samples, 0.07%)</title><rect x="27.6464%" y="309" width="0.0666%" height="15" fill="rgb(230,137,11)" fg:x="29068" fg:w="70"/><text x="27.8964%" y="319.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (69 samples, 0.07%)</title><rect x="27.6474%" y="293" width="0.0656%" height="15" fill="rgb(212,28,1)" fg:x="29069" fg:w="69"/><text x="27.8974%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (64 samples, 0.06%)</title><rect x="27.6521%" y="277" width="0.0609%" height="15" fill="rgb(248,164,17)" fg:x="29074" fg:w="64"/><text x="27.9021%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (80 samples, 0.08%)</title><rect x="27.6398%" y="325" width="0.0761%" height="15" fill="rgb(222,171,42)" fg:x="29061" fg:w="80"/><text x="27.8898%" y="335.50"></text></g><g><title>core::num::flt2dec::decoder::decode (11 samples, 0.01%)</title><rect x="27.7320%" y="309" width="0.0105%" height="15" fill="rgb(243,84,45)" fg:x="29158" fg:w="11"/><text x="27.9820%" y="319.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (11 samples, 0.01%)</title><rect x="27.7434%" y="309" width="0.0105%" height="15" fill="rgb(252,49,23)" fg:x="29170" fg:w="11"/><text x="27.9934%" y="319.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="27.7710%" y="261" width="0.0143%" height="15" fill="rgb(215,19,7)" fg:x="29199" fg:w="15"/><text x="28.0210%" y="271.50"></text></g><g><title>__memmove_sse2_unaligned_erms (11 samples, 0.01%)</title><rect x="27.7748%" y="245" width="0.0105%" height="15" fill="rgb(238,81,41)" fg:x="29203" fg:w="11"/><text x="28.0248%" y="255.50"></text></g><g><title>core::cmp::PartialOrd::ge (25 samples, 0.02%)</title><rect x="27.7853%" y="261" width="0.0238%" height="15" fill="rgb(210,199,37)" fg:x="29214" fg:w="25"/><text x="28.0353%" y="271.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.02%)</title><rect x="27.7862%" y="245" width="0.0228%" height="15" fill="rgb(244,192,49)" fg:x="29215" fg:w="24"/><text x="28.0362%" y="255.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::Ord&gt;::cmp (24 samples, 0.02%)</title><rect x="27.7862%" y="229" width="0.0228%" height="15" fill="rgb(226,211,11)" fg:x="29215" fg:w="24"/><text x="28.0362%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (16 samples, 0.02%)</title><rect x="27.7938%" y="213" width="0.0152%" height="15" fill="rgb(236,162,54)" fg:x="29223" fg:w="16"/><text x="28.0438%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (16 samples, 0.02%)</title><rect x="27.7938%" y="197" width="0.0152%" height="15" fill="rgb(220,229,9)" fg:x="29223" fg:w="16"/><text x="28.0438%" y="207.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::div_2pow10 (11 samples, 0.01%)</title><rect x="27.8385%" y="261" width="0.0105%" height="15" fill="rgb(250,87,22)" fg:x="29270" fg:w="11"/><text x="28.0885%" y="271.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (93 samples, 0.09%)</title><rect x="27.7625%" y="277" width="0.0885%" height="15" fill="rgb(239,43,17)" fg:x="29190" fg:w="93"/><text x="28.0125%" y="287.50"></text></g><g><title>core::num::diy_float::Fp::normalize (16 samples, 0.02%)</title><rect x="27.9688%" y="261" width="0.0152%" height="15" fill="rgb(231,177,25)" fg:x="29407" fg:w="16"/><text x="28.2188%" y="271.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::cached_power (11 samples, 0.01%)</title><rect x="27.9841%" y="261" width="0.0105%" height="15" fill="rgb(219,179,1)" fg:x="29423" fg:w="11"/><text x="28.2341%" y="271.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (394 samples, 0.37%)</title><rect x="27.6369%" y="341" width="0.3747%" height="15" fill="rgb(238,219,53)" fg:x="29058" fg:w="394"/><text x="27.8869%" y="351.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (310 samples, 0.29%)</title><rect x="27.7168%" y="325" width="0.2948%" height="15" fill="rgb(232,167,36)" fg:x="29142" fg:w="310"/><text x="27.9668%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (271 samples, 0.26%)</title><rect x="27.7539%" y="309" width="0.2577%" height="15" fill="rgb(244,19,51)" fg:x="29181" fg:w="271"/><text x="28.0039%" y="319.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (271 samples, 0.26%)</title><rect x="27.7539%" y="293" width="0.2577%" height="15" fill="rgb(224,6,22)" fg:x="29181" fg:w="271"/><text x="28.0039%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (169 samples, 0.16%)</title><rect x="27.8509%" y="277" width="0.1607%" height="15" fill="rgb(224,145,5)" fg:x="29283" fg:w="169"/><text x="28.1009%" y="287.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (17 samples, 0.02%)</title><rect x="27.9955%" y="261" width="0.0162%" height="15" fill="rgb(234,130,49)" fg:x="29435" fg:w="17"/><text x="28.2455%" y="271.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (15 samples, 0.01%)</title><rect x="28.0525%" y="245" width="0.0143%" height="15" fill="rgb(254,6,2)" fg:x="29495" fg:w="15"/><text x="28.3025%" y="255.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (13 samples, 0.01%)</title><rect x="28.0544%" y="229" width="0.0124%" height="15" fill="rgb(208,96,46)" fg:x="29497" fg:w="13"/><text x="28.3044%" y="239.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (30 samples, 0.03%)</title><rect x="28.0525%" y="277" width="0.0285%" height="15" fill="rgb(239,3,39)" fg:x="29495" fg:w="30"/><text x="28.3025%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (30 samples, 0.03%)</title><rect x="28.0525%" y="261" width="0.0285%" height="15" fill="rgb(233,210,1)" fg:x="29495" fg:w="30"/><text x="28.3025%" y="271.50"></text></g><g><title>std::sys_common::memchr::memrchr (11 samples, 0.01%)</title><rect x="28.0706%" y="245" width="0.0105%" height="15" fill="rgb(244,137,37)" fg:x="29514" fg:w="11"/><text x="28.3206%" y="255.50"></text></g><g><title>std::sys::unix::memchr::memrchr (11 samples, 0.01%)</title><rect x="28.0706%" y="229" width="0.0105%" height="15" fill="rgb(240,136,2)" fg:x="29514" fg:w="11"/><text x="28.3206%" y="239.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (11 samples, 0.01%)</title><rect x="28.0706%" y="213" width="0.0105%" height="15" fill="rgb(239,18,37)" fg:x="29514" fg:w="11"/><text x="28.3206%" y="223.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (34 samples, 0.03%)</title><rect x="28.0497%" y="309" width="0.0323%" height="15" fill="rgb(218,185,22)" fg:x="29492" fg:w="34"/><text x="28.2997%" y="319.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (31 samples, 0.03%)</title><rect x="28.0525%" y="293" width="0.0295%" height="15" fill="rgb(225,218,4)" fg:x="29495" fg:w="31"/><text x="28.3025%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (18 samples, 0.02%)</title><rect x="28.0820%" y="309" width="0.0171%" height="15" fill="rgb(230,182,32)" fg:x="29526" fg:w="18"/><text x="28.3320%" y="319.50"></text></g><g><title>core::fmt::run (518 samples, 0.49%)</title><rect x="27.6160%" y="357" width="0.4927%" height="15" fill="rgb(242,56,43)" fg:x="29036" fg:w="518"/><text x="27.8660%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (93 samples, 0.09%)</title><rect x="28.0202%" y="341" width="0.0885%" height="15" fill="rgb(233,99,24)" fg:x="29461" fg:w="93"/><text x="28.2702%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (85 samples, 0.08%)</title><rect x="28.0278%" y="325" width="0.0808%" height="15" fill="rgb(234,209,42)" fg:x="29469" fg:w="85"/><text x="28.2778%" y="335.50"></text></g><g><title>core::fmt::write (671 samples, 0.64%)</title><rect x="27.4752%" y="373" width="0.6382%" height="15" fill="rgb(227,7,12)" fg:x="28888" fg:w="671"/><text x="27.7252%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (679 samples, 0.65%)</title><rect x="27.4705%" y="389" width="0.6458%" height="15" fill="rgb(245,203,43)" fg:x="28883" fg:w="679"/><text x="27.7205%" y="399.50"></text></g><g><title>__tls_get_addr (21 samples, 0.02%)</title><rect x="28.1191%" y="357" width="0.0200%" height="15" fill="rgb(238,205,33)" fg:x="29565" fg:w="21"/><text x="28.3691%" y="367.50"></text></g><g><title>update_get_addr (15 samples, 0.01%)</title><rect x="28.1248%" y="341" width="0.0143%" height="15" fill="rgb(231,56,7)" fg:x="29571" fg:w="15"/><text x="28.3748%" y="351.50"></text></g><g><title>_dl_update_slotinfo (14 samples, 0.01%)</title><rect x="28.1258%" y="325" width="0.0133%" height="15" fill="rgb(244,186,29)" fg:x="29572" fg:w="14"/><text x="28.3758%" y="335.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (804 samples, 0.76%)</title><rect x="27.4105%" y="421" width="0.7647%" height="15" fill="rgb(234,111,31)" fg:x="28820" fg:w="804"/><text x="27.6605%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (797 samples, 0.76%)</title><rect x="27.4172%" y="405" width="0.7580%" height="15" fill="rgb(241,149,10)" fg:x="28827" fg:w="797"/><text x="27.6672%" y="415.50"></text></g><g><title>std::io::stdio::Stdout::lock (62 samples, 0.06%)</title><rect x="28.1163%" y="389" width="0.0590%" height="15" fill="rgb(249,206,44)" fg:x="29562" fg:w="62"/><text x="28.3663%" y="399.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="28.1163%" y="373" width="0.0590%" height="15" fill="rgb(251,153,30)" fg:x="29562" fg:w="62"/><text x="28.3663%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (35 samples, 0.03%)</title><rect x="28.1419%" y="357" width="0.0333%" height="15" fill="rgb(239,152,38)" fg:x="29589" fg:w="35"/><text x="28.3919%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.03%)</title><rect x="28.1419%" y="341" width="0.0333%" height="15" fill="rgb(249,139,47)" fg:x="29589" fg:w="35"/><text x="28.3919%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="28.1419%" y="325" width="0.0333%" height="15" fill="rgb(244,64,35)" fg:x="29589" fg:w="35"/><text x="28.3919%" y="335.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (28,640 samples, 27.24%)</title><rect x="0.9378%" y="533" width="27.2394%" height="15" fill="rgb(216,46,15)" fg:x="986" fg:w="28640"/><text x="1.1878%" y="543.50">&lt;Func as bevy_ecs::system::function_system::..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (28,639 samples, 27.24%)</title><rect x="0.9387%" y="517" width="27.2384%" height="15" fill="rgb(250,74,19)" fg:x="987" fg:w="28639"/><text x="1.1887%" y="527.50">&lt;Func as bevy_ecs::system::function_system::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28,638 samples, 27.24%)</title><rect x="0.9397%" y="501" width="27.2375%" height="15" fill="rgb(249,42,33)" fg:x="988" fg:w="28638"/><text x="1.1897%" y="511.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>core::ops::function::FnMut::call_mut (28,638 samples, 27.24%)</title><rect x="0.9397%" y="485" width="27.2375%" height="15" fill="rgb(242,149,17)" fg:x="988" fg:w="28638"/><text x="1.1897%" y="495.50">core::ops::function::FnMut::call_mut</text></g><g><title>stellar_coordinates_test::setup (4,082 samples, 3.88%)</title><rect x="24.2948%" y="469" width="3.8824%" height="15" fill="rgb(244,29,21)" fg:x="25544" fg:w="4082"/><text x="24.5448%" y="479.50">stel..</text></g><g><title>std::io::stdio::_print (853 samples, 0.81%)</title><rect x="27.3658%" y="453" width="0.8113%" height="15" fill="rgb(220,130,37)" fg:x="28773" fg:w="853"/><text x="27.6158%" y="463.50"></text></g><g><title>std::io::stdio::print_to (812 samples, 0.77%)</title><rect x="27.4048%" y="437" width="0.7723%" height="15" fill="rgb(211,67,2)" fg:x="28814" fg:w="812"/><text x="27.6548%" y="447.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (37 samples, 0.04%)</title><rect x="28.1876%" y="453" width="0.0352%" height="15" fill="rgb(235,68,52)" fg:x="29637" fg:w="37"/><text x="28.4376%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (19 samples, 0.02%)</title><rect x="28.2047%" y="437" width="0.0181%" height="15" fill="rgb(246,142,3)" fg:x="29655" fg:w="19"/><text x="28.4547%" y="447.50"></text></g><g><title>core::ptr::swap (15 samples, 0.01%)</title><rect x="28.2085%" y="421" width="0.0143%" height="15" fill="rgb(241,25,7)" fg:x="29659" fg:w="15"/><text x="28.4585%" y="431.50"></text></g><g><title>bevy_prototype_debug_lines::update (51 samples, 0.05%)</title><rect x="28.1781%" y="469" width="0.0485%" height="15" fill="rgb(242,119,39)" fg:x="29627" fg:w="51"/><text x="28.4281%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (58 samples, 0.06%)</title><rect x="28.1771%" y="533" width="0.0552%" height="15" fill="rgb(241,98,45)" fg:x="29626" fg:w="58"/><text x="28.4271%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (57 samples, 0.05%)</title><rect x="28.1781%" y="517" width="0.0542%" height="15" fill="rgb(254,28,30)" fg:x="29627" fg:w="57"/><text x="28.4281%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57 samples, 0.05%)</title><rect x="28.1781%" y="501" width="0.0542%" height="15" fill="rgb(241,142,54)" fg:x="29627" fg:w="57"/><text x="28.4281%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (57 samples, 0.05%)</title><rect x="28.1781%" y="485" width="0.0542%" height="15" fill="rgb(222,85,15)" fg:x="29627" fg:w="57"/><text x="28.4281%" y="495.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak (37 samples, 0.04%)</title><rect x="28.2513%" y="453" width="0.0352%" height="15" fill="rgb(210,85,47)" fg:x="29704" fg:w="37"/><text x="28.5013%" y="463.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (16 samples, 0.02%)</title><rect x="28.2894%" y="453" width="0.0152%" height="15" fill="rgb(224,206,25)" fg:x="29744" fg:w="16"/><text x="28.5394%" y="463.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes (74 samples, 0.07%)</title><rect x="28.2371%" y="469" width="0.0704%" height="15" fill="rgb(243,201,19)" fg:x="29689" fg:w="74"/><text x="28.4871%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (82 samples, 0.08%)</title><rect x="28.2323%" y="533" width="0.0780%" height="15" fill="rgb(236,59,4)" fg:x="29684" fg:w="82"/><text x="28.4823%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (79 samples, 0.08%)</title><rect x="28.2351%" y="517" width="0.0751%" height="15" fill="rgb(254,179,45)" fg:x="29687" fg:w="79"/><text x="28.4851%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (79 samples, 0.08%)</title><rect x="28.2351%" y="501" width="0.0751%" height="15" fill="rgb(226,14,10)" fg:x="29687" fg:w="79"/><text x="28.4851%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (79 samples, 0.08%)</title><rect x="28.2351%" y="485" width="0.0751%" height="15" fill="rgb(244,27,41)" fg:x="29687" fg:w="79"/><text x="28.4851%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (13 samples, 0.01%)</title><rect x="28.3103%" y="533" width="0.0124%" height="15" fill="rgb(235,35,32)" fg:x="29766" fg:w="13"/><text x="28.5603%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (11 samples, 0.01%)</title><rect x="28.3226%" y="533" width="0.0105%" height="15" fill="rgb(218,68,31)" fg:x="29779" fg:w="11"/><text x="28.5726%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (13 samples, 0.01%)</title><rect x="28.3426%" y="453" width="0.0124%" height="15" fill="rgb(207,120,37)" fg:x="29800" fg:w="13"/><text x="28.5926%" y="463.50"></text></g><g><title>bevy_pbr::light::assign_lights_to_clusters (31 samples, 0.03%)</title><rect x="28.3360%" y="469" width="0.0295%" height="15" fill="rgb(227,98,0)" fg:x="29793" fg:w="31"/><text x="28.5860%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (42 samples, 0.04%)</title><rect x="28.3331%" y="533" width="0.0399%" height="15" fill="rgb(207,7,3)" fg:x="29790" fg:w="42"/><text x="28.5831%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (39 samples, 0.04%)</title><rect x="28.3360%" y="517" width="0.0371%" height="15" fill="rgb(206,98,19)" fg:x="29793" fg:w="39"/><text x="28.5860%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.04%)</title><rect x="28.3360%" y="501" width="0.0371%" height="15" fill="rgb(217,5,26)" fg:x="29793" fg:w="39"/><text x="28.5860%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 0.04%)</title><rect x="28.3360%" y="485" width="0.0371%" height="15" fill="rgb(235,190,38)" fg:x="29793" fg:w="39"/><text x="28.5860%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (29,094 samples, 27.67%)</title><rect x="0.7086%" y="549" width="27.6711%" height="15" fill="rgb(247,86,24)" fg:x="745" fg:w="29094"/><text x="0.9586%" y="559.50">&lt;bevy_ecs::system::function_system::Function..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (11 samples, 0.01%)</title><rect x="28.3816%" y="549" width="0.0105%" height="15" fill="rgb(205,101,16)" fg:x="29841" fg:w="11"/><text x="28.6316%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (11 samples, 0.01%)</title><rect x="28.3816%" y="533" width="0.0105%" height="15" fill="rgb(246,168,33)" fg:x="29841" fg:w="11"/><text x="28.6316%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (11 samples, 0.01%)</title><rect x="28.3816%" y="517" width="0.0105%" height="15" fill="rgb(231,114,1)" fg:x="29841" fg:w="11"/><text x="28.6316%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,211 samples, 27.78%)</title><rect x="0.6116%" y="581" width="27.7824%" height="15" fill="rgb(207,184,53)" fg:x="643" fg:w="29211"/><text x="0.8616%" y="591.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; a..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (29,177 samples, 27.75%)</title><rect x="0.6439%" y="565" width="27.7501%" height="15" fill="rgb(224,95,51)" fg:x="677" fg:w="29177"/><text x="0.8939%" y="575.50">bevy_ecs::schedule::executor_parallel::Parall..</text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="28.3940%" y="565" width="0.0105%" height="15" fill="rgb(212,188,45)" fg:x="29854" fg:w="11"/><text x="28.6440%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="28.3940%" y="549" width="0.0105%" height="15" fill="rgb(223,154,38)" fg:x="29854" fg:w="11"/><text x="28.6440%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,224 samples, 27.79%)</title><rect x="0.6106%" y="613" width="27.7948%" height="15" fill="rgb(251,22,52)" fg:x="642" fg:w="29224"/><text x="0.8606%" y="623.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; a..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (29,223 samples, 27.79%)</title><rect x="0.6116%" y="597" width="27.7938%" height="15" fill="rgb(229,209,22)" fg:x="643" fg:w="29223"/><text x="0.8616%" y="607.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="28.3940%" y="581" width="0.0114%" height="15" fill="rgb(234,138,34)" fg:x="29854" fg:w="12"/><text x="28.6440%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29,246 samples, 27.82%)</title><rect x="0.6077%" y="629" width="27.8157%" height="15" fill="rgb(212,95,11)" fg:x="639" fg:w="29246"/><text x="0.8577%" y="639.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,385 samples, 27.95%)</title><rect x="0.4822%" y="709" width="27.9479%" height="15" fill="rgb(240,179,47)" fg:x="507" fg:w="29385"/><text x="0.7322%" y="719.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; a..</text></g><g><title>async_executor::Executor::run::{{closure}} (29,384 samples, 27.95%)</title><rect x="0.4832%" y="693" width="27.9470%" height="15" fill="rgb(240,163,11)" fg:x="508" fg:w="29384"/><text x="0.7332%" y="703.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,378 samples, 27.94%)</title><rect x="0.4889%" y="677" width="27.9413%" height="15" fill="rgb(236,37,12)" fg:x="514" fg:w="29378"/><text x="0.7389%" y="687.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,360 samples, 27.92%)</title><rect x="0.5060%" y="661" width="27.9241%" height="15" fill="rgb(232,164,16)" fg:x="532" fg:w="29360"/><text x="0.7560%" y="671.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; a..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29,360 samples, 27.92%)</title><rect x="0.5060%" y="645" width="27.9241%" height="15" fill="rgb(244,205,15)" fg:x="532" fg:w="29360"/><text x="0.7560%" y="655.50">async_executor::Executor::run::{{closure}}::{..</text></g><g><title>core::bool::&lt;impl bool&gt;::then (14 samples, 0.01%)</title><rect x="28.4529%" y="597" width="0.0133%" height="15" fill="rgb(223,117,47)" fg:x="29916" fg:w="14"/><text x="28.7029%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (295 samples, 0.28%)</title><rect x="28.4491%" y="613" width="0.2806%" height="15" fill="rgb(244,107,35)" fg:x="29912" fg:w="295"/><text x="28.6991%" y="623.50"></text></g><g><title>syscall (273 samples, 0.26%)</title><rect x="28.4701%" y="597" width="0.2596%" height="15" fill="rgb(205,140,8)" fg:x="29934" fg:w="273"/><text x="28.7201%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (307 samples, 0.29%)</title><rect x="28.4425%" y="645" width="0.2920%" height="15" fill="rgb(228,84,46)" fg:x="29905" fg:w="307"/><text x="28.6925%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (307 samples, 0.29%)</title><rect x="28.4425%" y="629" width="0.2920%" height="15" fill="rgb(254,188,9)" fg:x="29905" fg:w="307"/><text x="28.6925%" y="639.50"></text></g><g><title>std::panic::catch_unwind (29,712 samples, 28.26%)</title><rect x="0.4765%" y="885" width="28.2589%" height="15" fill="rgb(206,112,54)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,712 samples, 28.26%)</title><rect x="0.4765%" y="869" width="28.2589%" height="15" fill="rgb(216,84,49)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,712 samples, 28.26%)</title><rect x="0.4765%" y="853" width="28.2589%" height="15" fill="rgb(214,194,35)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="863.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29,712 samples, 28.26%)</title><rect x="0.4765%" y="837" width="28.2589%" height="15" fill="rgb(249,28,3)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="847.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29,712 samples, 28.26%)</title><rect x="0.4765%" y="821" width="28.2589%" height="15" fill="rgb(222,56,52)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="831.50">std::thread::Builder::spawn_unchecked_::{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29,712 samples, 28.26%)</title><rect x="0.4765%" y="805" width="28.2589%" height="15" fill="rgb(245,217,50)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="815.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (29,712 samples, 28.26%)</title><rect x="0.4765%" y="789" width="28.2589%" height="15" fill="rgb(213,201,24)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="799.50">bevy_tasks::task_pool::TaskPool::new_internal..</text></g><g><title>futures_lite::future::block_on (29,712 samples, 28.26%)</title><rect x="0.4765%" y="773" width="28.2589%" height="15" fill="rgb(248,116,28)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="783.50">futures_lite::future::block_on</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29,712 samples, 28.26%)</title><rect x="0.4765%" y="757" width="28.2589%" height="15" fill="rgb(219,72,43)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="767.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,712 samples, 28.26%)</title><rect x="0.4765%" y="741" width="28.2589%" height="15" fill="rgb(209,138,14)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="751.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>futures_lite::future::block_on::{{closure}} (29,712 samples, 28.26%)</title><rect x="0.4765%" y="725" width="28.2589%" height="15" fill="rgb(222,18,33)" fg:x="501" fg:w="29712"/><text x="0.7265%" y="735.50">futures_lite::future::block_on::{{closure}}</text></g><g><title>parking::Parker::park (321 samples, 0.31%)</title><rect x="28.4301%" y="709" width="0.3053%" height="15" fill="rgb(213,199,7)" fg:x="29892" fg:w="321"/><text x="28.6801%" y="719.50"></text></g><g><title>parking::Inner::park (321 samples, 0.31%)</title><rect x="28.4301%" y="693" width="0.3053%" height="15" fill="rgb(250,110,10)" fg:x="29892" fg:w="321"/><text x="28.6801%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (312 samples, 0.30%)</title><rect x="28.4387%" y="677" width="0.2967%" height="15" fill="rgb(248,123,6)" fg:x="29901" fg:w="312"/><text x="28.6887%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (308 samples, 0.29%)</title><rect x="28.4425%" y="661" width="0.2929%" height="15" fill="rgb(206,91,31)" fg:x="29905" fg:w="308"/><text x="28.6925%" y="671.50"></text></g><g><title>__GI___clone (29,714 samples, 28.26%)</title><rect x="0.4765%" y="997" width="28.2608%" height="15" fill="rgb(211,154,13)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="1007.50">__GI___clone</text></g><g><title>start_thread (29,714 samples, 28.26%)</title><rect x="0.4765%" y="981" width="28.2608%" height="15" fill="rgb(225,148,7)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="991.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29,714 samples, 28.26%)</title><rect x="0.4765%" y="965" width="28.2608%" height="15" fill="rgb(220,160,43)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="975.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,714 samples, 28.26%)</title><rect x="0.4765%" y="949" width="28.2608%" height="15" fill="rgb(213,52,39)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="959.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,714 samples, 28.26%)</title><rect x="0.4765%" y="933" width="28.2608%" height="15" fill="rgb(243,137,7)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29,714 samples, 28.26%)</title><rect x="0.4765%" y="917" width="28.2608%" height="15" fill="rgb(230,79,13)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="927.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29,714 samples, 28.26%)</title><rect x="0.4765%" y="901" width="28.2608%" height="15" fill="rgb(247,105,23)" fg:x="501" fg:w="29714"/><text x="0.7265%" y="911.50">std::thread::Builder::spawn_unchecked_::{{clo..</text></g><g><title>anon.38b781bcdce4cabb8592a559d793a7f5.178.llvm.16323941308359230004 (11 samples, 0.01%)</title><rect x="28.7430%" y="997" width="0.0105%" height="15" fill="rgb(223,179,41)" fg:x="30221" fg:w="11"/><text x="28.9930%" y="1007.50"></text></g><g><title>Compute_Task_Po (30,259 samples, 28.78%)</title><rect x="0.0029%" y="1013" width="28.7792%" height="15" fill="rgb(218,9,34)" fg:x="3" fg:w="30259"/><text x="0.2529%" y="1023.50">Compute_Task_Po</text></g><g><title>[[heap]] (13 samples, 0.01%)</title><rect x="28.7982%" y="997" width="0.0124%" height="15" fill="rgb(222,106,8)" fg:x="30279" fg:w="13"/><text x="29.0482%" y="1007.50"></text></g><g><title>[anon] (12 samples, 0.01%)</title><rect x="28.8106%" y="997" width="0.0114%" height="15" fill="rgb(211,220,0)" fg:x="30292" fg:w="12"/><text x="29.0606%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (121 samples, 0.12%)</title><rect x="28.8572%" y="421" width="0.1151%" height="15" fill="rgb(229,52,16)" fg:x="30341" fg:w="121"/><text x="29.1072%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (121 samples, 0.12%)</title><rect x="28.8572%" y="405" width="0.1151%" height="15" fill="rgb(212,155,18)" fg:x="30341" fg:w="121"/><text x="29.1072%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (121 samples, 0.12%)</title><rect x="28.8572%" y="389" width="0.1151%" height="15" fill="rgb(242,21,14)" fg:x="30341" fg:w="121"/><text x="29.1072%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (48 samples, 0.05%)</title><rect x="28.9732%" y="373" width="0.0457%" height="15" fill="rgb(222,19,48)" fg:x="30463" fg:w="48"/><text x="29.2232%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (48 samples, 0.05%)</title><rect x="28.9732%" y="357" width="0.0457%" height="15" fill="rgb(232,45,27)" fg:x="30463" fg:w="48"/><text x="29.2232%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (15 samples, 0.01%)</title><rect x="29.0208%" y="373" width="0.0143%" height="15" fill="rgb(249,103,42)" fg:x="30513" fg:w="15"/><text x="29.2708%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (12 samples, 0.01%)</title><rect x="29.0236%" y="357" width="0.0114%" height="15" fill="rgb(246,81,33)" fg:x="30516" fg:w="12"/><text x="29.2736%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (201 samples, 0.19%)</title><rect x="28.8448%" y="533" width="0.1912%" height="15" fill="rgb(252,33,42)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (201 samples, 0.19%)</title><rect x="28.8448%" y="517" width="0.1912%" height="15" fill="rgb(209,212,41)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (201 samples, 0.19%)</title><rect x="28.8448%" y="501" width="0.1912%" height="15" fill="rgb(207,154,6)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (201 samples, 0.19%)</title><rect x="28.8448%" y="485" width="0.1912%" height="15" fill="rgb(223,64,47)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (201 samples, 0.19%)</title><rect x="28.8448%" y="469" width="0.1912%" height="15" fill="rgb(211,161,38)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (201 samples, 0.19%)</title><rect x="28.8448%" y="453" width="0.1912%" height="15" fill="rgb(219,138,40)" fg:x="30328" fg:w="201"/><text x="29.0948%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (200 samples, 0.19%)</title><rect x="28.8458%" y="437" width="0.1902%" height="15" fill="rgb(241,228,46)" fg:x="30329" fg:w="200"/><text x="29.0958%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (66 samples, 0.06%)</title><rect x="28.9732%" y="421" width="0.0628%" height="15" fill="rgb(223,209,38)" fg:x="30463" fg:w="66"/><text x="29.2232%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (66 samples, 0.06%)</title><rect x="28.9732%" y="405" width="0.0628%" height="15" fill="rgb(236,164,45)" fg:x="30463" fg:w="66"/><text x="29.2232%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (66 samples, 0.06%)</title><rect x="28.9732%" y="389" width="0.0628%" height="15" fill="rgb(231,15,5)" fg:x="30463" fg:w="66"/><text x="29.2232%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (55 samples, 0.05%)</title><rect x="29.0464%" y="437" width="0.0523%" height="15" fill="rgb(252,35,15)" fg:x="30540" fg:w="55"/><text x="29.2964%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (35 samples, 0.03%)</title><rect x="29.0655%" y="421" width="0.0333%" height="15" fill="rgb(248,181,18)" fg:x="30560" fg:w="35"/><text x="29.3155%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.03%)</title><rect x="29.0655%" y="405" width="0.0333%" height="15" fill="rgb(233,39,42)" fg:x="30560" fg:w="35"/><text x="29.3155%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="29.0664%" y="389" width="0.0323%" height="15" fill="rgb(238,110,33)" fg:x="30561" fg:w="34"/><text x="29.3164%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (11 samples, 0.01%)</title><rect x="29.0987%" y="437" width="0.0105%" height="15" fill="rgb(233,195,10)" fg:x="30595" fg:w="11"/><text x="29.3487%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (11 samples, 0.01%)</title><rect x="29.0987%" y="421" width="0.0105%" height="15" fill="rgb(254,105,3)" fg:x="30595" fg:w="11"/><text x="29.3487%" y="431.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (67 samples, 0.06%)</title><rect x="29.0464%" y="453" width="0.0637%" height="15" fill="rgb(221,225,9)" fg:x="30540" fg:w="67"/><text x="29.2964%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (79 samples, 0.08%)</title><rect x="29.0360%" y="533" width="0.0751%" height="15" fill="rgb(224,227,45)" fg:x="30529" fg:w="79"/><text x="29.2860%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (79 samples, 0.08%)</title><rect x="29.0360%" y="517" width="0.0751%" height="15" fill="rgb(229,198,43)" fg:x="30529" fg:w="79"/><text x="29.2860%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (79 samples, 0.08%)</title><rect x="29.0360%" y="501" width="0.0751%" height="15" fill="rgb(206,209,35)" fg:x="30529" fg:w="79"/><text x="29.2860%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (79 samples, 0.08%)</title><rect x="29.0360%" y="485" width="0.0751%" height="15" fill="rgb(245,195,53)" fg:x="30529" fg:w="79"/><text x="29.2860%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (68 samples, 0.06%)</title><rect x="29.0464%" y="469" width="0.0647%" height="15" fill="rgb(240,92,26)" fg:x="30540" fg:w="68"/><text x="29.2964%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (20 samples, 0.02%)</title><rect x="29.1121%" y="453" width="0.0190%" height="15" fill="rgb(207,40,23)" fg:x="30609" fg:w="20"/><text x="29.3621%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (20 samples, 0.02%)</title><rect x="29.1121%" y="437" width="0.0190%" height="15" fill="rgb(223,111,35)" fg:x="30609" fg:w="20"/><text x="29.3621%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (18 samples, 0.02%)</title><rect x="29.1140%" y="421" width="0.0171%" height="15" fill="rgb(229,147,28)" fg:x="30611" fg:w="18"/><text x="29.3640%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (18 samples, 0.02%)</title><rect x="29.1140%" y="405" width="0.0171%" height="15" fill="rgb(211,29,28)" fg:x="30611" fg:w="18"/><text x="29.3640%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (18 samples, 0.02%)</title><rect x="29.1140%" y="389" width="0.0171%" height="15" fill="rgb(228,72,33)" fg:x="30611" fg:w="18"/><text x="29.3640%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (16 samples, 0.02%)</title><rect x="29.1159%" y="373" width="0.0152%" height="15" fill="rgb(205,214,31)" fg:x="30613" fg:w="16"/><text x="29.3659%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (15 samples, 0.01%)</title><rect x="29.1168%" y="357" width="0.0143%" height="15" fill="rgb(224,111,15)" fg:x="30614" fg:w="15"/><text x="29.3668%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (15 samples, 0.01%)</title><rect x="29.1168%" y="341" width="0.0143%" height="15" fill="rgb(253,21,26)" fg:x="30614" fg:w="15"/><text x="29.3668%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.01%)</title><rect x="29.1197%" y="325" width="0.0114%" height="15" fill="rgb(245,139,43)" fg:x="30617" fg:w="12"/><text x="29.3697%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="29.1197%" y="309" width="0.0114%" height="15" fill="rgb(252,170,7)" fg:x="30617" fg:w="12"/><text x="29.3697%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (12 samples, 0.01%)</title><rect x="29.1197%" y="293" width="0.0114%" height="15" fill="rgb(231,118,14)" fg:x="30617" fg:w="12"/><text x="29.3697%" y="303.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (25 samples, 0.02%)</title><rect x="29.1121%" y="469" width="0.0238%" height="15" fill="rgb(238,83,0)" fg:x="30609" fg:w="25"/><text x="29.3621%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (32 samples, 0.03%)</title><rect x="29.1111%" y="533" width="0.0304%" height="15" fill="rgb(221,39,39)" fg:x="30608" fg:w="32"/><text x="29.3611%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (31 samples, 0.03%)</title><rect x="29.1121%" y="517" width="0.0295%" height="15" fill="rgb(222,119,46)" fg:x="30609" fg:w="31"/><text x="29.3621%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.03%)</title><rect x="29.1121%" y="501" width="0.0295%" height="15" fill="rgb(222,165,49)" fg:x="30609" fg:w="31"/><text x="29.3621%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (31 samples, 0.03%)</title><rect x="29.1121%" y="485" width="0.0295%" height="15" fill="rgb(219,113,52)" fg:x="30609" fg:w="31"/><text x="29.3621%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (340 samples, 0.32%)</title><rect x="28.8400%" y="581" width="0.3234%" height="15" fill="rgb(214,7,15)" fg:x="30323" fg:w="340"/><text x="29.0900%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (336 samples, 0.32%)</title><rect x="28.8438%" y="565" width="0.3196%" height="15" fill="rgb(235,32,4)" fg:x="30327" fg:w="336"/><text x="29.0938%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (335 samples, 0.32%)</title><rect x="28.8448%" y="549" width="0.3186%" height="15" fill="rgb(238,90,54)" fg:x="30328" fg:w="335"/><text x="29.0948%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (23 samples, 0.02%)</title><rect x="29.1415%" y="533" width="0.0219%" height="15" fill="rgb(213,208,19)" fg:x="30640" fg:w="23"/><text x="29.3915%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (23 samples, 0.02%)</title><rect x="29.1415%" y="517" width="0.0219%" height="15" fill="rgb(233,156,4)" fg:x="30640" fg:w="23"/><text x="29.3915%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="29.1415%" y="501" width="0.0219%" height="15" fill="rgb(207,194,5)" fg:x="30640" fg:w="23"/><text x="29.3915%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 0.02%)</title><rect x="29.1415%" y="485" width="0.0219%" height="15" fill="rgb(206,111,30)" fg:x="30640" fg:w="23"/><text x="29.3915%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (23 samples, 0.02%)</title><rect x="29.1415%" y="469" width="0.0219%" height="15" fill="rgb(243,70,54)" fg:x="30640" fg:w="23"/><text x="29.3915%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (12 samples, 0.01%)</title><rect x="29.1520%" y="453" width="0.0114%" height="15" fill="rgb(242,28,8)" fg:x="30651" fg:w="12"/><text x="29.4020%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (12 samples, 0.01%)</title><rect x="29.1520%" y="437" width="0.0114%" height="15" fill="rgb(219,106,18)" fg:x="30651" fg:w="12"/><text x="29.4020%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (342 samples, 0.33%)</title><rect x="28.8400%" y="613" width="0.3253%" height="15" fill="rgb(244,222,10)" fg:x="30323" fg:w="342"/><text x="29.0900%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (342 samples, 0.33%)</title><rect x="28.8400%" y="597" width="0.3253%" height="15" fill="rgb(236,179,52)" fg:x="30323" fg:w="342"/><text x="29.0900%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (343 samples, 0.33%)</title><rect x="28.8400%" y="629" width="0.3262%" height="15" fill="rgb(213,23,39)" fg:x="30323" fg:w="343"/><text x="29.0900%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (353 samples, 0.34%)</title><rect x="28.8315%" y="709" width="0.3357%" height="15" fill="rgb(238,48,10)" fg:x="30314" fg:w="353"/><text x="29.0815%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (353 samples, 0.34%)</title><rect x="28.8315%" y="693" width="0.3357%" height="15" fill="rgb(251,196,23)" fg:x="30314" fg:w="353"/><text x="29.0815%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (353 samples, 0.34%)</title><rect x="28.8315%" y="677" width="0.3357%" height="15" fill="rgb(250,152,24)" fg:x="30314" fg:w="353"/><text x="29.0815%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (352 samples, 0.33%)</title><rect x="28.8324%" y="661" width="0.3348%" height="15" fill="rgb(209,150,17)" fg:x="30315" fg:w="352"/><text x="29.0824%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (352 samples, 0.33%)</title><rect x="28.8324%" y="645" width="0.3348%" height="15" fill="rgb(234,202,34)" fg:x="30315" fg:w="352"/><text x="29.0824%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (30 samples, 0.03%)</title><rect x="29.1672%" y="613" width="0.0285%" height="15" fill="rgb(253,148,53)" fg:x="30667" fg:w="30"/><text x="29.4172%" y="623.50"></text></g><g><title>syscall (30 samples, 0.03%)</title><rect x="29.1672%" y="597" width="0.0285%" height="15" fill="rgb(218,129,16)" fg:x="30667" fg:w="30"/><text x="29.4172%" y="607.50"></text></g><g><title>__GI___clone (386 samples, 0.37%)</title><rect x="28.8305%" y="997" width="0.3671%" height="15" fill="rgb(216,85,19)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="1007.50"></text></g><g><title>start_thread (386 samples, 0.37%)</title><rect x="28.8305%" y="981" width="0.3671%" height="15" fill="rgb(235,228,7)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (386 samples, 0.37%)</title><rect x="28.8305%" y="965" width="0.3671%" height="15" fill="rgb(245,175,0)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (386 samples, 0.37%)</title><rect x="28.8305%" y="949" width="0.3671%" height="15" fill="rgb(208,168,36)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (386 samples, 0.37%)</title><rect x="28.8305%" y="933" width="0.3671%" height="15" fill="rgb(246,171,24)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (386 samples, 0.37%)</title><rect x="28.8305%" y="917" width="0.3671%" height="15" fill="rgb(215,142,24)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (386 samples, 0.37%)</title><rect x="28.8305%" y="901" width="0.3671%" height="15" fill="rgb(250,187,7)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="911.50"></text></g><g><title>std::panic::catch_unwind (386 samples, 0.37%)</title><rect x="28.8305%" y="885" width="0.3671%" height="15" fill="rgb(228,66,33)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="895.50"></text></g><g><title>std::panicking::try (386 samples, 0.37%)</title><rect x="28.8305%" y="869" width="0.3671%" height="15" fill="rgb(234,215,21)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="879.50"></text></g><g><title>std::panicking::try::do_call (386 samples, 0.37%)</title><rect x="28.8305%" y="853" width="0.3671%" height="15" fill="rgb(222,191,20)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (386 samples, 0.37%)</title><rect x="28.8305%" y="837" width="0.3671%" height="15" fill="rgb(245,79,54)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (386 samples, 0.37%)</title><rect x="28.8305%" y="821" width="0.3671%" height="15" fill="rgb(240,10,37)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (386 samples, 0.37%)</title><rect x="28.8305%" y="805" width="0.3671%" height="15" fill="rgb(214,192,32)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (386 samples, 0.37%)</title><rect x="28.8305%" y="789" width="0.3671%" height="15" fill="rgb(209,36,54)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="799.50"></text></g><g><title>futures_lite::future::block_on (386 samples, 0.37%)</title><rect x="28.8305%" y="773" width="0.3671%" height="15" fill="rgb(220,10,11)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (386 samples, 0.37%)</title><rect x="28.8305%" y="757" width="0.3671%" height="15" fill="rgb(221,106,17)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (386 samples, 0.37%)</title><rect x="28.8305%" y="741" width="0.3671%" height="15" fill="rgb(251,142,44)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (386 samples, 0.37%)</title><rect x="28.8305%" y="725" width="0.3671%" height="15" fill="rgb(238,13,15)" fg:x="30313" fg:w="386"/><text x="29.0805%" y="735.50"></text></g><g><title>parking::Parker::park (32 samples, 0.03%)</title><rect x="29.1672%" y="709" width="0.0304%" height="15" fill="rgb(208,107,27)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="719.50"></text></g><g><title>parking::Inner::park (32 samples, 0.03%)</title><rect x="29.1672%" y="693" width="0.0304%" height="15" fill="rgb(205,136,37)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (32 samples, 0.03%)</title><rect x="29.1672%" y="677" width="0.0304%" height="15" fill="rgb(250,205,27)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (32 samples, 0.03%)</title><rect x="29.1672%" y="661" width="0.0304%" height="15" fill="rgb(210,80,43)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (32 samples, 0.03%)</title><rect x="29.1672%" y="645" width="0.0304%" height="15" fill="rgb(247,160,36)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (32 samples, 0.03%)</title><rect x="29.1672%" y="629" width="0.0304%" height="15" fill="rgb(234,13,49)" fg:x="30667" fg:w="32"/><text x="29.4172%" y="639.50"></text></g><g><title>TaskPool_(10) (421 samples, 0.40%)</title><rect x="28.7982%" y="1013" width="0.4004%" height="15" fill="rgb(234,122,0)" fg:x="30279" fg:w="421"/><text x="29.0482%" y="1023.50"></text></g><g><title>[[heap]] (11 samples, 0.01%)</title><rect x="29.1986%" y="997" width="0.0105%" height="15" fill="rgb(207,146,38)" fg:x="30700" fg:w="11"/><text x="29.4486%" y="1007.50"></text></g><g><title>[anon] (21 samples, 0.02%)</title><rect x="29.2091%" y="997" width="0.0200%" height="15" fill="rgb(207,177,25)" fg:x="30711" fg:w="21"/><text x="29.4591%" y="1007.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="29.2290%" y="997" width="0.0190%" height="15" fill="rgb(211,178,42)" fg:x="30732" fg:w="20"/><text x="29.4790%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="29.2481%" y="533" width="0.0162%" height="15" fill="rgb(230,69,54)" fg:x="30752" fg:w="17"/><text x="29.4981%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="29.2481%" y="629" width="0.0171%" height="15" fill="rgb(214,135,41)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (18 samples, 0.02%)</title><rect x="29.2481%" y="613" width="0.0171%" height="15" fill="rgb(237,67,25)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="29.2481%" y="597" width="0.0171%" height="15" fill="rgb(222,189,50)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (18 samples, 0.02%)</title><rect x="29.2481%" y="581" width="0.0171%" height="15" fill="rgb(245,148,34)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="29.2481%" y="565" width="0.0171%" height="15" fill="rgb(222,29,6)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="29.2481%" y="549" width="0.0171%" height="15" fill="rgb(221,189,43)" fg:x="30752" fg:w="18"/><text x="29.4981%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (16 samples, 0.02%)</title><rect x="29.2823%" y="421" width="0.0152%" height="15" fill="rgb(207,36,27)" fg:x="30788" fg:w="16"/><text x="29.5323%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (16 samples, 0.02%)</title><rect x="29.2823%" y="405" width="0.0152%" height="15" fill="rgb(217,90,24)" fg:x="30788" fg:w="16"/><text x="29.5323%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (16 samples, 0.02%)</title><rect x="29.2823%" y="389" width="0.0152%" height="15" fill="rgb(224,66,35)" fg:x="30788" fg:w="16"/><text x="29.5323%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (206 samples, 0.20%)</title><rect x="29.3004%" y="421" width="0.1959%" height="15" fill="rgb(221,13,50)" fg:x="30807" fg:w="206"/><text x="29.5504%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (206 samples, 0.20%)</title><rect x="29.3004%" y="405" width="0.1959%" height="15" fill="rgb(236,68,49)" fg:x="30807" fg:w="206"/><text x="29.5504%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (206 samples, 0.20%)</title><rect x="29.3004%" y="389" width="0.1959%" height="15" fill="rgb(229,146,28)" fg:x="30807" fg:w="206"/><text x="29.5504%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (53 samples, 0.05%)</title><rect x="29.4973%" y="373" width="0.0504%" height="15" fill="rgb(225,31,38)" fg:x="31014" fg:w="53"/><text x="29.7473%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (53 samples, 0.05%)</title><rect x="29.4973%" y="357" width="0.0504%" height="15" fill="rgb(250,208,3)" fg:x="31014" fg:w="53"/><text x="29.7473%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (17 samples, 0.02%)</title><rect x="29.5534%" y="373" width="0.0162%" height="15" fill="rgb(246,54,23)" fg:x="31073" fg:w="17"/><text x="29.8034%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (17 samples, 0.02%)</title><rect x="29.5534%" y="357" width="0.0162%" height="15" fill="rgb(243,76,11)" fg:x="31073" fg:w="17"/><text x="29.8034%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (313 samples, 0.30%)</title><rect x="29.2756%" y="533" width="0.2977%" height="15" fill="rgb(245,21,50)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (313 samples, 0.30%)</title><rect x="29.2756%" y="517" width="0.2977%" height="15" fill="rgb(228,9,43)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (313 samples, 0.30%)</title><rect x="29.2756%" y="501" width="0.2977%" height="15" fill="rgb(208,100,47)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (313 samples, 0.30%)</title><rect x="29.2756%" y="485" width="0.2977%" height="15" fill="rgb(232,26,8)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (313 samples, 0.30%)</title><rect x="29.2756%" y="469" width="0.2977%" height="15" fill="rgb(216,166,38)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (313 samples, 0.30%)</title><rect x="29.2756%" y="453" width="0.2977%" height="15" fill="rgb(251,202,51)" fg:x="30781" fg:w="313"/><text x="29.5256%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (306 samples, 0.29%)</title><rect x="29.2823%" y="437" width="0.2910%" height="15" fill="rgb(254,216,34)" fg:x="30788" fg:w="306"/><text x="29.5323%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (80 samples, 0.08%)</title><rect x="29.4973%" y="421" width="0.0761%" height="15" fill="rgb(251,32,27)" fg:x="31014" fg:w="80"/><text x="29.7473%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (80 samples, 0.08%)</title><rect x="29.4973%" y="405" width="0.0761%" height="15" fill="rgb(208,127,28)" fg:x="31014" fg:w="80"/><text x="29.7473%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (80 samples, 0.08%)</title><rect x="29.4973%" y="389" width="0.0761%" height="15" fill="rgb(224,137,22)" fg:x="31014" fg:w="80"/><text x="29.7473%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (11 samples, 0.01%)</title><rect x="29.5790%" y="437" width="0.0105%" height="15" fill="rgb(254,70,32)" fg:x="31100" fg:w="11"/><text x="29.8290%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (11 samples, 0.01%)</title><rect x="29.5790%" y="421" width="0.0105%" height="15" fill="rgb(229,75,37)" fg:x="31100" fg:w="11"/><text x="29.8290%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (15 samples, 0.01%)</title><rect x="29.5771%" y="469" width="0.0143%" height="15" fill="rgb(252,64,23)" fg:x="31098" fg:w="15"/><text x="29.8271%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (13 samples, 0.01%)</title><rect x="29.5790%" y="453" width="0.0124%" height="15" fill="rgb(232,162,48)" fg:x="31100" fg:w="13"/><text x="29.8290%" y="463.50"></text></g><g><title>alloc::vec::from_elem (17 samples, 0.02%)</title><rect x="29.6019%" y="421" width="0.0162%" height="15" fill="rgb(246,160,12)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (17 samples, 0.02%)</title><rect x="29.6019%" y="405" width="0.0162%" height="15" fill="rgb(247,166,0)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (17 samples, 0.02%)</title><rect x="29.6019%" y="389" width="0.0162%" height="15" fill="rgb(249,219,21)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="29.6019%" y="373" width="0.0162%" height="15" fill="rgb(205,209,3)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (17 samples, 0.02%)</title><rect x="29.6019%" y="357" width="0.0162%" height="15" fill="rgb(243,44,1)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="29.6019%" y="341" width="0.0162%" height="15" fill="rgb(206,159,16)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (17 samples, 0.02%)</title><rect x="29.6019%" y="325" width="0.0162%" height="15" fill="rgb(244,77,30)" fg:x="31124" fg:w="17"/><text x="29.8519%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (14 samples, 0.01%)</title><rect x="29.6047%" y="309" width="0.0133%" height="15" fill="rgb(218,69,12)" fg:x="31127" fg:w="14"/><text x="29.8547%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (77 samples, 0.07%)</title><rect x="29.5914%" y="437" width="0.0732%" height="15" fill="rgb(212,87,7)" fg:x="31113" fg:w="77"/><text x="29.8414%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (49 samples, 0.05%)</title><rect x="29.6180%" y="421" width="0.0466%" height="15" fill="rgb(245,114,25)" fg:x="31141" fg:w="49"/><text x="29.8680%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="29.6180%" y="405" width="0.0466%" height="15" fill="rgb(210,61,42)" fg:x="31141" fg:w="49"/><text x="29.8680%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="29.6237%" y="389" width="0.0409%" height="15" fill="rgb(211,52,33)" fg:x="31147" fg:w="43"/><text x="29.8737%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (104 samples, 0.10%)</title><rect x="29.5914%" y="453" width="0.0989%" height="15" fill="rgb(234,58,33)" fg:x="31113" fg:w="104"/><text x="29.8414%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (27 samples, 0.03%)</title><rect x="29.6646%" y="437" width="0.0257%" height="15" fill="rgb(220,115,36)" fg:x="31190" fg:w="27"/><text x="29.9146%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (25 samples, 0.02%)</title><rect x="29.6665%" y="421" width="0.0238%" height="15" fill="rgb(243,153,54)" fg:x="31192" fg:w="25"/><text x="29.9165%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (18 samples, 0.02%)</title><rect x="29.6732%" y="405" width="0.0171%" height="15" fill="rgb(251,47,18)" fg:x="31199" fg:w="18"/><text x="29.9232%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (18 samples, 0.02%)</title><rect x="29.6732%" y="389" width="0.0171%" height="15" fill="rgb(242,102,42)" fg:x="31199" fg:w="18"/><text x="29.9232%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (18 samples, 0.02%)</title><rect x="29.6732%" y="373" width="0.0171%" height="15" fill="rgb(234,31,38)" fg:x="31199" fg:w="18"/><text x="29.9232%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (126 samples, 0.12%)</title><rect x="29.5733%" y="533" width="0.1198%" height="15" fill="rgb(221,117,51)" fg:x="31094" fg:w="126"/><text x="29.8233%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (125 samples, 0.12%)</title><rect x="29.5743%" y="517" width="0.1189%" height="15" fill="rgb(212,20,18)" fg:x="31095" fg:w="125"/><text x="29.8243%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (125 samples, 0.12%)</title><rect x="29.5743%" y="501" width="0.1189%" height="15" fill="rgb(245,133,36)" fg:x="31095" fg:w="125"/><text x="29.8243%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (125 samples, 0.12%)</title><rect x="29.5743%" y="485" width="0.1189%" height="15" fill="rgb(212,6,19)" fg:x="31095" fg:w="125"/><text x="29.8243%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (107 samples, 0.10%)</title><rect x="29.5914%" y="469" width="0.1018%" height="15" fill="rgb(218,1,36)" fg:x="31113" fg:w="107"/><text x="29.8414%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (16 samples, 0.02%)</title><rect x="29.6970%" y="453" width="0.0152%" height="15" fill="rgb(246,84,54)" fg:x="31224" fg:w="16"/><text x="29.9470%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (16 samples, 0.02%)</title><rect x="29.6970%" y="437" width="0.0152%" height="15" fill="rgb(242,110,6)" fg:x="31224" fg:w="16"/><text x="29.9470%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (14 samples, 0.01%)</title><rect x="29.6989%" y="421" width="0.0133%" height="15" fill="rgb(214,47,5)" fg:x="31226" fg:w="14"/><text x="29.9489%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (14 samples, 0.01%)</title><rect x="29.6989%" y="405" width="0.0133%" height="15" fill="rgb(218,159,25)" fg:x="31226" fg:w="14"/><text x="29.9489%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (14 samples, 0.01%)</title><rect x="29.6989%" y="389" width="0.0133%" height="15" fill="rgb(215,211,28)" fg:x="31226" fg:w="14"/><text x="29.9489%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (12 samples, 0.01%)</title><rect x="29.7008%" y="373" width="0.0114%" height="15" fill="rgb(238,59,32)" fg:x="31228" fg:w="12"/><text x="29.9508%" y="383.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (21 samples, 0.02%)</title><rect x="29.6970%" y="469" width="0.0200%" height="15" fill="rgb(226,82,3)" fg:x="31224" fg:w="21"/><text x="29.9470%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (36 samples, 0.03%)</title><rect x="29.6932%" y="533" width="0.0342%" height="15" fill="rgb(240,164,32)" fg:x="31220" fg:w="36"/><text x="29.9432%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (36 samples, 0.03%)</title><rect x="29.6932%" y="517" width="0.0342%" height="15" fill="rgb(232,46,7)" fg:x="31220" fg:w="36"/><text x="29.9432%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.03%)</title><rect x="29.6932%" y="501" width="0.0342%" height="15" fill="rgb(229,129,53)" fg:x="31220" fg:w="36"/><text x="29.9432%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (36 samples, 0.03%)</title><rect x="29.6932%" y="485" width="0.0342%" height="15" fill="rgb(234,188,29)" fg:x="31220" fg:w="36"/><text x="29.9432%" y="495.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (11 samples, 0.01%)</title><rect x="29.7170%" y="469" width="0.0105%" height="15" fill="rgb(246,141,4)" fg:x="31245" fg:w="11"/><text x="29.9670%" y="479.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (14 samples, 0.01%)</title><rect x="29.7493%" y="389" width="0.0133%" height="15" fill="rgb(229,23,39)" fg:x="31279" fg:w="14"/><text x="29.9993%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (13 samples, 0.01%)</title><rect x="29.7502%" y="373" width="0.0124%" height="15" fill="rgb(206,12,3)" fg:x="31280" fg:w="13"/><text x="30.0002%" y="383.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (18 samples, 0.02%)</title><rect x="29.7474%" y="421" width="0.0171%" height="15" fill="rgb(252,226,20)" fg:x="31277" fg:w="18"/><text x="29.9974%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (18 samples, 0.02%)</title><rect x="29.7474%" y="405" width="0.0171%" height="15" fill="rgb(216,123,35)" fg:x="31277" fg:w="18"/><text x="29.9974%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (43 samples, 0.04%)</title><rect x="29.7274%" y="533" width="0.0409%" height="15" fill="rgb(212,68,40)" fg:x="31256" fg:w="43"/><text x="29.9774%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (43 samples, 0.04%)</title><rect x="29.7274%" y="517" width="0.0409%" height="15" fill="rgb(254,125,32)" fg:x="31256" fg:w="43"/><text x="29.9774%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 0.04%)</title><rect x="29.7274%" y="501" width="0.0409%" height="15" fill="rgb(253,97,22)" fg:x="31256" fg:w="43"/><text x="29.9774%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.04%)</title><rect x="29.7274%" y="485" width="0.0409%" height="15" fill="rgb(241,101,14)" fg:x="31256" fg:w="43"/><text x="29.9774%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (42 samples, 0.04%)</title><rect x="29.7284%" y="469" width="0.0399%" height="15" fill="rgb(238,103,29)" fg:x="31257" fg:w="42"/><text x="29.9784%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (25 samples, 0.02%)</title><rect x="29.7445%" y="453" width="0.0238%" height="15" fill="rgb(233,195,47)" fg:x="31274" fg:w="25"/><text x="29.9945%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (25 samples, 0.02%)</title><rect x="29.7445%" y="437" width="0.0238%" height="15" fill="rgb(246,218,30)" fg:x="31274" fg:w="25"/><text x="29.9945%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (532 samples, 0.51%)</title><rect x="29.2652%" y="613" width="0.5060%" height="15" fill="rgb(219,145,47)" fg:x="30770" fg:w="532"/><text x="29.5152%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (531 samples, 0.51%)</title><rect x="29.2661%" y="597" width="0.5050%" height="15" fill="rgb(243,12,26)" fg:x="30771" fg:w="531"/><text x="29.5161%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (531 samples, 0.51%)</title><rect x="29.2661%" y="581" width="0.5050%" height="15" fill="rgb(214,87,16)" fg:x="30771" fg:w="531"/><text x="29.5161%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (523 samples, 0.50%)</title><rect x="29.2737%" y="565" width="0.4974%" height="15" fill="rgb(208,99,42)" fg:x="30779" fg:w="523"/><text x="29.5237%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (521 samples, 0.50%)</title><rect x="29.2756%" y="549" width="0.4955%" height="15" fill="rgb(253,99,2)" fg:x="30781" fg:w="521"/><text x="29.5256%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (533 samples, 0.51%)</title><rect x="29.2652%" y="629" width="0.5069%" height="15" fill="rgb(220,168,23)" fg:x="30770" fg:w="533"/><text x="29.5152%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (552 samples, 0.53%)</title><rect x="29.2481%" y="709" width="0.5250%" height="15" fill="rgb(242,38,24)" fg:x="30752" fg:w="552"/><text x="29.4981%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (552 samples, 0.53%)</title><rect x="29.2481%" y="693" width="0.5250%" height="15" fill="rgb(225,182,9)" fg:x="30752" fg:w="552"/><text x="29.4981%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (552 samples, 0.53%)</title><rect x="29.2481%" y="677" width="0.5250%" height="15" fill="rgb(243,178,37)" fg:x="30752" fg:w="552"/><text x="29.4981%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (552 samples, 0.53%)</title><rect x="29.2481%" y="661" width="0.5250%" height="15" fill="rgb(232,139,19)" fg:x="30752" fg:w="552"/><text x="29.4981%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (552 samples, 0.53%)</title><rect x="29.2481%" y="645" width="0.5250%" height="15" fill="rgb(225,201,24)" fg:x="30752" fg:w="552"/><text x="29.4981%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (35 samples, 0.03%)</title><rect x="29.7759%" y="613" width="0.0333%" height="15" fill="rgb(221,47,46)" fg:x="31307" fg:w="35"/><text x="30.0259%" y="623.50"></text></g><g><title>syscall (31 samples, 0.03%)</title><rect x="29.7797%" y="597" width="0.0295%" height="15" fill="rgb(249,23,13)" fg:x="31311" fg:w="31"/><text x="30.0297%" y="607.50"></text></g><g><title>__GI___clone (593 samples, 0.56%)</title><rect x="29.2481%" y="997" width="0.5640%" height="15" fill="rgb(219,9,5)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="1007.50"></text></g><g><title>start_thread (593 samples, 0.56%)</title><rect x="29.2481%" y="981" width="0.5640%" height="15" fill="rgb(254,171,16)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (593 samples, 0.56%)</title><rect x="29.2481%" y="965" width="0.5640%" height="15" fill="rgb(230,171,20)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (593 samples, 0.56%)</title><rect x="29.2481%" y="949" width="0.5640%" height="15" fill="rgb(210,71,41)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (593 samples, 0.56%)</title><rect x="29.2481%" y="933" width="0.5640%" height="15" fill="rgb(206,173,20)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (593 samples, 0.56%)</title><rect x="29.2481%" y="917" width="0.5640%" height="15" fill="rgb(233,88,34)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (593 samples, 0.56%)</title><rect x="29.2481%" y="901" width="0.5640%" height="15" fill="rgb(223,209,46)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="911.50"></text></g><g><title>std::panic::catch_unwind (593 samples, 0.56%)</title><rect x="29.2481%" y="885" width="0.5640%" height="15" fill="rgb(250,43,18)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="895.50"></text></g><g><title>std::panicking::try (593 samples, 0.56%)</title><rect x="29.2481%" y="869" width="0.5640%" height="15" fill="rgb(208,13,10)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="879.50"></text></g><g><title>std::panicking::try::do_call (593 samples, 0.56%)</title><rect x="29.2481%" y="853" width="0.5640%" height="15" fill="rgb(212,200,36)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (593 samples, 0.56%)</title><rect x="29.2481%" y="837" width="0.5640%" height="15" fill="rgb(225,90,30)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (593 samples, 0.56%)</title><rect x="29.2481%" y="821" width="0.5640%" height="15" fill="rgb(236,182,39)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (593 samples, 0.56%)</title><rect x="29.2481%" y="805" width="0.5640%" height="15" fill="rgb(212,144,35)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (593 samples, 0.56%)</title><rect x="29.2481%" y="789" width="0.5640%" height="15" fill="rgb(228,63,44)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="799.50"></text></g><g><title>futures_lite::future::block_on (593 samples, 0.56%)</title><rect x="29.2481%" y="773" width="0.5640%" height="15" fill="rgb(228,109,6)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (593 samples, 0.56%)</title><rect x="29.2481%" y="757" width="0.5640%" height="15" fill="rgb(238,117,24)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (593 samples, 0.56%)</title><rect x="29.2481%" y="741" width="0.5640%" height="15" fill="rgb(242,26,26)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (593 samples, 0.56%)</title><rect x="29.2481%" y="725" width="0.5640%" height="15" fill="rgb(221,92,48)" fg:x="30752" fg:w="593"/><text x="29.4981%" y="735.50"></text></g><g><title>parking::Parker::park (41 samples, 0.04%)</title><rect x="29.7731%" y="709" width="0.0390%" height="15" fill="rgb(209,209,32)" fg:x="31304" fg:w="41"/><text x="30.0231%" y="719.50"></text></g><g><title>parking::Inner::park (41 samples, 0.04%)</title><rect x="29.7731%" y="693" width="0.0390%" height="15" fill="rgb(221,70,22)" fg:x="31304" fg:w="41"/><text x="30.0231%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (40 samples, 0.04%)</title><rect x="29.7740%" y="677" width="0.0380%" height="15" fill="rgb(248,145,5)" fg:x="31305" fg:w="40"/><text x="30.0240%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (39 samples, 0.04%)</title><rect x="29.7750%" y="661" width="0.0371%" height="15" fill="rgb(226,116,26)" fg:x="31306" fg:w="39"/><text x="30.0250%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (39 samples, 0.04%)</title><rect x="29.7750%" y="645" width="0.0371%" height="15" fill="rgb(244,5,17)" fg:x="31306" fg:w="39"/><text x="30.0250%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (39 samples, 0.04%)</title><rect x="29.7750%" y="629" width="0.0371%" height="15" fill="rgb(252,159,33)" fg:x="31306" fg:w="39"/><text x="30.0250%" y="639.50"></text></g><g><title>TaskPool_(11) (650 samples, 0.62%)</title><rect x="29.1986%" y="1013" width="0.6182%" height="15" fill="rgb(206,71,0)" fg:x="30700" fg:w="650"/><text x="29.4486%" y="1023.50"></text></g><g><title>[anon] (15 samples, 0.01%)</title><rect x="29.8339%" y="997" width="0.0143%" height="15" fill="rgb(233,118,54)" fg:x="31368" fg:w="15"/><text x="30.0839%" y="1007.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="29.8482%" y="997" width="0.0105%" height="15" fill="rgb(234,83,48)" fg:x="31383" fg:w="11"/><text x="30.0982%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="29.8663%" y="533" width="0.0105%" height="15" fill="rgb(228,3,54)" fg:x="31402" fg:w="11"/><text x="30.1163%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="29.8663%" y="597" width="0.0114%" height="15" fill="rgb(226,155,13)" fg:x="31402" fg:w="12"/><text x="30.1163%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (12 samples, 0.01%)</title><rect x="29.8663%" y="581" width="0.0114%" height="15" fill="rgb(241,28,37)" fg:x="31402" fg:w="12"/><text x="30.1163%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="29.8663%" y="565" width="0.0114%" height="15" fill="rgb(233,93,10)" fg:x="31402" fg:w="12"/><text x="30.1163%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="29.8663%" y="549" width="0.0114%" height="15" fill="rgb(225,113,19)" fg:x="31402" fg:w="12"/><text x="30.1163%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="29.8634%" y="629" width="0.0152%" height="15" fill="rgb(241,2,18)" fg:x="31399" fg:w="16"/><text x="30.1134%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (15 samples, 0.01%)</title><rect x="29.8644%" y="613" width="0.0143%" height="15" fill="rgb(228,207,21)" fg:x="31400" fg:w="15"/><text x="30.1144%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (95 samples, 0.09%)</title><rect x="29.9005%" y="421" width="0.0904%" height="15" fill="rgb(213,211,35)" fg:x="31438" fg:w="95"/><text x="30.1505%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (95 samples, 0.09%)</title><rect x="29.9005%" y="405" width="0.0904%" height="15" fill="rgb(209,83,10)" fg:x="31438" fg:w="95"/><text x="30.1505%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (95 samples, 0.09%)</title><rect x="29.9005%" y="389" width="0.0904%" height="15" fill="rgb(209,164,1)" fg:x="31438" fg:w="95"/><text x="30.1505%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (26 samples, 0.02%)</title><rect x="29.9928%" y="373" width="0.0247%" height="15" fill="rgb(213,184,43)" fg:x="31535" fg:w="26"/><text x="30.2428%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (26 samples, 0.02%)</title><rect x="29.9928%" y="357" width="0.0247%" height="15" fill="rgb(231,61,34)" fg:x="31535" fg:w="26"/><text x="30.2428%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (11 samples, 0.01%)</title><rect x="30.0204%" y="373" width="0.0105%" height="15" fill="rgb(235,75,3)" fg:x="31564" fg:w="11"/><text x="30.2704%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (149 samples, 0.14%)</title><rect x="29.8910%" y="533" width="0.1417%" height="15" fill="rgb(220,106,47)" fg:x="31428" fg:w="149"/><text x="30.1410%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (149 samples, 0.14%)</title><rect x="29.8910%" y="517" width="0.1417%" height="15" fill="rgb(210,196,33)" fg:x="31428" fg:w="149"/><text x="30.1410%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (149 samples, 0.14%)</title><rect x="29.8910%" y="501" width="0.1417%" height="15" fill="rgb(229,154,42)" fg:x="31428" fg:w="149"/><text x="30.1410%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (149 samples, 0.14%)</title><rect x="29.8910%" y="485" width="0.1417%" height="15" fill="rgb(228,114,26)" fg:x="31428" fg:w="149"/><text x="30.1410%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (149 samples, 0.14%)</title><rect x="29.8910%" y="469" width="0.1417%" height="15" fill="rgb(208,144,1)" fg:x="31428" fg:w="149"/><text x="30.1410%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (148 samples, 0.14%)</title><rect x="29.8920%" y="453" width="0.1408%" height="15" fill="rgb(239,112,37)" fg:x="31429" fg:w="148"/><text x="30.1420%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (147 samples, 0.14%)</title><rect x="29.8929%" y="437" width="0.1398%" height="15" fill="rgb(210,96,50)" fg:x="31430" fg:w="147"/><text x="30.1429%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (42 samples, 0.04%)</title><rect x="29.9928%" y="421" width="0.0399%" height="15" fill="rgb(222,178,2)" fg:x="31535" fg:w="42"/><text x="30.2428%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (42 samples, 0.04%)</title><rect x="29.9928%" y="405" width="0.0399%" height="15" fill="rgb(226,74,18)" fg:x="31535" fg:w="42"/><text x="30.2428%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (42 samples, 0.04%)</title><rect x="29.9928%" y="389" width="0.0399%" height="15" fill="rgb(225,67,54)" fg:x="31535" fg:w="42"/><text x="30.2428%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (71 samples, 0.07%)</title><rect x="30.0365%" y="437" width="0.0675%" height="15" fill="rgb(251,92,32)" fg:x="31581" fg:w="71"/><text x="30.2865%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (56 samples, 0.05%)</title><rect x="30.0508%" y="421" width="0.0533%" height="15" fill="rgb(228,149,22)" fg:x="31596" fg:w="56"/><text x="30.3008%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.05%)</title><rect x="30.0508%" y="405" width="0.0533%" height="15" fill="rgb(243,54,13)" fg:x="31596" fg:w="56"/><text x="30.3008%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="30.0536%" y="389" width="0.0504%" height="15" fill="rgb(243,180,28)" fg:x="31599" fg:w="53"/><text x="30.3036%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (20 samples, 0.02%)</title><rect x="30.1040%" y="437" width="0.0190%" height="15" fill="rgb(208,167,24)" fg:x="31652" fg:w="20"/><text x="30.3540%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (20 samples, 0.02%)</title><rect x="30.1040%" y="421" width="0.0190%" height="15" fill="rgb(245,73,45)" fg:x="31652" fg:w="20"/><text x="30.3540%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (11 samples, 0.01%)</title><rect x="30.1126%" y="405" width="0.0105%" height="15" fill="rgb(237,203,48)" fg:x="31661" fg:w="11"/><text x="30.3626%" y="415.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (92 samples, 0.09%)</title><rect x="30.0365%" y="453" width="0.0875%" height="15" fill="rgb(211,197,16)" fg:x="31581" fg:w="92"/><text x="30.2865%" y="463.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (99 samples, 0.09%)</title><rect x="30.0365%" y="469" width="0.0942%" height="15" fill="rgb(243,99,51)" fg:x="31581" fg:w="99"/><text x="30.2865%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (104 samples, 0.10%)</title><rect x="30.0327%" y="533" width="0.0989%" height="15" fill="rgb(215,123,29)" fg:x="31577" fg:w="104"/><text x="30.2827%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (103 samples, 0.10%)</title><rect x="30.0337%" y="517" width="0.0980%" height="15" fill="rgb(239,186,37)" fg:x="31578" fg:w="103"/><text x="30.2837%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (103 samples, 0.10%)</title><rect x="30.0337%" y="501" width="0.0980%" height="15" fill="rgb(252,136,39)" fg:x="31578" fg:w="103"/><text x="30.2837%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (103 samples, 0.10%)</title><rect x="30.0337%" y="485" width="0.0980%" height="15" fill="rgb(223,213,32)" fg:x="31578" fg:w="103"/><text x="30.2837%" y="495.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (26 samples, 0.02%)</title><rect x="30.1345%" y="453" width="0.0247%" height="15" fill="rgb(233,115,5)" fg:x="31684" fg:w="26"/><text x="30.3845%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (26 samples, 0.02%)</title><rect x="30.1345%" y="437" width="0.0247%" height="15" fill="rgb(207,226,44)" fg:x="31684" fg:w="26"/><text x="30.3845%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (20 samples, 0.02%)</title><rect x="30.1402%" y="421" width="0.0190%" height="15" fill="rgb(208,126,0)" fg:x="31690" fg:w="20"/><text x="30.3902%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (20 samples, 0.02%)</title><rect x="30.1402%" y="405" width="0.0190%" height="15" fill="rgb(244,66,21)" fg:x="31690" fg:w="20"/><text x="30.3902%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (20 samples, 0.02%)</title><rect x="30.1402%" y="389" width="0.0190%" height="15" fill="rgb(222,97,12)" fg:x="31690" fg:w="20"/><text x="30.3902%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (16 samples, 0.02%)</title><rect x="30.1440%" y="373" width="0.0152%" height="15" fill="rgb(219,213,19)" fg:x="31694" fg:w="16"/><text x="30.3940%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (15 samples, 0.01%)</title><rect x="30.1449%" y="357" width="0.0143%" height="15" fill="rgb(252,169,30)" fg:x="31695" fg:w="15"/><text x="30.3949%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (15 samples, 0.01%)</title><rect x="30.1449%" y="341" width="0.0143%" height="15" fill="rgb(206,32,51)" fg:x="31695" fg:w="15"/><text x="30.3949%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (29 samples, 0.03%)</title><rect x="30.1345%" y="469" width="0.0276%" height="15" fill="rgb(250,172,42)" fg:x="31684" fg:w="29"/><text x="30.3845%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (34 samples, 0.03%)</title><rect x="30.1316%" y="533" width="0.0323%" height="15" fill="rgb(209,34,43)" fg:x="31681" fg:w="34"/><text x="30.3816%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (33 samples, 0.03%)</title><rect x="30.1326%" y="517" width="0.0314%" height="15" fill="rgb(223,11,35)" fg:x="31682" fg:w="33"/><text x="30.3826%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.03%)</title><rect x="30.1326%" y="501" width="0.0314%" height="15" fill="rgb(251,219,26)" fg:x="31682" fg:w="33"/><text x="30.3826%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.03%)</title><rect x="30.1326%" y="485" width="0.0314%" height="15" fill="rgb(231,119,3)" fg:x="31682" fg:w="33"/><text x="30.3826%" y="495.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (14 samples, 0.01%)</title><rect x="30.1849%" y="389" width="0.0133%" height="15" fill="rgb(216,97,11)" fg:x="31737" fg:w="14"/><text x="30.4349%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (13 samples, 0.01%)</title><rect x="30.1858%" y="373" width="0.0124%" height="15" fill="rgb(223,59,9)" fg:x="31738" fg:w="13"/><text x="30.4358%" y="383.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (17 samples, 0.02%)</title><rect x="30.1849%" y="421" width="0.0162%" height="15" fill="rgb(233,93,31)" fg:x="31737" fg:w="17"/><text x="30.4349%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (17 samples, 0.02%)</title><rect x="30.1849%" y="405" width="0.0162%" height="15" fill="rgb(239,81,33)" fg:x="31737" fg:w="17"/><text x="30.4349%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (42 samples, 0.04%)</title><rect x="30.1640%" y="533" width="0.0399%" height="15" fill="rgb(213,120,34)" fg:x="31715" fg:w="42"/><text x="30.4140%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (42 samples, 0.04%)</title><rect x="30.1640%" y="517" width="0.0399%" height="15" fill="rgb(243,49,53)" fg:x="31715" fg:w="42"/><text x="30.4140%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (42 samples, 0.04%)</title><rect x="30.1640%" y="501" width="0.0399%" height="15" fill="rgb(247,216,33)" fg:x="31715" fg:w="42"/><text x="30.4140%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (42 samples, 0.04%)</title><rect x="30.1640%" y="485" width="0.0399%" height="15" fill="rgb(226,26,14)" fg:x="31715" fg:w="42"/><text x="30.4140%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (41 samples, 0.04%)</title><rect x="30.1649%" y="469" width="0.0390%" height="15" fill="rgb(215,49,53)" fg:x="31716" fg:w="41"/><text x="30.4149%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (27 samples, 0.03%)</title><rect x="30.1782%" y="453" width="0.0257%" height="15" fill="rgb(245,162,40)" fg:x="31730" fg:w="27"/><text x="30.4282%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (27 samples, 0.03%)</title><rect x="30.1782%" y="437" width="0.0257%" height="15" fill="rgb(229,68,17)" fg:x="31730" fg:w="27"/><text x="30.4282%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (346 samples, 0.33%)</title><rect x="29.8786%" y="629" width="0.3291%" height="15" fill="rgb(213,182,10)" fg:x="31415" fg:w="346"/><text x="30.1286%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (346 samples, 0.33%)</title><rect x="29.8786%" y="613" width="0.3291%" height="15" fill="rgb(245,125,30)" fg:x="31415" fg:w="346"/><text x="30.1286%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (346 samples, 0.33%)</title><rect x="29.8786%" y="597" width="0.3291%" height="15" fill="rgb(232,202,2)" fg:x="31415" fg:w="346"/><text x="30.1286%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (346 samples, 0.33%)</title><rect x="29.8786%" y="581" width="0.3291%" height="15" fill="rgb(237,140,51)" fg:x="31415" fg:w="346"/><text x="30.1286%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (339 samples, 0.32%)</title><rect x="29.8853%" y="565" width="0.3224%" height="15" fill="rgb(236,157,25)" fg:x="31422" fg:w="339"/><text x="30.1353%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (334 samples, 0.32%)</title><rect x="29.8901%" y="549" width="0.3177%" height="15" fill="rgb(219,209,0)" fg:x="31427" fg:w="334"/><text x="30.1401%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (365 samples, 0.35%)</title><rect x="29.8615%" y="677" width="0.3471%" height="15" fill="rgb(240,116,54)" fg:x="31397" fg:w="365"/><text x="30.1115%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (363 samples, 0.35%)</title><rect x="29.8634%" y="661" width="0.3452%" height="15" fill="rgb(216,10,36)" fg:x="31399" fg:w="363"/><text x="30.1134%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (363 samples, 0.35%)</title><rect x="29.8634%" y="645" width="0.3452%" height="15" fill="rgb(222,72,44)" fg:x="31399" fg:w="363"/><text x="30.1134%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (370 samples, 0.35%)</title><rect x="29.8615%" y="709" width="0.3519%" height="15" fill="rgb(232,159,9)" fg:x="31397" fg:w="370"/><text x="30.1115%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (370 samples, 0.35%)</title><rect x="29.8615%" y="693" width="0.3519%" height="15" fill="rgb(210,39,32)" fg:x="31397" fg:w="370"/><text x="30.1115%" y="703.50"></text></g><g><title>TaskPool_(3) (451 samples, 0.43%)</title><rect x="29.8225%" y="1013" width="0.4289%" height="15" fill="rgb(216,194,45)" fg:x="31356" fg:w="451"/><text x="30.0725%" y="1023.50"></text></g><g><title>__GI___clone (413 samples, 0.39%)</title><rect x="29.8587%" y="997" width="0.3928%" height="15" fill="rgb(218,18,35)" fg:x="31394" fg:w="413"/><text x="30.1087%" y="1007.50"></text></g><g><title>start_thread (413 samples, 0.39%)</title><rect x="29.8587%" y="981" width="0.3928%" height="15" fill="rgb(207,83,51)" fg:x="31394" fg:w="413"/><text x="30.1087%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (412 samples, 0.39%)</title><rect x="29.8596%" y="965" width="0.3919%" height="15" fill="rgb(225,63,43)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (412 samples, 0.39%)</title><rect x="29.8596%" y="949" width="0.3919%" height="15" fill="rgb(207,57,36)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (412 samples, 0.39%)</title><rect x="29.8596%" y="933" width="0.3919%" height="15" fill="rgb(216,99,33)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (412 samples, 0.39%)</title><rect x="29.8596%" y="917" width="0.3919%" height="15" fill="rgb(225,42,16)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (412 samples, 0.39%)</title><rect x="29.8596%" y="901" width="0.3919%" height="15" fill="rgb(220,201,45)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="911.50"></text></g><g><title>std::panic::catch_unwind (412 samples, 0.39%)</title><rect x="29.8596%" y="885" width="0.3919%" height="15" fill="rgb(225,33,4)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="895.50"></text></g><g><title>std::panicking::try (412 samples, 0.39%)</title><rect x="29.8596%" y="869" width="0.3919%" height="15" fill="rgb(224,33,50)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="879.50"></text></g><g><title>std::panicking::try::do_call (412 samples, 0.39%)</title><rect x="29.8596%" y="853" width="0.3919%" height="15" fill="rgb(246,198,51)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (412 samples, 0.39%)</title><rect x="29.8596%" y="837" width="0.3919%" height="15" fill="rgb(205,22,4)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (412 samples, 0.39%)</title><rect x="29.8596%" y="821" width="0.3919%" height="15" fill="rgb(206,3,8)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (412 samples, 0.39%)</title><rect x="29.8596%" y="805" width="0.3919%" height="15" fill="rgb(251,23,15)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (412 samples, 0.39%)</title><rect x="29.8596%" y="789" width="0.3919%" height="15" fill="rgb(252,88,28)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="799.50"></text></g><g><title>futures_lite::future::block_on (412 samples, 0.39%)</title><rect x="29.8596%" y="773" width="0.3919%" height="15" fill="rgb(212,127,14)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (412 samples, 0.39%)</title><rect x="29.8596%" y="757" width="0.3919%" height="15" fill="rgb(247,145,37)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (412 samples, 0.39%)</title><rect x="29.8596%" y="741" width="0.3919%" height="15" fill="rgb(209,117,53)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (412 samples, 0.39%)</title><rect x="29.8596%" y="725" width="0.3919%" height="15" fill="rgb(212,90,42)" fg:x="31395" fg:w="412"/><text x="30.1096%" y="735.50"></text></g><g><title>parking::Parker::park (40 samples, 0.04%)</title><rect x="30.2134%" y="709" width="0.0380%" height="15" fill="rgb(218,164,37)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="719.50"></text></g><g><title>parking::Inner::park (40 samples, 0.04%)</title><rect x="30.2134%" y="693" width="0.0380%" height="15" fill="rgb(246,65,34)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (40 samples, 0.04%)</title><rect x="30.2134%" y="677" width="0.0380%" height="15" fill="rgb(231,100,33)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (40 samples, 0.04%)</title><rect x="30.2134%" y="661" width="0.0380%" height="15" fill="rgb(228,126,14)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (40 samples, 0.04%)</title><rect x="30.2134%" y="645" width="0.0380%" height="15" fill="rgb(215,173,21)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (40 samples, 0.04%)</title><rect x="30.2134%" y="629" width="0.0380%" height="15" fill="rgb(210,6,40)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (40 samples, 0.04%)</title><rect x="30.2134%" y="613" width="0.0380%" height="15" fill="rgb(212,48,18)" fg:x="31767" fg:w="40"/><text x="30.4634%" y="623.50"></text></g><g><title>syscall (35 samples, 0.03%)</title><rect x="30.2182%" y="597" width="0.0333%" height="15" fill="rgb(230,214,11)" fg:x="31772" fg:w="35"/><text x="30.4682%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="30.2724%" y="629" width="0.0105%" height="15" fill="rgb(254,105,39)" fg:x="31829" fg:w="11"/><text x="30.5224%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (11 samples, 0.01%)</title><rect x="30.2724%" y="613" width="0.0105%" height="15" fill="rgb(245,158,5)" fg:x="31829" fg:w="11"/><text x="30.5224%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (11 samples, 0.01%)</title><rect x="30.2886%" y="421" width="0.0105%" height="15" fill="rgb(249,208,11)" fg:x="31846" fg:w="11"/><text x="30.5386%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (11 samples, 0.01%)</title><rect x="30.2886%" y="405" width="0.0105%" height="15" fill="rgb(210,39,28)" fg:x="31846" fg:w="11"/><text x="30.5386%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (11 samples, 0.01%)</title><rect x="30.2886%" y="389" width="0.0105%" height="15" fill="rgb(211,56,53)" fg:x="31846" fg:w="11"/><text x="30.5386%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (87 samples, 0.08%)</title><rect x="30.2990%" y="421" width="0.0827%" height="15" fill="rgb(226,201,30)" fg:x="31857" fg:w="87"/><text x="30.5490%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.08%)</title><rect x="30.2990%" y="405" width="0.0827%" height="15" fill="rgb(239,101,34)" fg:x="31857" fg:w="87"/><text x="30.5490%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (87 samples, 0.08%)</title><rect x="30.2990%" y="389" width="0.0827%" height="15" fill="rgb(226,209,5)" fg:x="31857" fg:w="87"/><text x="30.5490%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (28 samples, 0.03%)</title><rect x="30.3846%" y="373" width="0.0266%" height="15" fill="rgb(250,105,47)" fg:x="31947" fg:w="28"/><text x="30.6346%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (28 samples, 0.03%)</title><rect x="30.3846%" y="357" width="0.0266%" height="15" fill="rgb(230,72,3)" fg:x="31947" fg:w="28"/><text x="30.6346%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (13 samples, 0.01%)</title><rect x="30.4132%" y="373" width="0.0124%" height="15" fill="rgb(232,218,39)" fg:x="31977" fg:w="13"/><text x="30.6632%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (13 samples, 0.01%)</title><rect x="30.4132%" y="357" width="0.0124%" height="15" fill="rgb(248,166,6)" fg:x="31977" fg:w="13"/><text x="30.6632%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (150 samples, 0.14%)</title><rect x="30.2867%" y="533" width="0.1427%" height="15" fill="rgb(247,89,20)" fg:x="31844" fg:w="150"/><text x="30.5367%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (150 samples, 0.14%)</title><rect x="30.2867%" y="517" width="0.1427%" height="15" fill="rgb(248,130,54)" fg:x="31844" fg:w="150"/><text x="30.5367%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (150 samples, 0.14%)</title><rect x="30.2867%" y="501" width="0.1427%" height="15" fill="rgb(234,196,4)" fg:x="31844" fg:w="150"/><text x="30.5367%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (150 samples, 0.14%)</title><rect x="30.2867%" y="485" width="0.1427%" height="15" fill="rgb(250,143,31)" fg:x="31844" fg:w="150"/><text x="30.5367%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (150 samples, 0.14%)</title><rect x="30.2867%" y="469" width="0.1427%" height="15" fill="rgb(211,110,34)" fg:x="31844" fg:w="150"/><text x="30.5367%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (149 samples, 0.14%)</title><rect x="30.2876%" y="453" width="0.1417%" height="15" fill="rgb(215,124,48)" fg:x="31845" fg:w="149"/><text x="30.5376%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (148 samples, 0.14%)</title><rect x="30.2886%" y="437" width="0.1408%" height="15" fill="rgb(216,46,13)" fg:x="31846" fg:w="148"/><text x="30.5386%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (48 samples, 0.05%)</title><rect x="30.3837%" y="421" width="0.0457%" height="15" fill="rgb(205,184,25)" fg:x="31946" fg:w="48"/><text x="30.6337%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (48 samples, 0.05%)</title><rect x="30.3837%" y="405" width="0.0457%" height="15" fill="rgb(228,1,10)" fg:x="31946" fg:w="48"/><text x="30.6337%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (48 samples, 0.05%)</title><rect x="30.3837%" y="389" width="0.0457%" height="15" fill="rgb(213,116,27)" fg:x="31946" fg:w="48"/><text x="30.6337%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (41 samples, 0.04%)</title><rect x="30.4369%" y="437" width="0.0390%" height="15" fill="rgb(241,95,50)" fg:x="32002" fg:w="41"/><text x="30.6869%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.02%)</title><rect x="30.4522%" y="421" width="0.0238%" height="15" fill="rgb(238,48,32)" fg:x="32018" fg:w="25"/><text x="30.7022%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="30.4522%" y="405" width="0.0238%" height="15" fill="rgb(235,113,49)" fg:x="32018" fg:w="25"/><text x="30.7022%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="30.4560%" y="389" width="0.0200%" height="15" fill="rgb(205,127,43)" fg:x="32022" fg:w="21"/><text x="30.7060%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (48 samples, 0.05%)</title><rect x="30.4369%" y="453" width="0.0457%" height="15" fill="rgb(250,162,2)" fg:x="32002" fg:w="48"/><text x="30.6869%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (57 samples, 0.05%)</title><rect x="30.4293%" y="533" width="0.0542%" height="15" fill="rgb(220,13,41)" fg:x="31994" fg:w="57"/><text x="30.6793%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (56 samples, 0.05%)</title><rect x="30.4303%" y="517" width="0.0533%" height="15" fill="rgb(249,221,25)" fg:x="31995" fg:w="56"/><text x="30.6803%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (56 samples, 0.05%)</title><rect x="30.4303%" y="501" width="0.0533%" height="15" fill="rgb(215,208,19)" fg:x="31995" fg:w="56"/><text x="30.6803%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (56 samples, 0.05%)</title><rect x="30.4303%" y="485" width="0.0533%" height="15" fill="rgb(236,175,2)" fg:x="31995" fg:w="56"/><text x="30.6803%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (49 samples, 0.05%)</title><rect x="30.4369%" y="469" width="0.0466%" height="15" fill="rgb(241,52,2)" fg:x="32002" fg:w="49"/><text x="30.6869%" y="479.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (13 samples, 0.01%)</title><rect x="30.4845%" y="469" width="0.0124%" height="15" fill="rgb(248,140,14)" fg:x="32052" fg:w="13"/><text x="30.7345%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (13 samples, 0.01%)</title><rect x="30.4845%" y="453" width="0.0124%" height="15" fill="rgb(253,22,42)" fg:x="32052" fg:w="13"/><text x="30.7345%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (13 samples, 0.01%)</title><rect x="30.4845%" y="437" width="0.0124%" height="15" fill="rgb(234,61,47)" fg:x="32052" fg:w="13"/><text x="30.7345%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (12 samples, 0.01%)</title><rect x="30.4854%" y="421" width="0.0114%" height="15" fill="rgb(208,226,15)" fg:x="32053" fg:w="12"/><text x="30.7354%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.01%)</title><rect x="30.4854%" y="405" width="0.0114%" height="15" fill="rgb(217,221,4)" fg:x="32053" fg:w="12"/><text x="30.7354%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.01%)</title><rect x="30.4854%" y="389" width="0.0114%" height="15" fill="rgb(212,174,34)" fg:x="32053" fg:w="12"/><text x="30.7354%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (11 samples, 0.01%)</title><rect x="30.4864%" y="373" width="0.0105%" height="15" fill="rgb(253,83,4)" fg:x="32054" fg:w="11"/><text x="30.7364%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (16 samples, 0.02%)</title><rect x="30.4835%" y="533" width="0.0152%" height="15" fill="rgb(250,195,49)" fg:x="32051" fg:w="16"/><text x="30.7335%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (15 samples, 0.01%)</title><rect x="30.4845%" y="517" width="0.0143%" height="15" fill="rgb(241,192,25)" fg:x="32052" fg:w="15"/><text x="30.7345%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.01%)</title><rect x="30.4845%" y="501" width="0.0143%" height="15" fill="rgb(208,124,10)" fg:x="32052" fg:w="15"/><text x="30.7345%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.01%)</title><rect x="30.4845%" y="485" width="0.0143%" height="15" fill="rgb(222,33,0)" fg:x="32052" fg:w="15"/><text x="30.7345%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (23 samples, 0.02%)</title><rect x="30.4988%" y="533" width="0.0219%" height="15" fill="rgb(234,209,28)" fg:x="32067" fg:w="23"/><text x="30.7488%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (23 samples, 0.02%)</title><rect x="30.4988%" y="517" width="0.0219%" height="15" fill="rgb(224,11,23)" fg:x="32067" fg:w="23"/><text x="30.7488%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="30.4988%" y="501" width="0.0219%" height="15" fill="rgb(232,99,1)" fg:x="32067" fg:w="23"/><text x="30.7488%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 0.02%)</title><rect x="30.4988%" y="485" width="0.0219%" height="15" fill="rgb(237,95,45)" fg:x="32067" fg:w="23"/><text x="30.7488%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (23 samples, 0.02%)</title><rect x="30.4988%" y="469" width="0.0219%" height="15" fill="rgb(208,109,11)" fg:x="32067" fg:w="23"/><text x="30.7488%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (12 samples, 0.01%)</title><rect x="30.5092%" y="453" width="0.0114%" height="15" fill="rgb(216,190,48)" fg:x="32078" fg:w="12"/><text x="30.7592%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (12 samples, 0.01%)</title><rect x="30.5092%" y="437" width="0.0114%" height="15" fill="rgb(251,171,36)" fg:x="32078" fg:w="12"/><text x="30.7592%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (252 samples, 0.24%)</title><rect x="30.2829%" y="581" width="0.2397%" height="15" fill="rgb(230,62,22)" fg:x="31840" fg:w="252"/><text x="30.5329%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (250 samples, 0.24%)</title><rect x="30.2848%" y="565" width="0.2378%" height="15" fill="rgb(225,114,35)" fg:x="31842" fg:w="250"/><text x="30.5348%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (248 samples, 0.24%)</title><rect x="30.2867%" y="549" width="0.2359%" height="15" fill="rgb(215,118,42)" fg:x="31844" fg:w="248"/><text x="30.5367%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (253 samples, 0.24%)</title><rect x="30.2829%" y="629" width="0.2406%" height="15" fill="rgb(243,119,21)" fg:x="31840" fg:w="253"/><text x="30.5329%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (253 samples, 0.24%)</title><rect x="30.2829%" y="613" width="0.2406%" height="15" fill="rgb(252,177,53)" fg:x="31840" fg:w="253"/><text x="30.5329%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (253 samples, 0.24%)</title><rect x="30.2829%" y="597" width="0.2406%" height="15" fill="rgb(237,209,29)" fg:x="31840" fg:w="253"/><text x="30.5329%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (267 samples, 0.25%)</title><rect x="30.2705%" y="709" width="0.2539%" height="15" fill="rgb(212,65,23)" fg:x="31827" fg:w="267"/><text x="30.5205%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (267 samples, 0.25%)</title><rect x="30.2705%" y="693" width="0.2539%" height="15" fill="rgb(230,222,46)" fg:x="31827" fg:w="267"/><text x="30.5205%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (267 samples, 0.25%)</title><rect x="30.2705%" y="677" width="0.2539%" height="15" fill="rgb(215,135,32)" fg:x="31827" fg:w="267"/><text x="30.5205%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (265 samples, 0.25%)</title><rect x="30.2724%" y="661" width="0.2520%" height="15" fill="rgb(246,101,22)" fg:x="31829" fg:w="265"/><text x="30.5224%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (265 samples, 0.25%)</title><rect x="30.2724%" y="645" width="0.2520%" height="15" fill="rgb(206,107,13)" fg:x="31829" fg:w="265"/><text x="30.5224%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (36 samples, 0.03%)</title><rect x="30.5254%" y="613" width="0.0342%" height="15" fill="rgb(250,100,44)" fg:x="32095" fg:w="36"/><text x="30.7754%" y="623.50"></text></g><g><title>syscall (33 samples, 0.03%)</title><rect x="30.5282%" y="597" width="0.0314%" height="15" fill="rgb(231,147,38)" fg:x="32098" fg:w="33"/><text x="30.7782%" y="607.50"></text></g><g><title>__GI___clone (305 samples, 0.29%)</title><rect x="30.2705%" y="997" width="0.2901%" height="15" fill="rgb(229,8,40)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="1007.50"></text></g><g><title>start_thread (305 samples, 0.29%)</title><rect x="30.2705%" y="981" width="0.2901%" height="15" fill="rgb(221,135,30)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (305 samples, 0.29%)</title><rect x="30.2705%" y="965" width="0.2901%" height="15" fill="rgb(249,193,18)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (305 samples, 0.29%)</title><rect x="30.2705%" y="949" width="0.2901%" height="15" fill="rgb(209,133,39)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (305 samples, 0.29%)</title><rect x="30.2705%" y="933" width="0.2901%" height="15" fill="rgb(232,100,14)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (305 samples, 0.29%)</title><rect x="30.2705%" y="917" width="0.2901%" height="15" fill="rgb(224,185,1)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (305 samples, 0.29%)</title><rect x="30.2705%" y="901" width="0.2901%" height="15" fill="rgb(223,139,8)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="911.50"></text></g><g><title>std::panic::catch_unwind (305 samples, 0.29%)</title><rect x="30.2705%" y="885" width="0.2901%" height="15" fill="rgb(232,213,38)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="895.50"></text></g><g><title>std::panicking::try (305 samples, 0.29%)</title><rect x="30.2705%" y="869" width="0.2901%" height="15" fill="rgb(207,94,22)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="879.50"></text></g><g><title>std::panicking::try::do_call (305 samples, 0.29%)</title><rect x="30.2705%" y="853" width="0.2901%" height="15" fill="rgb(219,183,54)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (305 samples, 0.29%)</title><rect x="30.2705%" y="837" width="0.2901%" height="15" fill="rgb(216,185,54)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (305 samples, 0.29%)</title><rect x="30.2705%" y="821" width="0.2901%" height="15" fill="rgb(254,217,39)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (305 samples, 0.29%)</title><rect x="30.2705%" y="805" width="0.2901%" height="15" fill="rgb(240,178,23)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (305 samples, 0.29%)</title><rect x="30.2705%" y="789" width="0.2901%" height="15" fill="rgb(218,11,47)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="799.50"></text></g><g><title>futures_lite::future::block_on (305 samples, 0.29%)</title><rect x="30.2705%" y="773" width="0.2901%" height="15" fill="rgb(218,51,51)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (305 samples, 0.29%)</title><rect x="30.2705%" y="757" width="0.2901%" height="15" fill="rgb(238,126,27)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (305 samples, 0.29%)</title><rect x="30.2705%" y="741" width="0.2901%" height="15" fill="rgb(249,202,22)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (305 samples, 0.29%)</title><rect x="30.2705%" y="725" width="0.2901%" height="15" fill="rgb(254,195,49)" fg:x="31827" fg:w="305"/><text x="30.5205%" y="735.50"></text></g><g><title>parking::Parker::park (38 samples, 0.04%)</title><rect x="30.5244%" y="709" width="0.0361%" height="15" fill="rgb(208,123,14)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="719.50"></text></g><g><title>parking::Inner::park (38 samples, 0.04%)</title><rect x="30.5244%" y="693" width="0.0361%" height="15" fill="rgb(224,200,8)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (38 samples, 0.04%)</title><rect x="30.5244%" y="677" width="0.0361%" height="15" fill="rgb(217,61,36)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (38 samples, 0.04%)</title><rect x="30.5244%" y="661" width="0.0361%" height="15" fill="rgb(206,35,45)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (38 samples, 0.04%)</title><rect x="30.5244%" y="645" width="0.0361%" height="15" fill="rgb(217,65,33)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (38 samples, 0.04%)</title><rect x="30.5244%" y="629" width="0.0361%" height="15" fill="rgb(222,158,48)" fg:x="32094" fg:w="38"/><text x="30.7744%" y="639.50"></text></g><g><title>TaskPool_(4) (328 samples, 0.31%)</title><rect x="30.2515%" y="1013" width="0.3120%" height="15" fill="rgb(254,2,54)" fg:x="31807" fg:w="328"/><text x="30.5015%" y="1023.50"></text></g><g><title>[[heap]] (13 samples, 0.01%)</title><rect x="30.5634%" y="997" width="0.0124%" height="15" fill="rgb(250,143,38)" fg:x="32135" fg:w="13"/><text x="30.8134%" y="1007.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="30.5853%" y="997" width="0.0105%" height="15" fill="rgb(248,25,0)" fg:x="32158" fg:w="11"/><text x="30.8353%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="30.5977%" y="629" width="0.0114%" height="15" fill="rgb(206,152,27)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (12 samples, 0.01%)</title><rect x="30.5977%" y="613" width="0.0114%" height="15" fill="rgb(240,77,30)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="30.5977%" y="597" width="0.0114%" height="15" fill="rgb(231,5,3)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (12 samples, 0.01%)</title><rect x="30.5977%" y="581" width="0.0114%" height="15" fill="rgb(207,226,32)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="30.5977%" y="565" width="0.0114%" height="15" fill="rgb(222,207,47)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="30.5977%" y="549" width="0.0114%" height="15" fill="rgb(229,115,45)" fg:x="32171" fg:w="12"/><text x="30.8477%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (154 samples, 0.15%)</title><rect x="30.6281%" y="421" width="0.1465%" height="15" fill="rgb(224,191,6)" fg:x="32203" fg:w="154"/><text x="30.8781%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (154 samples, 0.15%)</title><rect x="30.6281%" y="405" width="0.1465%" height="15" fill="rgb(230,227,24)" fg:x="32203" fg:w="154"/><text x="30.8781%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (154 samples, 0.15%)</title><rect x="30.6281%" y="389" width="0.1465%" height="15" fill="rgb(228,80,19)" fg:x="32203" fg:w="154"/><text x="30.8781%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (47 samples, 0.04%)</title><rect x="30.7755%" y="373" width="0.0447%" height="15" fill="rgb(247,229,0)" fg:x="32358" fg:w="47"/><text x="31.0255%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (47 samples, 0.04%)</title><rect x="30.7755%" y="357" width="0.0447%" height="15" fill="rgb(237,194,15)" fg:x="32358" fg:w="47"/><text x="31.0255%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (13 samples, 0.01%)</title><rect x="30.8240%" y="373" width="0.0124%" height="15" fill="rgb(219,203,20)" fg:x="32409" fg:w="13"/><text x="31.0740%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (12 samples, 0.01%)</title><rect x="30.8250%" y="357" width="0.0114%" height="15" fill="rgb(234,128,8)" fg:x="32410" fg:w="12"/><text x="31.0750%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (237 samples, 0.23%)</title><rect x="30.6138%" y="533" width="0.2254%" height="15" fill="rgb(248,202,8)" fg:x="32188" fg:w="237"/><text x="30.8638%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (237 samples, 0.23%)</title><rect x="30.6138%" y="517" width="0.2254%" height="15" fill="rgb(206,104,37)" fg:x="32188" fg:w="237"/><text x="30.8638%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (237 samples, 0.23%)</title><rect x="30.6138%" y="501" width="0.2254%" height="15" fill="rgb(223,8,27)" fg:x="32188" fg:w="237"/><text x="30.8638%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (237 samples, 0.23%)</title><rect x="30.6138%" y="485" width="0.2254%" height="15" fill="rgb(216,217,28)" fg:x="32188" fg:w="237"/><text x="30.8638%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (237 samples, 0.23%)</title><rect x="30.6138%" y="469" width="0.2254%" height="15" fill="rgb(249,199,1)" fg:x="32188" fg:w="237"/><text x="30.8638%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (236 samples, 0.22%)</title><rect x="30.6148%" y="453" width="0.2245%" height="15" fill="rgb(240,85,17)" fg:x="32189" fg:w="236"/><text x="30.8648%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (235 samples, 0.22%)</title><rect x="30.6157%" y="437" width="0.2235%" height="15" fill="rgb(206,108,45)" fg:x="32190" fg:w="235"/><text x="30.8657%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (67 samples, 0.06%)</title><rect x="30.7755%" y="421" width="0.0637%" height="15" fill="rgb(245,210,41)" fg:x="32358" fg:w="67"/><text x="31.0255%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (67 samples, 0.06%)</title><rect x="30.7755%" y="405" width="0.0637%" height="15" fill="rgb(206,13,37)" fg:x="32358" fg:w="67"/><text x="31.0255%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (67 samples, 0.06%)</title><rect x="30.7755%" y="389" width="0.0637%" height="15" fill="rgb(250,61,18)" fg:x="32358" fg:w="67"/><text x="31.0255%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (57 samples, 0.05%)</title><rect x="30.8478%" y="437" width="0.0542%" height="15" fill="rgb(235,172,48)" fg:x="32434" fg:w="57"/><text x="31.0978%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (41 samples, 0.04%)</title><rect x="30.8630%" y="421" width="0.0390%" height="15" fill="rgb(249,201,17)" fg:x="32450" fg:w="41"/><text x="31.1130%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.04%)</title><rect x="30.8630%" y="405" width="0.0390%" height="15" fill="rgb(219,208,6)" fg:x="32450" fg:w="41"/><text x="31.1130%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="30.8630%" y="389" width="0.0390%" height="15" fill="rgb(248,31,23)" fg:x="32450" fg:w="41"/><text x="31.1130%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (70 samples, 0.07%)</title><rect x="30.8478%" y="453" width="0.0666%" height="15" fill="rgb(245,15,42)" fg:x="32434" fg:w="70"/><text x="31.0978%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (81 samples, 0.08%)</title><rect x="30.8392%" y="533" width="0.0770%" height="15" fill="rgb(222,217,39)" fg:x="32425" fg:w="81"/><text x="31.0892%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (80 samples, 0.08%)</title><rect x="30.8402%" y="517" width="0.0761%" height="15" fill="rgb(210,219,27)" fg:x="32426" fg:w="80"/><text x="31.0902%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (80 samples, 0.08%)</title><rect x="30.8402%" y="501" width="0.0761%" height="15" fill="rgb(252,166,36)" fg:x="32426" fg:w="80"/><text x="31.0902%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (80 samples, 0.08%)</title><rect x="30.8402%" y="485" width="0.0761%" height="15" fill="rgb(245,132,34)" fg:x="32426" fg:w="80"/><text x="31.0902%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (72 samples, 0.07%)</title><rect x="30.8478%" y="469" width="0.0685%" height="15" fill="rgb(236,54,3)" fg:x="32434" fg:w="72"/><text x="31.0978%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (23 samples, 0.02%)</title><rect x="30.9172%" y="453" width="0.0219%" height="15" fill="rgb(241,173,43)" fg:x="32507" fg:w="23"/><text x="31.1672%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (23 samples, 0.02%)</title><rect x="30.9172%" y="437" width="0.0219%" height="15" fill="rgb(215,190,9)" fg:x="32507" fg:w="23"/><text x="31.1672%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (19 samples, 0.02%)</title><rect x="30.9210%" y="421" width="0.0181%" height="15" fill="rgb(242,101,16)" fg:x="32511" fg:w="19"/><text x="31.1710%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (19 samples, 0.02%)</title><rect x="30.9210%" y="405" width="0.0181%" height="15" fill="rgb(223,190,21)" fg:x="32511" fg:w="19"/><text x="31.1710%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (19 samples, 0.02%)</title><rect x="30.9210%" y="389" width="0.0181%" height="15" fill="rgb(215,228,25)" fg:x="32511" fg:w="19"/><text x="31.1710%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (17 samples, 0.02%)</title><rect x="30.9229%" y="373" width="0.0162%" height="15" fill="rgb(225,36,22)" fg:x="32513" fg:w="17"/><text x="31.1729%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (16 samples, 0.02%)</title><rect x="30.9239%" y="357" width="0.0152%" height="15" fill="rgb(251,106,46)" fg:x="32514" fg:w="16"/><text x="31.1739%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (16 samples, 0.02%)</title><rect x="30.9239%" y="341" width="0.0152%" height="15" fill="rgb(208,90,1)" fg:x="32514" fg:w="16"/><text x="31.1739%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (26 samples, 0.02%)</title><rect x="30.9172%" y="469" width="0.0247%" height="15" fill="rgb(243,10,4)" fg:x="32507" fg:w="26"/><text x="31.1672%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (33 samples, 0.03%)</title><rect x="30.9163%" y="533" width="0.0314%" height="15" fill="rgb(212,137,27)" fg:x="32506" fg:w="33"/><text x="31.1663%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (33 samples, 0.03%)</title><rect x="30.9163%" y="517" width="0.0314%" height="15" fill="rgb(231,220,49)" fg:x="32506" fg:w="33"/><text x="31.1663%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.03%)</title><rect x="30.9163%" y="501" width="0.0314%" height="15" fill="rgb(237,96,20)" fg:x="32506" fg:w="33"/><text x="31.1663%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.03%)</title><rect x="30.9163%" y="485" width="0.0314%" height="15" fill="rgb(239,229,30)" fg:x="32506" fg:w="33"/><text x="31.1663%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (32 samples, 0.03%)</title><rect x="30.9477%" y="533" width="0.0304%" height="15" fill="rgb(219,65,33)" fg:x="32539" fg:w="32"/><text x="31.1977%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (32 samples, 0.03%)</title><rect x="30.9477%" y="517" width="0.0304%" height="15" fill="rgb(243,134,7)" fg:x="32539" fg:w="32"/><text x="31.1977%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.03%)</title><rect x="30.9477%" y="501" width="0.0304%" height="15" fill="rgb(216,177,54)" fg:x="32539" fg:w="32"/><text x="31.1977%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (32 samples, 0.03%)</title><rect x="30.9477%" y="485" width="0.0304%" height="15" fill="rgb(211,160,20)" fg:x="32539" fg:w="32"/><text x="31.1977%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (32 samples, 0.03%)</title><rect x="30.9477%" y="469" width="0.0304%" height="15" fill="rgb(239,85,39)" fg:x="32539" fg:w="32"/><text x="31.1977%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (18 samples, 0.02%)</title><rect x="30.9610%" y="453" width="0.0171%" height="15" fill="rgb(232,125,22)" fg:x="32553" fg:w="18"/><text x="31.2110%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (18 samples, 0.02%)</title><rect x="30.9610%" y="437" width="0.0171%" height="15" fill="rgb(244,57,34)" fg:x="32553" fg:w="18"/><text x="31.2110%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (404 samples, 0.38%)</title><rect x="30.5967%" y="709" width="0.3842%" height="15" fill="rgb(214,203,32)" fg:x="32170" fg:w="404"/><text x="30.8467%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (404 samples, 0.38%)</title><rect x="30.5967%" y="693" width="0.3842%" height="15" fill="rgb(207,58,43)" fg:x="32170" fg:w="404"/><text x="30.8467%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (404 samples, 0.38%)</title><rect x="30.5967%" y="677" width="0.3842%" height="15" fill="rgb(215,193,15)" fg:x="32170" fg:w="404"/><text x="30.8467%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (403 samples, 0.38%)</title><rect x="30.5977%" y="661" width="0.3833%" height="15" fill="rgb(232,15,44)" fg:x="32171" fg:w="403"/><text x="30.8477%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (403 samples, 0.38%)</title><rect x="30.5977%" y="645" width="0.3833%" height="15" fill="rgb(212,3,48)" fg:x="32171" fg:w="403"/><text x="30.8477%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (391 samples, 0.37%)</title><rect x="30.6091%" y="629" width="0.3719%" height="15" fill="rgb(218,128,7)" fg:x="32183" fg:w="391"/><text x="30.8591%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (391 samples, 0.37%)</title><rect x="30.6091%" y="613" width="0.3719%" height="15" fill="rgb(226,216,39)" fg:x="32183" fg:w="391"/><text x="30.8591%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (391 samples, 0.37%)</title><rect x="30.6091%" y="597" width="0.3719%" height="15" fill="rgb(243,47,51)" fg:x="32183" fg:w="391"/><text x="30.8591%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (391 samples, 0.37%)</title><rect x="30.6091%" y="581" width="0.3719%" height="15" fill="rgb(241,183,40)" fg:x="32183" fg:w="391"/><text x="30.8591%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (388 samples, 0.37%)</title><rect x="30.6119%" y="565" width="0.3690%" height="15" fill="rgb(231,217,32)" fg:x="32186" fg:w="388"/><text x="30.8619%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (387 samples, 0.37%)</title><rect x="30.6129%" y="549" width="0.3681%" height="15" fill="rgb(229,61,38)" fg:x="32187" fg:w="387"/><text x="30.8629%" y="559.50"></text></g><g><title>std::sys::unix::futex::futex_wait (18 samples, 0.02%)</title><rect x="30.9829%" y="613" width="0.0171%" height="15" fill="rgb(225,210,5)" fg:x="32576" fg:w="18"/><text x="31.2329%" y="623.50"></text></g><g><title>syscall (18 samples, 0.02%)</title><rect x="30.9829%" y="597" width="0.0171%" height="15" fill="rgb(231,79,45)" fg:x="32576" fg:w="18"/><text x="31.2329%" y="607.50"></text></g><g><title>std::panic::catch_unwind (426 samples, 0.41%)</title><rect x="30.5958%" y="885" width="0.4052%" height="15" fill="rgb(224,100,7)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="895.50"></text></g><g><title>std::panicking::try (426 samples, 0.41%)</title><rect x="30.5958%" y="869" width="0.4052%" height="15" fill="rgb(241,198,18)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="879.50"></text></g><g><title>std::panicking::try::do_call (426 samples, 0.41%)</title><rect x="30.5958%" y="853" width="0.4052%" height="15" fill="rgb(252,97,53)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (426 samples, 0.41%)</title><rect x="30.5958%" y="837" width="0.4052%" height="15" fill="rgb(220,88,7)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (426 samples, 0.41%)</title><rect x="30.5958%" y="821" width="0.4052%" height="15" fill="rgb(213,176,14)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (426 samples, 0.41%)</title><rect x="30.5958%" y="805" width="0.4052%" height="15" fill="rgb(246,73,7)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (426 samples, 0.41%)</title><rect x="30.5958%" y="789" width="0.4052%" height="15" fill="rgb(245,64,36)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="799.50"></text></g><g><title>futures_lite::future::block_on (426 samples, 0.41%)</title><rect x="30.5958%" y="773" width="0.4052%" height="15" fill="rgb(245,80,10)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (426 samples, 0.41%)</title><rect x="30.5958%" y="757" width="0.4052%" height="15" fill="rgb(232,107,50)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (426 samples, 0.41%)</title><rect x="30.5958%" y="741" width="0.4052%" height="15" fill="rgb(253,3,0)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (426 samples, 0.41%)</title><rect x="30.5958%" y="725" width="0.4052%" height="15" fill="rgb(212,99,53)" fg:x="32169" fg:w="426"/><text x="30.8458%" y="735.50"></text></g><g><title>parking::Parker::park (21 samples, 0.02%)</title><rect x="30.9810%" y="709" width="0.0200%" height="15" fill="rgb(249,111,54)" fg:x="32574" fg:w="21"/><text x="31.2310%" y="719.50"></text></g><g><title>parking::Inner::park (21 samples, 0.02%)</title><rect x="30.9810%" y="693" width="0.0200%" height="15" fill="rgb(249,55,30)" fg:x="32574" fg:w="21"/><text x="31.2310%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (20 samples, 0.02%)</title><rect x="30.9819%" y="677" width="0.0190%" height="15" fill="rgb(237,47,42)" fg:x="32575" fg:w="20"/><text x="31.2319%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (20 samples, 0.02%)</title><rect x="30.9819%" y="661" width="0.0190%" height="15" fill="rgb(211,20,18)" fg:x="32575" fg:w="20"/><text x="31.2319%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (20 samples, 0.02%)</title><rect x="30.9819%" y="645" width="0.0190%" height="15" fill="rgb(231,203,46)" fg:x="32575" fg:w="20"/><text x="31.2319%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (20 samples, 0.02%)</title><rect x="30.9819%" y="629" width="0.0190%" height="15" fill="rgb(237,142,3)" fg:x="32575" fg:w="20"/><text x="31.2319%" y="639.50"></text></g><g><title>__GI___clone (427 samples, 0.41%)</title><rect x="30.5958%" y="997" width="0.4061%" height="15" fill="rgb(241,107,1)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="1007.50"></text></g><g><title>start_thread (427 samples, 0.41%)</title><rect x="30.5958%" y="981" width="0.4061%" height="15" fill="rgb(229,83,13)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (427 samples, 0.41%)</title><rect x="30.5958%" y="965" width="0.4061%" height="15" fill="rgb(241,91,40)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (427 samples, 0.41%)</title><rect x="30.5958%" y="949" width="0.4061%" height="15" fill="rgb(225,3,45)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (427 samples, 0.41%)</title><rect x="30.5958%" y="933" width="0.4061%" height="15" fill="rgb(244,223,14)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (427 samples, 0.41%)</title><rect x="30.5958%" y="917" width="0.4061%" height="15" fill="rgb(224,124,37)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (427 samples, 0.41%)</title><rect x="30.5958%" y="901" width="0.4061%" height="15" fill="rgb(251,171,30)" fg:x="32169" fg:w="427"/><text x="30.8458%" y="911.50"></text></g><g><title>TaskPool_(5) (462 samples, 0.44%)</title><rect x="30.5634%" y="1013" width="0.4394%" height="15" fill="rgb(236,46,54)" fg:x="32135" fg:w="462"/><text x="30.8134%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (47 samples, 0.04%)</title><rect x="31.0190%" y="421" width="0.0447%" height="15" fill="rgb(245,213,5)" fg:x="32614" fg:w="47"/><text x="31.2690%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.04%)</title><rect x="31.0190%" y="405" width="0.0447%" height="15" fill="rgb(230,144,27)" fg:x="32614" fg:w="47"/><text x="31.2690%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (47 samples, 0.04%)</title><rect x="31.0190%" y="389" width="0.0447%" height="15" fill="rgb(220,86,6)" fg:x="32614" fg:w="47"/><text x="31.2690%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (71 samples, 0.07%)</title><rect x="31.0123%" y="533" width="0.0675%" height="15" fill="rgb(240,20,13)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (71 samples, 0.07%)</title><rect x="31.0123%" y="517" width="0.0675%" height="15" fill="rgb(217,89,34)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (71 samples, 0.07%)</title><rect x="31.0123%" y="501" width="0.0675%" height="15" fill="rgb(229,13,5)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (71 samples, 0.07%)</title><rect x="31.0123%" y="485" width="0.0675%" height="15" fill="rgb(244,67,35)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (71 samples, 0.07%)</title><rect x="31.0123%" y="469" width="0.0675%" height="15" fill="rgb(221,40,2)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (71 samples, 0.07%)</title><rect x="31.0123%" y="453" width="0.0675%" height="15" fill="rgb(237,157,21)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (71 samples, 0.07%)</title><rect x="31.0123%" y="437" width="0.0675%" height="15" fill="rgb(222,94,11)" fg:x="32607" fg:w="71"/><text x="31.2623%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (16 samples, 0.02%)</title><rect x="31.0647%" y="421" width="0.0152%" height="15" fill="rgb(249,113,6)" fg:x="32662" fg:w="16"/><text x="31.3147%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (16 samples, 0.02%)</title><rect x="31.0647%" y="405" width="0.0152%" height="15" fill="rgb(238,137,36)" fg:x="32662" fg:w="16"/><text x="31.3147%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (16 samples, 0.02%)</title><rect x="31.0647%" y="389" width="0.0152%" height="15" fill="rgb(210,102,26)" fg:x="32662" fg:w="16"/><text x="31.3147%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (11 samples, 0.01%)</title><rect x="31.0799%" y="533" width="0.0105%" height="15" fill="rgb(218,30,30)" fg:x="32678" fg:w="11"/><text x="31.3299%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (11 samples, 0.01%)</title><rect x="31.0799%" y="517" width="0.0105%" height="15" fill="rgb(214,67,26)" fg:x="32678" fg:w="11"/><text x="31.3299%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="31.0799%" y="501" width="0.0105%" height="15" fill="rgb(251,9,53)" fg:x="32678" fg:w="11"/><text x="31.3299%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.01%)</title><rect x="31.0799%" y="485" width="0.0105%" height="15" fill="rgb(228,204,25)" fg:x="32678" fg:w="11"/><text x="31.3299%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (88 samples, 0.08%)</title><rect x="31.0104%" y="629" width="0.0837%" height="15" fill="rgb(207,153,8)" fg:x="32605" fg:w="88"/><text x="31.2604%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 0.08%)</title><rect x="31.0104%" y="613" width="0.0837%" height="15" fill="rgb(242,9,16)" fg:x="32605" fg:w="88"/><text x="31.2604%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (88 samples, 0.08%)</title><rect x="31.0104%" y="597" width="0.0837%" height="15" fill="rgb(217,211,10)" fg:x="32605" fg:w="88"/><text x="31.2604%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 0.08%)</title><rect x="31.0104%" y="581" width="0.0837%" height="15" fill="rgb(219,228,52)" fg:x="32605" fg:w="88"/><text x="31.2604%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (86 samples, 0.08%)</title><rect x="31.0123%" y="565" width="0.0818%" height="15" fill="rgb(231,92,29)" fg:x="32607" fg:w="86"/><text x="31.2623%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (86 samples, 0.08%)</title><rect x="31.0123%" y="549" width="0.0818%" height="15" fill="rgb(232,8,23)" fg:x="32607" fg:w="86"/><text x="31.2623%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.09%)</title><rect x="31.0076%" y="709" width="0.0875%" height="15" fill="rgb(216,211,34)" fg:x="32602" fg:w="92"/><text x="31.2576%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (92 samples, 0.09%)</title><rect x="31.0076%" y="693" width="0.0875%" height="15" fill="rgb(236,151,0)" fg:x="32602" fg:w="92"/><text x="31.2576%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (92 samples, 0.09%)</title><rect x="31.0076%" y="677" width="0.0875%" height="15" fill="rgb(209,168,3)" fg:x="32602" fg:w="92"/><text x="31.2576%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.09%)</title><rect x="31.0076%" y="661" width="0.0875%" height="15" fill="rgb(208,129,28)" fg:x="32602" fg:w="92"/><text x="31.2576%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (92 samples, 0.09%)</title><rect x="31.0076%" y="645" width="0.0875%" height="15" fill="rgb(229,78,22)" fg:x="32602" fg:w="92"/><text x="31.2576%" y="655.50"></text></g><g><title>TaskPool_(6) (112 samples, 0.11%)</title><rect x="31.0028%" y="1013" width="0.1065%" height="15" fill="rgb(228,187,13)" fg:x="32597" fg:w="112"/><text x="31.2528%" y="1023.50"></text></g><g><title>__GI___clone (107 samples, 0.10%)</title><rect x="31.0076%" y="997" width="0.1018%" height="15" fill="rgb(240,119,24)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="1007.50"></text></g><g><title>start_thread (107 samples, 0.10%)</title><rect x="31.0076%" y="981" width="0.1018%" height="15" fill="rgb(209,194,42)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (107 samples, 0.10%)</title><rect x="31.0076%" y="965" width="0.1018%" height="15" fill="rgb(247,200,46)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (107 samples, 0.10%)</title><rect x="31.0076%" y="949" width="0.1018%" height="15" fill="rgb(218,76,16)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (107 samples, 0.10%)</title><rect x="31.0076%" y="933" width="0.1018%" height="15" fill="rgb(225,21,48)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (107 samples, 0.10%)</title><rect x="31.0076%" y="917" width="0.1018%" height="15" fill="rgb(239,223,50)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (107 samples, 0.10%)</title><rect x="31.0076%" y="901" width="0.1018%" height="15" fill="rgb(244,45,21)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="911.50"></text></g><g><title>std::panic::catch_unwind (107 samples, 0.10%)</title><rect x="31.0076%" y="885" width="0.1018%" height="15" fill="rgb(232,33,43)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="895.50"></text></g><g><title>std::panicking::try (107 samples, 0.10%)</title><rect x="31.0076%" y="869" width="0.1018%" height="15" fill="rgb(209,8,3)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="879.50"></text></g><g><title>std::panicking::try::do_call (107 samples, 0.10%)</title><rect x="31.0076%" y="853" width="0.1018%" height="15" fill="rgb(214,25,53)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (107 samples, 0.10%)</title><rect x="31.0076%" y="837" width="0.1018%" height="15" fill="rgb(254,186,54)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (107 samples, 0.10%)</title><rect x="31.0076%" y="821" width="0.1018%" height="15" fill="rgb(208,174,49)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (107 samples, 0.10%)</title><rect x="31.0076%" y="805" width="0.1018%" height="15" fill="rgb(233,191,51)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (107 samples, 0.10%)</title><rect x="31.0076%" y="789" width="0.1018%" height="15" fill="rgb(222,134,10)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="799.50"></text></g><g><title>futures_lite::future::block_on (107 samples, 0.10%)</title><rect x="31.0076%" y="773" width="0.1018%" height="15" fill="rgb(230,226,20)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (107 samples, 0.10%)</title><rect x="31.0076%" y="757" width="0.1018%" height="15" fill="rgb(251,111,25)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (107 samples, 0.10%)</title><rect x="31.0076%" y="741" width="0.1018%" height="15" fill="rgb(224,40,46)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (107 samples, 0.10%)</title><rect x="31.0076%" y="725" width="0.1018%" height="15" fill="rgb(236,108,47)" fg:x="32602" fg:w="107"/><text x="31.2576%" y="735.50"></text></g><g><title>parking::Parker::park (15 samples, 0.01%)</title><rect x="31.0951%" y="709" width="0.0143%" height="15" fill="rgb(234,93,0)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="719.50"></text></g><g><title>parking::Inner::park (15 samples, 0.01%)</title><rect x="31.0951%" y="693" width="0.0143%" height="15" fill="rgb(224,213,32)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (15 samples, 0.01%)</title><rect x="31.0951%" y="677" width="0.0143%" height="15" fill="rgb(251,11,48)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (15 samples, 0.01%)</title><rect x="31.0951%" y="661" width="0.0143%" height="15" fill="rgb(236,173,5)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (15 samples, 0.01%)</title><rect x="31.0951%" y="645" width="0.0143%" height="15" fill="rgb(230,95,12)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (15 samples, 0.01%)</title><rect x="31.0951%" y="629" width="0.0143%" height="15" fill="rgb(232,209,1)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (15 samples, 0.01%)</title><rect x="31.0951%" y="613" width="0.0143%" height="15" fill="rgb(232,6,1)" fg:x="32694" fg:w="15"/><text x="31.3451%" y="623.50"></text></g><g><title>syscall (14 samples, 0.01%)</title><rect x="31.0960%" y="597" width="0.0133%" height="15" fill="rgb(210,224,50)" fg:x="32695" fg:w="14"/><text x="31.3460%" y="607.50"></text></g><g><title>[anon] (16 samples, 0.02%)</title><rect x="31.1160%" y="997" width="0.0152%" height="15" fill="rgb(228,127,35)" fg:x="32716" fg:w="16"/><text x="31.3660%" y="1007.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="31.1312%" y="997" width="0.0219%" height="15" fill="rgb(245,102,45)" fg:x="32732" fg:w="23"/><text x="31.3812%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="31.1569%" y="629" width="0.0105%" height="15" fill="rgb(214,1,49)" fg:x="32759" fg:w="11"/><text x="31.4069%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (11 samples, 0.01%)</title><rect x="31.1569%" y="613" width="0.0105%" height="15" fill="rgb(226,163,40)" fg:x="32759" fg:w="11"/><text x="31.4069%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="31.1569%" y="597" width="0.0105%" height="15" fill="rgb(239,212,28)" fg:x="32759" fg:w="11"/><text x="31.4069%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (13 samples, 0.01%)</title><rect x="31.1759%" y="421" width="0.0124%" height="15" fill="rgb(220,20,13)" fg:x="32779" fg:w="13"/><text x="31.4259%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (13 samples, 0.01%)</title><rect x="31.1759%" y="405" width="0.0124%" height="15" fill="rgb(210,164,35)" fg:x="32779" fg:w="13"/><text x="31.4259%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (13 samples, 0.01%)</title><rect x="31.1759%" y="389" width="0.0124%" height="15" fill="rgb(248,109,41)" fg:x="32779" fg:w="13"/><text x="31.4259%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (172 samples, 0.16%)</title><rect x="31.1902%" y="421" width="0.1636%" height="15" fill="rgb(238,23,50)" fg:x="32794" fg:w="172"/><text x="31.4402%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (172 samples, 0.16%)</title><rect x="31.1902%" y="405" width="0.1636%" height="15" fill="rgb(211,48,49)" fg:x="32794" fg:w="172"/><text x="31.4402%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (172 samples, 0.16%)</title><rect x="31.1902%" y="389" width="0.1636%" height="15" fill="rgb(223,36,21)" fg:x="32794" fg:w="172"/><text x="31.4402%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (64 samples, 0.06%)</title><rect x="31.3585%" y="373" width="0.0609%" height="15" fill="rgb(207,123,46)" fg:x="32971" fg:w="64"/><text x="31.6085%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (64 samples, 0.06%)</title><rect x="31.3585%" y="357" width="0.0609%" height="15" fill="rgb(240,218,32)" fg:x="32971" fg:w="64"/><text x="31.6085%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (15 samples, 0.01%)</title><rect x="31.4289%" y="373" width="0.0143%" height="15" fill="rgb(252,5,43)" fg:x="33045" fg:w="15"/><text x="31.6789%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (13 samples, 0.01%)</title><rect x="31.4308%" y="357" width="0.0124%" height="15" fill="rgb(252,84,19)" fg:x="33047" fg:w="13"/><text x="31.6808%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (289 samples, 0.27%)</title><rect x="31.1721%" y="533" width="0.2749%" height="15" fill="rgb(243,152,39)" fg:x="32775" fg:w="289"/><text x="31.4221%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (289 samples, 0.27%)</title><rect x="31.1721%" y="517" width="0.2749%" height="15" fill="rgb(234,160,15)" fg:x="32775" fg:w="289"/><text x="31.4221%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (289 samples, 0.27%)</title><rect x="31.1721%" y="501" width="0.2749%" height="15" fill="rgb(237,34,20)" fg:x="32775" fg:w="289"/><text x="31.4221%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (289 samples, 0.27%)</title><rect x="31.1721%" y="485" width="0.2749%" height="15" fill="rgb(229,97,13)" fg:x="32775" fg:w="289"/><text x="31.4221%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (289 samples, 0.27%)</title><rect x="31.1721%" y="469" width="0.2749%" height="15" fill="rgb(234,71,50)" fg:x="32775" fg:w="289"/><text x="31.4221%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (288 samples, 0.27%)</title><rect x="31.1731%" y="453" width="0.2739%" height="15" fill="rgb(253,155,4)" fg:x="32776" fg:w="288"/><text x="31.4231%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (285 samples, 0.27%)</title><rect x="31.1759%" y="437" width="0.2711%" height="15" fill="rgb(222,185,37)" fg:x="32779" fg:w="285"/><text x="31.4259%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (95 samples, 0.09%)</title><rect x="31.3566%" y="421" width="0.0904%" height="15" fill="rgb(251,177,13)" fg:x="32969" fg:w="95"/><text x="31.6066%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (95 samples, 0.09%)</title><rect x="31.3566%" y="405" width="0.0904%" height="15" fill="rgb(250,179,40)" fg:x="32969" fg:w="95"/><text x="31.6066%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (95 samples, 0.09%)</title><rect x="31.3566%" y="389" width="0.0904%" height="15" fill="rgb(242,44,2)" fg:x="32969" fg:w="95"/><text x="31.6066%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (62 samples, 0.06%)</title><rect x="31.4546%" y="437" width="0.0590%" height="15" fill="rgb(216,177,13)" fg:x="33072" fg:w="62"/><text x="31.7046%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (49 samples, 0.05%)</title><rect x="31.4670%" y="421" width="0.0466%" height="15" fill="rgb(216,106,43)" fg:x="33085" fg:w="49"/><text x="31.7170%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="31.4670%" y="405" width="0.0466%" height="15" fill="rgb(216,183,2)" fg:x="33085" fg:w="49"/><text x="31.7170%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (47 samples, 0.04%)</title><rect x="31.4689%" y="389" width="0.0447%" height="15" fill="rgb(249,75,3)" fg:x="33087" fg:w="47"/><text x="31.7189%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (75 samples, 0.07%)</title><rect x="31.4546%" y="453" width="0.0713%" height="15" fill="rgb(219,67,39)" fg:x="33072" fg:w="75"/><text x="31.7046%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (13 samples, 0.01%)</title><rect x="31.5136%" y="437" width="0.0124%" height="15" fill="rgb(253,228,2)" fg:x="33134" fg:w="13"/><text x="31.7636%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (13 samples, 0.01%)</title><rect x="31.5136%" y="421" width="0.0124%" height="15" fill="rgb(235,138,27)" fg:x="33134" fg:w="13"/><text x="31.7636%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (87 samples, 0.08%)</title><rect x="31.4470%" y="533" width="0.0827%" height="15" fill="rgb(236,97,51)" fg:x="33064" fg:w="87"/><text x="31.6970%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (87 samples, 0.08%)</title><rect x="31.4470%" y="517" width="0.0827%" height="15" fill="rgb(240,80,30)" fg:x="33064" fg:w="87"/><text x="31.6970%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (87 samples, 0.08%)</title><rect x="31.4470%" y="501" width="0.0827%" height="15" fill="rgb(230,178,19)" fg:x="33064" fg:w="87"/><text x="31.6970%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (87 samples, 0.08%)</title><rect x="31.4470%" y="485" width="0.0827%" height="15" fill="rgb(210,190,27)" fg:x="33064" fg:w="87"/><text x="31.6970%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (79 samples, 0.08%)</title><rect x="31.4546%" y="469" width="0.0751%" height="15" fill="rgb(222,107,31)" fg:x="33072" fg:w="79"/><text x="31.7046%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (13 samples, 0.01%)</title><rect x="31.5335%" y="453" width="0.0124%" height="15" fill="rgb(216,127,34)" fg:x="33155" fg:w="13"/><text x="31.7835%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (13 samples, 0.01%)</title><rect x="31.5335%" y="437" width="0.0124%" height="15" fill="rgb(234,116,52)" fg:x="33155" fg:w="13"/><text x="31.7835%" y="447.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (18 samples, 0.02%)</title><rect x="31.5335%" y="469" width="0.0171%" height="15" fill="rgb(222,124,15)" fg:x="33155" fg:w="18"/><text x="31.7835%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (27 samples, 0.03%)</title><rect x="31.5297%" y="533" width="0.0257%" height="15" fill="rgb(231,179,28)" fg:x="33151" fg:w="27"/><text x="31.7797%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (26 samples, 0.02%)</title><rect x="31.5307%" y="517" width="0.0247%" height="15" fill="rgb(226,93,45)" fg:x="33152" fg:w="26"/><text x="31.7807%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.02%)</title><rect x="31.5307%" y="501" width="0.0247%" height="15" fill="rgb(215,8,51)" fg:x="33152" fg:w="26"/><text x="31.7807%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (26 samples, 0.02%)</title><rect x="31.5307%" y="485" width="0.0247%" height="15" fill="rgb(223,106,5)" fg:x="33152" fg:w="26"/><text x="31.7807%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (31 samples, 0.03%)</title><rect x="31.5554%" y="533" width="0.0295%" height="15" fill="rgb(250,191,5)" fg:x="33178" fg:w="31"/><text x="31.8054%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (31 samples, 0.03%)</title><rect x="31.5554%" y="517" width="0.0295%" height="15" fill="rgb(242,132,44)" fg:x="33178" fg:w="31"/><text x="31.8054%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.03%)</title><rect x="31.5554%" y="501" width="0.0295%" height="15" fill="rgb(251,152,29)" fg:x="33178" fg:w="31"/><text x="31.8054%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (31 samples, 0.03%)</title><rect x="31.5554%" y="485" width="0.0295%" height="15" fill="rgb(218,179,5)" fg:x="33178" fg:w="31"/><text x="31.8054%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (29 samples, 0.03%)</title><rect x="31.5573%" y="469" width="0.0276%" height="15" fill="rgb(227,67,19)" fg:x="33180" fg:w="29"/><text x="31.8073%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (17 samples, 0.02%)</title><rect x="31.5687%" y="453" width="0.0162%" height="15" fill="rgb(233,119,31)" fg:x="33192" fg:w="17"/><text x="31.8187%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (17 samples, 0.02%)</title><rect x="31.5687%" y="437" width="0.0162%" height="15" fill="rgb(241,120,22)" fg:x="33192" fg:w="17"/><text x="31.8187%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (456 samples, 0.43%)</title><rect x="31.1550%" y="709" width="0.4337%" height="15" fill="rgb(224,102,30)" fg:x="32757" fg:w="456"/><text x="31.4050%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (456 samples, 0.43%)</title><rect x="31.1550%" y="693" width="0.4337%" height="15" fill="rgb(210,164,37)" fg:x="32757" fg:w="456"/><text x="31.4050%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (456 samples, 0.43%)</title><rect x="31.1550%" y="677" width="0.4337%" height="15" fill="rgb(226,191,16)" fg:x="32757" fg:w="456"/><text x="31.4050%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (455 samples, 0.43%)</title><rect x="31.1560%" y="661" width="0.4327%" height="15" fill="rgb(214,40,45)" fg:x="32758" fg:w="455"/><text x="31.4060%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (455 samples, 0.43%)</title><rect x="31.1560%" y="645" width="0.4327%" height="15" fill="rgb(244,29,26)" fg:x="32758" fg:w="455"/><text x="31.4060%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (443 samples, 0.42%)</title><rect x="31.1674%" y="629" width="0.4213%" height="15" fill="rgb(216,16,5)" fg:x="32770" fg:w="443"/><text x="31.4174%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.42%)</title><rect x="31.1674%" y="613" width="0.4213%" height="15" fill="rgb(249,76,35)" fg:x="32770" fg:w="443"/><text x="31.4174%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (443 samples, 0.42%)</title><rect x="31.1674%" y="597" width="0.4213%" height="15" fill="rgb(207,11,44)" fg:x="32770" fg:w="443"/><text x="31.4174%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.42%)</title><rect x="31.1674%" y="581" width="0.4213%" height="15" fill="rgb(228,190,49)" fg:x="32770" fg:w="443"/><text x="31.4174%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (441 samples, 0.42%)</title><rect x="31.1693%" y="565" width="0.4194%" height="15" fill="rgb(214,173,12)" fg:x="32772" fg:w="441"/><text x="31.4193%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (438 samples, 0.42%)</title><rect x="31.1721%" y="549" width="0.4166%" height="15" fill="rgb(218,26,35)" fg:x="32775" fg:w="438"/><text x="31.4221%" y="559.50"></text></g><g><title>std::sys::unix::futex::futex_wait (40 samples, 0.04%)</title><rect x="31.5925%" y="613" width="0.0380%" height="15" fill="rgb(220,200,19)" fg:x="33217" fg:w="40"/><text x="31.8425%" y="623.50"></text></g><g><title>syscall (39 samples, 0.04%)</title><rect x="31.5935%" y="597" width="0.0371%" height="15" fill="rgb(239,95,49)" fg:x="33218" fg:w="39"/><text x="31.8435%" y="607.50"></text></g><g><title>__GI___clone (503 samples, 0.48%)</title><rect x="31.1531%" y="997" width="0.4784%" height="15" fill="rgb(235,85,53)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="1007.50"></text></g><g><title>start_thread (503 samples, 0.48%)</title><rect x="31.1531%" y="981" width="0.4784%" height="15" fill="rgb(233,133,31)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (503 samples, 0.48%)</title><rect x="31.1531%" y="965" width="0.4784%" height="15" fill="rgb(218,25,20)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (503 samples, 0.48%)</title><rect x="31.1531%" y="949" width="0.4784%" height="15" fill="rgb(252,210,38)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (503 samples, 0.48%)</title><rect x="31.1531%" y="933" width="0.4784%" height="15" fill="rgb(242,134,21)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (503 samples, 0.48%)</title><rect x="31.1531%" y="917" width="0.4784%" height="15" fill="rgb(213,28,48)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (503 samples, 0.48%)</title><rect x="31.1531%" y="901" width="0.4784%" height="15" fill="rgb(250,196,2)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="911.50"></text></g><g><title>std::panic::catch_unwind (503 samples, 0.48%)</title><rect x="31.1531%" y="885" width="0.4784%" height="15" fill="rgb(227,5,17)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="895.50"></text></g><g><title>std::panicking::try (503 samples, 0.48%)</title><rect x="31.1531%" y="869" width="0.4784%" height="15" fill="rgb(221,226,24)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="879.50"></text></g><g><title>std::panicking::try::do_call (503 samples, 0.48%)</title><rect x="31.1531%" y="853" width="0.4784%" height="15" fill="rgb(211,5,48)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (503 samples, 0.48%)</title><rect x="31.1531%" y="837" width="0.4784%" height="15" fill="rgb(219,150,6)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (503 samples, 0.48%)</title><rect x="31.1531%" y="821" width="0.4784%" height="15" fill="rgb(251,46,16)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (503 samples, 0.48%)</title><rect x="31.1531%" y="805" width="0.4784%" height="15" fill="rgb(220,204,40)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (503 samples, 0.48%)</title><rect x="31.1531%" y="789" width="0.4784%" height="15" fill="rgb(211,85,2)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="799.50"></text></g><g><title>futures_lite::future::block_on (503 samples, 0.48%)</title><rect x="31.1531%" y="773" width="0.4784%" height="15" fill="rgb(229,17,7)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (503 samples, 0.48%)</title><rect x="31.1531%" y="757" width="0.4784%" height="15" fill="rgb(239,72,28)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (503 samples, 0.48%)</title><rect x="31.1531%" y="741" width="0.4784%" height="15" fill="rgb(230,47,54)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (503 samples, 0.48%)</title><rect x="31.1531%" y="725" width="0.4784%" height="15" fill="rgb(214,50,8)" fg:x="32755" fg:w="503"/><text x="31.4031%" y="735.50"></text></g><g><title>parking::Parker::park (45 samples, 0.04%)</title><rect x="31.5887%" y="709" width="0.0428%" height="15" fill="rgb(216,198,43)" fg:x="33213" fg:w="45"/><text x="31.8387%" y="719.50"></text></g><g><title>parking::Inner::park (45 samples, 0.04%)</title><rect x="31.5887%" y="693" width="0.0428%" height="15" fill="rgb(234,20,35)" fg:x="33213" fg:w="45"/><text x="31.8387%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (42 samples, 0.04%)</title><rect x="31.5916%" y="677" width="0.0399%" height="15" fill="rgb(254,45,19)" fg:x="33216" fg:w="42"/><text x="31.8416%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (41 samples, 0.04%)</title><rect x="31.5925%" y="661" width="0.0390%" height="15" fill="rgb(219,14,44)" fg:x="33217" fg:w="41"/><text x="31.8425%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (41 samples, 0.04%)</title><rect x="31.5925%" y="645" width="0.0390%" height="15" fill="rgb(217,220,26)" fg:x="33217" fg:w="41"/><text x="31.8425%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (41 samples, 0.04%)</title><rect x="31.5925%" y="629" width="0.0390%" height="15" fill="rgb(213,158,28)" fg:x="33217" fg:w="41"/><text x="31.8425%" y="639.50"></text></g><g><title>TaskPool_(7) (551 samples, 0.52%)</title><rect x="31.1094%" y="1013" width="0.5241%" height="15" fill="rgb(252,51,52)" fg:x="32709" fg:w="551"/><text x="31.3594%" y="1023.50"></text></g><g><title>[[heap]] (11 samples, 0.01%)</title><rect x="31.6344%" y="997" width="0.0105%" height="15" fill="rgb(246,89,16)" fg:x="33261" fg:w="11"/><text x="31.8844%" y="1007.50"></text></g><g><title>[anon] (13 samples, 0.01%)</title><rect x="31.6448%" y="997" width="0.0124%" height="15" fill="rgb(216,158,49)" fg:x="33272" fg:w="13"/><text x="31.8948%" y="1007.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="31.6572%" y="997" width="0.0171%" height="15" fill="rgb(236,107,19)" fg:x="33285" fg:w="18"/><text x="31.9072%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="31.6753%" y="533" width="0.0114%" height="15" fill="rgb(228,185,30)" fg:x="33304" fg:w="12"/><text x="31.9253%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="31.6753%" y="629" width="0.0124%" height="15" fill="rgb(246,134,8)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (13 samples, 0.01%)</title><rect x="31.6753%" y="613" width="0.0124%" height="15" fill="rgb(214,143,50)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="31.6753%" y="597" width="0.0124%" height="15" fill="rgb(228,75,8)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (13 samples, 0.01%)</title><rect x="31.6753%" y="581" width="0.0124%" height="15" fill="rgb(207,175,4)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="31.6753%" y="565" width="0.0124%" height="15" fill="rgb(205,108,24)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="31.6753%" y="549" width="0.0124%" height="15" fill="rgb(244,120,49)" fg:x="33304" fg:w="13"/><text x="31.9253%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (15 samples, 0.01%)</title><rect x="31.6981%" y="421" width="0.0143%" height="15" fill="rgb(223,47,38)" fg:x="33328" fg:w="15"/><text x="31.9481%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (15 samples, 0.01%)</title><rect x="31.6981%" y="405" width="0.0143%" height="15" fill="rgb(229,179,11)" fg:x="33328" fg:w="15"/><text x="31.9481%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (15 samples, 0.01%)</title><rect x="31.6981%" y="389" width="0.0143%" height="15" fill="rgb(231,122,1)" fg:x="33328" fg:w="15"/><text x="31.9481%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (260 samples, 0.25%)</title><rect x="31.7152%" y="421" width="0.2473%" height="15" fill="rgb(245,119,9)" fg:x="33346" fg:w="260"/><text x="31.9652%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (260 samples, 0.25%)</title><rect x="31.7152%" y="405" width="0.2473%" height="15" fill="rgb(241,163,25)" fg:x="33346" fg:w="260"/><text x="31.9652%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (260 samples, 0.25%)</title><rect x="31.7152%" y="389" width="0.2473%" height="15" fill="rgb(217,214,3)" fg:x="33346" fg:w="260"/><text x="31.9652%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (84 samples, 0.08%)</title><rect x="31.9682%" y="373" width="0.0799%" height="15" fill="rgb(240,86,28)" fg:x="33612" fg:w="84"/><text x="32.2182%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (84 samples, 0.08%)</title><rect x="31.9682%" y="357" width="0.0799%" height="15" fill="rgb(215,47,9)" fg:x="33612" fg:w="84"/><text x="32.2182%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (28 samples, 0.03%)</title><rect x="32.0576%" y="373" width="0.0266%" height="15" fill="rgb(252,25,45)" fg:x="33706" fg:w="28"/><text x="32.3076%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (23 samples, 0.02%)</title><rect x="32.0624%" y="357" width="0.0219%" height="15" fill="rgb(251,164,9)" fg:x="33711" fg:w="23"/><text x="32.3124%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (414 samples, 0.39%)</title><rect x="31.6952%" y="533" width="0.3938%" height="15" fill="rgb(233,194,0)" fg:x="33325" fg:w="414"/><text x="31.9452%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (414 samples, 0.39%)</title><rect x="31.6952%" y="517" width="0.3938%" height="15" fill="rgb(249,111,24)" fg:x="33325" fg:w="414"/><text x="31.9452%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (414 samples, 0.39%)</title><rect x="31.6952%" y="501" width="0.3938%" height="15" fill="rgb(250,223,3)" fg:x="33325" fg:w="414"/><text x="31.9452%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (414 samples, 0.39%)</title><rect x="31.6952%" y="485" width="0.3938%" height="15" fill="rgb(236,178,37)" fg:x="33325" fg:w="414"/><text x="31.9452%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (414 samples, 0.39%)</title><rect x="31.6952%" y="469" width="0.3938%" height="15" fill="rgb(241,158,50)" fg:x="33325" fg:w="414"/><text x="31.9452%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (413 samples, 0.39%)</title><rect x="31.6962%" y="453" width="0.3928%" height="15" fill="rgb(213,121,41)" fg:x="33326" fg:w="413"/><text x="31.9462%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (411 samples, 0.39%)</title><rect x="31.6981%" y="437" width="0.3909%" height="15" fill="rgb(240,92,3)" fg:x="33328" fg:w="411"/><text x="31.9481%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (132 samples, 0.13%)</title><rect x="31.9634%" y="421" width="0.1255%" height="15" fill="rgb(205,123,3)" fg:x="33607" fg:w="132"/><text x="32.2134%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (130 samples, 0.12%)</title><rect x="31.9653%" y="405" width="0.1236%" height="15" fill="rgb(205,97,47)" fg:x="33609" fg:w="130"/><text x="32.2153%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (129 samples, 0.12%)</title><rect x="31.9663%" y="389" width="0.1227%" height="15" fill="rgb(247,152,14)" fg:x="33610" fg:w="129"/><text x="32.2163%" y="399.50"></text></g><g><title>alloc::vec::from_elem (19 samples, 0.02%)</title><rect x="32.1128%" y="421" width="0.0181%" height="15" fill="rgb(248,195,53)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (19 samples, 0.02%)</title><rect x="32.1128%" y="405" width="0.0181%" height="15" fill="rgb(226,201,16)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (19 samples, 0.02%)</title><rect x="32.1128%" y="389" width="0.0181%" height="15" fill="rgb(205,98,0)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="32.1128%" y="373" width="0.0181%" height="15" fill="rgb(214,191,48)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (19 samples, 0.02%)</title><rect x="32.1128%" y="357" width="0.0181%" height="15" fill="rgb(237,112,39)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="32.1128%" y="341" width="0.0181%" height="15" fill="rgb(247,203,27)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (19 samples, 0.02%)</title><rect x="32.1128%" y="325" width="0.0181%" height="15" fill="rgb(235,124,28)" fg:x="33764" fg:w="19"/><text x="32.3628%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (16 samples, 0.02%)</title><rect x="32.1156%" y="309" width="0.0152%" height="15" fill="rgb(208,207,46)" fg:x="33767" fg:w="16"/><text x="32.3656%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (75 samples, 0.07%)</title><rect x="32.0985%" y="437" width="0.0713%" height="15" fill="rgb(234,176,4)" fg:x="33749" fg:w="75"/><text x="32.3485%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (41 samples, 0.04%)</title><rect x="32.1308%" y="421" width="0.0390%" height="15" fill="rgb(230,133,28)" fg:x="33783" fg:w="41"/><text x="32.3808%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.04%)</title><rect x="32.1308%" y="405" width="0.0390%" height="15" fill="rgb(211,137,40)" fg:x="33783" fg:w="41"/><text x="32.3808%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.04%)</title><rect x="32.1337%" y="389" width="0.0361%" height="15" fill="rgb(254,35,13)" fg:x="33786" fg:w="38"/><text x="32.3837%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (18 samples, 0.02%)</title><rect x="32.1698%" y="437" width="0.0171%" height="15" fill="rgb(225,49,51)" fg:x="33824" fg:w="18"/><text x="32.4198%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (18 samples, 0.02%)</title><rect x="32.1698%" y="421" width="0.0171%" height="15" fill="rgb(251,10,15)" fg:x="33824" fg:w="18"/><text x="32.4198%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (12 samples, 0.01%)</title><rect x="32.1755%" y="405" width="0.0114%" height="15" fill="rgb(228,207,15)" fg:x="33830" fg:w="12"/><text x="32.4255%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (12 samples, 0.01%)</title><rect x="32.1755%" y="389" width="0.0114%" height="15" fill="rgb(241,99,19)" fg:x="33830" fg:w="12"/><text x="32.4255%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (12 samples, 0.01%)</title><rect x="32.1755%" y="373" width="0.0114%" height="15" fill="rgb(207,104,49)" fg:x="33830" fg:w="12"/><text x="32.4255%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (94 samples, 0.09%)</title><rect x="32.0985%" y="453" width="0.0894%" height="15" fill="rgb(234,99,18)" fg:x="33749" fg:w="94"/><text x="32.3485%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (111 samples, 0.11%)</title><rect x="32.0890%" y="533" width="0.1056%" height="15" fill="rgb(213,191,49)" fg:x="33739" fg:w="111"/><text x="32.3390%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (111 samples, 0.11%)</title><rect x="32.0890%" y="517" width="0.1056%" height="15" fill="rgb(210,226,19)" fg:x="33739" fg:w="111"/><text x="32.3390%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (111 samples, 0.11%)</title><rect x="32.0890%" y="501" width="0.1056%" height="15" fill="rgb(229,97,18)" fg:x="33739" fg:w="111"/><text x="32.3390%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (111 samples, 0.11%)</title><rect x="32.0890%" y="485" width="0.1056%" height="15" fill="rgb(211,167,15)" fg:x="33739" fg:w="111"/><text x="32.3390%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (101 samples, 0.10%)</title><rect x="32.0985%" y="469" width="0.0961%" height="15" fill="rgb(210,169,34)" fg:x="33749" fg:w="101"/><text x="32.3485%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (21 samples, 0.02%)</title><rect x="32.1965%" y="453" width="0.0200%" height="15" fill="rgb(241,121,31)" fg:x="33852" fg:w="21"/><text x="32.4465%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (21 samples, 0.02%)</title><rect x="32.1965%" y="437" width="0.0200%" height="15" fill="rgb(232,40,11)" fg:x="33852" fg:w="21"/><text x="32.4465%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (18 samples, 0.02%)</title><rect x="32.1993%" y="421" width="0.0171%" height="15" fill="rgb(205,86,26)" fg:x="33855" fg:w="18"/><text x="32.4493%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (18 samples, 0.02%)</title><rect x="32.1993%" y="405" width="0.0171%" height="15" fill="rgb(231,126,28)" fg:x="33855" fg:w="18"/><text x="32.4493%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (18 samples, 0.02%)</title><rect x="32.1993%" y="389" width="0.0171%" height="15" fill="rgb(219,221,18)" fg:x="33855" fg:w="18"/><text x="32.4493%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (16 samples, 0.02%)</title><rect x="32.2012%" y="373" width="0.0152%" height="15" fill="rgb(211,40,0)" fg:x="33857" fg:w="16"/><text x="32.4512%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (14 samples, 0.01%)</title><rect x="32.2031%" y="357" width="0.0133%" height="15" fill="rgb(239,85,43)" fg:x="33859" fg:w="14"/><text x="32.4531%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (14 samples, 0.01%)</title><rect x="32.2031%" y="341" width="0.0133%" height="15" fill="rgb(231,55,21)" fg:x="33859" fg:w="14"/><text x="32.4531%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (27 samples, 0.03%)</title><rect x="32.1965%" y="469" width="0.0257%" height="15" fill="rgb(225,184,43)" fg:x="33852" fg:w="27"/><text x="32.4465%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (33 samples, 0.03%)</title><rect x="32.1946%" y="533" width="0.0314%" height="15" fill="rgb(251,158,41)" fg:x="33850" fg:w="33"/><text x="32.4446%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (33 samples, 0.03%)</title><rect x="32.1946%" y="517" width="0.0314%" height="15" fill="rgb(234,159,37)" fg:x="33850" fg:w="33"/><text x="32.4446%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.03%)</title><rect x="32.1955%" y="501" width="0.0304%" height="15" fill="rgb(216,204,22)" fg:x="33851" fg:w="32"/><text x="32.4455%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (32 samples, 0.03%)</title><rect x="32.1955%" y="485" width="0.0304%" height="15" fill="rgb(214,17,3)" fg:x="33851" fg:w="32"/><text x="32.4455%" y="495.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (13 samples, 0.01%)</title><rect x="32.2488%" y="421" width="0.0124%" height="15" fill="rgb(212,111,17)" fg:x="33907" fg:w="13"/><text x="32.4988%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (13 samples, 0.01%)</title><rect x="32.2488%" y="405" width="0.0124%" height="15" fill="rgb(221,157,24)" fg:x="33907" fg:w="13"/><text x="32.4988%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (11 samples, 0.01%)</title><rect x="32.2507%" y="389" width="0.0105%" height="15" fill="rgb(252,16,13)" fg:x="33909" fg:w="11"/><text x="32.5007%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (11 samples, 0.01%)</title><rect x="32.2507%" y="373" width="0.0105%" height="15" fill="rgb(221,62,2)" fg:x="33909" fg:w="11"/><text x="32.5007%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (44 samples, 0.04%)</title><rect x="32.2259%" y="533" width="0.0418%" height="15" fill="rgb(247,87,22)" fg:x="33883" fg:w="44"/><text x="32.4759%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (43 samples, 0.04%)</title><rect x="32.2269%" y="517" width="0.0409%" height="15" fill="rgb(215,73,9)" fg:x="33884" fg:w="43"/><text x="32.4769%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 0.04%)</title><rect x="32.2269%" y="501" width="0.0409%" height="15" fill="rgb(207,175,33)" fg:x="33884" fg:w="43"/><text x="32.4769%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.04%)</title><rect x="32.2269%" y="485" width="0.0409%" height="15" fill="rgb(243,129,54)" fg:x="33884" fg:w="43"/><text x="32.4769%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (41 samples, 0.04%)</title><rect x="32.2288%" y="469" width="0.0390%" height="15" fill="rgb(227,119,45)" fg:x="33886" fg:w="41"/><text x="32.4788%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (23 samples, 0.02%)</title><rect x="32.2459%" y="453" width="0.0219%" height="15" fill="rgb(205,109,36)" fg:x="33904" fg:w="23"/><text x="32.4959%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (23 samples, 0.02%)</title><rect x="32.2459%" y="437" width="0.0219%" height="15" fill="rgb(205,6,39)" fg:x="33904" fg:w="23"/><text x="32.4959%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (604 samples, 0.57%)</title><rect x="31.6943%" y="549" width="0.5745%" height="15" fill="rgb(221,32,16)" fg:x="33324" fg:w="604"/><text x="31.9443%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (612 samples, 0.58%)</title><rect x="31.6876%" y="581" width="0.5821%" height="15" fill="rgb(228,144,50)" fg:x="33317" fg:w="612"/><text x="31.9376%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (606 samples, 0.58%)</title><rect x="31.6933%" y="565" width="0.5764%" height="15" fill="rgb(229,201,53)" fg:x="33323" fg:w="606"/><text x="31.9433%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (627 samples, 0.60%)</title><rect x="31.6753%" y="709" width="0.5963%" height="15" fill="rgb(249,153,27)" fg:x="33304" fg:w="627"/><text x="31.9253%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (627 samples, 0.60%)</title><rect x="31.6753%" y="693" width="0.5963%" height="15" fill="rgb(227,106,25)" fg:x="33304" fg:w="627"/><text x="31.9253%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (627 samples, 0.60%)</title><rect x="31.6753%" y="677" width="0.5963%" height="15" fill="rgb(230,65,29)" fg:x="33304" fg:w="627"/><text x="31.9253%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (627 samples, 0.60%)</title><rect x="31.6753%" y="661" width="0.5963%" height="15" fill="rgb(221,57,46)" fg:x="33304" fg:w="627"/><text x="31.9253%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (627 samples, 0.60%)</title><rect x="31.6753%" y="645" width="0.5963%" height="15" fill="rgb(229,161,17)" fg:x="33304" fg:w="627"/><text x="31.9253%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (614 samples, 0.58%)</title><rect x="31.6876%" y="629" width="0.5840%" height="15" fill="rgb(222,213,11)" fg:x="33317" fg:w="614"/><text x="31.9376%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (614 samples, 0.58%)</title><rect x="31.6876%" y="613" width="0.5840%" height="15" fill="rgb(235,35,13)" fg:x="33317" fg:w="614"/><text x="31.9376%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (614 samples, 0.58%)</title><rect x="31.6876%" y="597" width="0.5840%" height="15" fill="rgb(233,158,34)" fg:x="33317" fg:w="614"/><text x="31.9376%" y="607.50"></text></g><g><title>__GI___clone (658 samples, 0.63%)</title><rect x="31.6743%" y="997" width="0.6258%" height="15" fill="rgb(215,151,48)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="1007.50"></text></g><g><title>start_thread (658 samples, 0.63%)</title><rect x="31.6743%" y="981" width="0.6258%" height="15" fill="rgb(229,84,14)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (658 samples, 0.63%)</title><rect x="31.6743%" y="965" width="0.6258%" height="15" fill="rgb(229,68,14)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (658 samples, 0.63%)</title><rect x="31.6743%" y="949" width="0.6258%" height="15" fill="rgb(243,106,26)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (658 samples, 0.63%)</title><rect x="31.6743%" y="933" width="0.6258%" height="15" fill="rgb(206,45,38)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (658 samples, 0.63%)</title><rect x="31.6743%" y="917" width="0.6258%" height="15" fill="rgb(226,6,15)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (658 samples, 0.63%)</title><rect x="31.6743%" y="901" width="0.6258%" height="15" fill="rgb(232,22,54)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="911.50"></text></g><g><title>std::panic::catch_unwind (658 samples, 0.63%)</title><rect x="31.6743%" y="885" width="0.6258%" height="15" fill="rgb(229,222,32)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="895.50"></text></g><g><title>std::panicking::try (658 samples, 0.63%)</title><rect x="31.6743%" y="869" width="0.6258%" height="15" fill="rgb(228,62,29)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="879.50"></text></g><g><title>std::panicking::try::do_call (658 samples, 0.63%)</title><rect x="31.6743%" y="853" width="0.6258%" height="15" fill="rgb(251,103,34)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (658 samples, 0.63%)</title><rect x="31.6743%" y="837" width="0.6258%" height="15" fill="rgb(233,12,30)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (658 samples, 0.63%)</title><rect x="31.6743%" y="821" width="0.6258%" height="15" fill="rgb(238,52,0)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (658 samples, 0.63%)</title><rect x="31.6743%" y="805" width="0.6258%" height="15" fill="rgb(223,98,5)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (658 samples, 0.63%)</title><rect x="31.6743%" y="789" width="0.6258%" height="15" fill="rgb(228,75,37)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="799.50"></text></g><g><title>futures_lite::future::block_on (658 samples, 0.63%)</title><rect x="31.6743%" y="773" width="0.6258%" height="15" fill="rgb(205,115,49)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 samples, 0.63%)</title><rect x="31.6743%" y="757" width="0.6258%" height="15" fill="rgb(250,154,43)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (658 samples, 0.63%)</title><rect x="31.6743%" y="741" width="0.6258%" height="15" fill="rgb(226,43,29)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (658 samples, 0.63%)</title><rect x="31.6743%" y="725" width="0.6258%" height="15" fill="rgb(249,228,39)" fg:x="33303" fg:w="658"/><text x="31.9243%" y="735.50"></text></g><g><title>parking::Parker::park (30 samples, 0.03%)</title><rect x="32.2716%" y="709" width="0.0285%" height="15" fill="rgb(216,79,43)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="719.50"></text></g><g><title>parking::Inner::park (30 samples, 0.03%)</title><rect x="32.2716%" y="693" width="0.0285%" height="15" fill="rgb(228,95,12)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="32.2716%" y="677" width="0.0285%" height="15" fill="rgb(249,221,15)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="32.2716%" y="661" width="0.0285%" height="15" fill="rgb(233,34,13)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (30 samples, 0.03%)</title><rect x="32.2716%" y="645" width="0.0285%" height="15" fill="rgb(214,103,39)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (30 samples, 0.03%)</title><rect x="32.2716%" y="629" width="0.0285%" height="15" fill="rgb(251,126,39)" fg:x="33931" fg:w="30"/><text x="32.5216%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (29 samples, 0.03%)</title><rect x="32.2725%" y="613" width="0.0276%" height="15" fill="rgb(214,216,36)" fg:x="33932" fg:w="29"/><text x="32.5225%" y="623.50"></text></g><g><title>syscall (28 samples, 0.03%)</title><rect x="32.2735%" y="597" width="0.0266%" height="15" fill="rgb(220,221,8)" fg:x="33933" fg:w="28"/><text x="32.5235%" y="607.50"></text></g><g><title>TaskPool_(8) (703 samples, 0.67%)</title><rect x="31.6334%" y="1013" width="0.6686%" height="15" fill="rgb(240,216,3)" fg:x="33260" fg:w="703"/><text x="31.8834%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (72 samples, 0.07%)</title><rect x="32.3249%" y="421" width="0.0685%" height="15" fill="rgb(232,218,17)" fg:x="33987" fg:w="72"/><text x="32.5749%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.07%)</title><rect x="32.3249%" y="405" width="0.0685%" height="15" fill="rgb(229,163,45)" fg:x="33987" fg:w="72"/><text x="32.5749%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (72 samples, 0.07%)</title><rect x="32.3249%" y="389" width="0.0685%" height="15" fill="rgb(231,110,42)" fg:x="33987" fg:w="72"/><text x="32.5749%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (22 samples, 0.02%)</title><rect x="32.3933%" y="373" width="0.0209%" height="15" fill="rgb(208,170,48)" fg:x="34059" fg:w="22"/><text x="32.6433%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (22 samples, 0.02%)</title><rect x="32.3933%" y="357" width="0.0209%" height="15" fill="rgb(239,116,25)" fg:x="34059" fg:w="22"/><text x="32.6433%" y="367.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (15 samples, 0.01%)</title><rect x="32.4152%" y="373" width="0.0143%" height="15" fill="rgb(219,200,50)" fg:x="34082" fg:w="15"/><text x="32.6652%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (123 samples, 0.12%)</title><rect x="32.3191%" y="533" width="0.1170%" height="15" fill="rgb(245,200,0)" fg:x="33981" fg:w="123"/><text x="32.5691%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (123 samples, 0.12%)</title><rect x="32.3191%" y="517" width="0.1170%" height="15" fill="rgb(245,119,33)" fg:x="33981" fg:w="123"/><text x="32.5691%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (123 samples, 0.12%)</title><rect x="32.3191%" y="501" width="0.1170%" height="15" fill="rgb(231,125,12)" fg:x="33981" fg:w="123"/><text x="32.5691%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (123 samples, 0.12%)</title><rect x="32.3191%" y="485" width="0.1170%" height="15" fill="rgb(216,96,41)" fg:x="33981" fg:w="123"/><text x="32.5691%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (123 samples, 0.12%)</title><rect x="32.3191%" y="469" width="0.1170%" height="15" fill="rgb(248,43,45)" fg:x="33981" fg:w="123"/><text x="32.5691%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (122 samples, 0.12%)</title><rect x="32.3201%" y="453" width="0.1160%" height="15" fill="rgb(217,222,7)" fg:x="33982" fg:w="122"/><text x="32.5701%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (122 samples, 0.12%)</title><rect x="32.3201%" y="437" width="0.1160%" height="15" fill="rgb(233,28,6)" fg:x="33982" fg:w="122"/><text x="32.5701%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (45 samples, 0.04%)</title><rect x="32.3933%" y="421" width="0.0428%" height="15" fill="rgb(231,218,15)" fg:x="34059" fg:w="45"/><text x="32.6433%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (45 samples, 0.04%)</title><rect x="32.3933%" y="405" width="0.0428%" height="15" fill="rgb(226,171,48)" fg:x="34059" fg:w="45"/><text x="32.6433%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (45 samples, 0.04%)</title><rect x="32.3933%" y="389" width="0.0428%" height="15" fill="rgb(235,201,9)" fg:x="34059" fg:w="45"/><text x="32.6433%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (22 samples, 0.02%)</title><rect x="32.4399%" y="437" width="0.0209%" height="15" fill="rgb(217,80,15)" fg:x="34108" fg:w="22"/><text x="32.6899%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.01%)</title><rect x="32.4494%" y="421" width="0.0114%" height="15" fill="rgb(219,152,8)" fg:x="34118" fg:w="12"/><text x="32.6994%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="32.4494%" y="405" width="0.0114%" height="15" fill="rgb(243,107,38)" fg:x="34118" fg:w="12"/><text x="32.6994%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="32.4504%" y="389" width="0.0105%" height="15" fill="rgb(231,17,5)" fg:x="34119" fg:w="11"/><text x="32.7004%" y="399.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (27 samples, 0.03%)</title><rect x="32.4399%" y="469" width="0.0257%" height="15" fill="rgb(209,25,54)" fg:x="34108" fg:w="27"/><text x="32.6899%" y="479.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (27 samples, 0.03%)</title><rect x="32.4399%" y="453" width="0.0257%" height="15" fill="rgb(219,0,2)" fg:x="34108" fg:w="27"/><text x="32.6899%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (32 samples, 0.03%)</title><rect x="32.4361%" y="533" width="0.0304%" height="15" fill="rgb(246,9,5)" fg:x="34104" fg:w="32"/><text x="32.6861%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (30 samples, 0.03%)</title><rect x="32.4380%" y="517" width="0.0285%" height="15" fill="rgb(226,159,4)" fg:x="34106" fg:w="30"/><text x="32.6880%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.03%)</title><rect x="32.4380%" y="501" width="0.0285%" height="15" fill="rgb(219,175,34)" fg:x="34106" fg:w="30"/><text x="32.6880%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.03%)</title><rect x="32.4380%" y="485" width="0.0285%" height="15" fill="rgb(236,10,46)" fg:x="34106" fg:w="30"/><text x="32.6880%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (13 samples, 0.01%)</title><rect x="32.4666%" y="533" width="0.0124%" height="15" fill="rgb(240,211,16)" fg:x="34136" fg:w="13"/><text x="32.7166%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (13 samples, 0.01%)</title><rect x="32.4666%" y="517" width="0.0124%" height="15" fill="rgb(205,3,43)" fg:x="34136" fg:w="13"/><text x="32.7166%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.01%)</title><rect x="32.4666%" y="501" width="0.0124%" height="15" fill="rgb(245,7,22)" fg:x="34136" fg:w="13"/><text x="32.7166%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.01%)</title><rect x="32.4666%" y="485" width="0.0124%" height="15" fill="rgb(239,132,32)" fg:x="34136" fg:w="13"/><text x="32.7166%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (12 samples, 0.01%)</title><rect x="32.4789%" y="533" width="0.0114%" height="15" fill="rgb(228,202,34)" fg:x="34149" fg:w="12"/><text x="32.7289%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (12 samples, 0.01%)</title><rect x="32.4789%" y="517" width="0.0114%" height="15" fill="rgb(254,200,22)" fg:x="34149" fg:w="12"/><text x="32.7289%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="32.4789%" y="501" width="0.0114%" height="15" fill="rgb(219,10,39)" fg:x="34149" fg:w="12"/><text x="32.7289%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12 samples, 0.01%)</title><rect x="32.4789%" y="485" width="0.0114%" height="15" fill="rgb(226,210,39)" fg:x="34149" fg:w="12"/><text x="32.7289%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (11 samples, 0.01%)</title><rect x="32.4799%" y="469" width="0.0105%" height="15" fill="rgb(208,219,16)" fg:x="34150" fg:w="11"/><text x="32.7299%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (193 samples, 0.18%)</title><rect x="32.3087%" y="709" width="0.1836%" height="15" fill="rgb(216,158,51)" fg:x="33970" fg:w="193"/><text x="32.5587%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (193 samples, 0.18%)</title><rect x="32.3087%" y="693" width="0.1836%" height="15" fill="rgb(233,14,44)" fg:x="33970" fg:w="193"/><text x="32.5587%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (193 samples, 0.18%)</title><rect x="32.3087%" y="677" width="0.1836%" height="15" fill="rgb(237,97,39)" fg:x="33970" fg:w="193"/><text x="32.5587%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (192 samples, 0.18%)</title><rect x="32.3096%" y="661" width="0.1826%" height="15" fill="rgb(218,198,43)" fg:x="33971" fg:w="192"/><text x="32.5596%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (192 samples, 0.18%)</title><rect x="32.3096%" y="645" width="0.1826%" height="15" fill="rgb(231,104,20)" fg:x="33971" fg:w="192"/><text x="32.5596%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (185 samples, 0.18%)</title><rect x="32.3163%" y="629" width="0.1760%" height="15" fill="rgb(254,36,13)" fg:x="33978" fg:w="185"/><text x="32.5663%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (185 samples, 0.18%)</title><rect x="32.3163%" y="613" width="0.1760%" height="15" fill="rgb(248,14,50)" fg:x="33978" fg:w="185"/><text x="32.5663%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (185 samples, 0.18%)</title><rect x="32.3163%" y="597" width="0.1760%" height="15" fill="rgb(217,107,29)" fg:x="33978" fg:w="185"/><text x="32.5663%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (185 samples, 0.18%)</title><rect x="32.3163%" y="581" width="0.1760%" height="15" fill="rgb(251,169,33)" fg:x="33978" fg:w="185"/><text x="32.5663%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (184 samples, 0.18%)</title><rect x="32.3172%" y="565" width="0.1750%" height="15" fill="rgb(217,108,32)" fg:x="33979" fg:w="184"/><text x="32.5672%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (182 samples, 0.17%)</title><rect x="32.3191%" y="549" width="0.1731%" height="15" fill="rgb(219,66,42)" fg:x="33981" fg:w="182"/><text x="32.5691%" y="559.50"></text></g><g><title>TaskPool_(9) (230 samples, 0.22%)</title><rect x="32.3020%" y="1013" width="0.2188%" height="15" fill="rgb(206,180,7)" fg:x="33963" fg:w="230"/><text x="32.5520%" y="1023.50"></text></g><g><title>__GI___clone (223 samples, 0.21%)</title><rect x="32.3087%" y="997" width="0.2121%" height="15" fill="rgb(208,226,31)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="1007.50"></text></g><g><title>start_thread (223 samples, 0.21%)</title><rect x="32.3087%" y="981" width="0.2121%" height="15" fill="rgb(218,26,49)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (223 samples, 0.21%)</title><rect x="32.3087%" y="965" width="0.2121%" height="15" fill="rgb(233,197,48)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (223 samples, 0.21%)</title><rect x="32.3087%" y="949" width="0.2121%" height="15" fill="rgb(252,181,51)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (223 samples, 0.21%)</title><rect x="32.3087%" y="933" width="0.2121%" height="15" fill="rgb(253,90,19)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (223 samples, 0.21%)</title><rect x="32.3087%" y="917" width="0.2121%" height="15" fill="rgb(215,171,30)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (223 samples, 0.21%)</title><rect x="32.3087%" y="901" width="0.2121%" height="15" fill="rgb(214,222,9)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="911.50"></text></g><g><title>std::panic::catch_unwind (223 samples, 0.21%)</title><rect x="32.3087%" y="885" width="0.2121%" height="15" fill="rgb(223,3,22)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="895.50"></text></g><g><title>std::panicking::try (223 samples, 0.21%)</title><rect x="32.3087%" y="869" width="0.2121%" height="15" fill="rgb(225,196,46)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="879.50"></text></g><g><title>std::panicking::try::do_call (223 samples, 0.21%)</title><rect x="32.3087%" y="853" width="0.2121%" height="15" fill="rgb(209,110,37)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (223 samples, 0.21%)</title><rect x="32.3087%" y="837" width="0.2121%" height="15" fill="rgb(249,89,12)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (223 samples, 0.21%)</title><rect x="32.3087%" y="821" width="0.2121%" height="15" fill="rgb(226,27,33)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (223 samples, 0.21%)</title><rect x="32.3087%" y="805" width="0.2121%" height="15" fill="rgb(213,82,22)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (223 samples, 0.21%)</title><rect x="32.3087%" y="789" width="0.2121%" height="15" fill="rgb(248,140,0)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="799.50"></text></g><g><title>futures_lite::future::block_on (223 samples, 0.21%)</title><rect x="32.3087%" y="773" width="0.2121%" height="15" fill="rgb(228,106,3)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (223 samples, 0.21%)</title><rect x="32.3087%" y="757" width="0.2121%" height="15" fill="rgb(209,23,37)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (223 samples, 0.21%)</title><rect x="32.3087%" y="741" width="0.2121%" height="15" fill="rgb(241,93,50)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (223 samples, 0.21%)</title><rect x="32.3087%" y="725" width="0.2121%" height="15" fill="rgb(253,46,43)" fg:x="33970" fg:w="223"/><text x="32.5587%" y="735.50"></text></g><g><title>parking::Parker::park (30 samples, 0.03%)</title><rect x="32.4922%" y="709" width="0.0285%" height="15" fill="rgb(226,206,43)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="719.50"></text></g><g><title>parking::Inner::park (30 samples, 0.03%)</title><rect x="32.4922%" y="693" width="0.0285%" height="15" fill="rgb(217,54,7)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="32.4922%" y="677" width="0.0285%" height="15" fill="rgb(223,5,52)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="32.4922%" y="661" width="0.0285%" height="15" fill="rgb(206,52,46)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (30 samples, 0.03%)</title><rect x="32.4922%" y="645" width="0.0285%" height="15" fill="rgb(253,136,11)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (30 samples, 0.03%)</title><rect x="32.4922%" y="629" width="0.0285%" height="15" fill="rgb(208,106,33)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (30 samples, 0.03%)</title><rect x="32.4922%" y="613" width="0.0285%" height="15" fill="rgb(206,54,4)" fg:x="34163" fg:w="30"/><text x="32.7422%" y="623.50"></text></g><g><title>syscall (29 samples, 0.03%)</title><rect x="32.4932%" y="597" width="0.0276%" height="15" fill="rgb(213,3,15)" fg:x="34164" fg:w="29"/><text x="32.7432%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common (28 samples, 0.03%)</title><rect x="32.5293%" y="901" width="0.0266%" height="15" fill="rgb(252,211,39)" fg:x="34202" fg:w="28"/><text x="32.7793%" y="911.50"></text></g><g><title>_nv011glcore (31 samples, 0.03%)</title><rect x="32.5274%" y="933" width="0.0295%" height="15" fill="rgb(223,6,36)" fg:x="34200" fg:w="31"/><text x="32.7774%" y="943.50"></text></g><g><title>___pthread_cond_timedwait (29 samples, 0.03%)</title><rect x="32.5293%" y="917" width="0.0276%" height="15" fill="rgb(252,169,45)" fg:x="34202" fg:w="29"/><text x="32.7793%" y="927.50"></text></g><g><title>[vkrt]_Analysis (40 samples, 0.04%)</title><rect x="32.5208%" y="1013" width="0.0380%" height="15" fill="rgb(212,48,26)" fg:x="34193" fg:w="40"/><text x="32.7708%" y="1023.50"></text></g><g><title>__GI___clone (39 samples, 0.04%)</title><rect x="32.5217%" y="997" width="0.0371%" height="15" fill="rgb(251,102,48)" fg:x="34194" fg:w="39"/><text x="32.7717%" y="1007.50"></text></g><g><title>start_thread (35 samples, 0.03%)</title><rect x="32.5255%" y="981" width="0.0333%" height="15" fill="rgb(243,208,16)" fg:x="34198" fg:w="35"/><text x="32.7755%" y="991.50"></text></g><g><title>_nv011glcore (35 samples, 0.03%)</title><rect x="32.5255%" y="965" width="0.0333%" height="15" fill="rgb(219,96,24)" fg:x="34198" fg:w="35"/><text x="32.7755%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (35 samples, 0.03%)</title><rect x="32.5255%" y="949" width="0.0333%" height="15" fill="rgb(219,33,29)" fg:x="34198" fg:w="35"/><text x="32.7755%" y="959.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="32.5731%" y="997" width="0.0181%" height="15" fill="rgb(223,176,5)" fg:x="34248" fg:w="19"/><text x="32.8231%" y="1007.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (62 samples, 0.06%)</title><rect x="32.5931%" y="757" width="0.0590%" height="15" fill="rgb(228,140,14)" fg:x="34269" fg:w="62"/><text x="32.8431%" y="767.50"></text></g><g><title>alsa::poll::poll (44 samples, 0.04%)</title><rect x="32.6102%" y="741" width="0.0418%" height="15" fill="rgb(217,179,31)" fg:x="34287" fg:w="44"/><text x="32.8602%" y="751.50"></text></g><g><title>__libc_poll (43 samples, 0.04%)</title><rect x="32.6111%" y="725" width="0.0409%" height="15" fill="rgb(230,9,30)" fg:x="34288" fg:w="43"/><text x="32.8611%" y="735.50"></text></g><g><title>core::mem::swap (15 samples, 0.01%)</title><rect x="32.6768%" y="645" width="0.0143%" height="15" fill="rgb(230,136,20)" fg:x="34357" fg:w="15"/><text x="32.9268%" y="655.50"></text></g><g><title>core::mem::swap_simple (15 samples, 0.01%)</title><rect x="32.6768%" y="629" width="0.0143%" height="15" fill="rgb(215,210,22)" fg:x="34357" fg:w="15"/><text x="32.9268%" y="639.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="32.6587%" y="677" width="0.0399%" height="15" fill="rgb(218,43,5)" fg:x="34338" fg:w="42"/><text x="32.9087%" y="687.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (29 samples, 0.03%)</title><rect x="32.6711%" y="661" width="0.0276%" height="15" fill="rgb(216,11,5)" fg:x="34351" fg:w="29"/><text x="32.9211%" y="671.50"></text></g><g><title>__GI___clone (115 samples, 0.11%)</title><rect x="32.5912%" y="997" width="0.1094%" height="15" fill="rgb(209,82,29)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="1007.50"></text></g><g><title>start_thread (115 samples, 0.11%)</title><rect x="32.5912%" y="981" width="0.1094%" height="15" fill="rgb(244,115,12)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (115 samples, 0.11%)</title><rect x="32.5912%" y="965" width="0.1094%" height="15" fill="rgb(222,82,18)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (115 samples, 0.11%)</title><rect x="32.5912%" y="949" width="0.1094%" height="15" fill="rgb(249,227,8)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (115 samples, 0.11%)</title><rect x="32.5912%" y="933" width="0.1094%" height="15" fill="rgb(253,141,45)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (115 samples, 0.11%)</title><rect x="32.5912%" y="917" width="0.1094%" height="15" fill="rgb(234,184,4)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (115 samples, 0.11%)</title><rect x="32.5912%" y="901" width="0.1094%" height="15" fill="rgb(218,194,23)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="911.50"></text></g><g><title>std::panic::catch_unwind (115 samples, 0.11%)</title><rect x="32.5912%" y="885" width="0.1094%" height="15" fill="rgb(235,66,41)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="895.50"></text></g><g><title>std::panicking::try (115 samples, 0.11%)</title><rect x="32.5912%" y="869" width="0.1094%" height="15" fill="rgb(245,217,1)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="879.50"></text></g><g><title>std::panicking::try::do_call (115 samples, 0.11%)</title><rect x="32.5912%" y="853" width="0.1094%" height="15" fill="rgb(229,91,1)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (115 samples, 0.11%)</title><rect x="32.5912%" y="837" width="0.1094%" height="15" fill="rgb(207,101,30)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (115 samples, 0.11%)</title><rect x="32.5912%" y="821" width="0.1094%" height="15" fill="rgb(223,82,49)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (115 samples, 0.11%)</title><rect x="32.5912%" y="805" width="0.1094%" height="15" fill="rgb(218,167,17)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="815.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (115 samples, 0.11%)</title><rect x="32.5912%" y="789" width="0.1094%" height="15" fill="rgb(208,103,14)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="799.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (115 samples, 0.11%)</title><rect x="32.5912%" y="773" width="0.1094%" height="15" fill="rgb(238,20,8)" fg:x="34267" fg:w="115"/><text x="32.8412%" y="783.50"></text></g><g><title>cpal::host::alsa::process_output (51 samples, 0.05%)</title><rect x="32.6520%" y="757" width="0.0485%" height="15" fill="rgb(218,80,54)" fg:x="34331" fg:w="51"/><text x="32.9020%" y="767.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (45 samples, 0.04%)</title><rect x="32.6577%" y="741" width="0.0428%" height="15" fill="rgb(240,144,17)" fg:x="34337" fg:w="45"/><text x="32.9077%" y="751.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (45 samples, 0.04%)</title><rect x="32.6577%" y="725" width="0.0428%" height="15" fill="rgb(245,27,50)" fg:x="34337" fg:w="45"/><text x="32.9077%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (45 samples, 0.04%)</title><rect x="32.6577%" y="709" width="0.0428%" height="15" fill="rgb(251,51,7)" fg:x="34337" fg:w="45"/><text x="32.9077%" y="719.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (45 samples, 0.04%)</title><rect x="32.6577%" y="693" width="0.0428%" height="15" fill="rgb(245,217,29)" fg:x="34337" fg:w="45"/><text x="32.9077%" y="703.50"></text></g><g><title>cpal_alsa_out (152 samples, 0.14%)</title><rect x="32.5588%" y="1013" width="0.1446%" height="15" fill="rgb(221,176,29)" fg:x="34233" fg:w="152"/><text x="32.8088%" y="1023.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="32.7605%" y="981" width="0.0181%" height="15" fill="rgb(212,180,24)" fg:x="34445" fg:w="19"/><text x="33.0105%" y="991.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="32.7643%" y="965" width="0.0143%" height="15" fill="rgb(254,24,2)" fg:x="34449" fg:w="15"/><text x="33.0143%" y="975.50"></text></g><g><title>_nv011glcore (22 samples, 0.02%)</title><rect x="32.8213%" y="981" width="0.0209%" height="15" fill="rgb(230,100,2)" fg:x="34509" fg:w="22"/><text x="33.0713%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (242 samples, 0.23%)</title><rect x="32.8508%" y="981" width="0.2302%" height="15" fill="rgb(219,142,25)" fg:x="34540" fg:w="242"/><text x="33.1008%" y="991.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (21 samples, 0.02%)</title><rect x="33.1019%" y="981" width="0.0200%" height="15" fill="rgb(240,73,43)" fg:x="34804" fg:w="21"/><text x="33.3519%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (12 samples, 0.01%)</title><rect x="33.1219%" y="981" width="0.0114%" height="15" fill="rgb(214,114,15)" fg:x="34825" fg:w="12"/><text x="33.3719%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (167 samples, 0.16%)</title><rect x="33.1380%" y="981" width="0.1588%" height="15" fill="rgb(207,130,4)" fg:x="34842" fg:w="167"/><text x="33.3880%" y="991.50"></text></g><g><title>glXCreateGLXPbufferSGIX (17 samples, 0.02%)</title><rect x="33.3283%" y="981" width="0.0162%" height="15" fill="rgb(221,25,40)" fg:x="35042" fg:w="17"/><text x="33.5783%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (111 samples, 0.11%)</title><rect x="33.3711%" y="981" width="0.1056%" height="15" fill="rgb(241,184,7)" fg:x="35087" fg:w="111"/><text x="33.6211%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (44 samples, 0.04%)</title><rect x="33.4890%" y="981" width="0.0418%" height="15" fill="rgb(235,159,4)" fg:x="35211" fg:w="44"/><text x="33.7390%" y="991.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (115 samples, 0.11%)</title><rect x="33.5308%" y="981" width="0.1094%" height="15" fill="rgb(214,87,48)" fg:x="35255" fg:w="115"/><text x="33.7808%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (13 samples, 0.01%)</title><rect x="33.6792%" y="981" width="0.0124%" height="15" fill="rgb(246,198,24)" fg:x="35411" fg:w="13"/><text x="33.9292%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.01%)</title><rect x="33.6916%" y="981" width="0.0105%" height="15" fill="rgb(209,66,40)" fg:x="35424" fg:w="11"/><text x="33.9416%" y="991.50"></text></g><g><title>[[heap]] (1,042 samples, 0.99%)</title><rect x="32.7120%" y="997" width="0.9910%" height="15" fill="rgb(233,147,39)" fg:x="34394" fg:w="1042"/><text x="32.9620%" y="1007.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (280 samples, 0.27%)</title><rect x="33.7030%" y="981" width="0.2663%" height="15" fill="rgb(231,145,52)" fg:x="35436" fg:w="280"/><text x="33.9530%" y="991.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 0.13%)</title><rect x="33.8399%" y="965" width="0.1293%" height="15" fill="rgb(206,20,26)" fg:x="35580" fg:w="136"/><text x="34.0899%" y="975.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (136 samples, 0.13%)</title><rect x="33.8399%" y="949" width="0.1293%" height="15" fill="rgb(238,220,4)" fg:x="35580" fg:w="136"/><text x="34.0899%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (12 samples, 0.01%)</title><rect x="33.9807%" y="981" width="0.0114%" height="15" fill="rgb(252,195,42)" fg:x="35728" fg:w="12"/><text x="34.2307%" y="991.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (236 samples, 0.22%)</title><rect x="33.9969%" y="981" width="0.2245%" height="15" fill="rgb(209,10,6)" fg:x="35745" fg:w="236"/><text x="34.2469%" y="991.50"></text></g><g><title>_dl_update_slotinfo (1,077 samples, 1.02%)</title><rect x="34.2318%" y="981" width="1.0243%" height="15" fill="rgb(229,3,52)" fg:x="35992" fg:w="1077"/><text x="34.4818%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="35.4216%" y="933" width="0.1208%" height="15" fill="rgb(253,49,37)" fg:x="37243" fg:w="127"/><text x="35.6716%" y="943.50"></text></g><g><title>async_task::header::Header::register (414 samples, 0.39%)</title><rect x="35.2866%" y="981" width="0.3938%" height="15" fill="rgb(240,103,49)" fg:x="37101" fg:w="414"/><text x="35.5366%" y="991.50"></text></g><g><title>async_task::utils::abort_on_panic (272 samples, 0.26%)</title><rect x="35.4216%" y="965" width="0.2587%" height="15" fill="rgb(250,182,30)" fg:x="37243" fg:w="272"/><text x="35.6716%" y="975.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (272 samples, 0.26%)</title><rect x="35.4216%" y="949" width="0.2587%" height="15" fill="rgb(248,8,30)" fg:x="37243" fg:w="272"/><text x="35.6716%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (145 samples, 0.14%)</title><rect x="35.5424%" y="933" width="0.1379%" height="15" fill="rgb(237,120,30)" fg:x="37370" fg:w="145"/><text x="35.7924%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (145 samples, 0.14%)</title><rect x="35.5424%" y="917" width="0.1379%" height="15" fill="rgb(221,146,34)" fg:x="37370" fg:w="145"/><text x="35.7924%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (145 samples, 0.14%)</title><rect x="35.5424%" y="901" width="0.1379%" height="15" fill="rgb(242,55,13)" fg:x="37370" fg:w="145"/><text x="35.7924%" y="911.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (70 samples, 0.07%)</title><rect x="35.6955%" y="981" width="0.0666%" height="15" fill="rgb(242,112,31)" fg:x="37531" fg:w="70"/><text x="35.9455%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (292 samples, 0.28%)</title><rect x="35.8268%" y="981" width="0.2777%" height="15" fill="rgb(249,192,27)" fg:x="37669" fg:w="292"/><text x="36.0768%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (127 samples, 0.12%)</title><rect x="35.9837%" y="965" width="0.1208%" height="15" fill="rgb(208,204,44)" fg:x="37834" fg:w="127"/><text x="36.2337%" y="975.50"></text></g><g><title>update_get_addr (263 samples, 0.25%)</title><rect x="36.1150%" y="981" width="0.2501%" height="15" fill="rgb(208,93,54)" fg:x="37972" fg:w="263"/><text x="36.3650%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.02%)</title><rect x="36.3680%" y="981" width="0.0181%" height="15" fill="rgb(242,1,31)" fg:x="38238" fg:w="19"/><text x="36.6180%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="36.3955%" y="965" width="0.0152%" height="15" fill="rgb(241,83,25)" fg:x="38267" fg:w="16"/><text x="36.6455%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (16 samples, 0.02%)</title><rect x="36.3955%" y="949" width="0.0152%" height="15" fill="rgb(205,169,50)" fg:x="38267" fg:w="16"/><text x="36.6455%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (25 samples, 0.02%)</title><rect x="36.3898%" y="981" width="0.0238%" height="15" fill="rgb(239,186,37)" fg:x="38261" fg:w="25"/><text x="36.6398%" y="991.50"></text></g><g><title>[[stack]] (2,876 samples, 2.74%)</title><rect x="33.7030%" y="997" width="2.7353%" height="15" fill="rgb(205,221,10)" fg:x="35436" fg:w="2876"/><text x="33.9530%" y="1007.50">[[..</text></g><g><title>async_executor::Executor::try_tick (504 samples, 0.48%)</title><rect x="36.4574%" y="981" width="0.4794%" height="15" fill="rgb(218,196,15)" fg:x="38332" fg:w="504"/><text x="36.7074%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (140 samples, 0.13%)</title><rect x="36.8036%" y="965" width="0.1332%" height="15" fill="rgb(218,196,35)" fg:x="38696" fg:w="140"/><text x="37.0536%" y="975.50"></text></g><g><title>async_task::header::Header::register (153 samples, 0.15%)</title><rect x="36.9367%" y="981" width="0.1455%" height="15" fill="rgb(233,63,24)" fg:x="38836" fg:w="153"/><text x="37.1867%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (411 samples, 0.39%)</title><rect x="37.0870%" y="981" width="0.3909%" height="15" fill="rgb(225,8,4)" fg:x="38994" fg:w="411"/><text x="37.3370%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="37.4883%" y="981" width="0.0304%" height="15" fill="rgb(234,105,35)" fg:x="39416" fg:w="32"/><text x="37.7383%" y="991.50"></text></g><g><title>update_get_addr (290 samples, 0.28%)</title><rect x="37.5235%" y="981" width="0.2758%" height="15" fill="rgb(236,21,32)" fg:x="39453" fg:w="290"/><text x="37.7735%" y="991.50"></text></g><g><title>[anon] (1,442 samples, 1.37%)</title><rect x="36.4383%" y="997" width="1.3715%" height="15" fill="rgb(228,109,6)" fg:x="38312" fg:w="1442"/><text x="36.6883%" y="1007.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (268 samples, 0.25%)</title><rect x="37.8155%" y="981" width="0.2549%" height="15" fill="rgb(229,215,31)" fg:x="39760" fg:w="268"/><text x="38.0655%" y="991.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (16 samples, 0.02%)</title><rect x="38.0856%" y="981" width="0.0152%" height="15" fill="rgb(221,52,54)" fg:x="40044" fg:w="16"/><text x="38.3356%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (14 samples, 0.01%)</title><rect x="38.1056%" y="773" width="0.0133%" height="15" fill="rgb(252,129,43)" fg:x="40065" fg:w="14"/><text x="38.3556%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (14 samples, 0.01%)</title><rect x="38.1056%" y="757" width="0.0133%" height="15" fill="rgb(248,183,27)" fg:x="40065" fg:w="14"/><text x="38.3556%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="38.1056%" y="741" width="0.0133%" height="15" fill="rgb(250,0,22)" fg:x="40065" fg:w="14"/><text x="38.3556%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.01%)</title><rect x="38.1056%" y="725" width="0.0133%" height="15" fill="rgb(213,166,10)" fg:x="40065" fg:w="14"/><text x="38.3556%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (16 samples, 0.02%)</title><rect x="38.1047%" y="965" width="0.0152%" height="15" fill="rgb(207,163,36)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (16 samples, 0.02%)</title><rect x="38.1047%" y="949" width="0.0152%" height="15" fill="rgb(208,122,22)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="38.1047%" y="933" width="0.0152%" height="15" fill="rgb(207,104,49)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.02%)</title><rect x="38.1047%" y="917" width="0.0152%" height="15" fill="rgb(248,211,50)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (16 samples, 0.02%)</title><rect x="38.1047%" y="901" width="0.0152%" height="15" fill="rgb(217,13,45)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="911.50"></text></g><g><title>async_executor::Executor::try_tick (16 samples, 0.02%)</title><rect x="38.1047%" y="885" width="0.0152%" height="15" fill="rgb(211,216,49)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16 samples, 0.02%)</title><rect x="38.1047%" y="869" width="0.0152%" height="15" fill="rgb(221,58,53)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="38.1047%" y="853" width="0.0152%" height="15" fill="rgb(220,112,41)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="863.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (16 samples, 0.02%)</title><rect x="38.1047%" y="837" width="0.0152%" height="15" fill="rgb(236,38,28)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="38.1047%" y="821" width="0.0152%" height="15" fill="rgb(227,195,22)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (16 samples, 0.02%)</title><rect x="38.1047%" y="805" width="0.0152%" height="15" fill="rgb(214,55,33)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (16 samples, 0.02%)</title><rect x="38.1047%" y="789" width="0.0152%" height="15" fill="rgb(248,80,13)" fg:x="40064" fg:w="16"/><text x="38.3547%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (11 samples, 0.01%)</title><rect x="38.1208%" y="613" width="0.0105%" height="15" fill="rgb(238,52,6)" fg:x="40081" fg:w="11"/><text x="38.3708%" y="623.50"></text></g><g><title>alloc::slice::merge_sort (11 samples, 0.01%)</title><rect x="38.1208%" y="597" width="0.0105%" height="15" fill="rgb(224,198,47)" fg:x="40081" fg:w="11"/><text x="38.3708%" y="607.50"></text></g><g><title>alloc::fmt::format (12 samples, 0.01%)</title><rect x="38.1446%" y="581" width="0.0114%" height="15" fill="rgb(233,171,20)" fg:x="40106" fg:w="12"/><text x="38.3946%" y="591.50"></text></g><g><title>bevy_ecs::world::World::get_entity (14 samples, 0.01%)</title><rect x="38.1560%" y="581" width="0.0133%" height="15" fill="rgb(241,30,25)" fg:x="40118" fg:w="14"/><text x="38.4060%" y="591.50"></text></g><g><title>bevy_ecs::entity::Entities::get (12 samples, 0.01%)</title><rect x="38.1579%" y="565" width="0.0114%" height="15" fill="rgb(207,171,38)" fg:x="40120" fg:w="12"/><text x="38.4079%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.01%)</title><rect x="38.1979%" y="389" width="0.0105%" height="15" fill="rgb(234,70,1)" fg:x="40162" fg:w="11"/><text x="38.4479%" y="399.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="38.1979%" y="373" width="0.0105%" height="15" fill="rgb(232,178,18)" fg:x="40162" fg:w="11"/><text x="38.4479%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.01%)</title><rect x="38.1979%" y="405" width="0.0133%" height="15" fill="rgb(241,78,40)" fg:x="40162" fg:w="14"/><text x="38.4479%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (33 samples, 0.03%)</title><rect x="38.1846%" y="453" width="0.0314%" height="15" fill="rgb(222,35,25)" fg:x="40148" fg:w="33"/><text x="38.4346%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="38.1846%" y="437" width="0.0314%" height="15" fill="rgb(207,92,16)" fg:x="40148" fg:w="33"/><text x="38.4346%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (33 samples, 0.03%)</title><rect x="38.1846%" y="421" width="0.0314%" height="15" fill="rgb(216,59,51)" fg:x="40148" fg:w="33"/><text x="38.4346%" y="431.50"></text></g><g><title>bevy_ecs::component::Components::get_id (37 samples, 0.04%)</title><rect x="38.1826%" y="517" width="0.0352%" height="15" fill="rgb(213,80,28)" fg:x="40146" fg:w="37"/><text x="38.4326%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (37 samples, 0.04%)</title><rect x="38.1826%" y="501" width="0.0352%" height="15" fill="rgb(220,93,7)" fg:x="40146" fg:w="37"/><text x="38.4326%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (37 samples, 0.04%)</title><rect x="38.1826%" y="485" width="0.0352%" height="15" fill="rgb(225,24,44)" fg:x="40146" fg:w="37"/><text x="38.4326%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.04%)</title><rect x="38.1826%" y="469" width="0.0352%" height="15" fill="rgb(243,74,40)" fg:x="40146" fg:w="37"/><text x="38.4326%" y="479.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::contains (58 samples, 0.06%)</title><rect x="38.1760%" y="565" width="0.0552%" height="15" fill="rgb(228,39,7)" fg:x="40139" fg:w="58"/><text x="38.4260%" y="575.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::contains_type_id (58 samples, 0.06%)</title><rect x="38.1760%" y="549" width="0.0552%" height="15" fill="rgb(227,79,8)" fg:x="40139" fg:w="58"/><text x="38.4260%" y="559.50"></text></g><g><title>bevy_ecs::world::entity_ref::contains_component_with_type (54 samples, 0.05%)</title><rect x="38.1798%" y="533" width="0.0514%" height="15" fill="rgb(236,58,11)" fg:x="40143" fg:w="54"/><text x="38.4298%" y="543.50"></text></g><g><title>bevy_ecs::world::entity_ref::contains_component_with_id (14 samples, 0.01%)</title><rect x="38.2178%" y="517" width="0.0133%" height="15" fill="rgb(249,63,35)" fg:x="40183" fg:w="14"/><text x="38.4678%" y="527.50"></text></g><g><title>bevy_ecs::archetype::Archetype::contains (12 samples, 0.01%)</title><rect x="38.2197%" y="501" width="0.0114%" height="15" fill="rgb(252,114,16)" fg:x="40185" fg:w="12"/><text x="38.4697%" y="511.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::contains (12 samples, 0.01%)</title><rect x="38.2197%" y="485" width="0.0114%" height="15" fill="rgb(254,151,24)" fg:x="40185" fg:w="12"/><text x="38.4697%" y="495.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::contains (12 samples, 0.01%)</title><rect x="38.2197%" y="469" width="0.0114%" height="15" fill="rgb(253,54,39)" fg:x="40185" fg:w="12"/><text x="38.4697%" y="479.50"></text></g><g><title>bevy_ecs::component::Components::get_id (24 samples, 0.02%)</title><rect x="38.2321%" y="533" width="0.0228%" height="15" fill="rgb(243,25,45)" fg:x="40198" fg:w="24"/><text x="38.4821%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.02%)</title><rect x="38.2321%" y="517" width="0.0228%" height="15" fill="rgb(234,134,9)" fg:x="40198" fg:w="24"/><text x="38.4821%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24 samples, 0.02%)</title><rect x="38.2321%" y="501" width="0.0228%" height="15" fill="rgb(227,166,31)" fg:x="40198" fg:w="24"/><text x="38.4821%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.02%)</title><rect x="38.2321%" y="485" width="0.0228%" height="15" fill="rgb(245,143,41)" fg:x="40198" fg:w="24"/><text x="38.4821%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (23 samples, 0.02%)</title><rect x="38.2331%" y="469" width="0.0219%" height="15" fill="rgb(238,181,32)" fg:x="40199" fg:w="23"/><text x="38.4831%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.02%)</title><rect x="38.2331%" y="453" width="0.0219%" height="15" fill="rgb(224,113,18)" fg:x="40199" fg:w="23"/><text x="38.4831%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.02%)</title><rect x="38.2331%" y="437" width="0.0219%" height="15" fill="rgb(240,229,28)" fg:x="40199" fg:w="23"/><text x="38.4831%" y="447.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (15 samples, 0.01%)</title><rect x="38.2549%" y="533" width="0.0143%" height="15" fill="rgb(250,185,3)" fg:x="40222" fg:w="15"/><text x="38.5049%" y="543.50"></text></g><g><title>bevy_inspector_egui::world_inspector::entity_name (136 samples, 0.13%)</title><rect x="38.1418%" y="597" width="0.1293%" height="15" fill="rgb(212,59,25)" fg:x="40103" fg:w="136"/><text x="38.3918%" y="607.50"></text></g><g><title>bevy_inspector_egui::world_inspector::guess_entity_name_inner (107 samples, 0.10%)</title><rect x="38.1693%" y="581" width="0.1018%" height="15" fill="rgb(221,87,20)" fg:x="40132" fg:w="107"/><text x="38.4193%" y="591.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (42 samples, 0.04%)</title><rect x="38.2312%" y="565" width="0.0399%" height="15" fill="rgb(213,74,28)" fg:x="40197" fg:w="42"/><text x="38.4812%" y="575.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (41 samples, 0.04%)</title><rect x="38.2321%" y="549" width="0.0390%" height="15" fill="rgb(224,132,34)" fg:x="40198" fg:w="41"/><text x="38.4821%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::containers::collapsing_header::CollapsingResponse&lt;bool&gt;&gt; (12 samples, 0.01%)</title><rect x="38.2711%" y="597" width="0.0114%" height="15" fill="rgb(222,101,24)" fg:x="40239" fg:w="12"/><text x="38.5211%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::response::Response&gt; (12 samples, 0.01%)</title><rect x="38.2711%" y="581" width="0.0114%" height="15" fill="rgb(254,142,4)" fg:x="40239" fg:w="12"/><text x="38.5211%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::context::Context&gt; (12 samples, 0.01%)</title><rect x="38.2711%" y="565" width="0.0114%" height="15" fill="rgb(230,229,49)" fg:x="40239" fg:w="12"/><text x="38.5211%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;epaint::mutex::rw_lock_impl::RwLock&lt;egui::context::ContextImpl&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="38.2711%" y="549" width="0.0114%" height="15" fill="rgb(238,70,47)" fg:x="40239" fg:w="12"/><text x="38.5211%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="38.2711%" y="533" width="0.0114%" height="15" fill="rgb(231,160,17)" fg:x="40239" fg:w="12"/><text x="38.5211%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="38.2721%" y="517" width="0.0105%" height="15" fill="rgb(218,68,53)" fg:x="40240" fg:w="11"/><text x="38.5221%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="38.2721%" y="501" width="0.0105%" height="15" fill="rgb(236,111,10)" fg:x="40240" fg:w="11"/><text x="38.5221%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="38.2873%" y="581" width="0.0247%" height="15" fill="rgb(224,34,41)" fg:x="40256" fg:w="26"/><text x="38.5373%" y="591.50"></text></g><g><title>&lt;egui::widget_text::WidgetText as core::convert::From&lt;alloc::string::String&gt;&gt;::from (26 samples, 0.02%)</title><rect x="38.2873%" y="565" width="0.0247%" height="15" fill="rgb(241,118,19)" fg:x="40256" fg:w="26"/><text x="38.5373%" y="575.50"></text></g><g><title>egui::widget_text::WidgetText::RichText (19 samples, 0.02%)</title><rect x="38.2939%" y="549" width="0.0181%" height="15" fill="rgb(238,129,25)" fg:x="40263" fg:w="19"/><text x="38.5439%" y="559.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::new (31 samples, 0.03%)</title><rect x="38.2873%" y="597" width="0.0295%" height="15" fill="rgb(238,22,31)" fg:x="40256" fg:w="31"/><text x="38.5373%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="38.3206%" y="581" width="0.0105%" height="15" fill="rgb(222,174,48)" fg:x="40291" fg:w="11"/><text x="38.5706%" y="591.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show (16 samples, 0.02%)</title><rect x="38.3168%" y="597" width="0.0152%" height="15" fill="rgb(206,152,40)" fg:x="40287" fg:w="16"/><text x="38.5668%" y="607.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::entity_ui (213 samples, 0.20%)</title><rect x="38.1360%" y="613" width="0.2026%" height="15" fill="rgb(218,99,54)" fg:x="40097" fg:w="213"/><text x="38.3860%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.05%)</title><rect x="38.3386%" y="517" width="0.0504%" height="15" fill="rgb(220,174,26)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.05%)</title><rect x="38.3386%" y="501" width="0.0504%" height="15" fill="rgb(245,116,9)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.05%)</title><rect x="38.3386%" y="485" width="0.0504%" height="15" fill="rgb(209,72,35)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.05%)</title><rect x="38.3386%" y="469" width="0.0504%" height="15" fill="rgb(226,126,21)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (53 samples, 0.05%)</title><rect x="38.3386%" y="453" width="0.0504%" height="15" fill="rgb(227,192,1)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (53 samples, 0.05%)</title><rect x="38.3386%" y="437" width="0.0504%" height="15" fill="rgb(237,180,29)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (53 samples, 0.05%)</title><rect x="38.3386%" y="421" width="0.0504%" height="15" fill="rgb(230,197,35)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="431.50"></text></g><g><title>alloc::alloc::realloc (53 samples, 0.05%)</title><rect x="38.3386%" y="405" width="0.0504%" height="15" fill="rgb(246,193,31)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="415.50"></text></g><g><title>__realloc (53 samples, 0.05%)</title><rect x="38.3386%" y="389" width="0.0504%" height="15" fill="rgb(241,36,4)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="399.50"></text></g><g><title>_int_realloc (53 samples, 0.05%)</title><rect x="38.3386%" y="373" width="0.0504%" height="15" fill="rgb(241,130,17)" fg:x="40310" fg:w="53"/><text x="38.5886%" y="383.50"></text></g><g><title>_int_malloc (50 samples, 0.05%)</title><rect x="38.3415%" y="357" width="0.0476%" height="15" fill="rgb(206,137,32)" fg:x="40313" fg:w="50"/><text x="38.5915%" y="367.50"></text></g><g><title>malloc_consolidate (40 samples, 0.04%)</title><rect x="38.3510%" y="341" width="0.0380%" height="15" fill="rgb(237,228,51)" fg:x="40323" fg:w="40"/><text x="38.6010%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (286 samples, 0.27%)</title><rect x="38.1199%" y="725" width="0.2720%" height="15" fill="rgb(243,6,42)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (286 samples, 0.27%)</title><rect x="38.1199%" y="709" width="0.2720%" height="15" fill="rgb(251,74,28)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="719.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show::{{closure}} (286 samples, 0.27%)</title><rect x="38.1199%" y="693" width="0.2720%" height="15" fill="rgb(218,20,49)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (286 samples, 0.27%)</title><rect x="38.1199%" y="677" width="0.2720%" height="15" fill="rgb(238,28,14)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (286 samples, 0.27%)</title><rect x="38.1199%" y="661" width="0.2720%" height="15" fill="rgb(229,40,46)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="671.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui::{{closure}} (286 samples, 0.27%)</title><rect x="38.1199%" y="645" width="0.2720%" height="15" fill="rgb(244,195,20)" fg:x="40080" fg:w="286"/><text x="38.3699%" y="655.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::world_ui (285 samples, 0.27%)</title><rect x="38.1208%" y="629" width="0.2711%" height="15" fill="rgb(253,56,35)" fg:x="40081" fg:w="285"/><text x="38.3708%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (56 samples, 0.05%)</title><rect x="38.3386%" y="613" width="0.0533%" height="15" fill="rgb(210,149,44)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (56 samples, 0.05%)</title><rect x="38.3386%" y="597" width="0.0533%" height="15" fill="rgb(240,135,12)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.05%)</title><rect x="38.3386%" y="581" width="0.0533%" height="15" fill="rgb(251,24,50)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (56 samples, 0.05%)</title><rect x="38.3386%" y="565" width="0.0533%" height="15" fill="rgb(243,200,47)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (56 samples, 0.05%)</title><rect x="38.3386%" y="549" width="0.0533%" height="15" fill="rgb(224,166,26)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (56 samples, 0.05%)</title><rect x="38.3386%" y="533" width="0.0533%" height="15" fill="rgb(233,0,47)" fg:x="40310" fg:w="56"/><text x="38.5886%" y="543.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui (288 samples, 0.27%)</title><rect x="38.1199%" y="933" width="0.2739%" height="15" fill="rgb(253,80,5)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="943.50"></text></g><g><title>egui::containers::window::Window::show (288 samples, 0.27%)</title><rect x="38.1199%" y="917" width="0.2739%" height="15" fill="rgb(214,133,25)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="927.50"></text></g><g><title>egui::containers::window::Window::show_dyn (288 samples, 0.27%)</title><rect x="38.1199%" y="901" width="0.2739%" height="15" fill="rgb(209,27,14)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="911.50"></text></g><g><title>egui::containers::collapsing_header::State::add_contents (288 samples, 0.27%)</title><rect x="38.1199%" y="885" width="0.2739%" height="15" fill="rgb(219,102,51)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="895.50"></text></g><g><title>egui::ui::Ui::scope (288 samples, 0.27%)</title><rect x="38.1199%" y="869" width="0.2739%" height="15" fill="rgb(237,18,16)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="879.50"></text></g><g><title>egui::ui::Ui::scope_dyn (288 samples, 0.27%)</title><rect x="38.1199%" y="853" width="0.2739%" height="15" fill="rgb(241,85,17)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (288 samples, 0.27%)</title><rect x="38.1199%" y="837" width="0.2739%" height="15" fill="rgb(236,90,42)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (288 samples, 0.27%)</title><rect x="38.1199%" y="821" width="0.2739%" height="15" fill="rgb(249,57,21)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="831.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}} (288 samples, 0.27%)</title><rect x="38.1199%" y="805" width="0.2739%" height="15" fill="rgb(243,12,36)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="815.50"></text></g><g><title>egui::containers::resize::Resize::show (288 samples, 0.27%)</title><rect x="38.1199%" y="789" width="0.2739%" height="15" fill="rgb(253,128,47)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="799.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}}::{{closure}} (288 samples, 0.27%)</title><rect x="38.1199%" y="773" width="0.2739%" height="15" fill="rgb(207,33,20)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="783.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show (288 samples, 0.27%)</title><rect x="38.1199%" y="757" width="0.2739%" height="15" fill="rgb(233,215,35)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="767.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show_viewport_dyn (288 samples, 0.27%)</title><rect x="38.1199%" y="741" width="0.2739%" height="15" fill="rgb(249,188,52)" fg:x="40080" fg:w="288"/><text x="38.3699%" y="751.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (11 samples, 0.01%)</title><rect x="38.3938%" y="901" width="0.0105%" height="15" fill="rgb(225,12,32)" fg:x="40368" fg:w="11"/><text x="38.6438%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.03%)</title><rect x="38.4147%" y="773" width="0.0314%" height="15" fill="rgb(247,98,14)" fg:x="40390" fg:w="33"/><text x="38.6647%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="38.4147%" y="757" width="0.0314%" height="15" fill="rgb(247,219,48)" fg:x="40390" fg:w="33"/><text x="38.6647%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="38.4147%" y="741" width="0.0314%" height="15" fill="rgb(253,60,48)" fg:x="40390" fg:w="33"/><text x="38.6647%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (50 samples, 0.05%)</title><rect x="38.4147%" y="821" width="0.0476%" height="15" fill="rgb(245,15,52)" fg:x="40390" fg:w="50"/><text x="38.6647%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (50 samples, 0.05%)</title><rect x="38.4147%" y="805" width="0.0476%" height="15" fill="rgb(220,133,28)" fg:x="40390" fg:w="50"/><text x="38.6647%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.05%)</title><rect x="38.4147%" y="789" width="0.0476%" height="15" fill="rgb(217,180,4)" fg:x="40390" fg:w="50"/><text x="38.6647%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;wgpu_hal::vulkan::Buffer&gt;&gt; (17 samples, 0.02%)</title><rect x="38.4461%" y="773" width="0.0162%" height="15" fill="rgb(251,24,1)" fg:x="40423" fg:w="17"/><text x="38.6961%" y="783.50"></text></g><g><title>__free (17 samples, 0.02%)</title><rect x="38.4461%" y="757" width="0.0162%" height="15" fill="rgb(212,185,49)" fg:x="40423" fg:w="17"/><text x="38.6961%" y="767.50"></text></g><g><title>_int_free (17 samples, 0.02%)</title><rect x="38.4461%" y="741" width="0.0162%" height="15" fill="rgb(215,175,22)" fg:x="40423" fg:w="17"/><text x="38.6961%" y="751.50"></text></g><g><title>malloc_consolidate (16 samples, 0.02%)</title><rect x="38.4471%" y="725" width="0.0152%" height="15" fill="rgb(250,205,14)" fg:x="40424" fg:w="16"/><text x="38.6971%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (84 samples, 0.08%)</title><rect x="38.4138%" y="837" width="0.0799%" height="15" fill="rgb(225,211,22)" fg:x="40389" fg:w="84"/><text x="38.6638%" y="847.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (33 samples, 0.03%)</title><rect x="38.4623%" y="821" width="0.0314%" height="15" fill="rgb(251,179,42)" fg:x="40440" fg:w="33"/><text x="38.7123%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (33 samples, 0.03%)</title><rect x="38.4623%" y="805" width="0.0314%" height="15" fill="rgb(208,216,51)" fg:x="40440" fg:w="33"/><text x="38.7123%" y="815.50"></text></g><g><title>ash::device::Device::reset_command_pool (32 samples, 0.03%)</title><rect x="38.4632%" y="789" width="0.0304%" height="15" fill="rgb(235,36,11)" fg:x="40441" fg:w="32"/><text x="38.7132%" y="799.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_pool (32 samples, 0.03%)</title><rect x="38.4632%" y="773" width="0.0304%" height="15" fill="rgb(213,189,28)" fg:x="40441" fg:w="32"/><text x="38.7132%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (32 samples, 0.03%)</title><rect x="38.4632%" y="757" width="0.0304%" height="15" fill="rgb(227,203,42)" fg:x="40441" fg:w="32"/><text x="38.7132%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.03%)</title><rect x="38.4670%" y="741" width="0.0266%" height="15" fill="rgb(244,72,36)" fg:x="40445" fg:w="28"/><text x="38.7170%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="38.4775%" y="725" width="0.0162%" height="15" fill="rgb(213,53,17)" fg:x="40456" fg:w="17"/><text x="38.7275%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (25 samples, 0.02%)</title><rect x="38.4984%" y="821" width="0.0238%" height="15" fill="rgb(207,167,3)" fg:x="40478" fg:w="25"/><text x="38.7484%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.02%)</title><rect x="38.4994%" y="805" width="0.0228%" height="15" fill="rgb(216,98,30)" fg:x="40479" fg:w="24"/><text x="38.7494%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.02%)</title><rect x="38.5022%" y="789" width="0.0200%" height="15" fill="rgb(236,123,15)" fg:x="40482" fg:w="21"/><text x="38.7522%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.02%)</title><rect x="38.5022%" y="773" width="0.0200%" height="15" fill="rgb(248,81,50)" fg:x="40482" fg:w="21"/><text x="38.7522%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.02%)</title><rect x="38.5032%" y="757" width="0.0190%" height="15" fill="rgb(214,120,4)" fg:x="40483" fg:w="20"/><text x="38.7532%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (20 samples, 0.02%)</title><rect x="38.5032%" y="741" width="0.0190%" height="15" fill="rgb(208,179,34)" fg:x="40483" fg:w="20"/><text x="38.7532%" y="751.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="38.5032%" y="725" width="0.0190%" height="15" fill="rgb(227,140,7)" fg:x="40483" fg:w="20"/><text x="38.7532%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="38.5450%" y="821" width="0.0171%" height="15" fill="rgb(214,22,6)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (18 samples, 0.02%)</title><rect x="38.5450%" y="805" width="0.0171%" height="15" fill="rgb(207,137,27)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="815.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="38.5450%" y="789" width="0.0171%" height="15" fill="rgb(210,8,46)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="799.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (18 samples, 0.02%)</title><rect x="38.5450%" y="773" width="0.0171%" height="15" fill="rgb(240,16,54)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="38.5450%" y="757" width="0.0171%" height="15" fill="rgb(211,209,29)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="38.5450%" y="741" width="0.0171%" height="15" fill="rgb(226,228,24)" fg:x="40527" fg:w="18"/><text x="38.7950%" y="751.50"></text></g><g><title>log::__private_api_log (13 samples, 0.01%)</title><rect x="38.5650%" y="821" width="0.0124%" height="15" fill="rgb(222,84,9)" fg:x="40548" fg:w="13"/><text x="38.8150%" y="831.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="38.5888%" y="773" width="0.0171%" height="15" fill="rgb(234,203,30)" fg:x="40573" fg:w="18"/><text x="38.8388%" y="783.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (18 samples, 0.02%)</title><rect x="38.5888%" y="757" width="0.0171%" height="15" fill="rgb(238,109,14)" fg:x="40573" fg:w="18"/><text x="38.8388%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="38.5935%" y="741" width="0.0124%" height="15" fill="rgb(233,206,34)" fg:x="40578" fg:w="13"/><text x="38.8435%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="38.5935%" y="725" width="0.0124%" height="15" fill="rgb(220,167,47)" fg:x="40578" fg:w="13"/><text x="38.8435%" y="735.50"></text></g><g><title>__free (21 samples, 0.02%)</title><rect x="38.6059%" y="773" width="0.0200%" height="15" fill="rgb(238,105,10)" fg:x="40591" fg:w="21"/><text x="38.8559%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (41 samples, 0.04%)</title><rect x="38.5888%" y="789" width="0.0390%" height="15" fill="rgb(213,227,17)" fg:x="40573" fg:w="41"/><text x="38.8388%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="38.5888%" y="805" width="0.0399%" height="15" fill="rgb(217,132,38)" fg:x="40573" fg:w="42"/><text x="38.8388%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (31 samples, 0.03%)</title><rect x="38.6306%" y="741" width="0.0295%" height="15" fill="rgb(242,146,4)" fg:x="40617" fg:w="31"/><text x="38.8806%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (30 samples, 0.03%)</title><rect x="38.6316%" y="725" width="0.0285%" height="15" fill="rgb(212,61,9)" fg:x="40618" fg:w="30"/><text x="38.8816%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (30 samples, 0.03%)</title><rect x="38.6316%" y="709" width="0.0285%" height="15" fill="rgb(247,126,22)" fg:x="40618" fg:w="30"/><text x="38.8816%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (37 samples, 0.04%)</title><rect x="38.6287%" y="805" width="0.0352%" height="15" fill="rgb(220,196,2)" fg:x="40615" fg:w="37"/><text x="38.8787%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (37 samples, 0.04%)</title><rect x="38.6287%" y="789" width="0.0352%" height="15" fill="rgb(208,46,4)" fg:x="40615" fg:w="37"/><text x="38.8787%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37 samples, 0.04%)</title><rect x="38.6287%" y="773" width="0.0352%" height="15" fill="rgb(252,104,46)" fg:x="40615" fg:w="37"/><text x="38.8787%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (37 samples, 0.04%)</title><rect x="38.6287%" y="757" width="0.0352%" height="15" fill="rgb(237,152,48)" fg:x="40615" fg:w="37"/><text x="38.8787%" y="767.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::remove (17 samples, 0.02%)</title><rect x="38.6639%" y="805" width="0.0162%" height="15" fill="rgb(221,59,37)" fg:x="40652" fg:w="17"/><text x="38.9139%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::remove (17 samples, 0.02%)</title><rect x="38.6639%" y="789" width="0.0162%" height="15" fill="rgb(209,202,51)" fg:x="40652" fg:w="17"/><text x="38.9139%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (412 samples, 0.39%)</title><rect x="38.3938%" y="917" width="0.3919%" height="15" fill="rgb(228,81,30)" fg:x="40368" fg:w="412"/><text x="38.6438%" y="927.50"></text></g><g><title>wgpu::Queue::submit (401 samples, 0.38%)</title><rect x="38.4043%" y="901" width="0.3814%" height="15" fill="rgb(227,42,39)" fg:x="40379" fg:w="401"/><text x="38.6543%" y="911.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (401 samples, 0.38%)</title><rect x="38.4043%" y="885" width="0.3814%" height="15" fill="rgb(221,26,2)" fg:x="40379" fg:w="401"/><text x="38.6543%" y="895.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (401 samples, 0.38%)</title><rect x="38.4043%" y="869" width="0.3814%" height="15" fill="rgb(254,61,31)" fg:x="40379" fg:w="401"/><text x="38.6543%" y="879.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (392 samples, 0.37%)</title><rect x="38.4128%" y="853" width="0.3728%" height="15" fill="rgb(222,173,38)" fg:x="40388" fg:w="392"/><text x="38.6628%" y="863.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (307 samples, 0.29%)</title><rect x="38.4937%" y="837" width="0.2920%" height="15" fill="rgb(218,50,12)" fg:x="40473" fg:w="307"/><text x="38.7437%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (211 samples, 0.20%)</title><rect x="38.5850%" y="821" width="0.2007%" height="15" fill="rgb(223,88,40)" fg:x="40569" fg:w="211"/><text x="38.8350%" y="831.50"></text></g><g><title>wgpu_core::RefCount::load (111 samples, 0.11%)</title><rect x="38.6801%" y="805" width="0.1056%" height="15" fill="rgb(237,54,19)" fg:x="40669" fg:w="111"/><text x="38.9301%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (111 samples, 0.11%)</title><rect x="38.6801%" y="789" width="0.1056%" height="15" fill="rgb(251,129,25)" fg:x="40669" fg:w="111"/><text x="38.9301%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (111 samples, 0.11%)</title><rect x="38.6801%" y="773" width="0.1056%" height="15" fill="rgb(238,97,19)" fg:x="40669" fg:w="111"/><text x="38.9301%" y="783.50"></text></g><g><title>_nv009glcore (15 samples, 0.01%)</title><rect x="38.7856%" y="741" width="0.0143%" height="15" fill="rgb(240,169,18)" fg:x="40780" fg:w="15"/><text x="39.0356%" y="751.50"></text></g><g><title>_nv041glcore (15 samples, 0.01%)</title><rect x="38.7856%" y="725" width="0.0143%" height="15" fill="rgb(230,187,49)" fg:x="40780" fg:w="15"/><text x="39.0356%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (737 samples, 0.70%)</title><rect x="38.1009%" y="981" width="0.7010%" height="15" fill="rgb(209,44,26)" fg:x="40060" fg:w="737"/><text x="38.3509%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (717 samples, 0.68%)</title><rect x="38.1199%" y="965" width="0.6819%" height="15" fill="rgb(244,0,6)" fg:x="40080" fg:w="717"/><text x="38.3699%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (717 samples, 0.68%)</title><rect x="38.1199%" y="949" width="0.6819%" height="15" fill="rgb(248,18,21)" fg:x="40080" fg:w="717"/><text x="38.3699%" y="959.50"></text></g><g><title>bevy_render::renderer::render_system (429 samples, 0.41%)</title><rect x="38.3938%" y="933" width="0.4080%" height="15" fill="rgb(245,180,19)" fg:x="40368" fg:w="429"/><text x="38.6438%" y="943.50"></text></g><g><title>wgpu::SurfaceTexture::present (17 samples, 0.02%)</title><rect x="38.7856%" y="917" width="0.0162%" height="15" fill="rgb(252,118,36)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (17 samples, 0.02%)</title><rect x="38.7856%" y="901" width="0.0162%" height="15" fill="rgb(210,224,19)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="911.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (17 samples, 0.02%)</title><rect x="38.7856%" y="885" width="0.0162%" height="15" fill="rgb(218,30,24)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="895.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (17 samples, 0.02%)</title><rect x="38.7856%" y="869" width="0.0162%" height="15" fill="rgb(219,75,50)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="879.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (17 samples, 0.02%)</title><rect x="38.7856%" y="853" width="0.0162%" height="15" fill="rgb(234,72,50)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="863.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (17 samples, 0.02%)</title><rect x="38.7856%" y="837" width="0.0162%" height="15" fill="rgb(219,100,48)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="847.50"></text></g><g><title>__glx_Main (17 samples, 0.02%)</title><rect x="38.7856%" y="821" width="0.0162%" height="15" fill="rgb(253,5,41)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="38.7856%" y="805" width="0.0162%" height="15" fill="rgb(247,181,11)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="38.7856%" y="789" width="0.0162%" height="15" fill="rgb(222,223,25)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="38.7856%" y="773" width="0.0162%" height="15" fill="rgb(214,198,28)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="38.7856%" y="757" width="0.0162%" height="15" fill="rgb(230,46,43)" fg:x="40780" fg:w="17"/><text x="39.0356%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 0.02%)</title><rect x="38.8066%" y="837" width="0.0247%" height="15" fill="rgb(233,65,53)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.02%)</title><rect x="38.8066%" y="821" width="0.0247%" height="15" fill="rgb(221,121,27)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="38.8066%" y="805" width="0.0247%" height="15" fill="rgb(247,70,47)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="38.8066%" y="789" width="0.0247%" height="15" fill="rgb(228,85,35)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.02%)</title><rect x="38.8066%" y="773" width="0.0247%" height="15" fill="rgb(209,50,18)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.02%)</title><rect x="38.8066%" y="757" width="0.0247%" height="15" fill="rgb(250,19,35)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="38.8066%" y="741" width="0.0247%" height="15" fill="rgb(253,107,29)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.02%)</title><rect x="38.8066%" y="725" width="0.0247%" height="15" fill="rgb(252,179,29)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.02%)</title><rect x="38.8066%" y="709" width="0.0247%" height="15" fill="rgb(238,194,6)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="719.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.02%)</title><rect x="38.8066%" y="693" width="0.0247%" height="15" fill="rgb(238,164,29)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="703.50"></text></g><g><title>__realloc (26 samples, 0.02%)</title><rect x="38.8066%" y="677" width="0.0247%" height="15" fill="rgb(224,25,9)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="687.50"></text></g><g><title>_int_realloc (26 samples, 0.02%)</title><rect x="38.8066%" y="661" width="0.0247%" height="15" fill="rgb(244,153,23)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.02%)</title><rect x="38.8066%" y="645" width="0.0247%" height="15" fill="rgb(212,203,14)" fg:x="40802" fg:w="26"/><text x="39.0566%" y="655.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (52 samples, 0.05%)</title><rect x="38.8066%" y="933" width="0.0495%" height="15" fill="rgb(220,164,20)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="943.50"></text></g><g><title>wgpu::Queue::submit (52 samples, 0.05%)</title><rect x="38.8066%" y="917" width="0.0495%" height="15" fill="rgb(222,203,48)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (52 samples, 0.05%)</title><rect x="38.8066%" y="901" width="0.0495%" height="15" fill="rgb(215,159,22)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="911.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (52 samples, 0.05%)</title><rect x="38.8066%" y="885" width="0.0495%" height="15" fill="rgb(216,183,47)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (52 samples, 0.05%)</title><rect x="38.8066%" y="869" width="0.0495%" height="15" fill="rgb(229,195,25)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="879.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (52 samples, 0.05%)</title><rect x="38.8066%" y="853" width="0.0495%" height="15" fill="rgb(224,132,51)" fg:x="40802" fg:w="52"/><text x="39.0566%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (26 samples, 0.02%)</title><rect x="38.8313%" y="837" width="0.0247%" height="15" fill="rgb(240,63,7)" fg:x="40828" fg:w="26"/><text x="39.0813%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="38.8313%" y="821" width="0.0247%" height="15" fill="rgb(249,182,41)" fg:x="40828" fg:w="26"/><text x="39.0813%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (26 samples, 0.02%)</title><rect x="38.8313%" y="805" width="0.0247%" height="15" fill="rgb(243,47,26)" fg:x="40828" fg:w="26"/><text x="39.0813%" y="815.50"></text></g><g><title>__free (26 samples, 0.02%)</title><rect x="38.8313%" y="789" width="0.0247%" height="15" fill="rgb(233,48,2)" fg:x="40828" fg:w="26"/><text x="39.0813%" y="799.50"></text></g><g><title>_int_free (26 samples, 0.02%)</title><rect x="38.8313%" y="773" width="0.0247%" height="15" fill="rgb(244,165,34)" fg:x="40828" fg:w="26"/><text x="39.0813%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (57 samples, 0.05%)</title><rect x="38.8037%" y="981" width="0.0542%" height="15" fill="rgb(207,89,7)" fg:x="40799" fg:w="57"/><text x="39.0537%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (55 samples, 0.05%)</title><rect x="38.8056%" y="965" width="0.0523%" height="15" fill="rgb(244,117,36)" fg:x="40801" fg:w="55"/><text x="39.0556%" y="975.50"></text></g><g><title>bevy_render::renderer::render_system (54 samples, 0.05%)</title><rect x="38.8066%" y="949" width="0.0514%" height="15" fill="rgb(226,144,34)" fg:x="40802" fg:w="54"/><text x="39.0566%" y="959.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (24 samples, 0.02%)</title><rect x="38.8579%" y="981" width="0.0228%" height="15" fill="rgb(213,23,19)" fg:x="40856" fg:w="24"/><text x="39.1079%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (14 samples, 0.01%)</title><rect x="38.9140%" y="981" width="0.0133%" height="15" fill="rgb(217,75,12)" fg:x="40915" fg:w="14"/><text x="39.1640%" y="991.50"></text></g><g><title>__tls_get_addr (284 samples, 0.27%)</title><rect x="38.9854%" y="981" width="0.2701%" height="15" fill="rgb(224,159,17)" fg:x="40990" fg:w="284"/><text x="39.2354%" y="991.50"></text></g><g><title>bevy_ecs::world::entity_ref::contains_component_with_type (14 samples, 0.01%)</title><rect x="39.3649%" y="981" width="0.0133%" height="15" fill="rgb(217,118,1)" fg:x="41389" fg:w="14"/><text x="39.6149%" y="991.50"></text></g><g><title>alloc::string::String::with_capacity (12 samples, 0.01%)</title><rect x="39.3972%" y="613" width="0.0114%" height="15" fill="rgb(232,180,48)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="39.3972%" y="597" width="0.0114%" height="15" fill="rgb(230,27,33)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="39.3972%" y="581" width="0.0114%" height="15" fill="rgb(205,31,21)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="39.3972%" y="565" width="0.0114%" height="15" fill="rgb(253,59,4)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="39.3972%" y="549" width="0.0114%" height="15" fill="rgb(224,201,9)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="39.3972%" y="533" width="0.0114%" height="15" fill="rgb(229,206,30)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="39.3972%" y="517" width="0.0114%" height="15" fill="rgb(212,67,47)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="527.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="39.3972%" y="501" width="0.0114%" height="15" fill="rgb(211,96,50)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="511.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="39.3972%" y="485" width="0.0114%" height="15" fill="rgb(252,114,18)" fg:x="41423" fg:w="12"/><text x="39.6472%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (19 samples, 0.02%)</title><rect x="39.4134%" y="581" width="0.0181%" height="15" fill="rgb(223,58,37)" fg:x="41440" fg:w="19"/><text x="39.6634%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="39.4153%" y="565" width="0.0162%" height="15" fill="rgb(237,70,4)" fg:x="41442" fg:w="17"/><text x="39.6653%" y="575.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.02%)</title><rect x="39.4153%" y="549" width="0.0162%" height="15" fill="rgb(244,85,46)" fg:x="41442" fg:w="17"/><text x="39.6653%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.02%)</title><rect x="39.4153%" y="533" width="0.0162%" height="15" fill="rgb(223,39,52)" fg:x="41442" fg:w="17"/><text x="39.6653%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="39.4153%" y="517" width="0.0162%" height="15" fill="rgb(218,200,14)" fg:x="41442" fg:w="17"/><text x="39.6653%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.02%)</title><rect x="39.4153%" y="501" width="0.0162%" height="15" fill="rgb(208,171,16)" fg:x="41442" fg:w="17"/><text x="39.6653%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="39.4181%" y="485" width="0.0133%" height="15" fill="rgb(234,200,18)" fg:x="41445" fg:w="14"/><text x="39.6681%" y="495.50"></text></g><g><title>__memmove_sse2_unaligned_erms (12 samples, 0.01%)</title><rect x="39.4200%" y="469" width="0.0114%" height="15" fill="rgb(228,45,11)" fg:x="41447" fg:w="12"/><text x="39.6700%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (22 samples, 0.02%)</title><rect x="39.4400%" y="581" width="0.0209%" height="15" fill="rgb(237,182,11)" fg:x="41468" fg:w="22"/><text x="39.6900%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (20 samples, 0.02%)</title><rect x="39.4419%" y="565" width="0.0190%" height="15" fill="rgb(241,175,49)" fg:x="41470" fg:w="20"/><text x="39.6919%" y="575.50"></text></g><g><title>bevy_inspector_egui::world_inspector::entity_name (70 samples, 0.07%)</title><rect x="39.3972%" y="645" width="0.0666%" height="15" fill="rgb(247,38,35)" fg:x="41423" fg:w="70"/><text x="39.6472%" y="655.50"></text></g><g><title>alloc::fmt::format (70 samples, 0.07%)</title><rect x="39.3972%" y="629" width="0.0666%" height="15" fill="rgb(228,39,49)" fg:x="41423" fg:w="70"/><text x="39.6472%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (58 samples, 0.06%)</title><rect x="39.4086%" y="613" width="0.0552%" height="15" fill="rgb(226,101,26)" fg:x="41435" fg:w="58"/><text x="39.6586%" y="623.50"></text></g><g><title>core::fmt::write (58 samples, 0.06%)</title><rect x="39.4086%" y="597" width="0.0552%" height="15" fill="rgb(206,141,19)" fg:x="41435" fg:w="58"/><text x="39.6586%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="39.4657%" y="613" width="0.0143%" height="15" fill="rgb(211,200,13)" fg:x="41495" fg:w="15"/><text x="39.7157%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;egui::style::Style&gt;&gt; (16 samples, 0.02%)</title><rect x="39.5256%" y="565" width="0.0152%" height="15" fill="rgb(241,121,6)" fg:x="41558" fg:w="16"/><text x="39.7756%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="39.5256%" y="549" width="0.0152%" height="15" fill="rgb(234,221,29)" fg:x="41558" fg:w="16"/><text x="39.7756%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="39.5256%" y="533" width="0.0152%" height="15" fill="rgb(229,136,5)" fg:x="41558" fg:w="16"/><text x="39.7756%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="39.5256%" y="517" width="0.0152%" height="15" fill="rgb(238,36,11)" fg:x="41558" fg:w="16"/><text x="39.7756%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::ui::Ui&gt; (31 samples, 0.03%)</title><rect x="39.5256%" y="581" width="0.0295%" height="15" fill="rgb(251,55,41)" fg:x="41558" fg:w="31"/><text x="39.7756%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::painter::Painter&gt; (15 samples, 0.01%)</title><rect x="39.5408%" y="565" width="0.0143%" height="15" fill="rgb(242,34,40)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::context::Context&gt; (15 samples, 0.01%)</title><rect x="39.5408%" y="549" width="0.0143%" height="15" fill="rgb(215,42,17)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;epaint::mutex::rw_lock_impl::RwLock&lt;egui::context::ContextImpl&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="39.5408%" y="533" width="0.0143%" height="15" fill="rgb(207,44,46)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="39.5408%" y="517" width="0.0143%" height="15" fill="rgb(211,206,28)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="39.5408%" y="501" width="0.0143%" height="15" fill="rgb(237,167,16)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="39.5408%" y="485" width="0.0143%" height="15" fill="rgb(233,66,6)" fg:x="41574" fg:w="15"/><text x="39.7908%" y="495.50"></text></g><g><title>egui::layout::Layout::advance_after_rects (11 samples, 0.01%)</title><rect x="39.5589%" y="565" width="0.0105%" height="15" fill="rgb(246,123,29)" fg:x="41593" fg:w="11"/><text x="39.8089%" y="575.50"></text></g><g><title>egui::placer::Placer::advance_after_rects (21 samples, 0.02%)</title><rect x="39.5551%" y="581" width="0.0200%" height="15" fill="rgb(209,62,40)" fg:x="41589" fg:w="21"/><text x="39.8051%" y="591.50"></text></g><g><title>egui::ui::Ui::available_rect_before_wrap (14 samples, 0.01%)</title><rect x="39.5846%" y="581" width="0.0133%" height="15" fill="rgb(218,4,25)" fg:x="41620" fg:w="14"/><text x="39.8346%" y="591.50"></text></g><g><title>egui::placer::Placer::available_rect_before_wrap (14 samples, 0.01%)</title><rect x="39.5846%" y="565" width="0.0133%" height="15" fill="rgb(253,91,49)" fg:x="41620" fg:w="14"/><text x="39.8346%" y="575.50"></text></g><g><title>egui::layout::Layout::available_rect_before_wrap (13 samples, 0.01%)</title><rect x="39.5855%" y="549" width="0.0124%" height="15" fill="rgb(228,155,29)" fg:x="41621" fg:w="13"/><text x="39.8355%" y="559.50"></text></g><g><title>egui::layout::Layout::available_from_cursor_max_rect (12 samples, 0.01%)</title><rect x="39.5865%" y="533" width="0.0114%" height="15" fill="rgb(243,57,37)" fg:x="41622" fg:w="12"/><text x="39.8365%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicRef&lt;egui::input_state::InputState&gt;&gt; (13 samples, 0.01%)</title><rect x="39.6083%" y="533" width="0.0124%" height="15" fill="rgb(244,167,17)" fg:x="41645" fg:w="13"/><text x="39.8583%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicBorrowRef&gt; (13 samples, 0.01%)</title><rect x="39.6083%" y="517" width="0.0124%" height="15" fill="rgb(207,181,38)" fg:x="41645" fg:w="13"/><text x="39.8583%" y="527.50"></text></g><g><title>&lt;atomic_refcell::AtomicBorrowRef as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="39.6083%" y="501" width="0.0124%" height="15" fill="rgb(211,8,23)" fg:x="41645" fg:w="13"/><text x="39.8583%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="39.6083%" y="485" width="0.0124%" height="15" fill="rgb(235,11,44)" fg:x="41645" fg:w="13"/><text x="39.8583%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="39.6083%" y="469" width="0.0124%" height="15" fill="rgb(248,18,52)" fg:x="41645" fg:w="13"/><text x="39.8583%" y="479.50"></text></g><g><title>egui::context::Context::rect_contains_pointer (25 samples, 0.02%)</title><rect x="39.6083%" y="549" width="0.0238%" height="15" fill="rgb(208,4,7)" fg:x="41645" fg:w="25"/><text x="39.8583%" y="559.50"></text></g><g><title>egui::context::Context::input (12 samples, 0.01%)</title><rect x="39.6207%" y="533" width="0.0114%" height="15" fill="rgb(240,17,39)" fg:x="41658" fg:w="12"/><text x="39.8707%" y="543.50"></text></g><g><title>egui::context::Context::read (12 samples, 0.01%)</title><rect x="39.6207%" y="517" width="0.0114%" height="15" fill="rgb(207,170,3)" fg:x="41658" fg:w="12"/><text x="39.8707%" y="527.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::read (12 samples, 0.01%)</title><rect x="39.6207%" y="501" width="0.0114%" height="15" fill="rgb(236,100,52)" fg:x="41658" fg:w="12"/><text x="39.8707%" y="511.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow (12 samples, 0.01%)</title><rect x="39.6207%" y="485" width="0.0114%" height="15" fill="rgb(246,78,51)" fg:x="41658" fg:w="12"/><text x="39.8707%" y="495.50"></text></g><g><title>atomic_refcell::AtomicBorrowRef::try_new (12 samples, 0.01%)</title><rect x="39.6207%" y="469" width="0.0114%" height="15" fill="rgb(211,17,15)" fg:x="41658" fg:w="12"/><text x="39.8707%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="39.6217%" y="453" width="0.0105%" height="15" fill="rgb(209,59,46)" fg:x="41659" fg:w="11"/><text x="39.8717%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="39.6217%" y="437" width="0.0105%" height="15" fill="rgb(210,92,25)" fg:x="41659" fg:w="11"/><text x="39.8717%" y="447.50"></text></g><g><title>egui::context::Context::interact (40 samples, 0.04%)</title><rect x="39.5979%" y="565" width="0.0380%" height="15" fill="rgb(238,174,52)" fg:x="41634" fg:w="40"/><text x="39.8479%" y="575.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui (252 samples, 0.24%)</title><rect x="39.3972%" y="981" width="0.2397%" height="15" fill="rgb(230,73,7)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="991.50"></text></g><g><title>egui::containers::window::Window::show (252 samples, 0.24%)</title><rect x="39.3972%" y="965" width="0.2397%" height="15" fill="rgb(243,124,40)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="975.50"></text></g><g><title>egui::containers::window::Window::show_dyn (252 samples, 0.24%)</title><rect x="39.3972%" y="949" width="0.2397%" height="15" fill="rgb(244,170,11)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="959.50"></text></g><g><title>egui::containers::collapsing_header::State::add_contents (252 samples, 0.24%)</title><rect x="39.3972%" y="933" width="0.2397%" height="15" fill="rgb(207,114,54)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="943.50"></text></g><g><title>egui::ui::Ui::scope (252 samples, 0.24%)</title><rect x="39.3972%" y="917" width="0.2397%" height="15" fill="rgb(205,42,20)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="927.50"></text></g><g><title>egui::ui::Ui::scope_dyn (252 samples, 0.24%)</title><rect x="39.3972%" y="901" width="0.2397%" height="15" fill="rgb(230,30,28)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (252 samples, 0.24%)</title><rect x="39.3972%" y="885" width="0.2397%" height="15" fill="rgb(205,73,54)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (252 samples, 0.24%)</title><rect x="39.3972%" y="869" width="0.2397%" height="15" fill="rgb(254,227,23)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="879.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}} (252 samples, 0.24%)</title><rect x="39.3972%" y="853" width="0.2397%" height="15" fill="rgb(228,202,34)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="863.50"></text></g><g><title>egui::containers::resize::Resize::show (252 samples, 0.24%)</title><rect x="39.3972%" y="837" width="0.2397%" height="15" fill="rgb(222,225,37)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="847.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}}::{{closure}} (252 samples, 0.24%)</title><rect x="39.3972%" y="821" width="0.2397%" height="15" fill="rgb(221,14,54)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="831.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show (252 samples, 0.24%)</title><rect x="39.3972%" y="805" width="0.2397%" height="15" fill="rgb(254,102,2)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="815.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show_viewport_dyn (252 samples, 0.24%)</title><rect x="39.3972%" y="789" width="0.2397%" height="15" fill="rgb(232,104,17)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (252 samples, 0.24%)</title><rect x="39.3972%" y="773" width="0.2397%" height="15" fill="rgb(250,220,14)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (252 samples, 0.24%)</title><rect x="39.3972%" y="757" width="0.2397%" height="15" fill="rgb(241,158,9)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="767.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show::{{closure}} (252 samples, 0.24%)</title><rect x="39.3972%" y="741" width="0.2397%" height="15" fill="rgb(246,9,43)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (252 samples, 0.24%)</title><rect x="39.3972%" y="725" width="0.2397%" height="15" fill="rgb(206,73,33)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (252 samples, 0.24%)</title><rect x="39.3972%" y="709" width="0.2397%" height="15" fill="rgb(222,79,8)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="719.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui::{{closure}} (252 samples, 0.24%)</title><rect x="39.3972%" y="693" width="0.2397%" height="15" fill="rgb(234,8,54)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="703.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::world_ui (252 samples, 0.24%)</title><rect x="39.3972%" y="677" width="0.2397%" height="15" fill="rgb(209,134,38)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="687.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::entity_ui (252 samples, 0.24%)</title><rect x="39.3972%" y="661" width="0.2397%" height="15" fill="rgb(230,127,29)" fg:x="41423" fg:w="252"/><text x="39.6472%" y="671.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show (182 samples, 0.17%)</title><rect x="39.4638%" y="645" width="0.1731%" height="15" fill="rgb(242,44,41)" fg:x="41493" fg:w="182"/><text x="39.7138%" y="655.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show_dyn (182 samples, 0.17%)</title><rect x="39.4638%" y="629" width="0.1731%" height="15" fill="rgb(222,56,43)" fg:x="41493" fg:w="182"/><text x="39.7138%" y="639.50"></text></g><g><title>egui::ui::Ui::vertical (156 samples, 0.15%)</title><rect x="39.4885%" y="613" width="0.1484%" height="15" fill="rgb(238,39,47)" fg:x="41519" fg:w="156"/><text x="39.7385%" y="623.50"></text></g><g><title>egui::ui::Ui::with_layout_dyn (142 samples, 0.14%)</title><rect x="39.5018%" y="597" width="0.1351%" height="15" fill="rgb(226,79,43)" fg:x="41533" fg:w="142"/><text x="39.7518%" y="607.50"></text></g><g><title>egui::ui::Ui::interact (41 samples, 0.04%)</title><rect x="39.5979%" y="581" width="0.0390%" height="15" fill="rgb(242,105,53)" fg:x="41634" fg:w="41"/><text x="39.8479%" y="591.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (13 samples, 0.01%)</title><rect x="39.6426%" y="901" width="0.0124%" height="15" fill="rgb(251,132,46)" fg:x="41681" fg:w="13"/><text x="39.8926%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (13 samples, 0.01%)</title><rect x="39.6426%" y="885" width="0.0124%" height="15" fill="rgb(231,77,14)" fg:x="41681" fg:w="13"/><text x="39.8926%" y="895.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (13 samples, 0.01%)</title><rect x="39.6549%" y="901" width="0.0124%" height="15" fill="rgb(240,135,9)" fg:x="41694" fg:w="13"/><text x="39.9049%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (13 samples, 0.01%)</title><rect x="39.6549%" y="885" width="0.0124%" height="15" fill="rgb(248,109,14)" fg:x="41694" fg:w="13"/><text x="39.9049%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (35 samples, 0.03%)</title><rect x="39.6426%" y="933" width="0.0333%" height="15" fill="rgb(227,146,52)" fg:x="41681" fg:w="35"/><text x="39.8926%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (35 samples, 0.03%)</title><rect x="39.6426%" y="917" width="0.0333%" height="15" fill="rgb(232,54,3)" fg:x="41681" fg:w="35"/><text x="39.8926%" y="927.50"></text></g><g><title>bevy_pbr::render::light::GpuPointLights::write_buffer (36 samples, 0.03%)</title><rect x="39.6426%" y="965" width="0.0342%" height="15" fill="rgb(229,201,43)" fg:x="41681" fg:w="36"/><text x="39.8926%" y="975.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (36 samples, 0.03%)</title><rect x="39.6426%" y="949" width="0.0342%" height="15" fill="rgb(252,161,33)" fg:x="41681" fg:w="36"/><text x="39.8926%" y="959.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (15 samples, 0.01%)</title><rect x="39.6825%" y="901" width="0.0143%" height="15" fill="rgb(226,146,40)" fg:x="41723" fg:w="15"/><text x="39.9325%" y="911.50"></text></g><g><title>bevy_render::render_resource::texture::Texture::create_view (22 samples, 0.02%)</title><rect x="39.6797%" y="965" width="0.0209%" height="15" fill="rgb(219,47,25)" fg:x="41720" fg:w="22"/><text x="39.9297%" y="975.50"></text></g><g><title>wgpu::Texture::create_view (22 samples, 0.02%)</title><rect x="39.6797%" y="949" width="0.0209%" height="15" fill="rgb(250,135,13)" fg:x="41720" fg:w="22"/><text x="39.9297%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (22 samples, 0.02%)</title><rect x="39.6797%" y="933" width="0.0209%" height="15" fill="rgb(219,229,18)" fg:x="41720" fg:w="22"/><text x="39.9297%" y="943.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (19 samples, 0.02%)</title><rect x="39.6825%" y="917" width="0.0181%" height="15" fill="rgb(217,152,27)" fg:x="41723" fg:w="19"/><text x="39.9325%" y="927.50"></text></g><g><title>bevy_pbr::render::light::prepare_lights (79 samples, 0.08%)</title><rect x="39.6378%" y="981" width="0.0751%" height="15" fill="rgb(225,71,47)" fg:x="41676" fg:w="79"/><text x="39.8878%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (33 samples, 0.03%)</title><rect x="39.7196%" y="981" width="0.0314%" height="15" fill="rgb(220,139,14)" fg:x="41762" fg:w="33"/><text x="39.9696%" y="991.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (13 samples, 0.01%)</title><rect x="39.7691%" y="869" width="0.0124%" height="15" fill="rgb(247,54,32)" fg:x="41814" fg:w="13"/><text x="40.0191%" y="879.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (24 samples, 0.02%)</title><rect x="39.7653%" y="965" width="0.0228%" height="15" fill="rgb(252,131,39)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (24 samples, 0.02%)</title><rect x="39.7653%" y="949" width="0.0228%" height="15" fill="rgb(210,108,39)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (24 samples, 0.02%)</title><rect x="39.7653%" y="933" width="0.0228%" height="15" fill="rgb(205,23,29)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (24 samples, 0.02%)</title><rect x="39.7653%" y="917" width="0.0228%" height="15" fill="rgb(246,139,46)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (24 samples, 0.02%)</title><rect x="39.7653%" y="901" width="0.0228%" height="15" fill="rgb(250,81,26)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (24 samples, 0.02%)</title><rect x="39.7653%" y="885" width="0.0228%" height="15" fill="rgb(214,104,7)" fg:x="41810" fg:w="24"/><text x="40.0153%" y="895.50"></text></g><g><title>ash::device::Device::begin_command_buffer (13 samples, 0.01%)</title><rect x="39.7995%" y="837" width="0.0124%" height="15" fill="rgb(233,189,8)" fg:x="41846" fg:w="13"/><text x="40.0495%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (13 samples, 0.01%)</title><rect x="39.7995%" y="821" width="0.0124%" height="15" fill="rgb(228,141,17)" fg:x="41846" fg:w="13"/><text x="40.0495%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="39.7995%" y="805" width="0.0124%" height="15" fill="rgb(247,157,1)" fg:x="41846" fg:w="13"/><text x="40.0495%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="39.7995%" y="789" width="0.0124%" height="15" fill="rgb(249,225,5)" fg:x="41846" fg:w="13"/><text x="40.0495%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.01%)</title><rect x="39.8014%" y="773" width="0.0105%" height="15" fill="rgb(242,55,13)" fg:x="41848" fg:w="11"/><text x="40.0514%" y="783.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (14 samples, 0.01%)</title><rect x="39.7995%" y="869" width="0.0133%" height="15" fill="rgb(230,49,50)" fg:x="41846" fg:w="14"/><text x="40.0495%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (14 samples, 0.01%)</title><rect x="39.7995%" y="853" width="0.0133%" height="15" fill="rgb(241,111,38)" fg:x="41846" fg:w="14"/><text x="40.0495%" y="863.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (32 samples, 0.03%)</title><rect x="39.7919%" y="949" width="0.0304%" height="15" fill="rgb(252,155,4)" fg:x="41838" fg:w="32"/><text x="40.0419%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (32 samples, 0.03%)</title><rect x="39.7919%" y="933" width="0.0304%" height="15" fill="rgb(212,69,32)" fg:x="41838" fg:w="32"/><text x="40.0419%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (32 samples, 0.03%)</title><rect x="39.7919%" y="917" width="0.0304%" height="15" fill="rgb(243,107,47)" fg:x="41838" fg:w="32"/><text x="40.0419%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (32 samples, 0.03%)</title><rect x="39.7919%" y="901" width="0.0304%" height="15" fill="rgb(247,130,12)" fg:x="41838" fg:w="32"/><text x="40.0419%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (32 samples, 0.03%)</title><rect x="39.7919%" y="885" width="0.0304%" height="15" fill="rgb(233,74,16)" fg:x="41838" fg:w="32"/><text x="40.0419%" y="895.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (12 samples, 0.01%)</title><rect x="39.8385%" y="853" width="0.0114%" height="15" fill="rgb(208,58,18)" fg:x="41887" fg:w="12"/><text x="40.0885%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (12 samples, 0.01%)</title><rect x="39.8385%" y="837" width="0.0114%" height="15" fill="rgb(242,225,1)" fg:x="41887" fg:w="12"/><text x="40.0885%" y="847.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="39.8823%" y="805" width="0.0105%" height="15" fill="rgb(249,39,40)" fg:x="41933" fg:w="11"/><text x="40.1323%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="39.8823%" y="789" width="0.0105%" height="15" fill="rgb(207,72,44)" fg:x="41933" fg:w="11"/><text x="40.1323%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="39.8823%" y="773" width="0.0105%" height="15" fill="rgb(215,193,12)" fg:x="41933" fg:w="11"/><text x="40.1323%" y="783.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (28 samples, 0.03%)</title><rect x="39.8775%" y="853" width="0.0266%" height="15" fill="rgb(248,41,39)" fg:x="41928" fg:w="28"/><text x="40.1275%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (23 samples, 0.02%)</title><rect x="39.8823%" y="837" width="0.0219%" height="15" fill="rgb(253,85,4)" fg:x="41933" fg:w="23"/><text x="40.1323%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (23 samples, 0.02%)</title><rect x="39.8823%" y="821" width="0.0219%" height="15" fill="rgb(243,70,31)" fg:x="41933" fg:w="23"/><text x="40.1323%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (12 samples, 0.01%)</title><rect x="39.9165%" y="853" width="0.0114%" height="15" fill="rgb(253,195,26)" fg:x="41969" fg:w="12"/><text x="40.1665%" y="863.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (11 samples, 0.01%)</title><rect x="39.9174%" y="837" width="0.0105%" height="15" fill="rgb(243,42,11)" fg:x="41970" fg:w="11"/><text x="40.1674%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (11 samples, 0.01%)</title><rect x="39.9174%" y="821" width="0.0105%" height="15" fill="rgb(239,66,17)" fg:x="41970" fg:w="11"/><text x="40.1674%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.01%)</title><rect x="39.9174%" y="805" width="0.0105%" height="15" fill="rgb(217,132,21)" fg:x="41970" fg:w="11"/><text x="40.1674%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (192 samples, 0.18%)</title><rect x="39.7577%" y="981" width="0.1826%" height="15" fill="rgb(252,202,21)" fg:x="41802" fg:w="192"/><text x="40.0077%" y="991.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (156 samples, 0.15%)</title><rect x="39.7919%" y="965" width="0.1484%" height="15" fill="rgb(233,98,36)" fg:x="41838" fg:w="156"/><text x="40.0419%" y="975.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (124 samples, 0.12%)</title><rect x="39.8223%" y="949" width="0.1179%" height="15" fill="rgb(216,153,54)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (124 samples, 0.12%)</title><rect x="39.8223%" y="933" width="0.1179%" height="15" fill="rgb(250,99,7)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (124 samples, 0.12%)</title><rect x="39.8223%" y="917" width="0.1179%" height="15" fill="rgb(207,56,50)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (124 samples, 0.12%)</title><rect x="39.8223%" y="901" width="0.1179%" height="15" fill="rgb(244,61,34)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (124 samples, 0.12%)</title><rect x="39.8223%" y="885" width="0.1179%" height="15" fill="rgb(241,50,38)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="895.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (124 samples, 0.12%)</title><rect x="39.8223%" y="869" width="0.1179%" height="15" fill="rgb(212,166,30)" fg:x="41870" fg:w="124"/><text x="40.0723%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (13 samples, 0.01%)</title><rect x="39.9279%" y="853" width="0.0124%" height="15" fill="rgb(249,127,32)" fg:x="41981" fg:w="13"/><text x="40.1779%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.01%)</title><rect x="39.9298%" y="837" width="0.0105%" height="15" fill="rgb(209,103,0)" fg:x="41983" fg:w="11"/><text x="40.1798%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (98 samples, 0.09%)</title><rect x="39.9441%" y="869" width="0.0932%" height="15" fill="rgb(238,209,51)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (98 samples, 0.09%)</title><rect x="39.9441%" y="853" width="0.0932%" height="15" fill="rgb(237,56,23)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (98 samples, 0.09%)</title><rect x="39.9441%" y="837" width="0.0932%" height="15" fill="rgb(215,153,46)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (98 samples, 0.09%)</title><rect x="39.9441%" y="821" width="0.0932%" height="15" fill="rgb(224,49,31)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (98 samples, 0.09%)</title><rect x="39.9441%" y="805" width="0.0932%" height="15" fill="rgb(250,18,42)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (98 samples, 0.09%)</title><rect x="39.9441%" y="789" width="0.0932%" height="15" fill="rgb(215,176,39)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.09%)</title><rect x="39.9441%" y="773" width="0.0932%" height="15" fill="rgb(223,77,29)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 0.09%)</title><rect x="39.9441%" y="757" width="0.0932%" height="15" fill="rgb(234,94,52)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 0.09%)</title><rect x="39.9441%" y="741" width="0.0932%" height="15" fill="rgb(220,154,50)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="751.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 0.09%)</title><rect x="39.9441%" y="725" width="0.0932%" height="15" fill="rgb(212,11,10)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="735.50"></text></g><g><title>__realloc (98 samples, 0.09%)</title><rect x="39.9441%" y="709" width="0.0932%" height="15" fill="rgb(205,166,19)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="719.50"></text></g><g><title>_int_realloc (98 samples, 0.09%)</title><rect x="39.9441%" y="693" width="0.0932%" height="15" fill="rgb(244,198,16)" fg:x="41998" fg:w="98"/><text x="40.1941%" y="703.50"></text></g><g><title>_int_malloc (97 samples, 0.09%)</title><rect x="39.9450%" y="677" width="0.0923%" height="15" fill="rgb(219,69,12)" fg:x="41999" fg:w="97"/><text x="40.1950%" y="687.50"></text></g><g><title>malloc_consolidate (71 samples, 0.07%)</title><rect x="39.9698%" y="661" width="0.0675%" height="15" fill="rgb(245,30,7)" fg:x="42025" fg:w="71"/><text x="40.2198%" y="671.50"></text></g><g><title>unlink_chunk.constprop.0 (12 samples, 0.01%)</title><rect x="40.0259%" y="645" width="0.0114%" height="15" fill="rgb(218,221,48)" fg:x="42084" fg:w="12"/><text x="40.2759%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (13 samples, 0.01%)</title><rect x="40.0373%" y="837" width="0.0124%" height="15" fill="rgb(216,66,15)" fg:x="42096" fg:w="13"/><text x="40.2873%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="40.0373%" y="821" width="0.0124%" height="15" fill="rgb(226,122,50)" fg:x="42096" fg:w="13"/><text x="40.2873%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (13 samples, 0.01%)</title><rect x="40.0373%" y="805" width="0.0124%" height="15" fill="rgb(239,156,16)" fg:x="42096" fg:w="13"/><text x="40.2873%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (12 samples, 0.01%)</title><rect x="40.0382%" y="789" width="0.0114%" height="15" fill="rgb(224,27,38)" fg:x="42097" fg:w="12"/><text x="40.2882%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="40.0382%" y="773" width="0.0114%" height="15" fill="rgb(224,39,27)" fg:x="42097" fg:w="12"/><text x="40.2882%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.01%)</title><rect x="40.0496%" y="837" width="0.0114%" height="15" fill="rgb(215,92,29)" fg:x="42109" fg:w="12"/><text x="40.2996%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.01%)</title><rect x="40.0496%" y="821" width="0.0114%" height="15" fill="rgb(207,159,16)" fg:x="42109" fg:w="12"/><text x="40.2996%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.01%)</title><rect x="40.0496%" y="805" width="0.0114%" height="15" fill="rgb(238,163,47)" fg:x="42109" fg:w="12"/><text x="40.2996%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="40.0496%" y="789" width="0.0114%" height="15" fill="rgb(219,91,49)" fg:x="42109" fg:w="12"/><text x="40.2996%" y="799.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::free (28 samples, 0.03%)</title><rect x="40.0373%" y="853" width="0.0266%" height="15" fill="rgb(227,167,31)" fg:x="42096" fg:w="28"/><text x="40.2873%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.04%)</title><rect x="40.0687%" y="837" width="0.0352%" height="15" fill="rgb(234,80,54)" fg:x="42129" fg:w="37"/><text x="40.3187%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (217 samples, 0.21%)</title><rect x="39.9412%" y="965" width="0.2064%" height="15" fill="rgb(212,114,2)" fg:x="41995" fg:w="217"/><text x="40.1912%" y="975.50"></text></g><g><title>wgpu::Queue::submit (214 samples, 0.20%)</title><rect x="39.9441%" y="949" width="0.2035%" height="15" fill="rgb(234,50,24)" fg:x="41998" fg:w="214"/><text x="40.1941%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (214 samples, 0.20%)</title><rect x="39.9441%" y="933" width="0.2035%" height="15" fill="rgb(221,68,8)" fg:x="41998" fg:w="214"/><text x="40.1941%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (214 samples, 0.20%)</title><rect x="39.9441%" y="917" width="0.2035%" height="15" fill="rgb(254,180,31)" fg:x="41998" fg:w="214"/><text x="40.1941%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (214 samples, 0.20%)</title><rect x="39.9441%" y="901" width="0.2035%" height="15" fill="rgb(247,130,50)" fg:x="41998" fg:w="214"/><text x="40.1941%" y="911.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (214 samples, 0.20%)</title><rect x="39.9441%" y="885" width="0.2035%" height="15" fill="rgb(211,109,4)" fg:x="41998" fg:w="214"/><text x="40.1941%" y="895.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (116 samples, 0.11%)</title><rect x="40.0373%" y="869" width="0.1103%" height="15" fill="rgb(238,50,21)" fg:x="42096" fg:w="116"/><text x="40.2873%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (88 samples, 0.08%)</title><rect x="40.0639%" y="853" width="0.0837%" height="15" fill="rgb(225,57,45)" fg:x="42124" fg:w="88"/><text x="40.3139%" y="863.50"></text></g><g><title>core::mem::replace (46 samples, 0.04%)</title><rect x="40.1039%" y="837" width="0.0438%" height="15" fill="rgb(209,196,50)" fg:x="42166" fg:w="46"/><text x="40.3539%" y="847.50"></text></g><g><title>core::ptr::read (46 samples, 0.04%)</title><rect x="40.1039%" y="821" width="0.0438%" height="15" fill="rgb(242,140,13)" fg:x="42166" fg:w="46"/><text x="40.3539%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="40.1039%" y="805" width="0.0438%" height="15" fill="rgb(217,111,7)" fg:x="42166" fg:w="46"/><text x="40.3539%" y="815.50"></text></g><g><title>_nv009glcore (29 samples, 0.03%)</title><rect x="40.1495%" y="693" width="0.0276%" height="15" fill="rgb(253,193,51)" fg:x="42214" fg:w="29"/><text x="40.3995%" y="703.50"></text></g><g><title>_nv009glcore (29 samples, 0.03%)</title><rect x="40.1495%" y="677" width="0.0276%" height="15" fill="rgb(252,70,29)" fg:x="42214" fg:w="29"/><text x="40.3995%" y="687.50"></text></g><g><title>_nv009glcore (33 samples, 0.03%)</title><rect x="40.1476%" y="709" width="0.0314%" height="15" fill="rgb(232,127,12)" fg:x="42212" fg:w="33"/><text x="40.3976%" y="719.50"></text></g><g><title>bevy_render::renderer::render_system (256 samples, 0.24%)</title><rect x="39.9403%" y="981" width="0.2435%" height="15" fill="rgb(211,180,21)" fg:x="41994" fg:w="256"/><text x="40.1903%" y="991.50"></text></g><g><title>wgpu::SurfaceTexture::present (38 samples, 0.04%)</title><rect x="40.1476%" y="965" width="0.0361%" height="15" fill="rgb(229,72,13)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (38 samples, 0.04%)</title><rect x="40.1476%" y="949" width="0.0361%" height="15" fill="rgb(240,211,49)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="959.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (38 samples, 0.04%)</title><rect x="40.1476%" y="933" width="0.0361%" height="15" fill="rgb(219,149,40)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="943.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (38 samples, 0.04%)</title><rect x="40.1476%" y="917" width="0.0361%" height="15" fill="rgb(210,127,46)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (38 samples, 0.04%)</title><rect x="40.1476%" y="901" width="0.0361%" height="15" fill="rgb(220,106,7)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (38 samples, 0.04%)</title><rect x="40.1476%" y="885" width="0.0361%" height="15" fill="rgb(249,31,22)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="895.50"></text></g><g><title>__glx_Main (38 samples, 0.04%)</title><rect x="40.1476%" y="869" width="0.0361%" height="15" fill="rgb(253,1,49)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (38 samples, 0.04%)</title><rect x="40.1476%" y="853" width="0.0361%" height="15" fill="rgb(227,144,33)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (38 samples, 0.04%)</title><rect x="40.1476%" y="837" width="0.0361%" height="15" fill="rgb(249,163,44)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (38 samples, 0.04%)</title><rect x="40.1476%" y="821" width="0.0361%" height="15" fill="rgb(234,15,39)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (38 samples, 0.04%)</title><rect x="40.1476%" y="805" width="0.0361%" height="15" fill="rgb(207,66,16)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="815.50"></text></g><g><title>_nv009glcore (38 samples, 0.04%)</title><rect x="40.1476%" y="789" width="0.0361%" height="15" fill="rgb(233,112,24)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="799.50"></text></g><g><title>_nv041glcore (38 samples, 0.04%)</title><rect x="40.1476%" y="773" width="0.0361%" height="15" fill="rgb(230,90,22)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="783.50"></text></g><g><title>_nv011glcore (38 samples, 0.04%)</title><rect x="40.1476%" y="757" width="0.0361%" height="15" fill="rgb(229,61,13)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="767.50"></text></g><g><title>_nv041glcore (38 samples, 0.04%)</title><rect x="40.1476%" y="741" width="0.0361%" height="15" fill="rgb(225,57,24)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="751.50"></text></g><g><title>_nv041glcore (38 samples, 0.04%)</title><rect x="40.1476%" y="725" width="0.0361%" height="15" fill="rgb(208,169,48)" fg:x="42212" fg:w="38"/><text x="40.3976%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (159 samples, 0.15%)</title><rect x="40.1866%" y="981" width="0.1512%" height="15" fill="rgb(244,218,51)" fg:x="42253" fg:w="159"/><text x="40.4366%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (159 samples, 0.15%)</title><rect x="40.1866%" y="965" width="0.1512%" height="15" fill="rgb(214,148,10)" fg:x="42253" fg:w="159"/><text x="40.4366%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (159 samples, 0.15%)</title><rect x="40.1866%" y="949" width="0.1512%" height="15" fill="rgb(225,174,27)" fg:x="42253" fg:w="159"/><text x="40.4366%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (159 samples, 0.15%)</title><rect x="40.1866%" y="933" width="0.1512%" height="15" fill="rgb(230,96,26)" fg:x="42253" fg:w="159"/><text x="40.4366%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (23 samples, 0.02%)</title><rect x="40.3435%" y="709" width="0.0219%" height="15" fill="rgb(232,10,30)" fg:x="42418" fg:w="23"/><text x="40.5935%" y="719.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (19 samples, 0.02%)</title><rect x="40.3473%" y="693" width="0.0181%" height="15" fill="rgb(222,8,50)" fg:x="42422" fg:w="19"/><text x="40.5973%" y="703.50"></text></g><g><title>async_executor::Executor::spawn (17 samples, 0.02%)</title><rect x="40.3492%" y="677" width="0.0162%" height="15" fill="rgb(213,81,27)" fg:x="42424" fg:w="17"/><text x="40.5992%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (25 samples, 0.02%)</title><rect x="40.3435%" y="725" width="0.0238%" height="15" fill="rgb(245,50,10)" fg:x="42418" fg:w="25"/><text x="40.5935%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="40.3702%" y="645" width="0.0200%" height="15" fill="rgb(216,100,18)" fg:x="42446" fg:w="21"/><text x="40.6202%" y="655.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="40.3911%" y="629" width="0.0105%" height="15" fill="rgb(236,147,54)" fg:x="42468" fg:w="11"/><text x="40.6411%" y="639.50"></text></g><g><title>bevy_ecs::system::commands::Commands::entity (60 samples, 0.06%)</title><rect x="40.4358%" y="533" width="0.0571%" height="15" fill="rgb(205,143,26)" fg:x="42515" fg:w="60"/><text x="40.6858%" y="543.50"></text></g><g><title>bevy_ecs::entity::Entities::contains (58 samples, 0.06%)</title><rect x="40.4377%" y="517" width="0.0552%" height="15" fill="rgb(236,26,9)" fg:x="42517" fg:w="58"/><text x="40.6877%" y="527.50"></text></g><g><title>bevy_ecs::entity::Entities::resolve_from_id (58 samples, 0.06%)</title><rect x="40.4377%" y="501" width="0.0552%" height="15" fill="rgb(221,165,53)" fg:x="42517" fg:w="58"/><text x="40.6877%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (14 samples, 0.01%)</title><rect x="40.4929%" y="533" width="0.0133%" height="15" fill="rgb(214,110,17)" fg:x="42575" fg:w="14"/><text x="40.7429%" y="543.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (12 samples, 0.01%)</title><rect x="40.4948%" y="517" width="0.0114%" height="15" fill="rgb(237,197,12)" fg:x="42577" fg:w="12"/><text x="40.7448%" y="527.50"></text></g><g><title>__GI___libc_malloc (136 samples, 0.13%)</title><rect x="40.5242%" y="421" width="0.1293%" height="15" fill="rgb(205,84,17)" fg:x="42608" fg:w="136"/><text x="40.7742%" y="431.50"></text></g><g><title>_int_malloc (69 samples, 0.07%)</title><rect x="40.5880%" y="405" width="0.0656%" height="15" fill="rgb(237,18,45)" fg:x="42675" fg:w="69"/><text x="40.8380%" y="415.50"></text></g><g><title>unlink_chunk.constprop.0 (26 samples, 0.02%)</title><rect x="40.6289%" y="389" width="0.0247%" height="15" fill="rgb(221,87,14)" fg:x="42718" fg:w="26"/><text x="40.8789%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (142 samples, 0.14%)</title><rect x="40.5214%" y="501" width="0.1351%" height="15" fill="rgb(238,186,15)" fg:x="42605" fg:w="142"/><text x="40.7714%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (139 samples, 0.13%)</title><rect x="40.5242%" y="485" width="0.1322%" height="15" fill="rgb(208,115,11)" fg:x="42608" fg:w="139"/><text x="40.7742%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (139 samples, 0.13%)</title><rect x="40.5242%" y="469" width="0.1322%" height="15" fill="rgb(254,175,0)" fg:x="42608" fg:w="139"/><text x="40.7742%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (139 samples, 0.13%)</title><rect x="40.5242%" y="453" width="0.1322%" height="15" fill="rgb(227,24,42)" fg:x="42608" fg:w="139"/><text x="40.7742%" y="463.50"></text></g><g><title>alloc::alloc::alloc (139 samples, 0.13%)</title><rect x="40.5242%" y="437" width="0.1322%" height="15" fill="rgb(223,211,37)" fg:x="42608" fg:w="139"/><text x="40.7742%" y="447.50"></text></g><g><title>getrandom::imp::getrandom_inner (36 samples, 0.03%)</title><rect x="40.6641%" y="485" width="0.0342%" height="15" fill="rgb(235,49,27)" fg:x="42755" fg:w="36"/><text x="40.9141%" y="495.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (34 samples, 0.03%)</title><rect x="40.6660%" y="469" width="0.0323%" height="15" fill="rgb(254,97,51)" fg:x="42757" fg:w="34"/><text x="40.9160%" y="479.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (32 samples, 0.03%)</title><rect x="40.6679%" y="453" width="0.0304%" height="15" fill="rgb(249,51,40)" fg:x="42759" fg:w="32"/><text x="40.9179%" y="463.50"></text></g><g><title>getrandom::imp::getrandom (32 samples, 0.03%)</title><rect x="40.6679%" y="437" width="0.0304%" height="15" fill="rgb(210,128,45)" fg:x="42759" fg:w="32"/><text x="40.9179%" y="447.50"></text></g><g><title>syscall (32 samples, 0.03%)</title><rect x="40.6679%" y="421" width="0.0304%" height="15" fill="rgb(224,137,50)" fg:x="42759" fg:w="32"/><text x="40.9179%" y="431.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::convert::From&lt;wgpu::Buffer&gt;&gt;::from (202 samples, 0.19%)</title><rect x="40.5090%" y="517" width="0.1921%" height="15" fill="rgb(242,15,9)" fg:x="42592" fg:w="202"/><text x="40.7590%" y="527.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (47 samples, 0.04%)</title><rect x="40.6564%" y="501" width="0.0447%" height="15" fill="rgb(233,187,41)" fg:x="42747" fg:w="47"/><text x="40.9064%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (21 samples, 0.02%)</title><rect x="40.7306%" y="469" width="0.0200%" height="15" fill="rgb(227,2,29)" fg:x="42825" fg:w="21"/><text x="40.9806%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="40.7306%" y="453" width="0.0200%" height="15" fill="rgb(222,70,3)" fg:x="42825" fg:w="21"/><text x="40.9806%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (21 samples, 0.02%)</title><rect x="40.7306%" y="437" width="0.0200%" height="15" fill="rgb(213,11,42)" fg:x="42825" fg:w="21"/><text x="40.9806%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (21 samples, 0.02%)</title><rect x="40.7306%" y="421" width="0.0200%" height="15" fill="rgb(225,150,9)" fg:x="42825" fg:w="21"/><text x="40.9806%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="40.7306%" y="405" width="0.0200%" height="15" fill="rgb(230,162,45)" fg:x="42825" fg:w="21"/><text x="40.9806%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (203 samples, 0.19%)</title><rect x="40.7268%" y="501" width="0.1931%" height="15" fill="rgb(222,14,52)" fg:x="42821" fg:w="203"/><text x="40.9768%" y="511.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (203 samples, 0.19%)</title><rect x="40.7268%" y="485" width="0.1931%" height="15" fill="rgb(254,198,14)" fg:x="42821" fg:w="203"/><text x="40.9768%" y="495.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (178 samples, 0.17%)</title><rect x="40.7506%" y="469" width="0.1693%" height="15" fill="rgb(220,217,30)" fg:x="42846" fg:w="178"/><text x="41.0006%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (178 samples, 0.17%)</title><rect x="40.7506%" y="453" width="0.1693%" height="15" fill="rgb(215,146,41)" fg:x="42846" fg:w="178"/><text x="41.0006%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (178 samples, 0.17%)</title><rect x="40.7506%" y="437" width="0.1693%" height="15" fill="rgb(217,27,36)" fg:x="42846" fg:w="178"/><text x="41.0006%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (178 samples, 0.17%)</title><rect x="40.7506%" y="421" width="0.1693%" height="15" fill="rgb(219,218,39)" fg:x="42846" fg:w="178"/><text x="41.0006%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14,644 samples, 13.93%)</title><rect x="40.9199%" y="501" width="13.9278%" height="15" fill="rgb(219,4,42)" fg:x="43024" fg:w="14644"/><text x="41.1699%" y="511.50">core::slice::&lt;impl [T..</text></g><g><title>core::intrinsics::copy_nonoverlapping (14,644 samples, 13.93%)</title><rect x="40.9199%" y="485" width="13.9278%" height="15" fill="rgb(249,119,36)" fg:x="43024" fg:w="14644"/><text x="41.1699%" y="495.50">core::intrinsics::cop..</text></g><g><title>__memcpy_avx_unaligned_erms (14,644 samples, 13.93%)</title><rect x="40.9199%" y="469" width="13.9278%" height="15" fill="rgb(209,23,33)" fg:x="43024" fg:w="14644"/><text x="41.1699%" y="479.50">__memcpy_avx_unaligne..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.02%)</title><rect x="54.8591%" y="485" width="0.0171%" height="15" fill="rgb(211,10,0)" fg:x="57680" fg:w="18"/><text x="55.1091%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.02%)</title><rect x="54.8591%" y="469" width="0.0171%" height="15" fill="rgb(208,99,37)" fg:x="57680" fg:w="18"/><text x="55.1091%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (18 samples, 0.02%)</title><rect x="54.8591%" y="453" width="0.0171%" height="15" fill="rgb(213,132,31)" fg:x="57680" fg:w="18"/><text x="55.1091%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.02%)</title><rect x="54.8591%" y="437" width="0.0171%" height="15" fill="rgb(243,129,40)" fg:x="57680" fg:w="18"/><text x="55.1091%" y="447.50"></text></g><g><title>wgpu::Buffer::unmap (31 samples, 0.03%)</title><rect x="54.8487%" y="501" width="0.0295%" height="15" fill="rgb(210,66,33)" fg:x="57669" fg:w="31"/><text x="55.0987%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.01%)</title><rect x="54.9010%" y="485" width="0.0114%" height="15" fill="rgb(209,189,4)" fg:x="57724" fg:w="12"/><text x="55.1510%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.01%)</title><rect x="54.9010%" y="469" width="0.0114%" height="15" fill="rgb(214,107,37)" fg:x="57724" fg:w="12"/><text x="55.1510%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.01%)</title><rect x="54.9010%" y="453" width="0.0114%" height="15" fill="rgb(245,88,54)" fg:x="57724" fg:w="12"/><text x="55.1510%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="54.9010%" y="437" width="0.0114%" height="15" fill="rgb(205,146,20)" fg:x="57724" fg:w="12"/><text x="55.1510%" y="447.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (41 samples, 0.04%)</title><rect x="54.8782%" y="501" width="0.0390%" height="15" fill="rgb(220,161,25)" fg:x="57700" fg:w="41"/><text x="55.1282%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (15,275 samples, 14.53%)</title><rect x="40.4111%" y="613" width="14.5280%" height="15" fill="rgb(215,152,15)" fg:x="42489" fg:w="15275"/><text x="40.6611%" y="623.50">&lt;Func as bevy_ecs::sys..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (15,275 samples, 14.53%)</title><rect x="40.4111%" y="597" width="14.5280%" height="15" fill="rgb(233,192,44)" fg:x="42489" fg:w="15275"/><text x="40.6611%" y="607.50">&lt;Func as bevy_ecs::sys..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,275 samples, 14.53%)</title><rect x="40.4111%" y="581" width="14.5280%" height="15" fill="rgb(240,170,46)" fg:x="42489" fg:w="15275"/><text x="40.6611%" y="591.50">core::ops::function::i..</text></g><g><title>core::ops::function::FnMut::call_mut (15,275 samples, 14.53%)</title><rect x="40.4111%" y="565" width="14.5280%" height="15" fill="rgb(207,104,33)" fg:x="42489" fg:w="15275"/><text x="40.6611%" y="575.50">core::ops::function::F..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (15,273 samples, 14.53%)</title><rect x="40.4130%" y="549" width="14.5261%" height="15" fill="rgb(219,21,39)" fg:x="42491" fg:w="15273"/><text x="40.6630%" y="559.50">stellar_coordinates_te..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (15,175 samples, 14.43%)</title><rect x="40.5062%" y="533" width="14.4329%" height="15" fill="rgb(214,133,29)" fg:x="42589" fg:w="15175"/><text x="40.7562%" y="543.50">bevy_render::renderer:..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (14,970 samples, 14.24%)</title><rect x="40.7011%" y="517" width="14.2379%" height="15" fill="rgb(226,93,6)" fg:x="42794" fg:w="14970"/><text x="40.9511%" y="527.50">&lt;wgpu::Device as wgpu:..</text></g><g><title>wgpu::Device::create_buffer (23 samples, 0.02%)</title><rect x="54.9172%" y="501" width="0.0219%" height="15" fill="rgb(252,222,34)" fg:x="57741" fg:w="23"/><text x="55.1672%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15,298 samples, 14.55%)</title><rect x="40.4063%" y="629" width="14.5498%" height="15" fill="rgb(252,92,48)" fg:x="42484" fg:w="15298"/><text x="40.6563%" y="639.50">&lt;bevy_ecs::system::fun..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,337 samples, 14.59%)</title><rect x="40.3702%" y="661" width="14.5869%" height="15" fill="rgb(245,223,24)" fg:x="42446" fg:w="15337"/><text x="40.6202%" y="671.50">&lt;core::future::from_ge..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (15,316 samples, 14.57%)</title><rect x="40.3901%" y="645" width="14.5670%" height="15" fill="rgb(205,176,3)" fg:x="42467" fg:w="15316"/><text x="40.6401%" y="655.50">bevy_ecs::schedule::ex..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,340 samples, 14.59%)</title><rect x="40.3692%" y="677" width="14.5898%" height="15" fill="rgb(235,151,15)" fg:x="42445" fg:w="15340"/><text x="40.6192%" y="687.50">async_executor::Execut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,359 samples, 14.61%)</title><rect x="40.3683%" y="693" width="14.6079%" height="15" fill="rgb(237,209,11)" fg:x="42444" fg:w="15359"/><text x="40.6183%" y="703.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (18 samples, 0.02%)</title><rect x="54.9590%" y="677" width="0.0171%" height="15" fill="rgb(243,227,24)" fg:x="57785" fg:w="18"/><text x="55.2090%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="54.9647%" y="661" width="0.0114%" height="15" fill="rgb(239,193,16)" fg:x="57791" fg:w="12"/><text x="55.2147%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="54.9647%" y="645" width="0.0114%" height="15" fill="rgb(231,27,9)" fg:x="57791" fg:w="12"/><text x="55.2147%" y="655.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="54.9647%" y="629" width="0.0114%" height="15" fill="rgb(219,169,10)" fg:x="57791" fg:w="12"/><text x="55.2147%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15,365 samples, 14.61%)</title><rect x="40.3673%" y="709" width="14.6136%" height="15" fill="rgb(244,229,43)" fg:x="42443" fg:w="15365"/><text x="40.6173%" y="719.50">async_task::raw::RawTa..</text></g><g><title>concurrent_queue::full_fence (274 samples, 0.26%)</title><rect x="55.0589%" y="677" width="0.2606%" height="15" fill="rgb(254,38,20)" fg:x="57890" fg:w="274"/><text x="55.3089%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (273 samples, 0.26%)</title><rect x="55.0598%" y="661" width="0.2596%" height="15" fill="rgb(250,47,30)" fg:x="57891" fg:w="273"/><text x="55.3098%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (273 samples, 0.26%)</title><rect x="55.0598%" y="645" width="0.2596%" height="15" fill="rgb(224,124,36)" fg:x="57891" fg:w="273"/><text x="55.3098%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (273 samples, 0.26%)</title><rect x="55.0598%" y="629" width="0.2596%" height="15" fill="rgb(246,68,51)" fg:x="57891" fg:w="273"/><text x="55.3098%" y="639.50"></text></g><g><title>async_executor::Executor::try_tick (15,739 samples, 14.97%)</title><rect x="40.3673%" y="725" width="14.9693%" height="15" fill="rgb(253,43,49)" fg:x="42443" fg:w="15739"/><text x="40.6173%" y="735.50">async_executor::Executo..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (374 samples, 0.36%)</title><rect x="54.9809%" y="709" width="0.3557%" height="15" fill="rgb(219,54,36)" fg:x="57808" fg:w="374"/><text x="55.2309%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (374 samples, 0.36%)</title><rect x="54.9809%" y="693" width="0.3557%" height="15" fill="rgb(227,133,34)" fg:x="57808" fg:w="374"/><text x="55.2309%" y="703.50"></text></g><g><title>__tls_get_addr_slow (12 samples, 0.01%)</title><rect x="55.3756%" y="645" width="0.0114%" height="15" fill="rgb(247,227,15)" fg:x="58223" fg:w="12"/><text x="55.6256%" y="655.50"></text></g><g><title>__tls_get_addr (79 samples, 0.08%)</title><rect x="55.3642%" y="661" width="0.0751%" height="15" fill="rgb(229,96,14)" fg:x="58211" fg:w="79"/><text x="55.6142%" y="671.50"></text></g><g><title>update_get_addr (55 samples, 0.05%)</title><rect x="55.3870%" y="645" width="0.0523%" height="15" fill="rgb(220,79,17)" fg:x="58235" fg:w="55"/><text x="55.6370%" y="655.50"></text></g><g><title>_dl_update_slotinfo (43 samples, 0.04%)</title><rect x="55.3984%" y="629" width="0.0409%" height="15" fill="rgb(205,131,53)" fg:x="58247" fg:w="43"/><text x="55.6484%" y="639.50"></text></g><g><title>__tls_get_addr_slow (12 samples, 0.01%)</title><rect x="55.4812%" y="597" width="0.0114%" height="15" fill="rgb(209,50,29)" fg:x="58334" fg:w="12"/><text x="55.7312%" y="607.50"></text></g><g><title>__tls_get_addr (81 samples, 0.08%)</title><rect x="55.4612%" y="613" width="0.0770%" height="15" fill="rgb(245,86,46)" fg:x="58313" fg:w="81"/><text x="55.7112%" y="623.50"></text></g><g><title>update_get_addr (48 samples, 0.05%)</title><rect x="55.4926%" y="597" width="0.0457%" height="15" fill="rgb(235,66,46)" fg:x="58346" fg:w="48"/><text x="55.7426%" y="607.50"></text></g><g><title>_dl_update_slotinfo (40 samples, 0.04%)</title><rect x="55.5002%" y="581" width="0.0380%" height="15" fill="rgb(232,148,31)" fg:x="58354" fg:w="40"/><text x="55.7502%" y="591.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (198 samples, 0.19%)</title><rect x="55.3566%" y="677" width="0.1883%" height="15" fill="rgb(217,149,8)" fg:x="58203" fg:w="198"/><text x="55.6066%" y="687.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (102 samples, 0.10%)</title><rect x="55.4479%" y="661" width="0.0970%" height="15" fill="rgb(209,183,11)" fg:x="58299" fg:w="102"/><text x="55.6979%" y="671.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (101 samples, 0.10%)</title><rect x="55.4488%" y="645" width="0.0961%" height="15" fill="rgb(208,55,20)" fg:x="58300" fg:w="101"/><text x="55.6988%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (101 samples, 0.10%)</title><rect x="55.4488%" y="629" width="0.0961%" height="15" fill="rgb(218,39,14)" fg:x="58300" fg:w="101"/><text x="55.6988%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (162 samples, 0.15%)</title><rect x="55.6267%" y="549" width="0.1541%" height="15" fill="rgb(216,169,33)" fg:x="58487" fg:w="162"/><text x="55.8767%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (156 samples, 0.15%)</title><rect x="55.6324%" y="533" width="0.1484%" height="15" fill="rgb(233,80,24)" fg:x="58493" fg:w="156"/><text x="55.8824%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (153 samples, 0.15%)</title><rect x="55.6352%" y="517" width="0.1455%" height="15" fill="rgb(213,179,31)" fg:x="58496" fg:w="153"/><text x="55.8852%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (153 samples, 0.15%)</title><rect x="55.6352%" y="501" width="0.1455%" height="15" fill="rgb(209,19,5)" fg:x="58496" fg:w="153"/><text x="55.8852%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (153 samples, 0.15%)</title><rect x="55.6352%" y="485" width="0.1455%" height="15" fill="rgb(219,18,35)" fg:x="58496" fg:w="153"/><text x="55.8852%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (153 samples, 0.15%)</title><rect x="55.6352%" y="469" width="0.1455%" height="15" fill="rgb(209,169,16)" fg:x="58496" fg:w="153"/><text x="55.8852%" y="479.50"></text></g><g><title>async_task::utils::abort_on_panic (355 samples, 0.34%)</title><rect x="55.6257%" y="581" width="0.3376%" height="15" fill="rgb(245,90,51)" fg:x="58486" fg:w="355"/><text x="55.8757%" y="591.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (354 samples, 0.34%)</title><rect x="55.6267%" y="565" width="0.3367%" height="15" fill="rgb(220,99,45)" fg:x="58487" fg:w="354"/><text x="55.8767%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (192 samples, 0.18%)</title><rect x="55.7808%" y="549" width="0.1826%" height="15" fill="rgb(249,89,25)" fg:x="58649" fg:w="192"/><text x="56.0308%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (184 samples, 0.18%)</title><rect x="55.7884%" y="533" width="0.1750%" height="15" fill="rgb(239,193,0)" fg:x="58657" fg:w="184"/><text x="56.0384%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (184 samples, 0.18%)</title><rect x="55.7884%" y="517" width="0.1750%" height="15" fill="rgb(231,126,1)" fg:x="58657" fg:w="184"/><text x="56.0384%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (184 samples, 0.18%)</title><rect x="55.7884%" y="501" width="0.1750%" height="15" fill="rgb(243,166,3)" fg:x="58657" fg:w="184"/><text x="56.0384%" y="511.50"></text></g><g><title>core::mem::drop (177 samples, 0.17%)</title><rect x="55.7950%" y="485" width="0.1683%" height="15" fill="rgb(223,22,34)" fg:x="58664" fg:w="177"/><text x="56.0450%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (177 samples, 0.17%)</title><rect x="55.7950%" y="469" width="0.1683%" height="15" fill="rgb(251,52,51)" fg:x="58664" fg:w="177"/><text x="56.0450%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.17%)</title><rect x="55.7950%" y="453" width="0.1683%" height="15" fill="rgb(221,165,28)" fg:x="58664" fg:w="177"/><text x="56.0450%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (177 samples, 0.17%)</title><rect x="55.7950%" y="437" width="0.1683%" height="15" fill="rgb(218,121,47)" fg:x="58664" fg:w="177"/><text x="56.0450%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (177 samples, 0.17%)</title><rect x="55.7950%" y="421" width="0.1683%" height="15" fill="rgb(209,120,9)" fg:x="58664" fg:w="177"/><text x="56.0450%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (12 samples, 0.01%)</title><rect x="55.9634%" y="581" width="0.0114%" height="15" fill="rgb(236,68,12)" fg:x="58841" fg:w="12"/><text x="56.2134%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (12 samples, 0.01%)</title><rect x="55.9634%" y="565" width="0.0114%" height="15" fill="rgb(225,194,26)" fg:x="58841" fg:w="12"/><text x="56.2134%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (352 samples, 0.33%)</title><rect x="55.9748%" y="581" width="0.3348%" height="15" fill="rgb(231,84,39)" fg:x="58853" fg:w="352"/><text x="56.2248%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (352 samples, 0.33%)</title><rect x="55.9748%" y="565" width="0.3348%" height="15" fill="rgb(210,11,45)" fg:x="58853" fg:w="352"/><text x="56.2248%" y="575.50"></text></g><g><title>async_task::header::Header::register (773 samples, 0.74%)</title><rect x="55.5839%" y="597" width="0.7352%" height="15" fill="rgb(224,54,52)" fg:x="58442" fg:w="773"/><text x="55.8339%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (910 samples, 0.87%)</title><rect x="55.5534%" y="661" width="0.8655%" height="15" fill="rgb(238,102,14)" fg:x="58410" fg:w="910"/><text x="55.8034%" y="671.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (901 samples, 0.86%)</title><rect x="55.5620%" y="645" width="0.8569%" height="15" fill="rgb(243,160,52)" fg:x="58419" fg:w="901"/><text x="55.8120%" y="655.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (898 samples, 0.85%)</title><rect x="55.5649%" y="629" width="0.8541%" height="15" fill="rgb(216,114,19)" fg:x="58422" fg:w="898"/><text x="55.8149%" y="639.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (898 samples, 0.85%)</title><rect x="55.5649%" y="613" width="0.8541%" height="15" fill="rgb(244,166,37)" fg:x="58422" fg:w="898"/><text x="55.8149%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (105 samples, 0.10%)</title><rect x="56.3191%" y="597" width="0.0999%" height="15" fill="rgb(246,29,44)" fg:x="59215" fg:w="105"/><text x="56.5691%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (105 samples, 0.10%)</title><rect x="56.3191%" y="581" width="0.0999%" height="15" fill="rgb(215,56,53)" fg:x="59215" fg:w="105"/><text x="56.5691%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (14 samples, 0.01%)</title><rect x="56.4189%" y="661" width="0.0133%" height="15" fill="rgb(217,60,2)" fg:x="59320" fg:w="14"/><text x="56.6689%" y="671.50"></text></g><g><title>core::cell::BorrowRefMut::new (14 samples, 0.01%)</title><rect x="56.4189%" y="645" width="0.0133%" height="15" fill="rgb(207,26,24)" fg:x="59320" fg:w="14"/><text x="56.6689%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (16,929 samples, 16.10%)</title><rect x="40.3435%" y="805" width="16.1011%" height="15" fill="rgb(252,210,15)" fg:x="42418" fg:w="16929"/><text x="40.5935%" y="815.50">&lt;bevy_ecs::schedule::exec..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (16,929 samples, 16.10%)</title><rect x="40.3435%" y="789" width="16.1011%" height="15" fill="rgb(253,209,26)" fg:x="42418" fg:w="16929"/><text x="40.5935%" y="799.50">bevy_tasks::task_pool::Ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,929 samples, 16.10%)</title><rect x="40.3435%" y="773" width="16.1011%" height="15" fill="rgb(238,170,14)" fg:x="42418" fg:w="16929"/><text x="40.5935%" y="783.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,929 samples, 16.10%)</title><rect x="40.3435%" y="757" width="16.1011%" height="15" fill="rgb(216,178,15)" fg:x="42418" fg:w="16929"/><text x="40.5935%" y="767.50">std::thread::local::Local..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (16,929 samples, 16.10%)</title><rect x="40.3435%" y="741" width="16.1011%" height="15" fill="rgb(250,197,2)" fg:x="42418" fg:w="16929"/><text x="40.5935%" y="751.50">bevy_tasks::task_pool::Ta..</text></g><g><title>futures_lite::future::block_on (1,163 samples, 1.11%)</title><rect x="55.3385%" y="725" width="1.1061%" height="15" fill="rgb(212,70,42)" fg:x="58184" fg:w="1163"/><text x="55.5885%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,163 samples, 1.11%)</title><rect x="55.3385%" y="709" width="1.1061%" height="15" fill="rgb(227,213,9)" fg:x="58184" fg:w="1163"/><text x="55.5885%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,147 samples, 1.09%)</title><rect x="55.3537%" y="693" width="1.0909%" height="15" fill="rgb(245,99,25)" fg:x="58200" fg:w="1147"/><text x="55.6037%" y="703.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (946 samples, 0.90%)</title><rect x="55.5449%" y="677" width="0.8997%" height="15" fill="rgb(250,82,29)" fg:x="58401" fg:w="946"/><text x="55.7949%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (16 samples, 0.02%)</title><rect x="56.4503%" y="709" width="0.0152%" height="15" fill="rgb(241,226,54)" fg:x="59353" fg:w="16"/><text x="56.7003%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (18 samples, 0.02%)</title><rect x="56.4893%" y="677" width="0.0171%" height="15" fill="rgb(221,99,41)" fg:x="59394" fg:w="18"/><text x="56.7393%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (18 samples, 0.02%)</title><rect x="56.4893%" y="661" width="0.0171%" height="15" fill="rgb(213,90,21)" fg:x="59394" fg:w="18"/><text x="56.7393%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="56.4922%" y="645" width="0.0143%" height="15" fill="rgb(205,208,24)" fg:x="59397" fg:w="15"/><text x="56.7422%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="56.4922%" y="629" width="0.0143%" height="15" fill="rgb(246,31,12)" fg:x="59397" fg:w="15"/><text x="56.7422%" y="639.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (19 samples, 0.02%)</title><rect x="56.5064%" y="677" width="0.0181%" height="15" fill="rgb(213,154,6)" fg:x="59412" fg:w="19"/><text x="56.7564%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (18 samples, 0.02%)</title><rect x="56.5074%" y="661" width="0.0171%" height="15" fill="rgb(222,163,29)" fg:x="59413" fg:w="18"/><text x="56.7574%" y="671.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (72 samples, 0.07%)</title><rect x="56.4655%" y="709" width="0.0685%" height="15" fill="rgb(227,201,8)" fg:x="59369" fg:w="72"/><text x="56.7155%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (56 samples, 0.05%)</title><rect x="56.4808%" y="693" width="0.0533%" height="15" fill="rgb(233,9,32)" fg:x="59385" fg:w="56"/><text x="56.7308%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (16 samples, 0.02%)</title><rect x="56.5340%" y="661" width="0.0152%" height="15" fill="rgb(217,54,24)" fg:x="59441" fg:w="16"/><text x="56.7840%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="56.5340%" y="645" width="0.0152%" height="15" fill="rgb(235,192,0)" fg:x="59441" fg:w="16"/><text x="56.7840%" y="655.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (24 samples, 0.02%)</title><rect x="56.5340%" y="709" width="0.0228%" height="15" fill="rgb(235,45,9)" fg:x="59441" fg:w="24"/><text x="56.7840%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (24 samples, 0.02%)</title><rect x="56.5340%" y="693" width="0.0228%" height="15" fill="rgb(246,42,40)" fg:x="59441" fg:w="24"/><text x="56.7840%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.02%)</title><rect x="56.5340%" y="677" width="0.0228%" height="15" fill="rgb(248,111,24)" fg:x="59441" fg:w="24"/><text x="56.7840%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (13 samples, 0.01%)</title><rect x="56.5664%" y="661" width="0.0124%" height="15" fill="rgb(249,65,22)" fg:x="59475" fg:w="13"/><text x="56.8164%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (13 samples, 0.01%)</title><rect x="56.5664%" y="645" width="0.0124%" height="15" fill="rgb(238,111,51)" fg:x="59475" fg:w="13"/><text x="56.8164%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="56.5673%" y="629" width="0.0114%" height="15" fill="rgb(250,118,22)" fg:x="59476" fg:w="12"/><text x="56.8173%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="56.5673%" y="613" width="0.0114%" height="15" fill="rgb(234,84,26)" fg:x="59476" fg:w="12"/><text x="56.8173%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (144 samples, 0.14%)</title><rect x="56.4446%" y="757" width="0.1370%" height="15" fill="rgb(243,172,12)" fg:x="59347" fg:w="144"/><text x="56.6946%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (144 samples, 0.14%)</title><rect x="56.4446%" y="741" width="0.1370%" height="15" fill="rgb(236,150,49)" fg:x="59347" fg:w="144"/><text x="56.6946%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (143 samples, 0.14%)</title><rect x="56.4456%" y="725" width="0.1360%" height="15" fill="rgb(225,197,26)" fg:x="59348" fg:w="143"/><text x="56.6956%" y="735.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (26 samples, 0.02%)</title><rect x="56.5568%" y="709" width="0.0247%" height="15" fill="rgb(214,17,42)" fg:x="59465" fg:w="26"/><text x="56.8068%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (22 samples, 0.02%)</title><rect x="56.5607%" y="693" width="0.0209%" height="15" fill="rgb(224,165,40)" fg:x="59469" fg:w="22"/><text x="56.8107%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (18 samples, 0.02%)</title><rect x="56.5645%" y="677" width="0.0171%" height="15" fill="rgb(246,100,4)" fg:x="59473" fg:w="18"/><text x="56.8145%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (25 samples, 0.02%)</title><rect x="56.5882%" y="725" width="0.0238%" height="15" fill="rgb(222,103,0)" fg:x="59498" fg:w="25"/><text x="56.8382%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (19 samples, 0.02%)</title><rect x="56.5939%" y="709" width="0.0181%" height="15" fill="rgb(227,189,26)" fg:x="59504" fg:w="19"/><text x="56.8439%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (26 samples, 0.02%)</title><rect x="56.5882%" y="757" width="0.0247%" height="15" fill="rgb(214,202,17)" fg:x="59498" fg:w="26"/><text x="56.8382%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (26 samples, 0.02%)</title><rect x="56.5882%" y="741" width="0.0247%" height="15" fill="rgb(229,111,3)" fg:x="59498" fg:w="26"/><text x="56.8382%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (181 samples, 0.17%)</title><rect x="56.4446%" y="805" width="0.1721%" height="15" fill="rgb(229,172,15)" fg:x="59347" fg:w="181"/><text x="56.6946%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (181 samples, 0.17%)</title><rect x="56.4446%" y="789" width="0.1721%" height="15" fill="rgb(230,224,35)" fg:x="59347" fg:w="181"/><text x="56.6946%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (181 samples, 0.17%)</title><rect x="56.4446%" y="773" width="0.1721%" height="15" fill="rgb(251,141,6)" fg:x="59347" fg:w="181"/><text x="56.6946%" y="783.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (14 samples, 0.01%)</title><rect x="56.6234%" y="709" width="0.0133%" height="15" fill="rgb(225,208,6)" fg:x="59535" fg:w="14"/><text x="56.8734%" y="719.50"></text></g><g><title>bevy_render::renderer::render_system::{{closure}} (18 samples, 0.02%)</title><rect x="56.6225%" y="741" width="0.0171%" height="15" fill="rgb(246,181,16)" fg:x="59534" fg:w="18"/><text x="56.8725%" y="751.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (18 samples, 0.02%)</title><rect x="56.6225%" y="725" width="0.0171%" height="15" fill="rgb(227,129,36)" fg:x="59534" fg:w="18"/><text x="56.8725%" y="735.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (21 samples, 0.02%)</title><rect x="56.6206%" y="757" width="0.0200%" height="15" fill="rgb(248,117,24)" fg:x="59532" fg:w="21"/><text x="56.8706%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (17,151 samples, 16.31%)</title><rect x="40.3435%" y="853" width="16.3122%" height="15" fill="rgb(214,185,35)" fg:x="42418" fg:w="17151"/><text x="40.5935%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; a..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (17,151 samples, 16.31%)</title><rect x="40.3435%" y="837" width="16.3122%" height="15" fill="rgb(236,150,34)" fg:x="42418" fg:w="17151"/><text x="40.5935%" y="847.50">&lt;bevy_render::RenderPlugi..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (17,151 samples, 16.31%)</title><rect x="40.3435%" y="821" width="16.3122%" height="15" fill="rgb(243,228,27)" fg:x="42418" fg:w="17151"/><text x="40.5935%" y="831.50">&lt;bevy_ecs::schedule::stag..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (41 samples, 0.04%)</title><rect x="56.6168%" y="805" width="0.0390%" height="15" fill="rgb(245,77,44)" fg:x="59528" fg:w="41"/><text x="56.8668%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.04%)</title><rect x="56.6168%" y="789" width="0.0390%" height="15" fill="rgb(235,214,42)" fg:x="59528" fg:w="41"/><text x="56.8668%" y="799.50"></text></g><g><title>bevy_render::renderer::render_system (41 samples, 0.04%)</title><rect x="56.6168%" y="773" width="0.0390%" height="15" fill="rgb(221,74,3)" fg:x="59528" fg:w="41"/><text x="56.8668%" y="783.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.05%)</title><rect x="56.6995%" y="645" width="0.0476%" height="15" fill="rgb(206,121,29)" fg:x="59615" fg:w="50"/><text x="56.9495%" y="655.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.05%)</title><rect x="56.6995%" y="629" width="0.0476%" height="15" fill="rgb(249,131,53)" fg:x="59615" fg:w="50"/><text x="56.9495%" y="639.50"></text></g><g><title>_int_malloc (47 samples, 0.04%)</title><rect x="56.7024%" y="613" width="0.0447%" height="15" fill="rgb(236,170,29)" fg:x="59618" fg:w="47"/><text x="56.9524%" y="623.50"></text></g><g><title>async_task::runnable::spawn_unchecked (56 samples, 0.05%)</title><rect x="56.6986%" y="677" width="0.0533%" height="15" fill="rgb(247,96,15)" fg:x="59614" fg:w="56"/><text x="56.9486%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (55 samples, 0.05%)</title><rect x="56.6995%" y="661" width="0.0523%" height="15" fill="rgb(211,210,7)" fg:x="59615" fg:w="55"/><text x="56.9495%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (93 samples, 0.09%)</title><rect x="56.6662%" y="709" width="0.0885%" height="15" fill="rgb(240,88,50)" fg:x="59580" fg:w="93"/><text x="56.9162%" y="719.50"></text></g><g><title>async_executor::Executor::spawn (82 samples, 0.08%)</title><rect x="56.6767%" y="693" width="0.0780%" height="15" fill="rgb(209,229,26)" fg:x="59591" fg:w="82"/><text x="56.9267%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (107 samples, 0.10%)</title><rect x="56.6577%" y="725" width="0.1018%" height="15" fill="rgb(210,68,23)" fg:x="59571" fg:w="107"/><text x="56.9077%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (109 samples, 0.10%)</title><rect x="56.6577%" y="741" width="0.1037%" height="15" fill="rgb(229,180,13)" fg:x="59571" fg:w="109"/><text x="56.9077%" y="751.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="56.7832%" y="613" width="0.0190%" height="15" fill="rgb(236,53,44)" fg:x="59703" fg:w="20"/><text x="57.0332%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (20 samples, 0.02%)</title><rect x="56.7832%" y="597" width="0.0190%" height="15" fill="rgb(244,214,29)" fg:x="59703" fg:w="20"/><text x="57.0332%" y="607.50"></text></g><g><title>event_listener::Event::notify (19 samples, 0.02%)</title><rect x="56.7842%" y="581" width="0.0181%" height="15" fill="rgb(220,75,29)" fg:x="59704" fg:w="19"/><text x="57.0342%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="56.7813%" y="645" width="0.0276%" height="15" fill="rgb(214,183,37)" fg:x="59701" fg:w="29"/><text x="57.0313%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (28 samples, 0.03%)</title><rect x="56.7823%" y="629" width="0.0266%" height="15" fill="rgb(239,117,29)" fg:x="59702" fg:w="28"/><text x="57.0323%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (53 samples, 0.05%)</title><rect x="56.7737%" y="661" width="0.0504%" height="15" fill="rgb(237,171,35)" fg:x="59693" fg:w="53"/><text x="57.0237%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="56.8241%" y="645" width="0.0190%" height="15" fill="rgb(229,178,53)" fg:x="59746" fg:w="20"/><text x="57.0741%" y="655.50"></text></g><g><title>event_listener::Event::listen (11 samples, 0.01%)</title><rect x="56.8327%" y="629" width="0.0105%" height="15" fill="rgb(210,102,19)" fg:x="59755" fg:w="11"/><text x="57.0827%" y="639.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (11 samples, 0.01%)</title><rect x="56.8431%" y="629" width="0.0105%" height="15" fill="rgb(235,127,22)" fg:x="59766" fg:w="11"/><text x="57.0931%" y="639.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="56.8431%" y="645" width="0.0124%" height="15" fill="rgb(244,31,31)" fg:x="59766" fg:w="13"/><text x="57.0931%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (15 samples, 0.01%)</title><rect x="56.8555%" y="629" width="0.0143%" height="15" fill="rgb(231,43,21)" fg:x="59779" fg:w="15"/><text x="57.1055%" y="639.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (18 samples, 0.02%)</title><rect x="56.8783%" y="565" width="0.0171%" height="15" fill="rgb(217,131,35)" fg:x="59803" fg:w="18"/><text x="57.1283%" y="575.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (18 samples, 0.02%)</title><rect x="56.8783%" y="549" width="0.0171%" height="15" fill="rgb(221,149,4)" fg:x="59803" fg:w="18"/><text x="57.1283%" y="559.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (139 samples, 0.13%)</title><rect x="56.9316%" y="533" width="0.1322%" height="15" fill="rgb(232,170,28)" fg:x="59859" fg:w="139"/><text x="57.1816%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (219 samples, 0.21%)</title><rect x="56.8698%" y="629" width="0.2083%" height="15" fill="rgb(238,56,10)" fg:x="59794" fg:w="219"/><text x="57.1198%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (212 samples, 0.20%)</title><rect x="56.8764%" y="613" width="0.2016%" height="15" fill="rgb(235,196,14)" fg:x="59801" fg:w="212"/><text x="57.1264%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (212 samples, 0.20%)</title><rect x="56.8764%" y="597" width="0.2016%" height="15" fill="rgb(216,45,48)" fg:x="59801" fg:w="212"/><text x="57.1264%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (212 samples, 0.20%)</title><rect x="56.8764%" y="581" width="0.2016%" height="15" fill="rgb(238,213,17)" fg:x="59801" fg:w="212"/><text x="57.1264%" y="591.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (185 samples, 0.18%)</title><rect x="56.9021%" y="565" width="0.1760%" height="15" fill="rgb(212,13,2)" fg:x="59828" fg:w="185"/><text x="57.1521%" y="575.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (178 samples, 0.17%)</title><rect x="56.9088%" y="549" width="0.1693%" height="15" fill="rgb(240,114,20)" fg:x="59835" fg:w="178"/><text x="57.1588%" y="559.50"></text></g><g><title>glam::vec3::Vec3::new (15 samples, 0.01%)</title><rect x="57.0638%" y="533" width="0.0143%" height="15" fill="rgb(228,41,40)" fg:x="59998" fg:w="15"/><text x="57.3138%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (67 samples, 0.06%)</title><rect x="57.0866%" y="549" width="0.0637%" height="15" fill="rgb(244,132,35)" fg:x="60022" fg:w="67"/><text x="57.3366%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (67 samples, 0.06%)</title><rect x="57.0866%" y="533" width="0.0637%" height="15" fill="rgb(253,189,4)" fg:x="60022" fg:w="67"/><text x="57.3366%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (67 samples, 0.06%)</title><rect x="57.0866%" y="517" width="0.0637%" height="15" fill="rgb(224,37,19)" fg:x="60022" fg:w="67"/><text x="57.3366%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.06%)</title><rect x="57.0866%" y="501" width="0.0637%" height="15" fill="rgb(235,223,18)" fg:x="60022" fg:w="67"/><text x="57.3366%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (67 samples, 0.06%)</title><rect x="57.0866%" y="485" width="0.0637%" height="15" fill="rgb(235,163,25)" fg:x="60022" fg:w="67"/><text x="57.3366%" y="495.50"></text></g><g><title>core::intrinsics::copy (40 samples, 0.04%)</title><rect x="57.2702%" y="501" width="0.0380%" height="15" fill="rgb(217,145,28)" fg:x="60215" fg:w="40"/><text x="57.5202%" y="511.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (203 samples, 0.19%)</title><rect x="57.1532%" y="549" width="0.1931%" height="15" fill="rgb(223,223,32)" fg:x="60092" fg:w="203"/><text x="57.4032%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (112 samples, 0.11%)</title><rect x="57.2397%" y="533" width="0.1065%" height="15" fill="rgb(227,189,39)" fg:x="60183" fg:w="112"/><text x="57.4897%" y="543.50"></text></g><g><title>core::ptr::swap (84 samples, 0.08%)</title><rect x="57.2664%" y="517" width="0.0799%" height="15" fill="rgb(248,10,22)" fg:x="60211" fg:w="84"/><text x="57.5164%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.04%)</title><rect x="57.3082%" y="501" width="0.0380%" height="15" fill="rgb(248,46,39)" fg:x="60255" fg:w="40"/><text x="57.5582%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (308 samples, 0.29%)</title><rect x="57.0857%" y="629" width="0.2929%" height="15" fill="rgb(248,113,48)" fg:x="60021" fg:w="308"/><text x="57.3357%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (308 samples, 0.29%)</title><rect x="57.0857%" y="613" width="0.2929%" height="15" fill="rgb(245,16,25)" fg:x="60021" fg:w="308"/><text x="57.3357%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (308 samples, 0.29%)</title><rect x="57.0857%" y="597" width="0.2929%" height="15" fill="rgb(249,152,16)" fg:x="60021" fg:w="308"/><text x="57.3357%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (308 samples, 0.29%)</title><rect x="57.0857%" y="581" width="0.2929%" height="15" fill="rgb(250,16,1)" fg:x="60021" fg:w="308"/><text x="57.3357%" y="591.50"></text></g><g><title>bevy_prototype_debug_lines::update (307 samples, 0.29%)</title><rect x="57.0866%" y="565" width="0.2920%" height="15" fill="rgb(249,138,3)" fg:x="60022" fg:w="307"/><text x="57.3366%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.03%)</title><rect x="57.3482%" y="549" width="0.0304%" height="15" fill="rgb(227,71,41)" fg:x="60297" fg:w="32"/><text x="57.5982%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (556 samples, 0.53%)</title><rect x="56.8555%" y="645" width="0.5288%" height="15" fill="rgb(209,184,23)" fg:x="59779" fg:w="556"/><text x="57.1055%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (653 samples, 0.62%)</title><rect x="56.7737%" y="677" width="0.6211%" height="15" fill="rgb(223,215,31)" fg:x="59693" fg:w="653"/><text x="57.0237%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (600 samples, 0.57%)</title><rect x="56.8241%" y="661" width="0.5707%" height="15" fill="rgb(210,146,28)" fg:x="59746" fg:w="600"/><text x="57.0741%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (659 samples, 0.63%)</title><rect x="56.7727%" y="693" width="0.6268%" height="15" fill="rgb(209,183,41)" fg:x="59692" fg:w="659"/><text x="57.0227%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (686 samples, 0.65%)</title><rect x="56.7718%" y="709" width="0.6525%" height="15" fill="rgb(209,224,45)" fg:x="59691" fg:w="686"/><text x="57.0218%" y="719.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (26 samples, 0.02%)</title><rect x="57.3995%" y="693" width="0.0247%" height="15" fill="rgb(224,209,51)" fg:x="60351" fg:w="26"/><text x="57.6495%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="57.4043%" y="677" width="0.0200%" height="15" fill="rgb(223,17,39)" fg:x="60356" fg:w="21"/><text x="57.6543%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="57.4043%" y="661" width="0.0200%" height="15" fill="rgb(234,204,37)" fg:x="60356" fg:w="21"/><text x="57.6543%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="57.4043%" y="645" width="0.0200%" height="15" fill="rgb(236,120,5)" fg:x="60356" fg:w="21"/><text x="57.6543%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (11 samples, 0.01%)</title><rect x="57.4138%" y="629" width="0.0105%" height="15" fill="rgb(248,97,27)" fg:x="60366" fg:w="11"/><text x="57.6638%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (726 samples, 0.69%)</title><rect x="56.7689%" y="725" width="0.6905%" height="15" fill="rgb(240,66,17)" fg:x="59688" fg:w="726"/><text x="57.0189%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.02%)</title><rect x="57.4404%" y="709" width="0.0190%" height="15" fill="rgb(210,79,3)" fg:x="60394" fg:w="20"/><text x="57.6904%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="57.4404%" y="693" width="0.0190%" height="15" fill="rgb(214,176,27)" fg:x="60394" fg:w="20"/><text x="57.6904%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.02%)</title><rect x="57.4661%" y="693" width="0.0152%" height="15" fill="rgb(235,185,3)" fg:x="60421" fg:w="16"/><text x="57.7161%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="57.4670%" y="677" width="0.0143%" height="15" fill="rgb(227,24,12)" fg:x="60422" fg:w="15"/><text x="57.7170%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="57.4670%" y="661" width="0.0143%" height="15" fill="rgb(252,169,48)" fg:x="60422" fg:w="15"/><text x="57.7170%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="57.4670%" y="645" width="0.0143%" height="15" fill="rgb(212,65,1)" fg:x="60422" fg:w="15"/><text x="57.7170%" y="655.50"></text></g><g><title>async_executor::Executor::try_tick (776 samples, 0.74%)</title><rect x="56.7613%" y="741" width="0.7380%" height="15" fill="rgb(242,39,24)" fg:x="59680" fg:w="776"/><text x="57.0113%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (42 samples, 0.04%)</title><rect x="57.4594%" y="725" width="0.0399%" height="15" fill="rgb(249,32,23)" fg:x="60414" fg:w="42"/><text x="57.7094%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (38 samples, 0.04%)</title><rect x="57.4632%" y="709" width="0.0361%" height="15" fill="rgb(251,195,23)" fg:x="60418" fg:w="38"/><text x="57.7132%" y="719.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="57.5184%" y="565" width="0.0114%" height="15" fill="rgb(236,174,8)" fg:x="60476" fg:w="12"/><text x="57.7684%" y="575.50"></text></g><g><title>async_task::utils::abort_on_panic (23 samples, 0.02%)</title><rect x="57.5184%" y="597" width="0.0219%" height="15" fill="rgb(220,197,8)" fg:x="60476" fg:w="23"/><text x="57.7684%" y="607.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (23 samples, 0.02%)</title><rect x="57.5184%" y="581" width="0.0219%" height="15" fill="rgb(240,108,37)" fg:x="60476" fg:w="23"/><text x="57.7684%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (11 samples, 0.01%)</title><rect x="57.5298%" y="565" width="0.0105%" height="15" fill="rgb(232,176,24)" fg:x="60488" fg:w="11"/><text x="57.7798%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11 samples, 0.01%)</title><rect x="57.5298%" y="549" width="0.0105%" height="15" fill="rgb(243,35,29)" fg:x="60488" fg:w="11"/><text x="57.7798%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="57.5298%" y="533" width="0.0105%" height="15" fill="rgb(210,37,18)" fg:x="60488" fg:w="11"/><text x="57.7798%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (11 samples, 0.01%)</title><rect x="57.5298%" y="517" width="0.0105%" height="15" fill="rgb(224,184,40)" fg:x="60488" fg:w="11"/><text x="57.7798%" y="527.50"></text></g><g><title>async_task::header::Header::register (41 samples, 0.04%)</title><rect x="57.5175%" y="613" width="0.0390%" height="15" fill="rgb(236,39,29)" fg:x="60475" fg:w="41"/><text x="57.7675%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.02%)</title><rect x="57.5403%" y="597" width="0.0162%" height="15" fill="rgb(232,48,39)" fg:x="60499" fg:w="17"/><text x="57.7903%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.02%)</title><rect x="57.5403%" y="581" width="0.0162%" height="15" fill="rgb(236,34,42)" fg:x="60499" fg:w="17"/><text x="57.7903%" y="591.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (951 samples, 0.90%)</title><rect x="56.6558%" y="821" width="0.9045%" height="15" fill="rgb(243,106,37)" fg:x="59569" fg:w="951"/><text x="56.9058%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (951 samples, 0.90%)</title><rect x="56.6558%" y="805" width="0.9045%" height="15" fill="rgb(218,96,6)" fg:x="59569" fg:w="951"/><text x="56.9058%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (951 samples, 0.90%)</title><rect x="56.6558%" y="789" width="0.9045%" height="15" fill="rgb(235,130,12)" fg:x="59569" fg:w="951"/><text x="56.9058%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (951 samples, 0.90%)</title><rect x="56.6558%" y="773" width="0.9045%" height="15" fill="rgb(231,95,0)" fg:x="59569" fg:w="951"/><text x="56.9058%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (951 samples, 0.90%)</title><rect x="56.6558%" y="757" width="0.9045%" height="15" fill="rgb(228,12,23)" fg:x="59569" fg:w="951"/><text x="56.9058%" y="767.50"></text></g><g><title>futures_lite::future::block_on (61 samples, 0.06%)</title><rect x="57.5022%" y="741" width="0.0580%" height="15" fill="rgb(216,12,1)" fg:x="60459" fg:w="61"/><text x="57.7522%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60 samples, 0.06%)</title><rect x="57.5032%" y="725" width="0.0571%" height="15" fill="rgb(219,59,3)" fg:x="60460" fg:w="60"/><text x="57.7532%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.06%)</title><rect x="57.5041%" y="709" width="0.0561%" height="15" fill="rgb(215,208,46)" fg:x="60461" fg:w="59"/><text x="57.7541%" y="719.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (49 samples, 0.05%)</title><rect x="57.5136%" y="693" width="0.0466%" height="15" fill="rgb(254,224,29)" fg:x="60471" fg:w="49"/><text x="57.7636%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="57.5165%" y="677" width="0.0438%" height="15" fill="rgb(232,14,29)" fg:x="60474" fg:w="46"/><text x="57.7665%" y="687.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="57.5175%" y="661" width="0.0428%" height="15" fill="rgb(208,45,52)" fg:x="60475" fg:w="45"/><text x="57.7675%" y="671.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="57.5175%" y="645" width="0.0428%" height="15" fill="rgb(234,191,28)" fg:x="60475" fg:w="45"/><text x="57.7675%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (45 samples, 0.04%)</title><rect x="57.5175%" y="629" width="0.0428%" height="15" fill="rgb(244,67,43)" fg:x="60475" fg:w="45"/><text x="57.7675%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (958 samples, 0.91%)</title><rect x="56.6558%" y="837" width="0.9111%" height="15" fill="rgb(236,189,24)" fg:x="59569" fg:w="958"/><text x="56.9058%" y="847.50"></text></g><g><title>async_executor::Executor::state (17 samples, 0.02%)</title><rect x="57.6164%" y="709" width="0.0162%" height="15" fill="rgb(239,214,33)" fg:x="60579" fg:w="17"/><text x="57.8664%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (17 samples, 0.02%)</title><rect x="57.6164%" y="693" width="0.0162%" height="15" fill="rgb(226,176,41)" fg:x="60579" fg:w="17"/><text x="57.8664%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (17 samples, 0.02%)</title><rect x="57.6164%" y="677" width="0.0162%" height="15" fill="rgb(248,47,8)" fg:x="60579" fg:w="17"/><text x="57.8664%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="57.6164%" y="661" width="0.0162%" height="15" fill="rgb(218,81,44)" fg:x="60579" fg:w="17"/><text x="57.8664%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (17 samples, 0.02%)</title><rect x="57.6164%" y="645" width="0.0162%" height="15" fill="rgb(213,98,6)" fg:x="60579" fg:w="17"/><text x="57.8664%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="57.6192%" y="629" width="0.0133%" height="15" fill="rgb(222,85,22)" fg:x="60582" fg:w="14"/><text x="57.8692%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="57.6192%" y="613" width="0.0133%" height="15" fill="rgb(239,46,39)" fg:x="60582" fg:w="14"/><text x="57.8692%" y="623.50"></text></g><g><title>concurrent_queue::full_fence (666 samples, 0.63%)</title><rect x="57.8665%" y="677" width="0.6334%" height="15" fill="rgb(237,12,29)" fg:x="60842" fg:w="666"/><text x="58.1165%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (649 samples, 0.62%)</title><rect x="57.8827%" y="661" width="0.6173%" height="15" fill="rgb(214,77,8)" fg:x="60859" fg:w="649"/><text x="58.1327%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (649 samples, 0.62%)</title><rect x="57.8827%" y="645" width="0.6173%" height="15" fill="rgb(217,168,37)" fg:x="60859" fg:w="649"/><text x="58.1327%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (649 samples, 0.62%)</title><rect x="57.8827%" y="629" width="0.6173%" height="15" fill="rgb(221,217,23)" fg:x="60859" fg:w="649"/><text x="58.1327%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (41 samples, 0.04%)</title><rect x="58.4999%" y="677" width="0.0390%" height="15" fill="rgb(243,229,36)" fg:x="61508" fg:w="41"/><text x="58.7499%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.04%)</title><rect x="58.4999%" y="661" width="0.0390%" height="15" fill="rgb(251,163,40)" fg:x="61508" fg:w="41"/><text x="58.7499%" y="671.50"></text></g><g><title>async_executor::Executor::try_tick (1,017 samples, 0.97%)</title><rect x="57.5888%" y="725" width="0.9673%" height="15" fill="rgb(237,222,12)" fg:x="60550" fg:w="1017"/><text x="57.8388%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (971 samples, 0.92%)</title><rect x="57.6325%" y="709" width="0.9235%" height="15" fill="rgb(248,132,6)" fg:x="60596" fg:w="971"/><text x="57.8825%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (913 samples, 0.87%)</title><rect x="57.6877%" y="693" width="0.8683%" height="15" fill="rgb(227,167,50)" fg:x="60654" fg:w="913"/><text x="57.9377%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="58.5389%" y="677" width="0.0171%" height="15" fill="rgb(242,84,37)" fg:x="61549" fg:w="18"/><text x="58.7889%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="58.5389%" y="661" width="0.0171%" height="15" fill="rgb(212,4,50)" fg:x="61549" fg:w="18"/><text x="58.7889%" y="671.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (21 samples, 0.02%)</title><rect x="58.5560%" y="725" width="0.0200%" height="15" fill="rgb(230,228,32)" fg:x="61567" fg:w="21"/><text x="58.8060%" y="735.50"></text></g><g><title>__tls_get_addr_slow (15 samples, 0.01%)</title><rect x="58.6863%" y="645" width="0.0143%" height="15" fill="rgb(248,217,23)" fg:x="61704" fg:w="15"/><text x="58.9363%" y="655.50"></text></g><g><title>__tls_get_addr (181 samples, 0.17%)</title><rect x="58.6664%" y="661" width="0.1721%" height="15" fill="rgb(238,197,32)" fg:x="61683" fg:w="181"/><text x="58.9164%" y="671.50"></text></g><g><title>update_get_addr (145 samples, 0.14%)</title><rect x="58.7006%" y="645" width="0.1379%" height="15" fill="rgb(236,106,1)" fg:x="61719" fg:w="145"/><text x="58.9506%" y="655.50"></text></g><g><title>_dl_update_slotinfo (102 samples, 0.10%)</title><rect x="58.7415%" y="629" width="0.0970%" height="15" fill="rgb(219,228,13)" fg:x="61762" fg:w="102"/><text x="58.9915%" y="639.50"></text></g><g><title>_fini (19 samples, 0.02%)</title><rect x="58.8385%" y="661" width="0.0181%" height="15" fill="rgb(238,30,35)" fg:x="61864" fg:w="19"/><text x="59.0885%" y="671.50"></text></g><g><title>__tls_get_addr_slow (35 samples, 0.03%)</title><rect x="58.9156%" y="597" width="0.0333%" height="15" fill="rgb(236,70,23)" fg:x="61945" fg:w="35"/><text x="59.1656%" y="607.50"></text></g><g><title>__tls_get_addr (210 samples, 0.20%)</title><rect x="58.8813%" y="613" width="0.1997%" height="15" fill="rgb(249,104,48)" fg:x="61909" fg:w="210"/><text x="59.1313%" y="623.50"></text></g><g><title>update_get_addr (139 samples, 0.13%)</title><rect x="58.9489%" y="597" width="0.1322%" height="15" fill="rgb(254,117,50)" fg:x="61980" fg:w="139"/><text x="59.1989%" y="607.50"></text></g><g><title>_dl_update_slotinfo (109 samples, 0.10%)</title><rect x="58.9774%" y="581" width="0.1037%" height="15" fill="rgb(223,152,4)" fg:x="62010" fg:w="109"/><text x="59.2274%" y="591.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (468 samples, 0.45%)</title><rect x="58.6521%" y="677" width="0.4451%" height="15" fill="rgb(245,6,2)" fg:x="61668" fg:w="468"/><text x="58.9021%" y="687.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (253 samples, 0.24%)</title><rect x="58.8566%" y="661" width="0.2406%" height="15" fill="rgb(249,150,24)" fg:x="61883" fg:w="253"/><text x="59.1066%" y="671.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (253 samples, 0.24%)</title><rect x="58.8566%" y="645" width="0.2406%" height="15" fill="rgb(228,185,42)" fg:x="61883" fg:w="253"/><text x="59.1066%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (253 samples, 0.24%)</title><rect x="58.8566%" y="629" width="0.2406%" height="15" fill="rgb(226,39,33)" fg:x="61883" fg:w="253"/><text x="59.1066%" y="639.50"></text></g><g><title>_fini (17 samples, 0.02%)</title><rect x="59.0811%" y="613" width="0.0162%" height="15" fill="rgb(221,166,19)" fg:x="62119" fg:w="17"/><text x="59.3311%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (413 samples, 0.39%)</title><rect x="59.2713%" y="549" width="0.3928%" height="15" fill="rgb(209,109,2)" fg:x="62319" fg:w="413"/><text x="59.5213%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (383 samples, 0.36%)</title><rect x="59.2998%" y="533" width="0.3643%" height="15" fill="rgb(252,216,26)" fg:x="62349" fg:w="383"/><text x="59.5498%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (368 samples, 0.35%)</title><rect x="59.3141%" y="517" width="0.3500%" height="15" fill="rgb(227,173,36)" fg:x="62364" fg:w="368"/><text x="59.5641%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (368 samples, 0.35%)</title><rect x="59.3141%" y="501" width="0.3500%" height="15" fill="rgb(209,90,7)" fg:x="62364" fg:w="368"/><text x="59.5641%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (368 samples, 0.35%)</title><rect x="59.3141%" y="485" width="0.3500%" height="15" fill="rgb(250,194,11)" fg:x="62364" fg:w="368"/><text x="59.5641%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (368 samples, 0.35%)</title><rect x="59.3141%" y="469" width="0.3500%" height="15" fill="rgb(220,72,50)" fg:x="62364" fg:w="368"/><text x="59.5641%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (14 samples, 0.01%)</title><rect x="59.6812%" y="485" width="0.0133%" height="15" fill="rgb(222,106,48)" fg:x="62750" fg:w="14"/><text x="59.9312%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="59.6812%" y="469" width="0.0133%" height="15" fill="rgb(216,220,45)" fg:x="62750" fg:w="14"/><text x="59.9312%" y="479.50"></text></g><g><title>async_task::utils::abort_on_panic (875 samples, 0.83%)</title><rect x="59.2713%" y="581" width="0.8322%" height="15" fill="rgb(234,112,18)" fg:x="62319" fg:w="875"/><text x="59.5213%" y="591.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (875 samples, 0.83%)</title><rect x="59.2713%" y="565" width="0.8322%" height="15" fill="rgb(206,179,9)" fg:x="62319" fg:w="875"/><text x="59.5213%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (462 samples, 0.44%)</title><rect x="59.6641%" y="549" width="0.4394%" height="15" fill="rgb(215,115,40)" fg:x="62732" fg:w="462"/><text x="59.9141%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (444 samples, 0.42%)</title><rect x="59.6812%" y="533" width="0.4223%" height="15" fill="rgb(222,69,34)" fg:x="62750" fg:w="444"/><text x="59.9312%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (444 samples, 0.42%)</title><rect x="59.6812%" y="517" width="0.4223%" height="15" fill="rgb(209,161,10)" fg:x="62750" fg:w="444"/><text x="59.9312%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (444 samples, 0.42%)</title><rect x="59.6812%" y="501" width="0.4223%" height="15" fill="rgb(217,6,38)" fg:x="62750" fg:w="444"/><text x="59.9312%" y="511.50"></text></g><g><title>core::mem::drop (430 samples, 0.41%)</title><rect x="59.6945%" y="485" width="0.4090%" height="15" fill="rgb(229,229,48)" fg:x="62764" fg:w="430"/><text x="59.9445%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (430 samples, 0.41%)</title><rect x="59.6945%" y="469" width="0.4090%" height="15" fill="rgb(225,21,28)" fg:x="62764" fg:w="430"/><text x="59.9445%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (430 samples, 0.41%)</title><rect x="59.6945%" y="453" width="0.4090%" height="15" fill="rgb(206,33,13)" fg:x="62764" fg:w="430"/><text x="59.9445%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (430 samples, 0.41%)</title><rect x="59.6945%" y="437" width="0.4090%" height="15" fill="rgb(242,178,17)" fg:x="62764" fg:w="430"/><text x="59.9445%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (430 samples, 0.41%)</title><rect x="59.6945%" y="421" width="0.4090%" height="15" fill="rgb(220,162,5)" fg:x="62764" fg:w="430"/><text x="59.9445%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (17 samples, 0.02%)</title><rect x="60.1035%" y="581" width="0.0162%" height="15" fill="rgb(210,33,43)" fg:x="63194" fg:w="17"/><text x="60.3535%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.02%)</title><rect x="60.1035%" y="565" width="0.0162%" height="15" fill="rgb(216,116,54)" fg:x="63194" fg:w="17"/><text x="60.3535%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (824 samples, 0.78%)</title><rect x="60.1196%" y="581" width="0.7837%" height="15" fill="rgb(249,92,24)" fg:x="63211" fg:w="824"/><text x="60.3696%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (824 samples, 0.78%)</title><rect x="60.1196%" y="565" width="0.7837%" height="15" fill="rgb(231,189,14)" fg:x="63211" fg:w="824"/><text x="60.3696%" y="575.50"></text></g><g><title>async_task::header::Header::register (1,822 samples, 1.73%)</title><rect x="59.1904%" y="597" width="1.7329%" height="15" fill="rgb(230,8,41)" fg:x="62234" fg:w="1822"/><text x="59.4404%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (21 samples, 0.02%)</title><rect x="60.9033%" y="581" width="0.0200%" height="15" fill="rgb(249,7,27)" fg:x="64035" fg:w="21"/><text x="61.1533%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (21 samples, 0.02%)</title><rect x="60.9033%" y="565" width="0.0200%" height="15" fill="rgb(232,86,5)" fg:x="64035" fg:w="21"/><text x="61.1533%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (218 samples, 0.21%)</title><rect x="60.9233%" y="597" width="0.2073%" height="15" fill="rgb(224,175,18)" fg:x="64056" fg:w="218"/><text x="61.1733%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (218 samples, 0.21%)</title><rect x="60.9233%" y="581" width="0.2073%" height="15" fill="rgb(220,129,12)" fg:x="64056" fg:w="218"/><text x="61.1733%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (2,117 samples, 2.01%)</title><rect x="59.1191%" y="661" width="2.0135%" height="15" fill="rgb(210,19,36)" fg:x="62159" fg:w="2117"/><text x="59.3691%" y="671.50">&lt;..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (2,103 samples, 2.00%)</title><rect x="59.1324%" y="645" width="2.0002%" height="15" fill="rgb(219,96,14)" fg:x="62173" fg:w="2103"/><text x="59.3824%" y="655.50">&lt;..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 1.99%)</title><rect x="59.1467%" y="629" width="1.9859%" height="15" fill="rgb(249,106,1)" fg:x="62188" fg:w="2088"/><text x="59.3967%" y="639.50">&lt;..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (2,088 samples, 1.99%)</title><rect x="59.1467%" y="613" width="1.9859%" height="15" fill="rgb(249,155,20)" fg:x="62188" fg:w="2088"/><text x="59.3967%" y="623.50">a..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (29 samples, 0.03%)</title><rect x="61.1326%" y="661" width="0.0276%" height="15" fill="rgb(244,168,9)" fg:x="64276" fg:w="29"/><text x="61.3826%" y="671.50"></text></g><g><title>core::cell::BorrowRefMut::new (29 samples, 0.03%)</title><rect x="61.1326%" y="645" width="0.0276%" height="15" fill="rgb(216,23,50)" fg:x="64276" fg:w="29"/><text x="61.3826%" y="655.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (11 samples, 0.01%)</title><rect x="61.1601%" y="661" width="0.0105%" height="15" fill="rgb(224,219,20)" fg:x="64305" fg:w="11"/><text x="61.4101%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="61.1601%" y="645" width="0.0105%" height="15" fill="rgb(222,156,15)" fg:x="64305" fg:w="11"/><text x="61.4101%" y="655.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (21,917 samples, 20.85%)</title><rect x="40.3435%" y="901" width="20.8451%" height="15" fill="rgb(231,97,17)" fg:x="42418" fg:w="21917"/><text x="40.5935%" y="911.50">winit::platform_impl::platform::s..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (21,917 samples, 20.85%)</title><rect x="40.3435%" y="885" width="20.8451%" height="15" fill="rgb(218,70,48)" fg:x="42418" fg:w="21917"/><text x="40.5935%" y="895.50">bevy_winit::winit_runner_with::{{..</text></g><g><title>bevy_app::app::App::update (21,917 samples, 20.85%)</title><rect x="40.3435%" y="869" width="20.8451%" height="15" fill="rgb(212,196,52)" fg:x="42418" fg:w="21917"/><text x="40.5935%" y="879.50">bevy_app::app::App::update</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (4,766 samples, 4.53%)</title><rect x="56.6558%" y="853" width="4.5329%" height="15" fill="rgb(243,203,18)" fg:x="59569" fg:w="4766"/><text x="56.9058%" y="863.50">bevy_..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3,808 samples, 3.62%)</title><rect x="57.5669%" y="837" width="3.6218%" height="15" fill="rgb(252,125,41)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="847.50">bevy..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (3,808 samples, 3.62%)</title><rect x="57.5669%" y="821" width="3.6218%" height="15" fill="rgb(223,180,33)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="831.50">&lt;bev..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3,808 samples, 3.62%)</title><rect x="57.5669%" y="805" width="3.6218%" height="15" fill="rgb(254,159,46)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="815.50">&lt;bev..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3,808 samples, 3.62%)</title><rect x="57.5669%" y="789" width="3.6218%" height="15" fill="rgb(254,38,10)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="799.50">bevy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,808 samples, 3.62%)</title><rect x="57.5669%" y="773" width="3.6218%" height="15" fill="rgb(208,217,32)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="783.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,808 samples, 3.62%)</title><rect x="57.5669%" y="757" width="3.6218%" height="15" fill="rgb(221,120,13)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="767.50">std:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3,808 samples, 3.62%)</title><rect x="57.5669%" y="741" width="3.6218%" height="15" fill="rgb(246,54,52)" fg:x="60527" fg:w="3808"/><text x="57.8169%" y="751.50">bevy..</text></g><g><title>futures_lite::future::block_on (2,747 samples, 2.61%)</title><rect x="58.5760%" y="725" width="2.6127%" height="15" fill="rgb(242,34,25)" fg:x="61588" fg:w="2747"/><text x="58.8260%" y="735.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,708 samples, 2.58%)</title><rect x="58.6131%" y="709" width="2.5756%" height="15" fill="rgb(247,209,9)" fg:x="61627" fg:w="2708"/><text x="58.8631%" y="719.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,678 samples, 2.55%)</title><rect x="58.6416%" y="693" width="2.5470%" height="15" fill="rgb(228,71,26)" fg:x="61657" fg:w="2678"/><text x="58.8916%" y="703.50">st..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,199 samples, 2.09%)</title><rect x="59.0972%" y="677" width="2.0915%" height="15" fill="rgb(222,145,49)" fg:x="62136" fg:w="2199"/><text x="59.3472%" y="687.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (19 samples, 0.02%)</title><rect x="61.1706%" y="661" width="0.0181%" height="15" fill="rgb(218,121,17)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (19 samples, 0.02%)</title><rect x="61.1706%" y="645" width="0.0181%" height="15" fill="rgb(244,50,7)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="655.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="61.1706%" y="629" width="0.0181%" height="15" fill="rgb(246,229,37)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.02%)</title><rect x="61.1706%" y="613" width="0.0181%" height="15" fill="rgb(225,18,5)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (19 samples, 0.02%)</title><rect x="61.1706%" y="597" width="0.0181%" height="15" fill="rgb(213,204,8)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="607.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="61.1706%" y="581" width="0.0181%" height="15" fill="rgb(238,103,6)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="591.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="61.1706%" y="565" width="0.0181%" height="15" fill="rgb(222,25,35)" fg:x="64316" fg:w="19"/><text x="61.4206%" y="575.50"></text></g><g><title>bevy_winit::run (21,924 samples, 20.85%)</title><rect x="40.3426%" y="981" width="20.8518%" height="15" fill="rgb(213,203,35)" fg:x="42417" fg:w="21924"/><text x="40.5926%" y="991.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (21,924 samples, 20.85%)</title><rect x="40.3426%" y="965" width="20.8518%" height="15" fill="rgb(221,79,53)" fg:x="42417" fg:w="21924"/><text x="40.5926%" y="975.50">winit::event_loop::EventLoop&lt;T&gt;::..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (21,924 samples, 20.85%)</title><rect x="40.3426%" y="949" width="20.8518%" height="15" fill="rgb(243,200,35)" fg:x="42417" fg:w="21924"/><text x="40.5926%" y="959.50">winit::platform_impl::platform::E..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (21,924 samples, 20.85%)</title><rect x="40.3426%" y="933" width="20.8518%" height="15" fill="rgb(248,60,25)" fg:x="42417" fg:w="21924"/><text x="40.5926%" y="943.50">winit::platform_impl::platform::x..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (21,924 samples, 20.85%)</title><rect x="40.3426%" y="917" width="20.8518%" height="15" fill="rgb(227,53,46)" fg:x="42417" fg:w="21924"/><text x="40.5926%" y="927.50">winit::platform_impl::platform::x..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (212 samples, 0.20%)</title><rect x="61.1944%" y="901" width="0.2016%" height="15" fill="rgb(216,120,32)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (212 samples, 0.20%)</title><rect x="61.1944%" y="885" width="0.2016%" height="15" fill="rgb(220,134,1)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (212 samples, 0.20%)</title><rect x="61.1944%" y="869" width="0.2016%" height="15" fill="rgb(237,168,5)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (212 samples, 0.20%)</title><rect x="61.1944%" y="853" width="0.2016%" height="15" fill="rgb(231,100,33)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (212 samples, 0.20%)</title><rect x="61.1944%" y="837" width="0.2016%" height="15" fill="rgb(236,177,47)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="847.50"></text></g><g><title>async_executor::Executor::try_tick (212 samples, 0.20%)</title><rect x="61.1944%" y="821" width="0.2016%" height="15" fill="rgb(235,7,49)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (212 samples, 0.20%)</title><rect x="61.1944%" y="805" width="0.2016%" height="15" fill="rgb(232,119,22)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 0.20%)</title><rect x="61.1944%" y="789" width="0.2016%" height="15" fill="rgb(254,73,53)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (212 samples, 0.20%)</title><rect x="61.1944%" y="773" width="0.2016%" height="15" fill="rgb(251,35,20)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 0.20%)</title><rect x="61.1944%" y="757" width="0.2016%" height="15" fill="rgb(241,119,20)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (212 samples, 0.20%)</title><rect x="61.1944%" y="741" width="0.2016%" height="15" fill="rgb(207,102,14)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (212 samples, 0.20%)</title><rect x="61.1944%" y="725" width="0.2016%" height="15" fill="rgb(248,201,50)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="735.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (212 samples, 0.20%)</title><rect x="61.1944%" y="709" width="0.2016%" height="15" fill="rgb(222,185,44)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (212 samples, 0.20%)</title><rect x="61.1944%" y="693" width="0.2016%" height="15" fill="rgb(218,107,18)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (212 samples, 0.20%)</title><rect x="61.1944%" y="677" width="0.2016%" height="15" fill="rgb(237,177,39)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (212 samples, 0.20%)</title><rect x="61.1944%" y="661" width="0.2016%" height="15" fill="rgb(246,69,6)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="671.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (212 samples, 0.20%)</title><rect x="61.1944%" y="645" width="0.2016%" height="15" fill="rgb(234,208,37)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="655.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (212 samples, 0.20%)</title><rect x="61.1944%" y="629" width="0.2016%" height="15" fill="rgb(225,4,6)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="639.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (212 samples, 0.20%)</title><rect x="61.1944%" y="613" width="0.2016%" height="15" fill="rgb(233,45,0)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (212 samples, 0.20%)</title><rect x="61.1944%" y="597" width="0.2016%" height="15" fill="rgb(226,136,5)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (212 samples, 0.20%)</title><rect x="61.1944%" y="581" width="0.2016%" height="15" fill="rgb(211,91,47)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="591.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (212 samples, 0.20%)</title><rect x="61.1944%" y="565" width="0.2016%" height="15" fill="rgb(242,88,51)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (212 samples, 0.20%)</title><rect x="61.1944%" y="549" width="0.2016%" height="15" fill="rgb(230,91,28)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (212 samples, 0.20%)</title><rect x="61.1944%" y="533" width="0.2016%" height="15" fill="rgb(254,186,29)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="543.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (212 samples, 0.20%)</title><rect x="61.1944%" y="517" width="0.2016%" height="15" fill="rgb(238,6,4)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="527.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (212 samples, 0.20%)</title><rect x="61.1944%" y="501" width="0.2016%" height="15" fill="rgb(221,151,16)" fg:x="64341" fg:w="212"/><text x="61.4444%" y="511.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (163 samples, 0.16%)</title><rect x="61.2410%" y="485" width="0.1550%" height="15" fill="rgb(251,143,52)" fg:x="64390" fg:w="163"/><text x="61.4910%" y="495.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (62 samples, 0.06%)</title><rect x="61.3370%" y="469" width="0.0590%" height="15" fill="rgb(206,90,15)" fg:x="64491" fg:w="62"/><text x="61.5870%" y="479.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.03%)</title><rect x="61.3694%" y="453" width="0.0266%" height="15" fill="rgb(218,35,8)" fg:x="64525" fg:w="28"/><text x="61.6194%" y="463.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::get_mut (52 samples, 0.05%)</title><rect x="61.4112%" y="677" width="0.0495%" height="15" fill="rgb(239,215,6)" fg:x="64569" fg:w="52"/><text x="61.6612%" y="687.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (61 samples, 0.06%)</title><rect x="61.4055%" y="709" width="0.0580%" height="15" fill="rgb(245,116,39)" fg:x="64563" fg:w="61"/><text x="61.6555%" y="719.50"></text></g><g><title>gpu_alloc::buddy::Size::release (61 samples, 0.06%)</title><rect x="61.4055%" y="693" width="0.0580%" height="15" fill="rgb(242,65,28)" fg:x="64563" fg:w="61"/><text x="61.6555%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (11 samples, 0.01%)</title><rect x="61.4769%" y="677" width="0.0105%" height="15" fill="rgb(252,132,53)" fg:x="64638" fg:w="11"/><text x="61.7269%" y="687.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block (33 samples, 0.03%)</title><rect x="61.4759%" y="693" width="0.0314%" height="15" fill="rgb(224,159,50)" fg:x="64637" fg:w="33"/><text x="61.7259%" y="703.50"></text></g><g><title>gpu_alloc::freelist::FreeListRegion&lt;M&gt;::merge_prefix_block (16 samples, 0.02%)</title><rect x="61.4921%" y="677" width="0.0152%" height="15" fill="rgb(224,93,4)" fg:x="64654" fg:w="16"/><text x="61.7421%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::freelist::FreeListBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (15 samples, 0.01%)</title><rect x="61.4930%" y="661" width="0.0143%" height="15" fill="rgb(208,81,34)" fg:x="64655" fg:w="15"/><text x="61.7430%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (15 samples, 0.01%)</title><rect x="61.4930%" y="645" width="0.0143%" height="15" fill="rgb(233,92,54)" fg:x="64655" fg:w="15"/><text x="61.7430%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="61.4930%" y="629" width="0.0143%" height="15" fill="rgb(237,21,14)" fg:x="64655" fg:w="15"/><text x="61.7430%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="61.4930%" y="613" width="0.0143%" height="15" fill="rgb(249,128,51)" fg:x="64655" fg:w="15"/><text x="61.7430%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="61.4930%" y="597" width="0.0143%" height="15" fill="rgb(223,129,24)" fg:x="64655" fg:w="15"/><text x="61.7430%" y="607.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (109 samples, 0.10%)</title><rect x="61.4055%" y="725" width="0.1037%" height="15" fill="rgb(231,168,25)" fg:x="64563" fg:w="109"/><text x="61.6555%" y="735.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (48 samples, 0.05%)</title><rect x="61.4635%" y="709" width="0.0457%" height="15" fill="rgb(224,39,20)" fg:x="64624" fg:w="48"/><text x="61.7135%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (133 samples, 0.13%)</title><rect x="61.4036%" y="773" width="0.1265%" height="15" fill="rgb(225,152,53)" fg:x="64561" fg:w="133"/><text x="61.6536%" y="783.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (133 samples, 0.13%)</title><rect x="61.4036%" y="757" width="0.1265%" height="15" fill="rgb(252,17,24)" fg:x="64561" fg:w="133"/><text x="61.6536%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (131 samples, 0.12%)</title><rect x="61.4055%" y="741" width="0.1246%" height="15" fill="rgb(250,114,30)" fg:x="64563" fg:w="131"/><text x="61.6555%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (22 samples, 0.02%)</title><rect x="61.5092%" y="725" width="0.0209%" height="15" fill="rgb(229,5,4)" fg:x="64672" fg:w="22"/><text x="61.7592%" y="735.50"></text></g><g><title>_nv011glcore (22 samples, 0.02%)</title><rect x="61.5092%" y="709" width="0.0209%" height="15" fill="rgb(225,176,49)" fg:x="64672" fg:w="22"/><text x="61.7592%" y="719.50"></text></g><g><title>__free (22 samples, 0.02%)</title><rect x="61.5092%" y="693" width="0.0209%" height="15" fill="rgb(224,221,49)" fg:x="64672" fg:w="22"/><text x="61.7592%" y="703.50"></text></g><g><title>_int_free (22 samples, 0.02%)</title><rect x="61.5092%" y="677" width="0.0209%" height="15" fill="rgb(253,169,27)" fg:x="64672" fg:w="22"/><text x="61.7592%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (21 samples, 0.02%)</title><rect x="61.5101%" y="661" width="0.0200%" height="15" fill="rgb(211,206,16)" fg:x="64673" fg:w="21"/><text x="61.7601%" y="671.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (134 samples, 0.13%)</title><rect x="61.4036%" y="789" width="0.1274%" height="15" fill="rgb(244,87,35)" fg:x="64561" fg:w="134"/><text x="61.6536%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="61.5510%" y="773" width="0.0114%" height="15" fill="rgb(246,28,10)" fg:x="64716" fg:w="12"/><text x="61.8010%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="61.5634%" y="757" width="0.0209%" height="15" fill="rgb(229,12,44)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="61.5634%" y="741" width="0.0209%" height="15" fill="rgb(210,145,37)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="61.5634%" y="725" width="0.0209%" height="15" fill="rgb(227,112,52)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="61.5634%" y="709" width="0.0209%" height="15" fill="rgb(238,155,34)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="61.5634%" y="693" width="0.0209%" height="15" fill="rgb(239,226,36)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="703.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="61.5634%" y="677" width="0.0209%" height="15" fill="rgb(230,16,23)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="687.50"></text></g><g><title>__realloc (22 samples, 0.02%)</title><rect x="61.5634%" y="661" width="0.0209%" height="15" fill="rgb(236,171,36)" fg:x="64729" fg:w="22"/><text x="61.8134%" y="671.50"></text></g><g><title>_int_realloc (21 samples, 0.02%)</title><rect x="61.5644%" y="645" width="0.0200%" height="15" fill="rgb(221,22,14)" fg:x="64730" fg:w="21"/><text x="61.8144%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="61.5644%" y="629" width="0.0200%" height="15" fill="rgb(242,43,11)" fg:x="64730" fg:w="21"/><text x="61.8144%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.03%)</title><rect x="61.5625%" y="773" width="0.0266%" height="15" fill="rgb(232,69,23)" fg:x="64728" fg:w="28"/><text x="61.8125%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (204 samples, 0.19%)</title><rect x="61.3960%" y="853" width="0.1940%" height="15" fill="rgb(216,180,54)" fg:x="64553" fg:w="204"/><text x="61.6460%" y="863.50"></text></g><g><title>wgpu::Queue::submit (196 samples, 0.19%)</title><rect x="61.4036%" y="837" width="0.1864%" height="15" fill="rgb(216,5,24)" fg:x="64561" fg:w="196"/><text x="61.6536%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (196 samples, 0.19%)</title><rect x="61.4036%" y="821" width="0.1864%" height="15" fill="rgb(225,89,9)" fg:x="64561" fg:w="196"/><text x="61.6536%" y="831.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (196 samples, 0.19%)</title><rect x="61.4036%" y="805" width="0.1864%" height="15" fill="rgb(243,75,33)" fg:x="64561" fg:w="196"/><text x="61.6536%" y="815.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (62 samples, 0.06%)</title><rect x="61.5311%" y="789" width="0.0590%" height="15" fill="rgb(247,141,45)" fg:x="64695" fg:w="62"/><text x="61.7811%" y="799.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (420 samples, 0.40%)</title><rect x="61.1944%" y="981" width="0.3995%" height="15" fill="rgb(232,177,36)" fg:x="64341" fg:w="420"/><text x="61.4444%" y="991.50"></text></g><g><title>bevy_app::app::App::update (420 samples, 0.40%)</title><rect x="61.1944%" y="965" width="0.3995%" height="15" fill="rgb(219,125,36)" fg:x="64341" fg:w="420"/><text x="61.4444%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (420 samples, 0.40%)</title><rect x="61.1944%" y="949" width="0.3995%" height="15" fill="rgb(227,94,9)" fg:x="64341" fg:w="420"/><text x="61.4444%" y="959.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (420 samples, 0.40%)</title><rect x="61.1944%" y="933" width="0.3995%" height="15" fill="rgb(240,34,52)" fg:x="64341" fg:w="420"/><text x="61.4444%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (420 samples, 0.40%)</title><rect x="61.1944%" y="917" width="0.3995%" height="15" fill="rgb(216,45,12)" fg:x="64341" fg:w="420"/><text x="61.4444%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (208 samples, 0.20%)</title><rect x="61.3960%" y="901" width="0.1978%" height="15" fill="rgb(246,21,19)" fg:x="64553" fg:w="208"/><text x="61.6460%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (208 samples, 0.20%)</title><rect x="61.3960%" y="885" width="0.1978%" height="15" fill="rgb(213,98,42)" fg:x="64553" fg:w="208"/><text x="61.6460%" y="895.50"></text></g><g><title>bevy_render::renderer::render_system (208 samples, 0.20%)</title><rect x="61.3960%" y="869" width="0.1978%" height="15" fill="rgb(250,136,47)" fg:x="64553" fg:w="208"/><text x="61.6460%" y="879.50"></text></g><g><title>async_executor::Executor::try_tick (54 samples, 0.05%)</title><rect x="61.6319%" y="709" width="0.0514%" height="15" fill="rgb(251,124,27)" fg:x="64801" fg:w="54"/><text x="61.8819%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (20 samples, 0.02%)</title><rect x="61.6642%" y="693" width="0.0190%" height="15" fill="rgb(229,180,14)" fg:x="64835" fg:w="20"/><text x="61.9142%" y="703.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (106 samples, 0.10%)</title><rect x="61.6053%" y="789" width="0.1008%" height="15" fill="rgb(245,216,25)" fg:x="64773" fg:w="106"/><text x="61.8553%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (93 samples, 0.09%)</title><rect x="61.6176%" y="773" width="0.0885%" height="15" fill="rgb(251,43,5)" fg:x="64786" fg:w="93"/><text x="61.8676%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (93 samples, 0.09%)</title><rect x="61.6176%" y="757" width="0.0885%" height="15" fill="rgb(250,128,24)" fg:x="64786" fg:w="93"/><text x="61.8676%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.09%)</title><rect x="61.6176%" y="741" width="0.0885%" height="15" fill="rgb(217,117,27)" fg:x="64786" fg:w="93"/><text x="61.8676%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (93 samples, 0.09%)</title><rect x="61.6176%" y="725" width="0.0885%" height="15" fill="rgb(245,147,4)" fg:x="64786" fg:w="93"/><text x="61.8676%" y="735.50"></text></g><g><title>futures_lite::future::block_on (15 samples, 0.01%)</title><rect x="61.6918%" y="709" width="0.0143%" height="15" fill="rgb(242,201,35)" fg:x="64864" fg:w="15"/><text x="61.9418%" y="719.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (18 samples, 0.02%)</title><rect x="61.7127%" y="725" width="0.0171%" height="15" fill="rgb(218,181,1)" fg:x="64886" fg:w="18"/><text x="61.9627%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (23 samples, 0.02%)</title><rect x="61.7108%" y="741" width="0.0219%" height="15" fill="rgb(222,6,29)" fg:x="64884" fg:w="23"/><text x="61.9608%" y="751.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (28 samples, 0.03%)</title><rect x="61.7108%" y="757" width="0.0266%" height="15" fill="rgb(208,186,3)" fg:x="64884" fg:w="28"/><text x="61.9608%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (32 samples, 0.03%)</title><rect x="61.7080%" y="789" width="0.0304%" height="15" fill="rgb(216,36,26)" fg:x="64881" fg:w="32"/><text x="61.9580%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (32 samples, 0.03%)</title><rect x="61.7080%" y="773" width="0.0304%" height="15" fill="rgb(248,201,23)" fg:x="64881" fg:w="32"/><text x="61.9580%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (148 samples, 0.14%)</title><rect x="61.6034%" y="805" width="0.1408%" height="15" fill="rgb(251,170,31)" fg:x="64771" fg:w="148"/><text x="61.8534%" y="815.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (157 samples, 0.15%)</title><rect x="61.6024%" y="821" width="0.1493%" height="15" fill="rgb(207,110,25)" fg:x="64770" fg:w="157"/><text x="61.8524%" y="831.50"></text></g><g><title>malloc_consolidate (55 samples, 0.05%)</title><rect x="61.9828%" y="709" width="0.0523%" height="15" fill="rgb(250,54,15)" fg:x="65170" fg:w="55"/><text x="62.2328%" y="719.50"></text></g><g><title>__free (299 samples, 0.28%)</title><rect x="61.7546%" y="741" width="0.2844%" height="15" fill="rgb(227,68,33)" fg:x="64930" fg:w="299"/><text x="62.0046%" y="751.50"></text></g><g><title>_int_free (284 samples, 0.27%)</title><rect x="61.7688%" y="725" width="0.2701%" height="15" fill="rgb(238,34,41)" fg:x="64945" fg:w="284"/><text x="62.0188%" y="735.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="62.0456%" y="725" width="0.0162%" height="15" fill="rgb(220,11,15)" fg:x="65236" fg:w="17"/><text x="62.2956%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;wgpu::Buffer&gt;&gt; (17 samples, 0.02%)</title><rect x="62.0456%" y="709" width="0.0162%" height="15" fill="rgb(246,111,35)" fg:x="65236" fg:w="17"/><text x="62.2956%" y="719.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="62.0456%" y="693" width="0.0162%" height="15" fill="rgb(209,88,53)" fg:x="65236" fg:w="17"/><text x="62.2956%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="62.0456%" y="677" width="0.0162%" height="15" fill="rgb(231,185,47)" fg:x="65236" fg:w="17"/><text x="62.2956%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="62.0456%" y="661" width="0.0162%" height="15" fill="rgb(233,154,1)" fg:x="65236" fg:w="17"/><text x="62.2956%" y="671.50"></text></g><g><title>__free (52 samples, 0.05%)</title><rect x="62.0741%" y="581" width="0.0495%" height="15" fill="rgb(225,15,46)" fg:x="65266" fg:w="52"/><text x="62.3241%" y="591.50"></text></g><g><title>_int_free (17 samples, 0.02%)</title><rect x="62.1074%" y="565" width="0.0162%" height="15" fill="rgb(211,135,41)" fg:x="65301" fg:w="17"/><text x="62.3574%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.05%)</title><rect x="62.0741%" y="613" width="0.0523%" height="15" fill="rgb(208,54,0)" fg:x="65266" fg:w="55"/><text x="62.3241%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.05%)</title><rect x="62.0741%" y="597" width="0.0523%" height="15" fill="rgb(244,136,14)" fg:x="65266" fg:w="55"/><text x="62.3241%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (58 samples, 0.06%)</title><rect x="62.0722%" y="709" width="0.0552%" height="15" fill="rgb(241,56,14)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wgpu::MapContext&gt;&gt; (58 samples, 0.06%)</title><rect x="62.0722%" y="693" width="0.0552%" height="15" fill="rgb(205,80,24)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::MapContext&gt; (58 samples, 0.06%)</title><rect x="62.0722%" y="677" width="0.0552%" height="15" fill="rgb(220,57,4)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::ops::range::Range&lt;u64&gt;&gt;&gt; (58 samples, 0.06%)</title><rect x="62.0722%" y="661" width="0.0552%" height="15" fill="rgb(226,193,50)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::ops::range::Range&lt;u64&gt;&gt;&gt; (58 samples, 0.06%)</title><rect x="62.0722%" y="645" width="0.0552%" height="15" fill="rgb(231,168,22)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.06%)</title><rect x="62.0722%" y="629" width="0.0552%" height="15" fill="rgb(254,215,14)" fg:x="65264" fg:w="58"/><text x="62.3222%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Buffer&gt; (27 samples, 0.03%)</title><rect x="62.1274%" y="709" width="0.0257%" height="15" fill="rgb(211,115,16)" fg:x="65322" fg:w="27"/><text x="62.3774%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="62.1274%" y="693" width="0.0257%" height="15" fill="rgb(236,210,16)" fg:x="65322" fg:w="27"/><text x="62.3774%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="62.1274%" y="677" width="0.0257%" height="15" fill="rgb(221,94,12)" fg:x="65322" fg:w="27"/><text x="62.3774%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.02%)</title><rect x="62.1284%" y="661" width="0.0247%" height="15" fill="rgb(235,218,49)" fg:x="65323" fg:w="26"/><text x="62.3784%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.02%)</title><rect x="62.1284%" y="645" width="0.0247%" height="15" fill="rgb(217,114,14)" fg:x="65323" fg:w="26"/><text x="62.3784%" y="655.50"></text></g><g><title>core::mem::drop (32 samples, 0.03%)</title><rect x="62.1674%" y="693" width="0.0304%" height="15" fill="rgb(216,145,22)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (32 samples, 0.03%)</title><rect x="62.1674%" y="677" width="0.0304%" height="15" fill="rgb(217,112,39)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="687.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="62.1674%" y="661" width="0.0304%" height="15" fill="rgb(225,85,32)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="671.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (32 samples, 0.03%)</title><rect x="62.1674%" y="645" width="0.0304%" height="15" fill="rgb(245,209,47)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.03%)</title><rect x="62.1674%" y="629" width="0.0304%" height="15" fill="rgb(218,220,15)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.03%)</title><rect x="62.1674%" y="613" width="0.0304%" height="15" fill="rgb(222,202,31)" fg:x="65364" fg:w="32"/><text x="62.4174%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="62.2044%" y="693" width="0.0114%" height="15" fill="rgb(243,203,4)" fg:x="65403" fg:w="12"/><text x="62.4544%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="62.2044%" y="677" width="0.0114%" height="15" fill="rgb(237,92,17)" fg:x="65403" fg:w="12"/><text x="62.4544%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (12 samples, 0.01%)</title><rect x="62.2044%" y="661" width="0.0114%" height="15" fill="rgb(231,119,7)" fg:x="65403" fg:w="12"/><text x="62.4544%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (12 samples, 0.01%)</title><rect x="62.2044%" y="645" width="0.0114%" height="15" fill="rgb(237,82,41)" fg:x="65403" fg:w="12"/><text x="62.4544%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="62.2044%" y="629" width="0.0114%" height="15" fill="rgb(226,81,48)" fg:x="65403" fg:w="12"/><text x="62.4544%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="62.2254%" y="693" width="0.0171%" height="15" fill="rgb(234,70,51)" fg:x="65425" fg:w="18"/><text x="62.4754%" y="703.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="62.2254%" y="677" width="0.0171%" height="15" fill="rgb(251,86,4)" fg:x="65425" fg:w="18"/><text x="62.4754%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (18 samples, 0.02%)</title><rect x="62.2254%" y="661" width="0.0171%" height="15" fill="rgb(244,144,28)" fg:x="65425" fg:w="18"/><text x="62.4754%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="62.2254%" y="645" width="0.0171%" height="15" fill="rgb(232,161,39)" fg:x="65425" fg:w="18"/><text x="62.4754%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="62.2254%" y="629" width="0.0171%" height="15" fill="rgb(247,34,51)" fg:x="65425" fg:w="18"/><text x="62.4754%" y="639.50"></text></g><g><title>tracing_core::metadata::Metadata::new (16 samples, 0.02%)</title><rect x="62.2672%" y="533" width="0.0152%" height="15" fill="rgb(225,132,2)" fg:x="65469" fg:w="16"/><text x="62.5172%" y="543.50"></text></g><g><title>&lt;log::Metadata as tracing_log::AsTrace&gt;::as_trace (26 samples, 0.02%)</title><rect x="62.2615%" y="549" width="0.0247%" height="15" fill="rgb(209,159,44)" fg:x="65463" fg:w="26"/><text x="62.5115%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (22 samples, 0.02%)</title><rect x="62.2872%" y="501" width="0.0209%" height="15" fill="rgb(251,214,1)" fg:x="65490" fg:w="22"/><text x="62.5372%" y="511.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (12 samples, 0.01%)</title><rect x="62.2967%" y="485" width="0.0114%" height="15" fill="rgb(247,84,47)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="62.2967%" y="469" width="0.0114%" height="15" fill="rgb(240,111,43)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="479.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FILTERING::__getit (12 samples, 0.01%)</title><rect x="62.2967%" y="453" width="0.0114%" height="15" fill="rgb(215,214,35)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="62.2967%" y="437" width="0.0114%" height="15" fill="rgb(248,207,23)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="62.2967%" y="421" width="0.0114%" height="15" fill="rgb(214,186,4)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="62.2967%" y="405" width="0.0114%" height="15" fill="rgb(220,133,22)" fg:x="65500" fg:w="12"/><text x="62.5467%" y="415.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (60 samples, 0.06%)</title><rect x="62.2520%" y="677" width="0.0571%" height="15" fill="rgb(239,134,19)" fg:x="65453" fg:w="60"/><text x="62.5020%" y="687.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (60 samples, 0.06%)</title><rect x="62.2520%" y="661" width="0.0571%" height="15" fill="rgb(250,140,9)" fg:x="65453" fg:w="60"/><text x="62.5020%" y="671.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (55 samples, 0.05%)</title><rect x="62.2568%" y="645" width="0.0523%" height="15" fill="rgb(225,59,14)" fg:x="65458" fg:w="55"/><text x="62.5068%" y="655.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (55 samples, 0.05%)</title><rect x="62.2568%" y="629" width="0.0523%" height="15" fill="rgb(214,152,51)" fg:x="65458" fg:w="55"/><text x="62.5068%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default (55 samples, 0.05%)</title><rect x="62.2568%" y="613" width="0.0523%" height="15" fill="rgb(251,227,43)" fg:x="65458" fg:w="55"/><text x="62.5068%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.05%)</title><rect x="62.2568%" y="597" width="0.0523%" height="15" fill="rgb(241,96,17)" fg:x="65458" fg:w="55"/><text x="62.5068%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (50 samples, 0.05%)</title><rect x="62.2615%" y="581" width="0.0476%" height="15" fill="rgb(234,198,43)" fg:x="65463" fg:w="50"/><text x="62.5115%" y="591.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (50 samples, 0.05%)</title><rect x="62.2615%" y="565" width="0.0476%" height="15" fill="rgb(220,108,29)" fg:x="65463" fg:w="50"/><text x="62.5115%" y="575.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (24 samples, 0.02%)</title><rect x="62.2862%" y="549" width="0.0228%" height="15" fill="rgb(226,163,33)" fg:x="65489" fg:w="24"/><text x="62.5362%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (24 samples, 0.02%)</title><rect x="62.2862%" y="533" width="0.0228%" height="15" fill="rgb(205,194,45)" fg:x="65489" fg:w="24"/><text x="62.5362%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (23 samples, 0.02%)</title><rect x="62.2872%" y="517" width="0.0219%" height="15" fill="rgb(206,143,44)" fg:x="65490" fg:w="23"/><text x="62.5372%" y="527.50"></text></g><g><title>log::__private_api_log (74 samples, 0.07%)</title><rect x="62.2425%" y="693" width="0.0704%" height="15" fill="rgb(236,136,36)" fg:x="65443" fg:w="74"/><text x="62.4925%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::lock_life (11 samples, 0.01%)</title><rect x="62.3129%" y="693" width="0.0105%" height="15" fill="rgb(249,172,42)" fg:x="65517" fg:w="11"/><text x="62.5629%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.01%)</title><rect x="62.3129%" y="677" width="0.0105%" height="15" fill="rgb(216,139,23)" fg:x="65517" fg:w="11"/><text x="62.5629%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.01%)</title><rect x="62.3129%" y="661" width="0.0105%" height="15" fill="rgb(207,166,20)" fg:x="65517" fg:w="11"/><text x="62.5629%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (11 samples, 0.01%)</title><rect x="62.3129%" y="645" width="0.0105%" height="15" fill="rgb(210,209,22)" fg:x="65517" fg:w="11"/><text x="62.5629%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="62.3129%" y="629" width="0.0105%" height="15" fill="rgb(232,118,20)" fg:x="65517" fg:w="11"/><text x="62.5629%" y="639.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (26 samples, 0.02%)</title><rect x="62.3233%" y="693" width="0.0247%" height="15" fill="rgb(238,113,42)" fg:x="65528" fg:w="26"/><text x="62.5733%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (26 samples, 0.02%)</title><rect x="62.3233%" y="677" width="0.0247%" height="15" fill="rgb(231,42,5)" fg:x="65528" fg:w="26"/><text x="62.5733%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (26 samples, 0.02%)</title><rect x="62.3233%" y="661" width="0.0247%" height="15" fill="rgb(243,166,24)" fg:x="65528" fg:w="26"/><text x="62.5733%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (26 samples, 0.02%)</title><rect x="62.3233%" y="645" width="0.0247%" height="15" fill="rgb(237,226,12)" fg:x="65528" fg:w="26"/><text x="62.5733%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="62.3252%" y="629" width="0.0228%" height="15" fill="rgb(229,133,24)" fg:x="65530" fg:w="24"/><text x="62.5752%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="62.3252%" y="613" width="0.0228%" height="15" fill="rgb(238,33,43)" fg:x="65530" fg:w="24"/><text x="62.5752%" y="623.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (11 samples, 0.01%)</title><rect x="62.3481%" y="693" width="0.0105%" height="15" fill="rgb(227,59,38)" fg:x="65554" fg:w="11"/><text x="62.5981%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (11 samples, 0.01%)</title><rect x="62.3481%" y="677" width="0.0105%" height="15" fill="rgb(230,97,0)" fg:x="65554" fg:w="11"/><text x="62.5981%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (11 samples, 0.01%)</title><rect x="62.3481%" y="661" width="0.0105%" height="15" fill="rgb(250,173,50)" fg:x="65554" fg:w="11"/><text x="62.5981%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="62.3481%" y="645" width="0.0105%" height="15" fill="rgb(240,15,50)" fg:x="65554" fg:w="11"/><text x="62.5981%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="62.3481%" y="629" width="0.0105%" height="15" fill="rgb(221,93,22)" fg:x="65554" fg:w="11"/><text x="62.5981%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (346 samples, 0.33%)</title><rect x="62.0447%" y="741" width="0.3291%" height="15" fill="rgb(245,180,53)" fg:x="65235" fg:w="346"/><text x="62.2947%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (327 samples, 0.31%)</title><rect x="62.0627%" y="725" width="0.3110%" height="15" fill="rgb(231,88,51)" fg:x="65254" fg:w="327"/><text x="62.3127%" y="735.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (232 samples, 0.22%)</title><rect x="62.1531%" y="709" width="0.2207%" height="15" fill="rgb(240,58,21)" fg:x="65349" fg:w="232"/><text x="62.4031%" y="719.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (16 samples, 0.02%)</title><rect x="62.3585%" y="693" width="0.0152%" height="15" fill="rgb(237,21,10)" fg:x="65565" fg:w="16"/><text x="62.6085%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::render::light::ViewClusterBindings&gt; (12 samples, 0.01%)</title><rect x="62.3852%" y="709" width="0.0114%" height="15" fill="rgb(218,43,11)" fg:x="65593" fg:w="12"/><text x="62.6352%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::render::light::ViewClusterBuffers&gt; (12 samples, 0.01%)</title><rect x="62.3852%" y="693" width="0.0114%" height="15" fill="rgb(218,221,29)" fg:x="65593" fg:w="12"/><text x="62.6352%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;stellar_coordinates_test::GPUInstanceing::InstanceBuffer&gt; (47 samples, 0.04%)</title><rect x="62.3985%" y="709" width="0.0447%" height="15" fill="rgb(214,118,42)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (47 samples, 0.04%)</title><rect x="62.3985%" y="693" width="0.0447%" height="15" fill="rgb(251,200,26)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (47 samples, 0.04%)</title><rect x="62.3985%" y="677" width="0.0447%" height="15" fill="rgb(237,101,39)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="62.3985%" y="661" width="0.0447%" height="15" fill="rgb(251,117,11)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (47 samples, 0.04%)</title><rect x="62.3985%" y="645" width="0.0447%" height="15" fill="rgb(216,223,23)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.04%)</title><rect x="62.3985%" y="629" width="0.0447%" height="15" fill="rgb(251,54,12)" fg:x="65607" fg:w="47"/><text x="62.6485%" y="639.50"></text></g><g><title>bevy_ecs::component::ComponentDescriptor::drop_ptr (80 samples, 0.08%)</title><rect x="62.3737%" y="741" width="0.0761%" height="15" fill="rgb(254,176,54)" fg:x="65581" fg:w="80"/><text x="62.6237%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (80 samples, 0.08%)</title><rect x="62.3737%" y="725" width="0.0761%" height="15" fill="rgb(210,32,8)" fg:x="65581" fg:w="80"/><text x="62.6237%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (892 samples, 0.85%)</title><rect x="61.6024%" y="837" width="0.8484%" height="15" fill="rgb(235,52,38)" fg:x="64770" fg:w="892"/><text x="61.8524%" y="847.50"></text></g><g><title>bevy_ecs::world::World::clear_entities (735 samples, 0.70%)</title><rect x="61.7517%" y="821" width="0.6991%" height="15" fill="rgb(231,4,44)" fg:x="64927" fg:w="735"/><text x="62.0017%" y="831.50"></text></g><g><title>bevy_ecs::storage::table::Tables::clear (735 samples, 0.70%)</title><rect x="61.7517%" y="805" width="0.6991%" height="15" fill="rgb(249,2,32)" fg:x="64927" fg:w="735"/><text x="62.0017%" y="815.50"></text></g><g><title>bevy_ecs::storage::table::Table::clear (735 samples, 0.70%)</title><rect x="61.7517%" y="789" width="0.6991%" height="15" fill="rgb(224,65,26)" fg:x="64927" fg:w="735"/><text x="62.0017%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::clear (735 samples, 0.70%)</title><rect x="61.7517%" y="773" width="0.6991%" height="15" fill="rgb(250,73,40)" fg:x="64927" fg:w="735"/><text x="62.0017%" y="783.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (735 samples, 0.70%)</title><rect x="61.7517%" y="757" width="0.6991%" height="15" fill="rgb(253,177,16)" fg:x="64927" fg:w="735"/><text x="62.0017%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (11 samples, 0.01%)</title><rect x="62.4603%" y="789" width="0.0105%" height="15" fill="rgb(217,32,34)" fg:x="65672" fg:w="11"/><text x="62.7103%" y="799.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (20 samples, 0.02%)</title><rect x="62.4765%" y="789" width="0.0190%" height="15" fill="rgb(212,7,10)" fg:x="65689" fg:w="20"/><text x="62.7265%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (18 samples, 0.02%)</title><rect x="62.4784%" y="773" width="0.0171%" height="15" fill="rgb(245,89,8)" fg:x="65691" fg:w="18"/><text x="62.7284%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (42 samples, 0.04%)</title><rect x="62.4565%" y="805" width="0.0399%" height="15" fill="rgb(237,16,53)" fg:x="65668" fg:w="42"/><text x="62.7065%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (48 samples, 0.05%)</title><rect x="62.4536%" y="821" width="0.0457%" height="15" fill="rgb(250,204,30)" fg:x="65665" fg:w="48"/><text x="62.7036%" y="831.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (57 samples, 0.05%)</title><rect x="62.4536%" y="837" width="0.0542%" height="15" fill="rgb(208,77,27)" fg:x="65665" fg:w="57"/><text x="62.7036%" y="847.50"></text></g><g><title>bevy_app::app::App::update (953 samples, 0.91%)</title><rect x="61.6024%" y="853" width="0.9064%" height="15" fill="rgb(250,204,28)" fg:x="64770" fg:w="953"/><text x="61.8524%" y="863.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (962 samples, 0.91%)</title><rect x="61.5986%" y="885" width="0.9150%" height="15" fill="rgb(244,63,21)" fg:x="64766" fg:w="962"/><text x="61.8486%" y="895.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (960 samples, 0.91%)</title><rect x="61.6005%" y="869" width="0.9131%" height="15" fill="rgb(236,85,44)" fg:x="64768" fg:w="960"/><text x="61.8505%" y="879.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (23 samples, 0.02%)</title><rect x="62.5136%" y="885" width="0.0219%" height="15" fill="rgb(215,98,4)" fg:x="65728" fg:w="23"/><text x="62.7636%" y="895.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (22 samples, 0.02%)</title><rect x="62.5145%" y="869" width="0.0209%" height="15" fill="rgb(235,38,11)" fg:x="65729" fg:w="22"/><text x="62.7645%" y="879.50"></text></g><g><title>bevy_winit::winit_runner_with (996 samples, 0.95%)</title><rect x="61.5938%" y="981" width="0.9473%" height="15" fill="rgb(254,186,25)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="991.50"></text></g><g><title>bevy_winit::run (996 samples, 0.95%)</title><rect x="61.5938%" y="965" width="0.9473%" height="15" fill="rgb(225,55,31)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="975.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (996 samples, 0.95%)</title><rect x="61.5938%" y="949" width="0.9473%" height="15" fill="rgb(211,15,21)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="959.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (996 samples, 0.95%)</title><rect x="61.5938%" y="933" width="0.9473%" height="15" fill="rgb(215,187,41)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="943.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (996 samples, 0.95%)</title><rect x="61.5938%" y="917" width="0.9473%" height="15" fill="rgb(248,69,32)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="927.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (996 samples, 0.95%)</title><rect x="61.5938%" y="901" width="0.9473%" height="15" fill="rgb(252,102,52)" fg:x="64761" fg:w="996"/><text x="61.8438%" y="911.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (35 samples, 0.03%)</title><rect x="62.5411%" y="981" width="0.0333%" height="15" fill="rgb(253,140,32)" fg:x="65757" fg:w="35"/><text x="62.7911%" y="991.50"></text></g><g><title>core::option::Option&lt;&amp;mut T&gt;::cloned (68 samples, 0.06%)</title><rect x="62.6848%" y="501" width="0.0647%" height="15" fill="rgb(216,56,42)" fg:x="65908" fg:w="68"/><text x="62.9348%" y="511.50"></text></g><g><title>&lt;egui::containers::collapsing_header::State as core::clone::Clone&gt;::clone (68 samples, 0.06%)</title><rect x="62.6848%" y="485" width="0.0647%" height="15" fill="rgb(216,184,14)" fg:x="65908" fg:w="68"/><text x="62.9348%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (40 samples, 0.04%)</title><rect x="62.7551%" y="405" width="0.0380%" height="15" fill="rgb(237,187,27)" fg:x="65982" fg:w="40"/><text x="63.0051%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (40 samples, 0.04%)</title><rect x="62.7551%" y="389" width="0.0380%" height="15" fill="rgb(219,65,3)" fg:x="65982" fg:w="40"/><text x="63.0051%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (40 samples, 0.04%)</title><rect x="62.7551%" y="373" width="0.0380%" height="15" fill="rgb(245,83,25)" fg:x="65982" fg:w="40"/><text x="63.0051%" y="383.50"></text></g><g><title>egui::containers::collapsing_header::State::from_memory_with_default_open (137 samples, 0.13%)</title><rect x="62.6676%" y="549" width="0.1303%" height="15" fill="rgb(214,205,45)" fg:x="65890" fg:w="137"/><text x="62.9176%" y="559.50"></text></g><g><title>egui::containers::collapsing_header::State::load (132 samples, 0.13%)</title><rect x="62.6724%" y="533" width="0.1255%" height="15" fill="rgb(241,20,18)" fg:x="65895" fg:w="132"/><text x="62.9224%" y="543.50"></text></g><g><title>egui::util::id_type_map::IdTypeMap::get_persisted (119 samples, 0.11%)</title><rect x="62.6848%" y="517" width="0.1132%" height="15" fill="rgb(232,163,23)" fg:x="65908" fg:w="119"/><text x="62.9348%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (45 samples, 0.04%)</title><rect x="62.7551%" y="501" width="0.0428%" height="15" fill="rgb(214,5,46)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (45 samples, 0.04%)</title><rect x="62.7551%" y="485" width="0.0428%" height="15" fill="rgb(229,78,17)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (45 samples, 0.04%)</title><rect x="62.7551%" y="469" width="0.0428%" height="15" fill="rgb(248,89,10)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (45 samples, 0.04%)</title><rect x="62.7551%" y="453" width="0.0428%" height="15" fill="rgb(248,54,15)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.04%)</title><rect x="62.7551%" y="437" width="0.0428%" height="15" fill="rgb(223,116,6)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (45 samples, 0.04%)</title><rect x="62.7551%" y="421" width="0.0428%" height="15" fill="rgb(205,125,38)" fg:x="65982" fg:w="45"/><text x="63.0051%" y="431.50"></text></g><g><title>egui::response::Response::widget_info (14 samples, 0.01%)</title><rect x="62.8046%" y="549" width="0.0133%" height="15" fill="rgb(251,78,38)" fg:x="66034" fg:w="14"/><text x="63.0546%" y="559.50"></text></g><g><title>egui::response::Response::gained_focus (13 samples, 0.01%)</title><rect x="62.8055%" y="533" width="0.0124%" height="15" fill="rgb(253,78,28)" fg:x="66035" fg:w="13"/><text x="63.0555%" y="543.50"></text></g><g><title>egui::context::Context::memory (11 samples, 0.01%)</title><rect x="62.8074%" y="517" width="0.0105%" height="15" fill="rgb(209,120,3)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="527.50"></text></g><g><title>egui::context::Context::write (11 samples, 0.01%)</title><rect x="62.8074%" y="501" width="0.0105%" height="15" fill="rgb(238,229,9)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="511.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="62.8074%" y="485" width="0.0105%" height="15" fill="rgb(253,159,18)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="495.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="62.8074%" y="469" width="0.0105%" height="15" fill="rgb(244,42,34)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="479.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (11 samples, 0.01%)</title><rect x="62.8074%" y="453" width="0.0105%" height="15" fill="rgb(224,8,7)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="62.8074%" y="437" width="0.0105%" height="15" fill="rgb(210,201,45)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="62.8074%" y="421" width="0.0105%" height="15" fill="rgb(252,185,21)" fg:x="66037" fg:w="11"/><text x="63.0574%" y="431.50"></text></g><g><title>egui::placer::Placer::advance_after_rects (33 samples, 0.03%)</title><rect x="62.8274%" y="517" width="0.0314%" height="15" fill="rgb(223,131,1)" fg:x="66058" fg:w="33"/><text x="63.0774%" y="527.50"></text></g><g><title>egui::placer::Placer::expand_to_include_rect (12 samples, 0.01%)</title><rect x="62.8474%" y="501" width="0.0114%" height="15" fill="rgb(245,141,16)" fg:x="66079" fg:w="12"/><text x="63.0974%" y="511.50"></text></g><g><title>egui::layout::Region::expand_to_include_rect (12 samples, 0.01%)</title><rect x="62.8474%" y="485" width="0.0114%" height="15" fill="rgb(229,55,45)" fg:x="66079" fg:w="12"/><text x="63.0974%" y="495.50"></text></g><g><title>emath::rect::Rect::union (11 samples, 0.01%)</title><rect x="62.8483%" y="469" width="0.0105%" height="15" fill="rgb(208,92,15)" fg:x="66080" fg:w="11"/><text x="63.0983%" y="479.50"></text></g><g><title>egui::placer::Placer::justify_and_align (13 samples, 0.01%)</title><rect x="62.8588%" y="517" width="0.0124%" height="15" fill="rgb(234,185,47)" fg:x="66091" fg:w="13"/><text x="63.1088%" y="527.50"></text></g><g><title>egui::placer::Placer::next_space (16 samples, 0.02%)</title><rect x="62.8712%" y="517" width="0.0152%" height="15" fill="rgb(253,104,50)" fg:x="66104" fg:w="16"/><text x="63.1212%" y="527.50"></text></g><g><title>egui::layout::Layout::next_frame (14 samples, 0.01%)</title><rect x="62.8731%" y="501" width="0.0133%" height="15" fill="rgb(205,70,7)" fg:x="66106" fg:w="14"/><text x="63.1231%" y="511.50"></text></g><g><title>egui::layout::Layout::next_frame_ignore_wrap (13 samples, 0.01%)</title><rect x="62.8740%" y="485" width="0.0124%" height="15" fill="rgb(240,178,43)" fg:x="66107" fg:w="13"/><text x="63.1240%" y="495.50"></text></g><g><title>egui::ui::Ui::allocate_space_impl (73 samples, 0.07%)</title><rect x="62.8265%" y="533" width="0.0694%" height="15" fill="rgb(214,112,2)" fg:x="66057" fg:w="73"/><text x="63.0765%" y="543.50"></text></g><g><title>egui::ui::Ui::allocate_space (96 samples, 0.09%)</title><rect x="62.8189%" y="549" width="0.0913%" height="15" fill="rgb(206,46,17)" fg:x="66049" fg:w="96"/><text x="63.0689%" y="559.50"></text></g><g><title>egui::ui::Ui::available_size_before_wrap (15 samples, 0.01%)</title><rect x="62.8959%" y="533" width="0.0143%" height="15" fill="rgb(225,220,16)" fg:x="66130" fg:w="15"/><text x="63.1459%" y="543.50"></text></g><g><title>egui::placer::Placer::available_rect_before_wrap (15 samples, 0.01%)</title><rect x="62.8959%" y="517" width="0.0143%" height="15" fill="rgb(238,65,40)" fg:x="66130" fg:w="15"/><text x="63.1459%" y="527.50"></text></g><g><title>egui::layout::Layout::available_rect_before_wrap (14 samples, 0.01%)</title><rect x="62.8968%" y="501" width="0.0133%" height="15" fill="rgb(230,151,21)" fg:x="66131" fg:w="14"/><text x="63.1468%" y="511.50"></text></g><g><title>egui::ui::Ui::available_rect_before_wrap (11 samples, 0.01%)</title><rect x="62.9102%" y="549" width="0.0105%" height="15" fill="rgb(218,58,49)" fg:x="66145" fg:w="11"/><text x="63.1602%" y="559.50"></text></g><g><title>egui::placer::Placer::available_rect_before_wrap (11 samples, 0.01%)</title><rect x="62.9102%" y="533" width="0.0105%" height="15" fill="rgb(219,179,14)" fg:x="66145" fg:w="11"/><text x="63.1602%" y="543.50"></text></g><g><title>egui::layout::Layout::available_rect_before_wrap (11 samples, 0.01%)</title><rect x="62.9102%" y="517" width="0.0105%" height="15" fill="rgb(223,72,1)" fg:x="66145" fg:w="11"/><text x="63.1602%" y="527.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="62.9482%" y="501" width="0.0171%" height="15" fill="rgb(238,126,10)" fg:x="66185" fg:w="18"/><text x="63.1982%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="62.9482%" y="485" width="0.0171%" height="15" fill="rgb(224,206,38)" fg:x="66185" fg:w="18"/><text x="63.1982%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="62.9482%" y="469" width="0.0171%" height="15" fill="rgb(212,201,54)" fg:x="66185" fg:w="18"/><text x="63.1982%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="62.9482%" y="453" width="0.0171%" height="15" fill="rgb(218,154,48)" fg:x="66185" fg:w="18"/><text x="63.1982%" y="463.50"></text></g><g><title>egui::context::Context::frame_state (18 samples, 0.02%)</title><rect x="62.9672%" y="485" width="0.0171%" height="15" fill="rgb(232,93,24)" fg:x="66205" fg:w="18"/><text x="63.2172%" y="495.50"></text></g><g><title>egui::context::Context::write (16 samples, 0.02%)</title><rect x="62.9691%" y="469" width="0.0152%" height="15" fill="rgb(245,30,21)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="479.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="62.9691%" y="453" width="0.0152%" height="15" fill="rgb(242,148,29)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="463.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (16 samples, 0.02%)</title><rect x="62.9691%" y="437" width="0.0152%" height="15" fill="rgb(244,153,54)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="447.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (16 samples, 0.02%)</title><rect x="62.9691%" y="421" width="0.0152%" height="15" fill="rgb(252,87,22)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="62.9691%" y="405" width="0.0152%" height="15" fill="rgb(210,51,29)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="62.9691%" y="389" width="0.0152%" height="15" fill="rgb(242,136,47)" fg:x="66207" fg:w="16"/><text x="63.2191%" y="399.50"></text></g><g><title>egui::context::Context::register_interaction_id (29 samples, 0.03%)</title><rect x="62.9663%" y="501" width="0.0276%" height="15" fill="rgb(238,68,4)" fg:x="66204" fg:w="29"/><text x="63.2163%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicRef&lt;egui::input_state::InputState&gt;&gt; (13 samples, 0.01%)</title><rect x="63.0100%" y="485" width="0.0124%" height="15" fill="rgb(242,161,30)" fg:x="66250" fg:w="13"/><text x="63.2600%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicBorrowRef&gt; (13 samples, 0.01%)</title><rect x="63.0100%" y="469" width="0.0124%" height="15" fill="rgb(218,58,44)" fg:x="66250" fg:w="13"/><text x="63.2600%" y="479.50"></text></g><g><title>&lt;atomic_refcell::AtomicBorrowRef as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="63.0100%" y="453" width="0.0124%" height="15" fill="rgb(252,125,32)" fg:x="66250" fg:w="13"/><text x="63.2600%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="63.0100%" y="437" width="0.0124%" height="15" fill="rgb(219,178,0)" fg:x="66250" fg:w="13"/><text x="63.2600%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="63.0100%" y="421" width="0.0124%" height="15" fill="rgb(213,152,7)" fg:x="66250" fg:w="13"/><text x="63.2600%" y="431.50"></text></g><g><title>atomic_refcell::AtomicBorrowRef::try_new (27 samples, 0.03%)</title><rect x="63.0224%" y="421" width="0.0257%" height="15" fill="rgb(249,109,34)" fg:x="66263" fg:w="27"/><text x="63.2724%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.03%)</title><rect x="63.0224%" y="405" width="0.0257%" height="15" fill="rgb(232,96,21)" fg:x="66263" fg:w="27"/><text x="63.2724%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.03%)</title><rect x="63.0224%" y="389" width="0.0257%" height="15" fill="rgb(228,27,39)" fg:x="66263" fg:w="27"/><text x="63.2724%" y="399.50"></text></g><g><title>egui::context::Context::input (30 samples, 0.03%)</title><rect x="63.0224%" y="485" width="0.0285%" height="15" fill="rgb(211,182,52)" fg:x="66263" fg:w="30"/><text x="63.2724%" y="495.50"></text></g><g><title>egui::context::Context::read (30 samples, 0.03%)</title><rect x="63.0224%" y="469" width="0.0285%" height="15" fill="rgb(234,178,38)" fg:x="66263" fg:w="30"/><text x="63.2724%" y="479.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::read (30 samples, 0.03%)</title><rect x="63.0224%" y="453" width="0.0285%" height="15" fill="rgb(221,111,3)" fg:x="66263" fg:w="30"/><text x="63.2724%" y="463.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow (30 samples, 0.03%)</title><rect x="63.0224%" y="437" width="0.0285%" height="15" fill="rgb(228,175,21)" fg:x="66263" fg:w="30"/><text x="63.2724%" y="447.50"></text></g><g><title>egui::response::Response::clicked_elsewhere (47 samples, 0.04%)</title><rect x="63.0100%" y="501" width="0.0447%" height="15" fill="rgb(228,174,43)" fg:x="66250" fg:w="47"/><text x="63.2600%" y="511.50"></text></g><g><title>egui::context::Context::interact_with_hovered (129 samples, 0.12%)</title><rect x="62.9330%" y="517" width="0.1227%" height="15" fill="rgb(211,191,0)" fg:x="66169" fg:w="129"/><text x="63.1830%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicRef&lt;egui::input_state::InputState&gt;&gt; (11 samples, 0.01%)</title><rect x="63.0557%" y="501" width="0.0105%" height="15" fill="rgb(253,117,3)" fg:x="66298" fg:w="11"/><text x="63.3057%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicBorrowRef&gt; (11 samples, 0.01%)</title><rect x="63.0557%" y="485" width="0.0105%" height="15" fill="rgb(241,127,19)" fg:x="66298" fg:w="11"/><text x="63.3057%" y="495.50"></text></g><g><title>&lt;atomic_refcell::AtomicBorrowRef as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="63.0557%" y="469" width="0.0105%" height="15" fill="rgb(218,103,12)" fg:x="66298" fg:w="11"/><text x="63.3057%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="63.0557%" y="453" width="0.0105%" height="15" fill="rgb(236,214,43)" fg:x="66298" fg:w="11"/><text x="63.3057%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="63.0557%" y="437" width="0.0105%" height="15" fill="rgb(244,144,19)" fg:x="66298" fg:w="11"/><text x="63.3057%" y="447.50"></text></g><g><title>egui::context::Context::rect_contains_pointer (21 samples, 0.02%)</title><rect x="63.0557%" y="517" width="0.0200%" height="15" fill="rgb(246,188,10)" fg:x="66298" fg:w="21"/><text x="63.3057%" y="527.50"></text></g><g><title>egui::ui::Ui::interact (164 samples, 0.16%)</title><rect x="62.9206%" y="549" width="0.1560%" height="15" fill="rgb(212,193,33)" fg:x="66156" fg:w="164"/><text x="63.1706%" y="559.50"></text></g><g><title>egui::context::Context::interact (162 samples, 0.15%)</title><rect x="62.9225%" y="533" width="0.1541%" height="15" fill="rgb(241,51,29)" fg:x="66158" fg:w="162"/><text x="63.1725%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicRef&lt;epaint::text::fonts::Fonts&gt;&gt; (15 samples, 0.01%)</title><rect x="63.1023%" y="533" width="0.0143%" height="15" fill="rgb(211,58,19)" fg:x="66347" fg:w="15"/><text x="63.3523%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;atomic_refcell::AtomicBorrowRef&gt; (15 samples, 0.01%)</title><rect x="63.1023%" y="517" width="0.0143%" height="15" fill="rgb(229,111,26)" fg:x="66347" fg:w="15"/><text x="63.3523%" y="527.50"></text></g><g><title>&lt;atomic_refcell::AtomicBorrowRef as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="63.1023%" y="501" width="0.0143%" height="15" fill="rgb(213,115,40)" fg:x="66347" fg:w="15"/><text x="63.3523%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="63.1023%" y="485" width="0.0143%" height="15" fill="rgb(209,56,44)" fg:x="66347" fg:w="15"/><text x="63.3523%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="63.1023%" y="469" width="0.0143%" height="15" fill="rgb(230,108,32)" fg:x="66347" fg:w="15"/><text x="63.3523%" y="479.50"></text></g><g><title>egui::ui::Ui::fonts (25 samples, 0.02%)</title><rect x="63.1165%" y="533" width="0.0238%" height="15" fill="rgb(216,165,31)" fg:x="66362" fg:w="25"/><text x="63.3665%" y="543.50"></text></g><g><title>egui::context::Context::fonts (25 samples, 0.02%)</title><rect x="63.1165%" y="517" width="0.0238%" height="15" fill="rgb(218,122,21)" fg:x="66362" fg:w="25"/><text x="63.3665%" y="527.50"></text></g><g><title>egui::context::Context::read (24 samples, 0.02%)</title><rect x="63.1175%" y="501" width="0.0228%" height="15" fill="rgb(223,224,47)" fg:x="66363" fg:w="24"/><text x="63.3675%" y="511.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::read (23 samples, 0.02%)</title><rect x="63.1184%" y="485" width="0.0219%" height="15" fill="rgb(238,102,44)" fg:x="66364" fg:w="23"/><text x="63.3684%" y="495.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow (23 samples, 0.02%)</title><rect x="63.1184%" y="469" width="0.0219%" height="15" fill="rgb(236,46,40)" fg:x="66364" fg:w="23"/><text x="63.3684%" y="479.50"></text></g><g><title>atomic_refcell::AtomicBorrowRef::try_new (23 samples, 0.02%)</title><rect x="63.1184%" y="453" width="0.0219%" height="15" fill="rgb(247,202,50)" fg:x="66364" fg:w="23"/><text x="63.3684%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="63.1184%" y="437" width="0.0219%" height="15" fill="rgb(209,99,20)" fg:x="66364" fg:w="23"/><text x="63.3684%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="63.1184%" y="421" width="0.0219%" height="15" fill="rgb(252,27,34)" fg:x="66364" fg:w="23"/><text x="63.3684%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (25 samples, 0.02%)</title><rect x="63.1651%" y="517" width="0.0238%" height="15" fill="rgb(215,206,23)" fg:x="66413" fg:w="25"/><text x="63.4151%" y="527.50"></text></g><g><title>egui::widget_text::RichText::into_text_job::{{closure}} (25 samples, 0.02%)</title><rect x="63.1651%" y="501" width="0.0238%" height="15" fill="rgb(212,135,36)" fg:x="66413" fg:w="25"/><text x="63.4151%" y="511.50"></text></g><g><title>egui::style::FontSelection::resolve (23 samples, 0.02%)</title><rect x="63.1670%" y="485" width="0.0219%" height="15" fill="rgb(240,189,1)" fg:x="66415" fg:w="23"/><text x="63.4170%" y="495.50"></text></g><g><title>egui::widget_text::RichText::into_text_job (70 samples, 0.07%)</title><rect x="63.1403%" y="533" width="0.0666%" height="15" fill="rgb(242,56,20)" fg:x="66387" fg:w="70"/><text x="63.3903%" y="543.50"></text></g><g><title>epaint::text::text_layout_types::LayoutJob::single_section (16 samples, 0.02%)</title><rect x="63.1917%" y="517" width="0.0152%" height="15" fill="rgb(247,132,33)" fg:x="66441" fg:w="16"/><text x="63.4417%" y="527.50"></text></g><g><title>epaint::text::fonts::Fonts::lock (12 samples, 0.01%)</title><rect x="63.2069%" y="517" width="0.0114%" height="15" fill="rgb(208,149,11)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="527.50"></text></g><g><title>epaint::mutex::mutex_impl::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="63.2069%" y="501" width="0.0114%" height="15" fill="rgb(211,33,11)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="511.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (12 samples, 0.01%)</title><rect x="63.2069%" y="485" width="0.0114%" height="15" fill="rgb(221,29,38)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="495.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (12 samples, 0.01%)</title><rect x="63.2069%" y="469" width="0.0114%" height="15" fill="rgb(206,182,49)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.01%)</title><rect x="63.2069%" y="453" width="0.0114%" height="15" fill="rgb(216,140,1)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="63.2069%" y="437" width="0.0114%" height="15" fill="rgb(232,57,40)" fg:x="66457" fg:w="12"/><text x="63.4569%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (200 samples, 0.19%)</title><rect x="63.2202%" y="485" width="0.1902%" height="15" fill="rgb(224,186,18)" fg:x="66471" fg:w="200"/><text x="63.4702%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (200 samples, 0.19%)</title><rect x="63.2202%" y="469" width="0.1902%" height="15" fill="rgb(215,121,11)" fg:x="66471" fg:w="200"/><text x="63.4702%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (200 samples, 0.19%)</title><rect x="63.2202%" y="453" width="0.1902%" height="15" fill="rgb(245,147,10)" fg:x="66471" fg:w="200"/><text x="63.4702%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 0.01%)</title><rect x="63.4171%" y="469" width="0.0105%" height="15" fill="rgb(238,153,13)" fg:x="66678" fg:w="11"/><text x="63.6671%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="63.4171%" y="453" width="0.0105%" height="15" fill="rgb(233,108,0)" fg:x="66678" fg:w="11"/><text x="63.6671%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="63.4171%" y="437" width="0.0105%" height="15" fill="rgb(212,157,17)" fg:x="66678" fg:w="11"/><text x="63.6671%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="63.4171%" y="421" width="0.0105%" height="15" fill="rgb(225,213,38)" fg:x="66678" fg:w="11"/><text x="63.6671%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::text::text_layout_types::LayoutJob&gt; (14 samples, 0.01%)</title><rect x="63.4161%" y="485" width="0.0133%" height="15" fill="rgb(248,16,11)" fg:x="66677" fg:w="14"/><text x="63.6661%" y="495.50"></text></g><g><title>&lt;epaint::color::Color32 as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="63.4513%" y="357" width="0.0133%" height="15" fill="rgb(241,33,4)" fg:x="66714" fg:w="14"/><text x="63.7013%" y="367.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.01%)</title><rect x="63.4513%" y="341" width="0.0133%" height="15" fill="rgb(222,26,43)" fg:x="66714" fg:w="14"/><text x="63.7013%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.01%)</title><rect x="63.4513%" y="325" width="0.0133%" height="15" fill="rgb(243,29,36)" fg:x="66714" fg:w="14"/><text x="63.7013%" y="335.50"></text></g><g><title>&lt;epaint::stroke::Stroke as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="63.4646%" y="357" width="0.0171%" height="15" fill="rgb(241,9,27)" fg:x="66728" fg:w="18"/><text x="63.7146%" y="367.50"></text></g><g><title>core::hash::Hash::hash_slice (51 samples, 0.05%)</title><rect x="63.4418%" y="405" width="0.0485%" height="15" fill="rgb(205,117,26)" fg:x="66704" fg:w="51"/><text x="63.6918%" y="415.50"></text></g><g><title>&lt;epaint::text::text_layout_types::LayoutSection as core::hash::Hash&gt;::hash (49 samples, 0.05%)</title><rect x="63.4437%" y="389" width="0.0466%" height="15" fill="rgb(209,80,39)" fg:x="66706" fg:w="49"/><text x="63.6937%" y="399.50"></text></g><g><title>&lt;epaint::text::text_layout_types::TextFormat as core::hash::Hash&gt;::hash (44 samples, 0.04%)</title><rect x="63.4485%" y="373" width="0.0418%" height="15" fill="rgb(239,155,6)" fg:x="66711" fg:w="44"/><text x="63.6985%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (53 samples, 0.05%)</title><rect x="63.4418%" y="437" width="0.0504%" height="15" fill="rgb(212,104,12)" fg:x="66704" fg:w="53"/><text x="63.6918%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (53 samples, 0.05%)</title><rect x="63.4418%" y="421" width="0.0504%" height="15" fill="rgb(234,204,3)" fg:x="66704" fg:w="53"/><text x="63.6918%" y="431.50"></text></g><g><title>epaint::util::hash (76 samples, 0.07%)</title><rect x="63.4323%" y="485" width="0.0723%" height="15" fill="rgb(251,218,7)" fg:x="66694" fg:w="76"/><text x="63.6823%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (70 samples, 0.07%)</title><rect x="63.4380%" y="469" width="0.0666%" height="15" fill="rgb(221,81,32)" fg:x="66700" fg:w="70"/><text x="63.6880%" y="479.50"></text></g><g><title>&lt;epaint::text::text_layout_types::LayoutJob as core::hash::Hash&gt;::hash (70 samples, 0.07%)</title><rect x="63.4380%" y="453" width="0.0666%" height="15" fill="rgb(214,152,26)" fg:x="66700" fg:w="70"/><text x="63.6880%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.02%)</title><rect x="63.5103%" y="421" width="0.0209%" height="15" fill="rgb(223,22,3)" fg:x="66776" fg:w="22"/><text x="63.7603%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (22 samples, 0.02%)</title><rect x="63.5103%" y="405" width="0.0209%" height="15" fill="rgb(207,174,7)" fg:x="66776" fg:w="22"/><text x="63.7603%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (22 samples, 0.02%)</title><rect x="63.5103%" y="389" width="0.0209%" height="15" fill="rgb(224,19,52)" fg:x="66776" fg:w="22"/><text x="63.7603%" y="399.50"></text></g><g><title>egui::widget_text::WidgetText::into_galley (477 samples, 0.45%)</title><rect x="63.0823%" y="549" width="0.4537%" height="15" fill="rgb(228,24,14)" fg:x="66326" fg:w="477"/><text x="63.3323%" y="559.50"></text></g><g><title>epaint::text::fonts::Fonts::layout_job (346 samples, 0.33%)</title><rect x="63.2069%" y="533" width="0.3291%" height="15" fill="rgb(230,153,43)" fg:x="66457" fg:w="346"/><text x="63.4569%" y="543.50"></text></g><g><title>epaint::text::fonts::FontsAndCache::layout_job (334 samples, 0.32%)</title><rect x="63.2183%" y="517" width="0.3177%" height="15" fill="rgb(231,106,12)" fg:x="66469" fg:w="334"/><text x="63.4683%" y="527.50"></text></g><g><title>epaint::text::fonts::GalleyCache::layout (333 samples, 0.32%)</title><rect x="63.2193%" y="501" width="0.3167%" height="15" fill="rgb(215,92,2)" fg:x="66470" fg:w="333"/><text x="63.4693%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (33 samples, 0.03%)</title><rect x="63.5046%" y="485" width="0.0314%" height="15" fill="rgb(249,143,25)" fg:x="66770" fg:w="33"/><text x="63.7546%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (33 samples, 0.03%)</title><rect x="63.5046%" y="469" width="0.0314%" height="15" fill="rgb(252,7,35)" fg:x="66770" fg:w="33"/><text x="63.7546%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="63.5046%" y="453" width="0.0314%" height="15" fill="rgb(216,69,40)" fg:x="66770" fg:w="33"/><text x="63.7546%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (32 samples, 0.03%)</title><rect x="63.5055%" y="437" width="0.0304%" height="15" fill="rgb(240,36,33)" fg:x="66771" fg:w="32"/><text x="63.7555%" y="447.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::begin (985 samples, 0.94%)</title><rect x="62.6324%" y="565" width="0.9368%" height="15" fill="rgb(231,128,14)" fg:x="65853" fg:w="985"/><text x="62.8824%" y="575.50"></text></g><g><title>egui::widget_text::WidgetTextGalley::size (33 samples, 0.03%)</title><rect x="63.5379%" y="549" width="0.0314%" height="15" fill="rgb(245,143,14)" fg:x="66805" fg:w="33"/><text x="63.7879%" y="559.50"></text></g><g><title>epaint::text::text_layout_types::Galley::size (33 samples, 0.03%)</title><rect x="63.5379%" y="533" width="0.0314%" height="15" fill="rgb(222,130,28)" fg:x="66805" fg:w="33"/><text x="63.7879%" y="543.50"></text></g><g><title>emath::rect::Rect::size (33 samples, 0.03%)</title><rect x="63.5379%" y="517" width="0.0314%" height="15" fill="rgb(212,10,48)" fg:x="66805" fg:w="33"/><text x="63.7879%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::containers::collapsing_header::CollapsingHeader::show_dyn&lt;bool&gt;::{{closure}}::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="63.5702%" y="549" width="0.0133%" height="15" fill="rgb(254,118,45)" fg:x="66839" fg:w="14"/><text x="63.8202%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::FnOnce&lt;(&amp;mut egui::ui::Ui,)&gt;+Output = bool&gt;&gt; (14 samples, 0.01%)</title><rect x="63.5702%" y="533" width="0.0133%" height="15" fill="rgb(228,6,45)" fg:x="66839" fg:w="14"/><text x="63.8202%" y="543.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="63.5702%" y="517" width="0.0133%" height="15" fill="rgb(241,18,35)" fg:x="66839" fg:w="14"/><text x="63.8202%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="63.5702%" y="501" width="0.0133%" height="15" fill="rgb(227,214,53)" fg:x="66839" fg:w="14"/><text x="63.8202%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="63.5702%" y="485" width="0.0133%" height="15" fill="rgb(224,107,51)" fg:x="66839" fg:w="14"/><text x="63.8202%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.02%)</title><rect x="63.6102%" y="389" width="0.0162%" height="15" fill="rgb(248,60,28)" fg:x="66881" fg:w="17"/><text x="63.8602%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (17 samples, 0.02%)</title><rect x="63.6102%" y="373" width="0.0162%" height="15" fill="rgb(249,101,23)" fg:x="66881" fg:w="17"/><text x="63.8602%" y="383.50"></text></g><g><title>&lt;egui::id::Id as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="63.6102%" y="357" width="0.0162%" height="15" fill="rgb(228,51,19)" fg:x="66881" fg:w="17"/><text x="63.8602%" y="367.50"></text></g><g><title>egui::animation_manager::AnimationManager::animate_bool (31 samples, 0.03%)</title><rect x="63.5978%" y="501" width="0.0295%" height="15" fill="rgb(213,20,6)" fg:x="66868" fg:w="31"/><text x="63.8478%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (18 samples, 0.02%)</title><rect x="63.6102%" y="485" width="0.0171%" height="15" fill="rgb(212,124,10)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (18 samples, 0.02%)</title><rect x="63.6102%" y="469" width="0.0171%" height="15" fill="rgb(248,3,40)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (18 samples, 0.02%)</title><rect x="63.6102%" y="453" width="0.0171%" height="15" fill="rgb(223,178,23)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (18 samples, 0.02%)</title><rect x="63.6102%" y="437" width="0.0171%" height="15" fill="rgb(240,132,45)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="63.6102%" y="421" width="0.0171%" height="15" fill="rgb(245,164,36)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.02%)</title><rect x="63.6102%" y="405" width="0.0171%" height="15" fill="rgb(231,188,53)" fg:x="66881" fg:w="18"/><text x="63.8602%" y="415.50"></text></g><g><title>egui::context::Context::animate_bool_with_time (45 samples, 0.04%)</title><rect x="63.5968%" y="517" width="0.0428%" height="15" fill="rgb(237,198,39)" fg:x="66867" fg:w="45"/><text x="63.8468%" y="527.50"></text></g><g><title>egui::context::Context::write (11 samples, 0.01%)</title><rect x="63.6292%" y="501" width="0.0105%" height="15" fill="rgb(223,120,35)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="511.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="63.6292%" y="485" width="0.0105%" height="15" fill="rgb(253,107,49)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="495.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="63.6292%" y="469" width="0.0105%" height="15" fill="rgb(216,44,31)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="479.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (11 samples, 0.01%)</title><rect x="63.6292%" y="453" width="0.0105%" height="15" fill="rgb(253,87,21)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="63.6292%" y="437" width="0.0105%" height="15" fill="rgb(226,18,2)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="63.6292%" y="421" width="0.0105%" height="15" fill="rgb(216,8,46)" fg:x="66901" fg:w="11"/><text x="63.8792%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="63.6396%" y="501" width="0.0171%" height="15" fill="rgb(226,140,39)" fg:x="66912" fg:w="18"/><text x="63.8896%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="63.6396%" y="485" width="0.0171%" height="15" fill="rgb(221,194,54)" fg:x="66912" fg:w="18"/><text x="63.8896%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="63.6396%" y="469" width="0.0171%" height="15" fill="rgb(213,92,11)" fg:x="66912" fg:w="18"/><text x="63.8896%" y="479.50"></text></g><g><title>egui::context::Context::animate_bool (94 samples, 0.09%)</title><rect x="63.5854%" y="533" width="0.0894%" height="15" fill="rgb(229,162,46)" fg:x="66855" fg:w="94"/><text x="63.8354%" y="543.50"></text></g><g><title>egui::context::Context::style (37 samples, 0.04%)</title><rect x="63.6396%" y="517" width="0.0352%" height="15" fill="rgb(214,111,36)" fg:x="66912" fg:w="37"/><text x="63.8896%" y="527.50"></text></g><g><title>egui::context::Context::options (19 samples, 0.02%)</title><rect x="63.6568%" y="501" width="0.0181%" height="15" fill="rgb(207,6,21)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="511.50"></text></g><g><title>egui::context::Context::write (19 samples, 0.02%)</title><rect x="63.6568%" y="485" width="0.0181%" height="15" fill="rgb(213,127,38)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="495.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (19 samples, 0.02%)</title><rect x="63.6568%" y="469" width="0.0181%" height="15" fill="rgb(238,118,32)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="479.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (19 samples, 0.02%)</title><rect x="63.6568%" y="453" width="0.0181%" height="15" fill="rgb(240,139,39)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="463.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (19 samples, 0.02%)</title><rect x="63.6568%" y="437" width="0.0181%" height="15" fill="rgb(235,10,37)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="63.6568%" y="421" width="0.0181%" height="15" fill="rgb(249,171,38)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="63.6568%" y="405" width="0.0181%" height="15" fill="rgb(242,144,32)" fg:x="66930" fg:w="19"/><text x="63.9068%" y="415.50"></text></g><g><title>egui::context::Context::memory (16 samples, 0.02%)</title><rect x="63.6748%" y="533" width="0.0152%" height="15" fill="rgb(217,117,21)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="543.50"></text></g><g><title>egui::context::Context::write (16 samples, 0.02%)</title><rect x="63.6748%" y="517" width="0.0152%" height="15" fill="rgb(249,87,1)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="527.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="63.6748%" y="501" width="0.0152%" height="15" fill="rgb(248,196,48)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="511.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (16 samples, 0.02%)</title><rect x="63.6748%" y="485" width="0.0152%" height="15" fill="rgb(251,206,33)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="495.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (16 samples, 0.02%)</title><rect x="63.6748%" y="469" width="0.0152%" height="15" fill="rgb(232,141,28)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="63.6748%" y="453" width="0.0152%" height="15" fill="rgb(209,167,14)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="63.6748%" y="437" width="0.0152%" height="15" fill="rgb(225,11,50)" fg:x="66949" fg:w="16"/><text x="63.9248%" y="447.50"></text></g><g><title>egui::containers::collapsing_header::State::openness (113 samples, 0.11%)</title><rect x="63.5835%" y="549" width="0.1075%" height="15" fill="rgb(209,50,20)" fg:x="66853" fg:w="113"/><text x="63.8335%" y="559.50"></text></g><g><title>egui::containers::collapsing_header::State::add_contents (130 samples, 0.12%)</title><rect x="63.5693%" y="565" width="0.1236%" height="15" fill="rgb(212,17,46)" fg:x="66838" fg:w="130"/><text x="63.8193%" y="575.50"></text></g><g><title>egui::context::Context::data (18 samples, 0.02%)</title><rect x="63.6929%" y="549" width="0.0171%" height="15" fill="rgb(216,101,39)" fg:x="66968" fg:w="18"/><text x="63.9429%" y="559.50"></text></g><g><title>egui::context::Context::write (17 samples, 0.02%)</title><rect x="63.6939%" y="533" width="0.0162%" height="15" fill="rgb(212,228,48)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="543.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="63.6939%" y="517" width="0.0162%" height="15" fill="rgb(250,6,50)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="527.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (17 samples, 0.02%)</title><rect x="63.6939%" y="501" width="0.0162%" height="15" fill="rgb(250,160,48)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="511.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (17 samples, 0.02%)</title><rect x="63.6939%" y="485" width="0.0162%" height="15" fill="rgb(244,216,33)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="63.6939%" y="469" width="0.0162%" height="15" fill="rgb(207,157,5)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="63.6939%" y="453" width="0.0162%" height="15" fill="rgb(228,199,8)" fg:x="66969" fg:w="17"/><text x="63.9439%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="63.7119%" y="453" width="0.0143%" height="15" fill="rgb(227,80,20)" fg:x="66988" fg:w="15"/><text x="63.9619%" y="463.50"></text></g><g><title>__free (14 samples, 0.01%)</title><rect x="63.7129%" y="437" width="0.0133%" height="15" fill="rgb(222,9,33)" fg:x="66989" fg:w="14"/><text x="63.9629%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;egui::util::id_type_map::Element&gt;&gt; (18 samples, 0.02%)</title><rect x="63.7100%" y="533" width="0.0171%" height="15" fill="rgb(239,44,28)" fg:x="66986" fg:w="18"/><text x="63.9600%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::util::id_type_map::Element&gt; (17 samples, 0.02%)</title><rect x="63.7110%" y="517" width="0.0162%" height="15" fill="rgb(249,187,43)" fg:x="66987" fg:w="17"/><text x="63.9610%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (17 samples, 0.02%)</title><rect x="63.7110%" y="501" width="0.0162%" height="15" fill="rgb(216,141,28)" fg:x="66987" fg:w="17"/><text x="63.9610%" y="511.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.02%)</title><rect x="63.7119%" y="485" width="0.0152%" height="15" fill="rgb(230,154,53)" fg:x="66988" fg:w="16"/><text x="63.9619%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="63.7119%" y="469" width="0.0152%" height="15" fill="rgb(227,82,4)" fg:x="66988" fg:w="16"/><text x="63.9619%" y="479.50"></text></g><g><title>egui::util::id_type_map::Element::new_persisted (11 samples, 0.01%)</title><rect x="63.7271%" y="533" width="0.0105%" height="15" fill="rgb(220,107,16)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="63.7271%" y="517" width="0.0105%" height="15" fill="rgb(207,187,2)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="63.7271%" y="501" width="0.0105%" height="15" fill="rgb(210,162,52)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="63.7271%" y="485" width="0.0105%" height="15" fill="rgb(217,216,49)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="63.7271%" y="469" width="0.0105%" height="15" fill="rgb(218,146,49)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="479.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="63.7271%" y="453" width="0.0105%" height="15" fill="rgb(216,55,40)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="463.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="63.7271%" y="437" width="0.0105%" height="15" fill="rgb(208,196,21)" fg:x="67004" fg:w="11"/><text x="63.9771%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,182 samples, 1.12%)</title><rect x="62.6229%" y="613" width="1.1242%" height="15" fill="rgb(242,117,42)" fg:x="65843" fg:w="1182"/><text x="62.8729%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,182 samples, 1.12%)</title><rect x="62.6229%" y="597" width="1.1242%" height="15" fill="rgb(210,11,23)" fg:x="65843" fg:w="1182"/><text x="62.8729%" y="607.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show_dyn::{{closure}} (1,181 samples, 1.12%)</title><rect x="62.6239%" y="581" width="1.1232%" height="15" fill="rgb(217,110,2)" fg:x="65844" fg:w="1181"/><text x="62.8739%" y="591.50"></text></g><g><title>egui::containers::collapsing_header::State::store (57 samples, 0.05%)</title><rect x="63.6929%" y="565" width="0.0542%" height="15" fill="rgb(229,77,54)" fg:x="66968" fg:w="57"/><text x="63.9429%" y="575.50"></text></g><g><title>egui::util::id_type_map::IdTypeMap::insert_persisted (39 samples, 0.04%)</title><rect x="63.7100%" y="549" width="0.0371%" height="15" fill="rgb(218,53,16)" fg:x="66986" fg:w="39"/><text x="63.9600%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="63.7633%" y="581" width="0.0114%" height="15" fill="rgb(215,38,13)" fg:x="67042" fg:w="12"/><text x="64.0133%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.01%)</title><rect x="63.7633%" y="565" width="0.0114%" height="15" fill="rgb(235,42,18)" fg:x="67042" fg:w="12"/><text x="64.0133%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.01%)</title><rect x="63.7633%" y="549" width="0.0114%" height="15" fill="rgb(219,66,54)" fg:x="67042" fg:w="12"/><text x="64.0133%" y="559.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="63.7795%" y="565" width="0.0200%" height="15" fill="rgb(222,205,4)" fg:x="67059" fg:w="21"/><text x="64.0295%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="63.7795%" y="549" width="0.0200%" height="15" fill="rgb(227,213,46)" fg:x="67059" fg:w="21"/><text x="64.0295%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="63.7795%" y="533" width="0.0200%" height="15" fill="rgb(250,145,42)" fg:x="67059" fg:w="21"/><text x="64.0295%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="63.7795%" y="517" width="0.0200%" height="15" fill="rgb(219,15,2)" fg:x="67059" fg:w="21"/><text x="64.0295%" y="527.50"></text></g><g><title>&lt;egui::painter::Painter as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="63.7747%" y="581" width="0.0276%" height="15" fill="rgb(231,181,52)" fg:x="67054" fg:w="29"/><text x="64.0247%" y="591.50"></text></g><g><title>egui::id::Id::with (16 samples, 0.02%)</title><rect x="63.8042%" y="581" width="0.0152%" height="15" fill="rgb(235,1,42)" fg:x="67085" fg:w="16"/><text x="64.0542%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.01%)</title><rect x="63.8080%" y="565" width="0.0114%" height="15" fill="rgb(249,88,27)" fg:x="67089" fg:w="12"/><text x="64.0580%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.01%)</title><rect x="63.8089%" y="549" width="0.0105%" height="15" fill="rgb(235,145,16)" fg:x="67090" fg:w="11"/><text x="64.0589%" y="559.50"></text></g><g><title>core::hash::Hasher::write_str (11 samples, 0.01%)</title><rect x="63.8089%" y="533" width="0.0105%" height="15" fill="rgb(237,114,19)" fg:x="67090" fg:w="11"/><text x="64.0589%" y="543.50"></text></g><g><title>egui::layout::Layout::align_size_within_rect (17 samples, 0.02%)</title><rect x="63.8318%" y="517" width="0.0162%" height="15" fill="rgb(238,51,50)" fg:x="67114" fg:w="17"/><text x="64.0818%" y="527.50"></text></g><g><title>emath::align::Align2::align_size_within_rect (12 samples, 0.01%)</title><rect x="63.8365%" y="501" width="0.0114%" height="15" fill="rgb(205,194,25)" fg:x="67119" fg:w="12"/><text x="64.0865%" y="511.50"></text></g><g><title>egui::layout::Layout::available_rect_before_wrap (22 samples, 0.02%)</title><rect x="63.8498%" y="501" width="0.0209%" height="15" fill="rgb(215,203,17)" fg:x="67133" fg:w="22"/><text x="64.0998%" y="511.50"></text></g><g><title>egui::layout::Layout::next_widget_space_ignore_wrap_justify (50 samples, 0.05%)</title><rect x="63.8299%" y="533" width="0.0476%" height="15" fill="rgb(233,112,49)" fg:x="67112" fg:w="50"/><text x="64.0799%" y="543.50"></text></g><g><title>egui::layout::Layout::next_frame_ignore_wrap (31 samples, 0.03%)</title><rect x="63.8479%" y="517" width="0.0295%" height="15" fill="rgb(241,130,26)" fg:x="67131" fg:w="31"/><text x="64.0979%" y="527.50"></text></g><g><title>egui::layout::Layout::next_widget_position (55 samples, 0.05%)</title><rect x="63.8299%" y="549" width="0.0523%" height="15" fill="rgb(252,223,19)" fg:x="67112" fg:w="55"/><text x="64.0799%" y="559.50"></text></g><g><title>egui::placer::Placer::new (71 samples, 0.07%)</title><rect x="63.8194%" y="581" width="0.0675%" height="15" fill="rgb(211,95,25)" fg:x="67101" fg:w="71"/><text x="64.0694%" y="591.50"></text></g><g><title>egui::layout::Layout::region_from_max_rect (64 samples, 0.06%)</title><rect x="63.8261%" y="565" width="0.0609%" height="15" fill="rgb(251,182,27)" fg:x="67108" fg:w="64"/><text x="64.0761%" y="575.50"></text></g><g><title>egui::ui::Ui::child_ui (148 samples, 0.14%)</title><rect x="63.7471%" y="613" width="0.1408%" height="15" fill="rgb(238,24,4)" fg:x="67025" fg:w="148"/><text x="63.9971%" y="623.50"></text></g><g><title>egui::ui::Ui::child_ui_with_id_source (147 samples, 0.14%)</title><rect x="63.7481%" y="597" width="0.1398%" height="15" fill="rgb(224,220,25)" fg:x="67026" fg:w="147"/><text x="63.9981%" y="607.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="63.8936%" y="565" width="0.0143%" height="15" fill="rgb(239,133,26)" fg:x="67179" fg:w="15"/><text x="64.1436%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="63.8936%" y="549" width="0.0143%" height="15" fill="rgb(211,94,48)" fg:x="67179" fg:w="15"/><text x="64.1436%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="63.8936%" y="533" width="0.0143%" height="15" fill="rgb(239,87,6)" fg:x="67179" fg:w="15"/><text x="64.1436%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="63.8936%" y="517" width="0.0143%" height="15" fill="rgb(227,62,0)" fg:x="67179" fg:w="15"/><text x="64.1436%" y="527.50"></text></g><g><title>egui::context::Context::memory (16 samples, 0.02%)</title><rect x="63.9079%" y="565" width="0.0152%" height="15" fill="rgb(211,226,4)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="575.50"></text></g><g><title>egui::context::Context::write (16 samples, 0.02%)</title><rect x="63.9079%" y="549" width="0.0152%" height="15" fill="rgb(253,38,52)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="559.50"></text></g><g><title>epaint::mutex::rw_lock_impl::RwLock&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="63.9079%" y="533" width="0.0152%" height="15" fill="rgb(229,126,40)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="543.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (16 samples, 0.02%)</title><rect x="63.9079%" y="517" width="0.0152%" height="15" fill="rgb(229,165,44)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="527.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (16 samples, 0.02%)</title><rect x="63.9079%" y="501" width="0.0152%" height="15" fill="rgb(247,95,47)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="63.9079%" y="485" width="0.0152%" height="15" fill="rgb(216,140,30)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="63.9079%" y="469" width="0.0152%" height="15" fill="rgb(246,214,8)" fg:x="67194" fg:w="16"/><text x="64.1579%" y="479.50"></text></g><g><title>egui::containers::window::Window::show_dyn (1,368 samples, 1.30%)</title><rect x="62.6229%" y="981" width="1.3011%" height="15" fill="rgb(227,224,15)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="991.50"></text></g><g><title>egui::containers::collapsing_header::State::add_contents (1,368 samples, 1.30%)</title><rect x="62.6229%" y="965" width="1.3011%" height="15" fill="rgb(233,175,4)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="975.50"></text></g><g><title>egui::ui::Ui::scope (1,368 samples, 1.30%)</title><rect x="62.6229%" y="949" width="1.3011%" height="15" fill="rgb(221,66,45)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="959.50"></text></g><g><title>egui::ui::Ui::scope_dyn (1,368 samples, 1.30%)</title><rect x="62.6229%" y="933" width="1.3011%" height="15" fill="rgb(221,178,18)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,368 samples, 1.30%)</title><rect x="62.6229%" y="917" width="1.3011%" height="15" fill="rgb(213,81,29)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="901" width="1.3011%" height="15" fill="rgb(220,89,49)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="911.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="885" width="1.3011%" height="15" fill="rgb(227,60,33)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="895.50"></text></g><g><title>egui::containers::resize::Resize::show (1,368 samples, 1.30%)</title><rect x="62.6229%" y="869" width="1.3011%" height="15" fill="rgb(205,113,12)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="879.50"></text></g><g><title>egui::containers::window::Window::show_dyn::{{closure}}::{{closure}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="853" width="1.3011%" height="15" fill="rgb(211,32,1)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="863.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show (1,368 samples, 1.30%)</title><rect x="62.6229%" y="837" width="1.3011%" height="15" fill="rgb(246,2,12)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="847.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show_viewport_dyn (1,368 samples, 1.30%)</title><rect x="62.6229%" y="821" width="1.3011%" height="15" fill="rgb(243,37,27)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,368 samples, 1.30%)</title><rect x="62.6229%" y="805" width="1.3011%" height="15" fill="rgb(248,211,31)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="789" width="1.3011%" height="15" fill="rgb(242,146,47)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="799.50"></text></g><g><title>egui::containers::scroll_area::ScrollArea::show::{{closure}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="773" width="1.3011%" height="15" fill="rgb(206,70,20)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,368 samples, 1.30%)</title><rect x="62.6229%" y="757" width="1.3011%" height="15" fill="rgb(215,10,51)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="741" width="1.3011%" height="15" fill="rgb(243,178,53)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="751.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui::{{closure}} (1,368 samples, 1.30%)</title><rect x="62.6229%" y="725" width="1.3011%" height="15" fill="rgb(233,221,20)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="735.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::world_ui (1,368 samples, 1.30%)</title><rect x="62.6229%" y="709" width="1.3011%" height="15" fill="rgb(218,95,35)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="719.50"></text></g><g><title>bevy_inspector_egui::world_inspector::WorldUIContext::entity_ui (1,368 samples, 1.30%)</title><rect x="62.6229%" y="693" width="1.3011%" height="15" fill="rgb(229,13,5)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="703.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show (1,368 samples, 1.30%)</title><rect x="62.6229%" y="677" width="1.3011%" height="15" fill="rgb(252,164,30)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="687.50"></text></g><g><title>egui::containers::collapsing_header::CollapsingHeader::show_dyn (1,368 samples, 1.30%)</title><rect x="62.6229%" y="661" width="1.3011%" height="15" fill="rgb(232,68,36)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="671.50"></text></g><g><title>egui::ui::Ui::vertical (1,368 samples, 1.30%)</title><rect x="62.6229%" y="645" width="1.3011%" height="15" fill="rgb(219,59,54)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="655.50"></text></g><g><title>egui::ui::Ui::with_layout_dyn (1,368 samples, 1.30%)</title><rect x="62.6229%" y="629" width="1.3011%" height="15" fill="rgb(250,92,33)" fg:x="65843" fg:w="1368"/><text x="62.8729%" y="639.50"></text></g><g><title>egui::ui::Ui::interact (38 samples, 0.04%)</title><rect x="63.8879%" y="613" width="0.0361%" height="15" fill="rgb(229,162,54)" fg:x="67173" fg:w="38"/><text x="64.1379%" y="623.50"></text></g><g><title>egui::context::Context::interact (38 samples, 0.04%)</title><rect x="63.8879%" y="597" width="0.0361%" height="15" fill="rgb(244,114,52)" fg:x="67173" fg:w="38"/><text x="64.1379%" y="607.50"></text></g><g><title>egui::context::Context::interact_with_hovered (38 samples, 0.04%)</title><rect x="63.8879%" y="581" width="0.0361%" height="15" fill="rgb(212,211,43)" fg:x="67173" fg:w="38"/><text x="64.1379%" y="591.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (100 samples, 0.10%)</title><rect x="64.0344%" y="981" width="0.0951%" height="15" fill="rgb(226,147,8)" fg:x="67327" fg:w="100"/><text x="64.2844%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.02%)</title><rect x="64.1428%" y="933" width="0.0219%" height="15" fill="rgb(226,23,13)" fg:x="67441" fg:w="23"/><text x="64.3928%" y="943.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.02%)</title><rect x="64.1447%" y="917" width="0.0200%" height="15" fill="rgb(240,63,4)" fg:x="67443" fg:w="21"/><text x="64.3947%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.02%)</title><rect x="64.1475%" y="901" width="0.0171%" height="15" fill="rgb(221,1,32)" fg:x="67446" fg:w="18"/><text x="64.3975%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.01%)</title><rect x="64.1542%" y="885" width="0.0105%" height="15" fill="rgb(242,117,10)" fg:x="67453" fg:w="11"/><text x="64.4042%" y="895.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (37 samples, 0.04%)</title><rect x="64.1333%" y="981" width="0.0352%" height="15" fill="rgb(249,172,44)" fg:x="67431" fg:w="37"/><text x="64.3833%" y="991.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (32 samples, 0.03%)</title><rect x="64.1380%" y="965" width="0.0304%" height="15" fill="rgb(244,46,45)" fg:x="67436" fg:w="32"/><text x="64.3880%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (32 samples, 0.03%)</title><rect x="64.1380%" y="949" width="0.0304%" height="15" fill="rgb(206,43,17)" fg:x="67436" fg:w="32"/><text x="64.3880%" y="959.50"></text></g><g><title>_nv009glcore (33 samples, 0.03%)</title><rect x="64.1865%" y="661" width="0.0314%" height="15" fill="rgb(239,218,39)" fg:x="67487" fg:w="33"/><text x="64.4365%" y="671.50"></text></g><g><title>_nv009glcore (31 samples, 0.03%)</title><rect x="64.1884%" y="645" width="0.0295%" height="15" fill="rgb(208,169,54)" fg:x="67489" fg:w="31"/><text x="64.4384%" y="655.50"></text></g><g><title>_nv011glcore (39 samples, 0.04%)</title><rect x="64.1846%" y="741" width="0.0371%" height="15" fill="rgb(247,25,42)" fg:x="67485" fg:w="39"/><text x="64.4346%" y="751.50"></text></g><g><title>_nv041glcore (39 samples, 0.04%)</title><rect x="64.1846%" y="725" width="0.0371%" height="15" fill="rgb(226,23,31)" fg:x="67485" fg:w="39"/><text x="64.4346%" y="735.50"></text></g><g><title>_nv041glcore (38 samples, 0.04%)</title><rect x="64.1856%" y="709" width="0.0361%" height="15" fill="rgb(247,16,28)" fg:x="67486" fg:w="38"/><text x="64.4356%" y="719.50"></text></g><g><title>_nv041glcore (38 samples, 0.04%)</title><rect x="64.1856%" y="693" width="0.0361%" height="15" fill="rgb(231,147,38)" fg:x="67486" fg:w="38"/><text x="64.4356%" y="703.50"></text></g><g><title>_nv041glcore (37 samples, 0.04%)</title><rect x="64.1865%" y="677" width="0.0352%" height="15" fill="rgb(253,81,48)" fg:x="67487" fg:w="37"/><text x="64.4365%" y="687.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (53 samples, 0.05%)</title><rect x="64.1732%" y="965" width="0.0504%" height="15" fill="rgb(249,222,43)" fg:x="67473" fg:w="53"/><text x="64.4232%" y="975.50"></text></g><g><title>ash::device::Device::queue_submit (53 samples, 0.05%)</title><rect x="64.1732%" y="949" width="0.0504%" height="15" fill="rgb(221,3,27)" fg:x="67473" fg:w="53"/><text x="64.4232%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (53 samples, 0.05%)</title><rect x="64.1732%" y="933" width="0.0504%" height="15" fill="rgb(228,180,5)" fg:x="67473" fg:w="53"/><text x="64.4232%" y="943.50"></text></g><g><title>__glx_Main (53 samples, 0.05%)</title><rect x="64.1732%" y="917" width="0.0504%" height="15" fill="rgb(227,131,42)" fg:x="67473" fg:w="53"/><text x="64.4232%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (53 samples, 0.05%)</title><rect x="64.1732%" y="901" width="0.0504%" height="15" fill="rgb(212,3,39)" fg:x="67473" fg:w="53"/><text x="64.4232%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (51 samples, 0.05%)</title><rect x="64.1751%" y="885" width="0.0485%" height="15" fill="rgb(226,45,5)" fg:x="67475" fg:w="51"/><text x="64.4251%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (51 samples, 0.05%)</title><rect x="64.1751%" y="869" width="0.0485%" height="15" fill="rgb(215,167,45)" fg:x="67475" fg:w="51"/><text x="64.4251%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (51 samples, 0.05%)</title><rect x="64.1751%" y="853" width="0.0485%" height="15" fill="rgb(250,218,53)" fg:x="67475" fg:w="51"/><text x="64.4251%" y="863.50"></text></g><g><title>_nv009glcore (51 samples, 0.05%)</title><rect x="64.1751%" y="837" width="0.0485%" height="15" fill="rgb(207,140,0)" fg:x="67475" fg:w="51"/><text x="64.4251%" y="847.50"></text></g><g><title>_nv041glcore (51 samples, 0.05%)</title><rect x="64.1751%" y="821" width="0.0485%" height="15" fill="rgb(238,133,51)" fg:x="67475" fg:w="51"/><text x="64.4251%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (42 samples, 0.04%)</title><rect x="64.1837%" y="805" width="0.0399%" height="15" fill="rgb(218,203,53)" fg:x="67484" fg:w="42"/><text x="64.4337%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (42 samples, 0.04%)</title><rect x="64.1837%" y="789" width="0.0399%" height="15" fill="rgb(226,184,25)" fg:x="67484" fg:w="42"/><text x="64.4337%" y="799.50"></text></g><g><title>_nv009glcore (42 samples, 0.04%)</title><rect x="64.1837%" y="773" width="0.0399%" height="15" fill="rgb(231,121,21)" fg:x="67484" fg:w="42"/><text x="64.4337%" y="783.50"></text></g><g><title>_nv041glcore (42 samples, 0.04%)</title><rect x="64.1837%" y="757" width="0.0399%" height="15" fill="rgb(251,14,34)" fg:x="67484" fg:w="42"/><text x="64.4337%" y="767.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (58 samples, 0.06%)</title><rect x="64.1732%" y="981" width="0.0552%" height="15" fill="rgb(249,193,11)" fg:x="67473" fg:w="58"/><text x="64.4232%" y="991.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (17 samples, 0.02%)</title><rect x="64.2398%" y="981" width="0.0162%" height="15" fill="rgb(220,172,37)" fg:x="67543" fg:w="17"/><text x="64.4898%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="64.3225%" y="469" width="0.0295%" height="15" fill="rgb(231,229,43)" fg:x="67630" fg:w="31"/><text x="64.5725%" y="479.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="64.3225%" y="453" width="0.0295%" height="15" fill="rgb(250,161,5)" fg:x="67630" fg:w="31"/><text x="64.5725%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (31 samples, 0.03%)</title><rect x="64.3225%" y="437" width="0.0295%" height="15" fill="rgb(218,225,18)" fg:x="67630" fg:w="31"/><text x="64.5725%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (31 samples, 0.03%)</title><rect x="64.3225%" y="421" width="0.0295%" height="15" fill="rgb(245,45,42)" fg:x="67630" fg:w="31"/><text x="64.5725%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="64.3225%" y="405" width="0.0295%" height="15" fill="rgb(211,115,1)" fg:x="67630" fg:w="31"/><text x="64.5725%" y="415.50"></text></g><g><title>log::__private_api_log (11 samples, 0.01%)</title><rect x="64.3530%" y="469" width="0.0105%" height="15" fill="rgb(248,133,52)" fg:x="67662" fg:w="11"/><text x="64.6030%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (20 samples, 0.02%)</title><rect x="64.3663%" y="373" width="0.0190%" height="15" fill="rgb(238,100,21)" fg:x="67676" fg:w="20"/><text x="64.6163%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 0.02%)</title><rect x="64.3663%" y="357" width="0.0190%" height="15" fill="rgb(247,144,11)" fg:x="67676" fg:w="20"/><text x="64.6163%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="64.3663%" y="341" width="0.0190%" height="15" fill="rgb(206,164,16)" fg:x="67676" fg:w="20"/><text x="64.6163%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (26 samples, 0.02%)</title><rect x="64.3644%" y="421" width="0.0247%" height="15" fill="rgb(222,34,3)" fg:x="67674" fg:w="26"/><text x="64.6144%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="64.3644%" y="405" width="0.0247%" height="15" fill="rgb(248,82,4)" fg:x="67674" fg:w="26"/><text x="64.6144%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 0.02%)</title><rect x="64.3644%" y="389" width="0.0247%" height="15" fill="rgb(228,81,46)" fg:x="67674" fg:w="26"/><text x="64.6144%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (41 samples, 0.04%)</title><rect x="64.3644%" y="469" width="0.0390%" height="15" fill="rgb(227,67,47)" fg:x="67674" fg:w="41"/><text x="64.6144%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (41 samples, 0.04%)</title><rect x="64.3644%" y="453" width="0.0390%" height="15" fill="rgb(215,93,53)" fg:x="67674" fg:w="41"/><text x="64.6144%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (41 samples, 0.04%)</title><rect x="64.3644%" y="437" width="0.0390%" height="15" fill="rgb(248,194,39)" fg:x="67674" fg:w="41"/><text x="64.6144%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.01%)</title><rect x="64.3891%" y="421" width="0.0143%" height="15" fill="rgb(215,5,19)" fg:x="67700" fg:w="15"/><text x="64.6391%" y="431.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::consume_temp (21 samples, 0.02%)</title><rect x="64.4053%" y="469" width="0.0200%" height="15" fill="rgb(226,215,51)" fg:x="67717" fg:w="21"/><text x="64.6553%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="64.4091%" y="453" width="0.0162%" height="15" fill="rgb(225,56,26)" fg:x="67721" fg:w="17"/><text x="64.6591%" y="463.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="64.4129%" y="437" width="0.0124%" height="15" fill="rgb(222,75,29)" fg:x="67725" fg:w="13"/><text x="64.6629%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="64.4138%" y="421" width="0.0114%" height="15" fill="rgb(236,139,6)" fg:x="67726" fg:w="12"/><text x="64.6638%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (34 samples, 0.03%)</title><rect x="64.4253%" y="421" width="0.0323%" height="15" fill="rgb(223,137,36)" fg:x="67738" fg:w="34"/><text x="64.6753%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="64.4253%" y="405" width="0.0323%" height="15" fill="rgb(226,99,2)" fg:x="67738" fg:w="34"/><text x="64.6753%" y="415.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (13 samples, 0.01%)</title><rect x="64.4576%" y="405" width="0.0124%" height="15" fill="rgb(206,133,23)" fg:x="67772" fg:w="13"/><text x="64.7076%" y="415.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (52 samples, 0.05%)</title><rect x="64.4253%" y="469" width="0.0495%" height="15" fill="rgb(243,173,15)" fg:x="67738" fg:w="52"/><text x="64.6753%" y="479.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (52 samples, 0.05%)</title><rect x="64.4253%" y="453" width="0.0495%" height="15" fill="rgb(228,69,28)" fg:x="67738" fg:w="52"/><text x="64.6753%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (52 samples, 0.05%)</title><rect x="64.4253%" y="437" width="0.0495%" height="15" fill="rgb(212,51,22)" fg:x="67738" fg:w="52"/><text x="64.6753%" y="447.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (18 samples, 0.02%)</title><rect x="64.4576%" y="421" width="0.0171%" height="15" fill="rgb(227,113,0)" fg:x="67772" fg:w="18"/><text x="64.7076%" y="431.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (11 samples, 0.01%)</title><rect x="64.5109%" y="341" width="0.0105%" height="15" fill="rgb(252,84,27)" fg:x="67828" fg:w="11"/><text x="64.7609%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (11 samples, 0.01%)</title><rect x="64.5109%" y="325" width="0.0105%" height="15" fill="rgb(223,145,39)" fg:x="67828" fg:w="11"/><text x="64.7609%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (565 samples, 0.54%)</title><rect x="64.4776%" y="469" width="0.5374%" height="15" fill="rgb(239,219,30)" fg:x="67793" fg:w="565"/><text x="64.7276%" y="479.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (562 samples, 0.53%)</title><rect x="64.4804%" y="453" width="0.5345%" height="15" fill="rgb(224,196,39)" fg:x="67796" fg:w="562"/><text x="64.7304%" y="463.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (553 samples, 0.53%)</title><rect x="64.4890%" y="437" width="0.5260%" height="15" fill="rgb(205,35,43)" fg:x="67805" fg:w="553"/><text x="64.7390%" y="447.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (545 samples, 0.52%)</title><rect x="64.4966%" y="421" width="0.5183%" height="15" fill="rgb(228,201,21)" fg:x="67813" fg:w="545"/><text x="64.7466%" y="431.50"></text></g><g><title>inplace_it::fixed_array::indirect (532 samples, 0.51%)</title><rect x="64.5089%" y="405" width="0.5060%" height="15" fill="rgb(237,118,16)" fg:x="67826" fg:w="532"/><text x="64.7589%" y="415.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (532 samples, 0.51%)</title><rect x="64.5089%" y="389" width="0.5060%" height="15" fill="rgb(241,17,19)" fg:x="67826" fg:w="532"/><text x="64.7589%" y="399.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (532 samples, 0.51%)</title><rect x="64.5089%" y="373" width="0.5060%" height="15" fill="rgb(214,10,25)" fg:x="67826" fg:w="532"/><text x="64.7589%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (531 samples, 0.51%)</title><rect x="64.5099%" y="357" width="0.5050%" height="15" fill="rgb(238,37,29)" fg:x="67827" fg:w="531"/><text x="64.7599%" y="367.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (519 samples, 0.49%)</title><rect x="64.5213%" y="341" width="0.4936%" height="15" fill="rgb(253,83,25)" fg:x="67839" fg:w="519"/><text x="64.7713%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (481 samples, 0.46%)</title><rect x="64.5575%" y="325" width="0.4575%" height="15" fill="rgb(234,192,12)" fg:x="67877" fg:w="481"/><text x="64.8075%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (54 samples, 0.05%)</title><rect x="64.9636%" y="309" width="0.0514%" height="15" fill="rgb(241,216,45)" fg:x="68304" fg:w="54"/><text x="65.2136%" y="319.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.02%)</title><rect x="64.9931%" y="293" width="0.0219%" height="15" fill="rgb(242,22,33)" fg:x="68335" fg:w="23"/><text x="65.2431%" y="303.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::buffer (25 samples, 0.02%)</title><rect x="65.0387%" y="453" width="0.0238%" height="15" fill="rgb(231,105,49)" fg:x="68383" fg:w="25"/><text x="65.2887%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::build (17 samples, 0.02%)</title><rect x="65.0625%" y="453" width="0.0162%" height="15" fill="rgb(218,204,15)" fg:x="68408" fg:w="17"/><text x="65.3125%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::dst_access_mask (14 samples, 0.01%)</title><rect x="65.0787%" y="453" width="0.0133%" height="15" fill="rgb(235,138,41)" fg:x="68425" fg:w="14"/><text x="65.3287%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::size (19 samples, 0.02%)</title><rect x="65.0920%" y="453" width="0.0181%" height="15" fill="rgb(246,0,9)" fg:x="68439" fg:w="19"/><text x="65.3420%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::src_access_mask (17 samples, 0.02%)</title><rect x="65.1100%" y="453" width="0.0162%" height="15" fill="rgb(210,74,4)" fg:x="68458" fg:w="17"/><text x="65.3600%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (916 samples, 0.87%)</title><rect x="64.2816%" y="517" width="0.8712%" height="15" fill="rgb(250,60,41)" fg:x="67587" fg:w="916"/><text x="64.5316%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (916 samples, 0.87%)</title><rect x="64.2816%" y="501" width="0.8712%" height="15" fill="rgb(220,115,12)" fg:x="67587" fg:w="916"/><text x="64.5316%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (914 samples, 0.87%)</title><rect x="64.2835%" y="485" width="0.8693%" height="15" fill="rgb(237,100,13)" fg:x="67589" fg:w="914"/><text x="64.5335%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (145 samples, 0.14%)</title><rect x="65.0149%" y="469" width="0.1379%" height="15" fill="rgb(213,55,26)" fg:x="68358" fg:w="145"/><text x="65.2649%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_buffer_usage_to_barrier (27 samples, 0.03%)</title><rect x="65.1272%" y="453" width="0.0257%" height="15" fill="rgb(216,17,4)" fg:x="68476" fg:w="27"/><text x="65.3772%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="65.1652%" y="405" width="0.0105%" height="15" fill="rgb(220,153,47)" fg:x="68516" fg:w="11"/><text x="65.4152%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="65.1652%" y="389" width="0.0105%" height="15" fill="rgb(215,131,9)" fg:x="68516" fg:w="11"/><text x="65.4152%" y="399.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (13 samples, 0.01%)</title><rect x="65.1643%" y="469" width="0.0124%" height="15" fill="rgb(233,46,42)" fg:x="68515" fg:w="13"/><text x="65.4143%" y="479.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (13 samples, 0.01%)</title><rect x="65.1643%" y="453" width="0.0124%" height="15" fill="rgb(226,86,7)" fg:x="68515" fg:w="13"/><text x="65.4143%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (13 samples, 0.01%)</title><rect x="65.1643%" y="437" width="0.0124%" height="15" fill="rgb(239,226,21)" fg:x="68515" fg:w="13"/><text x="65.4143%" y="447.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (13 samples, 0.01%)</title><rect x="65.1643%" y="421" width="0.0124%" height="15" fill="rgb(244,137,22)" fg:x="68515" fg:w="13"/><text x="65.4143%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_get_mapped_range (27 samples, 0.03%)</title><rect x="65.1528%" y="501" width="0.0257%" height="15" fill="rgb(211,139,35)" fg:x="68503" fg:w="27"/><text x="65.4028%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (27 samples, 0.03%)</title><rect x="65.1528%" y="485" width="0.0257%" height="15" fill="rgb(214,62,50)" fg:x="68503" fg:w="27"/><text x="65.4028%" y="495.50"></text></g><g><title>__GI___libc_malloc (97 samples, 0.09%)</title><rect x="65.1833%" y="421" width="0.0923%" height="15" fill="rgb(212,113,44)" fg:x="68535" fg:w="97"/><text x="65.4333%" y="431.50"></text></g><g><title>_int_malloc (62 samples, 0.06%)</title><rect x="65.2166%" y="405" width="0.0590%" height="15" fill="rgb(226,150,43)" fg:x="68570" fg:w="62"/><text x="65.4666%" y="415.50"></text></g><g><title>unlink_chunk.constprop.0 (15 samples, 0.01%)</title><rect x="65.2613%" y="389" width="0.0143%" height="15" fill="rgb(250,71,37)" fg:x="68617" fg:w="15"/><text x="65.5113%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 samples, 0.10%)</title><rect x="65.1785%" y="437" width="0.0999%" height="15" fill="rgb(219,76,19)" fg:x="68530" fg:w="105"/><text x="65.4285%" y="447.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (133 samples, 0.13%)</title><rect x="65.1528%" y="517" width="0.1265%" height="15" fill="rgb(250,39,11)" fg:x="68503" fg:w="133"/><text x="65.4028%" y="527.50"></text></g><g><title>wgpu::MapContext::add (106 samples, 0.10%)</title><rect x="65.1785%" y="501" width="0.1008%" height="15" fill="rgb(230,64,31)" fg:x="68530" fg:w="106"/><text x="65.4285%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (106 samples, 0.10%)</title><rect x="65.1785%" y="485" width="0.1008%" height="15" fill="rgb(208,222,23)" fg:x="68530" fg:w="106"/><text x="65.4285%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (106 samples, 0.10%)</title><rect x="65.1785%" y="469" width="0.1008%" height="15" fill="rgb(227,125,18)" fg:x="68530" fg:w="106"/><text x="65.4285%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (106 samples, 0.10%)</title><rect x="65.1785%" y="453" width="0.1008%" height="15" fill="rgb(234,210,9)" fg:x="68530" fg:w="106"/><text x="65.4285%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="65.2812%" y="485" width="0.0105%" height="15" fill="rgb(217,127,24)" fg:x="68638" fg:w="11"/><text x="65.5312%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="65.2812%" y="469" width="0.0105%" height="15" fill="rgb(239,141,48)" fg:x="68638" fg:w="11"/><text x="65.5312%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="65.2812%" y="453" width="0.0105%" height="15" fill="rgb(227,109,8)" fg:x="68638" fg:w="11"/><text x="65.5312%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (1,063 samples, 1.01%)</title><rect x="64.2816%" y="629" width="1.0110%" height="15" fill="rgb(235,184,23)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (1,063 samples, 1.01%)</title><rect x="64.2816%" y="613" width="1.0110%" height="15" fill="rgb(227,226,48)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,063 samples, 1.01%)</title><rect x="64.2816%" y="597" width="1.0110%" height="15" fill="rgb(206,150,11)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,063 samples, 1.01%)</title><rect x="64.2816%" y="581" width="1.0110%" height="15" fill="rgb(254,2,33)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="591.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (1,063 samples, 1.01%)</title><rect x="64.2816%" y="565" width="1.0110%" height="15" fill="rgb(243,160,20)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="575.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (1,063 samples, 1.01%)</title><rect x="64.2816%" y="549" width="1.0110%" height="15" fill="rgb(218,208,30)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="559.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1,063 samples, 1.01%)</title><rect x="64.2816%" y="533" width="1.0110%" height="15" fill="rgb(224,120,49)" fg:x="67587" fg:w="1063"/><text x="64.5316%" y="543.50"></text></g><g><title>wgpu::Device::create_buffer (14 samples, 0.01%)</title><rect x="65.2793%" y="517" width="0.0133%" height="15" fill="rgb(246,12,2)" fg:x="68636" fg:w="14"/><text x="65.5293%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (14 samples, 0.01%)</title><rect x="65.2793%" y="501" width="0.0133%" height="15" fill="rgb(236,117,3)" fg:x="68636" fg:w="14"/><text x="65.5293%" y="511.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (20 samples, 0.02%)</title><rect x="65.2927%" y="533" width="0.0190%" height="15" fill="rgb(216,128,52)" fg:x="68650" fg:w="20"/><text x="65.5427%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.01%)</title><rect x="65.2984%" y="517" width="0.0133%" height="15" fill="rgb(246,145,19)" fg:x="68656" fg:w="14"/><text x="65.5484%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="65.2984%" y="501" width="0.0133%" height="15" fill="rgb(222,11,46)" fg:x="68656" fg:w="14"/><text x="65.5484%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="65.3012%" y="485" width="0.0105%" height="15" fill="rgb(245,82,36)" fg:x="68659" fg:w="11"/><text x="65.5512%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (23 samples, 0.02%)</title><rect x="65.2927%" y="629" width="0.0219%" height="15" fill="rgb(250,73,51)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (23 samples, 0.02%)</title><rect x="65.2927%" y="613" width="0.0219%" height="15" fill="rgb(221,189,23)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="65.2927%" y="597" width="0.0219%" height="15" fill="rgb(210,33,7)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 0.02%)</title><rect x="65.2927%" y="581" width="0.0219%" height="15" fill="rgb(210,107,22)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="591.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (23 samples, 0.02%)</title><rect x="65.2927%" y="565" width="0.0219%" height="15" fill="rgb(222,116,37)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="575.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (23 samples, 0.02%)</title><rect x="65.2927%" y="549" width="0.0219%" height="15" fill="rgb(254,17,48)" fg:x="68650" fg:w="23"/><text x="65.5427%" y="559.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,111 samples, 1.06%)</title><rect x="64.2816%" y="693" width="1.0567%" height="15" fill="rgb(224,36,32)" fg:x="67587" fg:w="1111"/><text x="64.5316%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,111 samples, 1.06%)</title><rect x="64.2816%" y="677" width="1.0567%" height="15" fill="rgb(232,90,46)" fg:x="67587" fg:w="1111"/><text x="64.5316%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,111 samples, 1.06%)</title><rect x="64.2816%" y="661" width="1.0567%" height="15" fill="rgb(241,66,40)" fg:x="67587" fg:w="1111"/><text x="64.5316%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,111 samples, 1.06%)</title><rect x="64.2816%" y="645" width="1.0567%" height="15" fill="rgb(249,184,29)" fg:x="67587" fg:w="1111"/><text x="64.5316%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,113 samples, 1.06%)</title><rect x="64.2816%" y="821" width="1.0586%" height="15" fill="rgb(231,181,1)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,113 samples, 1.06%)</title><rect x="64.2816%" y="805" width="1.0586%" height="15" fill="rgb(224,94,2)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,113 samples, 1.06%)</title><rect x="64.2816%" y="789" width="1.0586%" height="15" fill="rgb(229,170,15)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,113 samples, 1.06%)</title><rect x="64.2816%" y="773" width="1.0586%" height="15" fill="rgb(240,127,35)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,113 samples, 1.06%)</title><rect x="64.2816%" y="757" width="1.0586%" height="15" fill="rgb(248,196,34)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="767.50"></text></g><g><title>async_executor::Executor::try_tick (1,113 samples, 1.06%)</title><rect x="64.2816%" y="741" width="1.0586%" height="15" fill="rgb(236,137,7)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,113 samples, 1.06%)</title><rect x="64.2816%" y="725" width="1.0586%" height="15" fill="rgb(235,127,16)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,113 samples, 1.06%)</title><rect x="64.2816%" y="709" width="1.0586%" height="15" fill="rgb(250,192,54)" fg:x="67587" fg:w="1113"/><text x="64.5316%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,133 samples, 1.08%)</title><rect x="64.2816%" y="837" width="1.0776%" height="15" fill="rgb(218,98,20)" fg:x="67587" fg:w="1133"/><text x="64.5316%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (20 samples, 0.02%)</title><rect x="65.3402%" y="821" width="0.0190%" height="15" fill="rgb(230,176,47)" fg:x="68700" fg:w="20"/><text x="65.5902%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (20 samples, 0.02%)</title><rect x="65.3402%" y="805" width="0.0190%" height="15" fill="rgb(244,2,33)" fg:x="68700" fg:w="20"/><text x="65.5902%" y="815.50"></text></g><g><title>bevy_render::renderer::render_system (20 samples, 0.02%)</title><rect x="65.3402%" y="789" width="0.0190%" height="15" fill="rgb(231,100,17)" fg:x="68700" fg:w="20"/><text x="65.5902%" y="799.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (26 samples, 0.02%)</title><rect x="65.3982%" y="709" width="0.0247%" height="15" fill="rgb(245,23,12)" fg:x="68761" fg:w="26"/><text x="65.6482%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (23 samples, 0.02%)</title><rect x="65.4011%" y="693" width="0.0219%" height="15" fill="rgb(249,55,22)" fg:x="68764" fg:w="23"/><text x="65.6511%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (19 samples, 0.02%)</title><rect x="65.4049%" y="677" width="0.0181%" height="15" fill="rgb(207,134,9)" fg:x="68768" fg:w="19"/><text x="65.6549%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (18 samples, 0.02%)</title><rect x="65.4058%" y="661" width="0.0171%" height="15" fill="rgb(218,134,0)" fg:x="68769" fg:w="18"/><text x="65.6558%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (18 samples, 0.02%)</title><rect x="65.4058%" y="645" width="0.0171%" height="15" fill="rgb(213,212,33)" fg:x="68769" fg:w="18"/><text x="65.6558%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="65.4125%" y="629" width="0.0105%" height="15" fill="rgb(252,106,18)" fg:x="68776" fg:w="11"/><text x="65.6625%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="65.4125%" y="613" width="0.0105%" height="15" fill="rgb(208,126,42)" fg:x="68776" fg:w="11"/><text x="65.6625%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (38 samples, 0.04%)</title><rect x="65.3906%" y="725" width="0.0361%" height="15" fill="rgb(246,175,29)" fg:x="68753" fg:w="38"/><text x="65.6406%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (49 samples, 0.05%)</title><rect x="65.3830%" y="757" width="0.0466%" height="15" fill="rgb(215,13,50)" fg:x="68745" fg:w="49"/><text x="65.6330%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (49 samples, 0.05%)</title><rect x="65.3830%" y="741" width="0.0466%" height="15" fill="rgb(216,172,15)" fg:x="68745" fg:w="49"/><text x="65.6330%" y="751.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (70 samples, 0.07%)</title><rect x="65.3716%" y="773" width="0.0666%" height="15" fill="rgb(212,103,13)" fg:x="68733" fg:w="70"/><text x="65.6216%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (79 samples, 0.08%)</title><rect x="65.3640%" y="805" width="0.0751%" height="15" fill="rgb(231,171,36)" fg:x="68725" fg:w="79"/><text x="65.6140%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (79 samples, 0.08%)</title><rect x="65.3640%" y="789" width="0.0751%" height="15" fill="rgb(250,123,20)" fg:x="68725" fg:w="79"/><text x="65.6140%" y="799.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (83 samples, 0.08%)</title><rect x="65.3640%" y="821" width="0.0789%" height="15" fill="rgb(212,53,50)" fg:x="68725" fg:w="83"/><text x="65.6140%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1,229 samples, 1.17%)</title><rect x="64.2816%" y="869" width="1.1689%" height="15" fill="rgb(243,54,12)" fg:x="67587" fg:w="1229"/><text x="64.5316%" y="879.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (1,229 samples, 1.17%)</title><rect x="64.2816%" y="853" width="1.1689%" height="15" fill="rgb(234,101,34)" fg:x="67587" fg:w="1229"/><text x="64.5316%" y="863.50"></text></g><g><title>bevy_render::extract (96 samples, 0.09%)</title><rect x="65.3592%" y="837" width="0.0913%" height="15" fill="rgb(254,67,22)" fg:x="68720" fg:w="96"/><text x="65.6092%" y="847.50"></text></g><g><title>egui::context::ContextImpl::update_fonts_mut (11 samples, 0.01%)</title><rect x="65.4543%" y="533" width="0.0105%" height="15" fill="rgb(250,35,47)" fg:x="68820" fg:w="11"/><text x="65.7043%" y="543.50"></text></g><g><title>epaint::text::font::Font::preload_common_characters (11 samples, 0.01%)</title><rect x="65.4543%" y="517" width="0.0105%" height="15" fill="rgb(226,126,38)" fg:x="68820" fg:w="11"/><text x="65.7043%" y="527.50"></text></g><g><title>bevy_egui::systems::begin_frame (14 samples, 0.01%)</title><rect x="65.4534%" y="581" width="0.0133%" height="15" fill="rgb(216,138,53)" fg:x="68819" fg:w="14"/><text x="65.7034%" y="591.50"></text></g><g><title>egui::context::Context::begin_frame (14 samples, 0.01%)</title><rect x="65.4534%" y="565" width="0.0133%" height="15" fill="rgb(246,199,43)" fg:x="68819" fg:w="14"/><text x="65.7034%" y="575.50"></text></g><g><title>egui::context::ContextImpl::begin_frame_mut (14 samples, 0.01%)</title><rect x="65.4534%" y="549" width="0.0133%" height="15" fill="rgb(232,125,11)" fg:x="68819" fg:w="14"/><text x="65.7034%" y="559.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (14 samples, 0.01%)</title><rect x="65.4667%" y="581" width="0.0133%" height="15" fill="rgb(218,219,45)" fg:x="68833" fg:w="14"/><text x="65.7167%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.02%)</title><rect x="65.5580%" y="501" width="0.0162%" height="15" fill="rgb(216,102,54)" fg:x="68929" fg:w="17"/><text x="65.8080%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60 samples, 0.06%)</title><rect x="65.5266%" y="517" width="0.0571%" height="15" fill="rgb(250,228,7)" fg:x="68896" fg:w="60"/><text x="65.7766%" y="527.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (18 samples, 0.02%)</title><rect x="65.9346%" y="485" width="0.0171%" height="15" fill="rgb(226,125,25)" fg:x="69325" fg:w="18"/><text x="66.1846%" y="495.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (372 samples, 0.35%)</title><rect x="65.9128%" y="501" width="0.3538%" height="15" fill="rgb(224,165,27)" fg:x="69302" fg:w="372"/><text x="66.1628%" y="511.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (331 samples, 0.31%)</title><rect x="65.9518%" y="485" width="0.3148%" height="15" fill="rgb(233,86,3)" fg:x="69343" fg:w="331"/><text x="66.2018%" y="495.50"></text></g><g><title>f64xsubf128 (310 samples, 0.29%)</title><rect x="65.9717%" y="469" width="0.2948%" height="15" fill="rgb(228,116,20)" fg:x="69364" fg:w="310"/><text x="66.2217%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (869 samples, 0.83%)</title><rect x="65.4505%" y="645" width="0.8265%" height="15" fill="rgb(209,192,17)" fg:x="68816" fg:w="869"/><text x="65.7005%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (868 samples, 0.83%)</title><rect x="65.4515%" y="629" width="0.8256%" height="15" fill="rgb(224,88,34)" fg:x="68817" fg:w="868"/><text x="65.7015%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (868 samples, 0.83%)</title><rect x="65.4515%" y="613" width="0.8256%" height="15" fill="rgb(233,38,6)" fg:x="68817" fg:w="868"/><text x="65.7015%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (868 samples, 0.83%)</title><rect x="65.4515%" y="597" width="0.8256%" height="15" fill="rgb(212,59,30)" fg:x="68817" fg:w="868"/><text x="65.7015%" y="607.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (838 samples, 0.80%)</title><rect x="65.4800%" y="581" width="0.7970%" height="15" fill="rgb(213,80,3)" fg:x="68847" fg:w="838"/><text x="65.7300%" y="591.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (838 samples, 0.80%)</title><rect x="65.4800%" y="565" width="0.7970%" height="15" fill="rgb(251,178,7)" fg:x="68847" fg:w="838"/><text x="65.7300%" y="575.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (838 samples, 0.80%)</title><rect x="65.4800%" y="549" width="0.7970%" height="15" fill="rgb(213,154,26)" fg:x="68847" fg:w="838"/><text x="65.7300%" y="559.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (838 samples, 0.80%)</title><rect x="65.4800%" y="533" width="0.7970%" height="15" fill="rgb(238,165,49)" fg:x="68847" fg:w="838"/><text x="65.7300%" y="543.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (725 samples, 0.69%)</title><rect x="65.5875%" y="517" width="0.6895%" height="15" fill="rgb(248,91,46)" fg:x="68960" fg:w="725"/><text x="65.8375%" y="527.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (11 samples, 0.01%)</title><rect x="66.2666%" y="501" width="0.0105%" height="15" fill="rgb(244,21,52)" fg:x="69674" fg:w="11"/><text x="66.5166%" y="511.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (886 samples, 0.84%)</title><rect x="65.4505%" y="709" width="0.8427%" height="15" fill="rgb(247,122,20)" fg:x="68816" fg:w="886"/><text x="65.7005%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (886 samples, 0.84%)</title><rect x="65.4505%" y="693" width="0.8427%" height="15" fill="rgb(218,27,9)" fg:x="68816" fg:w="886"/><text x="65.7005%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (886 samples, 0.84%)</title><rect x="65.4505%" y="677" width="0.8427%" height="15" fill="rgb(246,7,6)" fg:x="68816" fg:w="886"/><text x="65.7005%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (886 samples, 0.84%)</title><rect x="65.4505%" y="661" width="0.8427%" height="15" fill="rgb(227,135,54)" fg:x="68816" fg:w="886"/><text x="65.7005%" y="671.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (890 samples, 0.85%)</title><rect x="65.4505%" y="837" width="0.8465%" height="15" fill="rgb(247,14,11)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (890 samples, 0.85%)</title><rect x="65.4505%" y="821" width="0.8465%" height="15" fill="rgb(206,149,34)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (890 samples, 0.85%)</title><rect x="65.4505%" y="805" width="0.8465%" height="15" fill="rgb(227,228,4)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (890 samples, 0.85%)</title><rect x="65.4505%" y="789" width="0.8465%" height="15" fill="rgb(238,218,28)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (890 samples, 0.85%)</title><rect x="65.4505%" y="773" width="0.8465%" height="15" fill="rgb(252,86,40)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (890 samples, 0.85%)</title><rect x="65.4505%" y="757" width="0.8465%" height="15" fill="rgb(251,225,11)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (890 samples, 0.85%)</title><rect x="65.4505%" y="741" width="0.8465%" height="15" fill="rgb(206,46,49)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (890 samples, 0.85%)</title><rect x="65.4505%" y="725" width="0.8465%" height="15" fill="rgb(245,128,24)" fg:x="68816" fg:w="890"/><text x="65.7005%" y="735.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,124 samples, 2.02%)</title><rect x="64.2816%" y="917" width="2.0201%" height="15" fill="rgb(219,177,34)" fg:x="67587" fg:w="2124"/><text x="64.5316%" y="927.50">w..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,124 samples, 2.02%)</title><rect x="64.2816%" y="901" width="2.0201%" height="15" fill="rgb(218,60,48)" fg:x="67587" fg:w="2124"/><text x="64.5316%" y="911.50">b..</text></g><g><title>bevy_app::app::App::update (2,124 samples, 2.02%)</title><rect x="64.2816%" y="885" width="2.0201%" height="15" fill="rgb(221,11,5)" fg:x="67587" fg:w="2124"/><text x="64.5316%" y="895.50">b..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (895 samples, 0.85%)</title><rect x="65.4505%" y="869" width="0.8512%" height="15" fill="rgb(220,148,13)" fg:x="68816" fg:w="895"/><text x="65.7005%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (895 samples, 0.85%)</title><rect x="65.4505%" y="853" width="0.8512%" height="15" fill="rgb(210,16,3)" fg:x="68816" fg:w="895"/><text x="65.7005%" y="863.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (2,130 samples, 2.03%)</title><rect x="64.2816%" y="981" width="2.0258%" height="15" fill="rgb(236,80,2)" fg:x="67587" fg:w="2130"/><text x="64.5316%" y="991.50">w..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (2,130 samples, 2.03%)</title><rect x="64.2816%" y="965" width="2.0258%" height="15" fill="rgb(239,129,19)" fg:x="67587" fg:w="2130"/><text x="64.5316%" y="975.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,130 samples, 2.03%)</title><rect x="64.2816%" y="949" width="2.0258%" height="15" fill="rgb(220,106,35)" fg:x="67587" fg:w="2130"/><text x="64.5316%" y="959.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,130 samples, 2.03%)</title><rect x="64.2816%" y="933" width="2.0258%" height="15" fill="rgb(252,139,45)" fg:x="67587" fg:w="2130"/><text x="64.5316%" y="943.50">w..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (67 samples, 0.06%)</title><rect x="66.3075%" y="533" width="0.0637%" height="15" fill="rgb(229,8,36)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (67 samples, 0.06%)</title><rect x="66.3075%" y="517" width="0.0637%" height="15" fill="rgb(230,126,33)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (67 samples, 0.06%)</title><rect x="66.3075%" y="501" width="0.0637%" height="15" fill="rgb(239,140,21)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (67 samples, 0.06%)</title><rect x="66.3075%" y="485" width="0.0637%" height="15" fill="rgb(254,104,9)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="495.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (67 samples, 0.06%)</title><rect x="66.3075%" y="469" width="0.0637%" height="15" fill="rgb(239,52,14)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="479.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (67 samples, 0.06%)</title><rect x="66.3075%" y="453" width="0.0637%" height="15" fill="rgb(208,227,44)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="463.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (67 samples, 0.06%)</title><rect x="66.3075%" y="437" width="0.0637%" height="15" fill="rgb(246,18,19)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="447.50"></text></g><g><title>inplace_it::fixed_array::indirect (67 samples, 0.06%)</title><rect x="66.3075%" y="421" width="0.0637%" height="15" fill="rgb(235,228,25)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="431.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (67 samples, 0.06%)</title><rect x="66.3075%" y="405" width="0.0637%" height="15" fill="rgb(240,156,20)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="415.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (67 samples, 0.06%)</title><rect x="66.3075%" y="389" width="0.0637%" height="15" fill="rgb(224,8,20)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (67 samples, 0.06%)</title><rect x="66.3075%" y="373" width="0.0637%" height="15" fill="rgb(214,12,52)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="383.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (67 samples, 0.06%)</title><rect x="66.3075%" y="357" width="0.0637%" height="15" fill="rgb(211,220,47)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="367.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (67 samples, 0.06%)</title><rect x="66.3075%" y="341" width="0.0637%" height="15" fill="rgb(250,173,5)" fg:x="69717" fg:w="67"/><text x="66.5575%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (61 samples, 0.06%)</title><rect x="66.3132%" y="325" width="0.0580%" height="15" fill="rgb(250,125,52)" fg:x="69723" fg:w="61"/><text x="66.5632%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.02%)</title><rect x="66.3560%" y="309" width="0.0152%" height="15" fill="rgb(209,133,18)" fg:x="69768" fg:w="16"/><text x="66.6060%" y="319.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="66.3598%" y="293" width="0.0114%" height="15" fill="rgb(216,173,22)" fg:x="69772" fg:w="12"/><text x="66.6098%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (68 samples, 0.06%)</title><rect x="66.4102%" y="485" width="0.0647%" height="15" fill="rgb(205,3,22)" fg:x="69825" fg:w="68"/><text x="66.6602%" y="495.50"></text></g><g><title>core::intrinsics::write_bytes (4,729 samples, 4.50%)</title><rect x="66.4758%" y="485" width="4.4977%" height="15" fill="rgb(248,22,20)" fg:x="69894" fg:w="4729"/><text x="66.7258%" y="495.50">core:..</text></g><g><title>__memset_avx2_unaligned_erms (4,727 samples, 4.50%)</title><rect x="66.4777%" y="469" width="4.4958%" height="15" fill="rgb(233,6,29)" fg:x="69896" fg:w="4727"/><text x="66.7277%" y="479.50">__mem..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (16 samples, 0.02%)</title><rect x="70.9735%" y="485" width="0.0152%" height="15" fill="rgb(240,22,54)" fg:x="74623" fg:w="16"/><text x="71.2235%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::track::TrackerSet&gt;&gt; (25 samples, 0.02%)</title><rect x="70.9888%" y="485" width="0.0238%" height="15" fill="rgb(231,133,32)" fg:x="74639" fg:w="25"/><text x="71.2388%" y="495.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="70.9888%" y="469" width="0.0238%" height="15" fill="rgb(248,193,4)" fg:x="74639" fg:w="25"/><text x="71.2388%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (25 samples, 0.02%)</title><rect x="70.9888%" y="453" width="0.0238%" height="15" fill="rgb(211,178,46)" fg:x="74639" fg:w="25"/><text x="71.2388%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (25 samples, 0.02%)</title><rect x="70.9888%" y="437" width="0.0238%" height="15" fill="rgb(224,5,42)" fg:x="74639" fg:w="25"/><text x="71.2388%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="70.9888%" y="421" width="0.0238%" height="15" fill="rgb(239,176,25)" fg:x="74639" fg:w="25"/><text x="71.2388%" y="431.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="71.0125%" y="437" width="0.0114%" height="15" fill="rgb(245,187,50)" fg:x="74664" fg:w="12"/><text x="71.2625%" y="447.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (12 samples, 0.01%)</title><rect x="71.0125%" y="421" width="0.0114%" height="15" fill="rgb(248,24,15)" fg:x="74664" fg:w="12"/><text x="71.2625%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="71.0125%" y="405" width="0.0114%" height="15" fill="rgb(205,166,13)" fg:x="74664" fg:w="12"/><text x="71.2625%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="71.0125%" y="389" width="0.0114%" height="15" fill="rgb(208,114,23)" fg:x="74664" fg:w="12"/><text x="71.2625%" y="399.50"></text></g><g><title>__free (13 samples, 0.01%)</title><rect x="71.0239%" y="437" width="0.0124%" height="15" fill="rgb(239,127,18)" fg:x="74676" fg:w="13"/><text x="71.2739%" y="447.50"></text></g><g><title>_int_free (11 samples, 0.01%)</title><rect x="71.0259%" y="421" width="0.0105%" height="15" fill="rgb(219,154,28)" fg:x="74678" fg:w="11"/><text x="71.2759%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::LifeGuard&gt; (29 samples, 0.03%)</title><rect x="71.0125%" y="485" width="0.0276%" height="15" fill="rgb(225,157,23)" fg:x="74664" fg:w="29"/><text x="71.2625%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (29 samples, 0.03%)</title><rect x="71.0125%" y="469" width="0.0276%" height="15" fill="rgb(219,8,6)" fg:x="74664" fg:w="29"/><text x="71.2625%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (29 samples, 0.03%)</title><rect x="71.0125%" y="453" width="0.0276%" height="15" fill="rgb(212,47,6)" fg:x="74664" fg:w="29"/><text x="71.2625%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="71.0401%" y="485" width="0.0438%" height="15" fill="rgb(224,190,4)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (46 samples, 0.04%)</title><rect x="71.0401%" y="469" width="0.0438%" height="15" fill="rgb(239,183,29)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="71.0401%" y="453" width="0.0438%" height="15" fill="rgb(213,57,7)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="463.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (46 samples, 0.04%)</title><rect x="71.0401%" y="437" width="0.0438%" height="15" fill="rgb(216,148,1)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (46 samples, 0.04%)</title><rect x="71.0401%" y="421" width="0.0438%" height="15" fill="rgb(236,182,29)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (46 samples, 0.04%)</title><rect x="71.0401%" y="405" width="0.0438%" height="15" fill="rgb(244,120,48)" fg:x="74693" fg:w="46"/><text x="71.2901%" y="415.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.21%)</title><rect x="71.0877%" y="453" width="0.2111%" height="15" fill="rgb(206,71,34)" fg:x="74743" fg:w="222"/><text x="71.3377%" y="463.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="71.2731%" y="437" width="0.0257%" height="15" fill="rgb(242,32,6)" fg:x="74938" fg:w="27"/><text x="71.5231%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;u64&gt;&gt; (227 samples, 0.22%)</title><rect x="71.0839%" y="485" width="0.2159%" height="15" fill="rgb(241,35,3)" fg:x="74739" fg:w="227"/><text x="71.3339%" y="495.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (227 samples, 0.22%)</title><rect x="71.0839%" y="469" width="0.2159%" height="15" fill="rgb(222,62,19)" fg:x="74739" fg:w="227"/><text x="71.3339%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (19 samples, 0.02%)</title><rect x="71.3007%" y="485" width="0.0181%" height="15" fill="rgb(223,110,41)" fg:x="74967" fg:w="19"/><text x="71.5507%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (19 samples, 0.02%)</title><rect x="71.3007%" y="469" width="0.0181%" height="15" fill="rgb(208,224,4)" fg:x="74967" fg:w="19"/><text x="71.5507%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (19 samples, 0.02%)</title><rect x="71.3007%" y="453" width="0.0181%" height="15" fill="rgb(241,137,19)" fg:x="74967" fg:w="19"/><text x="71.5507%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.02%)</title><rect x="71.3007%" y="437" width="0.0181%" height="15" fill="rgb(244,24,17)" fg:x="74967" fg:w="19"/><text x="71.5507%" y="447.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (12 samples, 0.01%)</title><rect x="71.3292%" y="373" width="0.0114%" height="15" fill="rgb(245,178,49)" fg:x="74997" fg:w="12"/><text x="71.5792%" y="383.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="71.3292%" y="357" width="0.0114%" height="15" fill="rgb(219,160,38)" fg:x="74997" fg:w="12"/><text x="71.5792%" y="367.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="71.3292%" y="341" width="0.0114%" height="15" fill="rgb(228,137,14)" fg:x="74997" fg:w="12"/><text x="71.5792%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="71.3292%" y="325" width="0.0114%" height="15" fill="rgb(237,134,11)" fg:x="74997" fg:w="12"/><text x="71.5792%" y="335.50"></text></g><g><title>tracing_core::field::FieldSet::new (18 samples, 0.02%)</title><rect x="71.3454%" y="325" width="0.0171%" height="15" fill="rgb(211,126,44)" fg:x="75014" fg:w="18"/><text x="71.5954%" y="335.50"></text></g><g><title>tracing_core::metadata::Metadata::new (17 samples, 0.02%)</title><rect x="71.3625%" y="325" width="0.0162%" height="15" fill="rgb(226,171,33)" fg:x="75032" fg:w="17"/><text x="71.6125%" y="335.50"></text></g><g><title>&lt;log::Metadata as tracing_log::AsTrace&gt;::as_trace (46 samples, 0.04%)</title><rect x="71.3407%" y="341" width="0.0438%" height="15" fill="rgb(253,99,13)" fg:x="75009" fg:w="46"/><text x="71.5907%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (13 samples, 0.01%)</title><rect x="71.3844%" y="309" width="0.0124%" height="15" fill="rgb(244,48,7)" fg:x="75055" fg:w="13"/><text x="71.6344%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="71.3844%" y="293" width="0.0124%" height="15" fill="rgb(244,217,54)" fg:x="75055" fg:w="13"/><text x="71.6344%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (26 samples, 0.02%)</title><rect x="71.4129%" y="149" width="0.0247%" height="15" fill="rgb(224,15,18)" fg:x="75085" fg:w="26"/><text x="71.6629%" y="159.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (26 samples, 0.02%)</title><rect x="71.4129%" y="133" width="0.0247%" height="15" fill="rgb(244,99,12)" fg:x="75085" fg:w="26"/><text x="71.6629%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (26 samples, 0.02%)</title><rect x="71.4129%" y="117" width="0.0247%" height="15" fill="rgb(233,226,8)" fg:x="75085" fg:w="26"/><text x="71.6629%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="71.4139%" y="101" width="0.0238%" height="15" fill="rgb(229,211,3)" fg:x="75086" fg:w="25"/><text x="71.6639%" y="111.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.02%)</title><rect x="71.4139%" y="85" width="0.0238%" height="15" fill="rgb(216,140,21)" fg:x="75086" fg:w="25"/><text x="71.6639%" y="95.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.02%)</title><rect x="71.4139%" y="69" width="0.0238%" height="15" fill="rgb(234,122,30)" fg:x="75086" fg:w="25"/><text x="71.6639%" y="79.50"></text></g><g><title>__memcmp_avx2_movbe (25 samples, 0.02%)</title><rect x="71.4139%" y="53" width="0.0238%" height="15" fill="rgb(236,25,46)" fg:x="75086" fg:w="25"/><text x="71.6639%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="71.4082%" y="229" width="0.0304%" height="15" fill="rgb(217,52,54)" fg:x="75080" fg:w="32"/><text x="71.6582%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (32 samples, 0.03%)</title><rect x="71.4082%" y="213" width="0.0304%" height="15" fill="rgb(222,29,26)" fg:x="75080" fg:w="32"/><text x="71.6582%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.03%)</title><rect x="71.4101%" y="197" width="0.0285%" height="15" fill="rgb(216,177,29)" fg:x="75082" fg:w="30"/><text x="71.6601%" y="207.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (30 samples, 0.03%)</title><rect x="71.4101%" y="181" width="0.0285%" height="15" fill="rgb(247,136,51)" fg:x="75082" fg:w="30"/><text x="71.6601%" y="191.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (30 samples, 0.03%)</title><rect x="71.4101%" y="165" width="0.0285%" height="15" fill="rgb(231,47,47)" fg:x="75082" fg:w="30"/><text x="71.6601%" y="175.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (49 samples, 0.05%)</title><rect x="71.3968%" y="277" width="0.0466%" height="15" fill="rgb(211,192,36)" fg:x="75068" fg:w="49"/><text x="71.6468%" y="287.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::enabled (49 samples, 0.05%)</title><rect x="71.3968%" y="261" width="0.0466%" height="15" fill="rgb(229,156,32)" fg:x="75068" fg:w="49"/><text x="71.6468%" y="271.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (38 samples, 0.04%)</title><rect x="71.4072%" y="245" width="0.0361%" height="15" fill="rgb(248,213,20)" fg:x="75079" fg:w="38"/><text x="71.6572%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (68 samples, 0.06%)</title><rect x="71.3968%" y="293" width="0.0647%" height="15" fill="rgb(217,64,7)" fg:x="75068" fg:w="68"/><text x="71.6468%" y="303.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (19 samples, 0.02%)</title><rect x="71.4434%" y="277" width="0.0181%" height="15" fill="rgb(232,142,8)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="71.4434%" y="261" width="0.0181%" height="15" fill="rgb(224,92,44)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="271.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FILTERING::__getit (19 samples, 0.02%)</title><rect x="71.4434%" y="245" width="0.0181%" height="15" fill="rgb(214,169,17)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="71.4434%" y="229" width="0.0181%" height="15" fill="rgb(210,59,37)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="71.4434%" y="213" width="0.0181%" height="15" fill="rgb(214,116,48)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.02%)</title><rect x="71.4434%" y="197" width="0.0181%" height="15" fill="rgb(244,191,6)" fg:x="75117" fg:w="19"/><text x="71.6934%" y="207.50"></text></g><g><title>__tls_get_addr (12 samples, 0.01%)</title><rect x="71.4500%" y="181" width="0.0114%" height="15" fill="rgb(241,50,52)" fg:x="75124" fg:w="12"/><text x="71.7000%" y="191.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (129 samples, 0.12%)</title><rect x="71.3407%" y="357" width="0.1227%" height="15" fill="rgb(236,75,39)" fg:x="75009" fg:w="129"/><text x="71.5907%" y="367.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (83 samples, 0.08%)</title><rect x="71.3844%" y="341" width="0.0789%" height="15" fill="rgb(236,99,0)" fg:x="75055" fg:w="83"/><text x="71.6344%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (83 samples, 0.08%)</title><rect x="71.3844%" y="325" width="0.0789%" height="15" fill="rgb(207,202,15)" fg:x="75055" fg:w="83"/><text x="71.6344%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (70 samples, 0.07%)</title><rect x="71.3968%" y="309" width="0.0666%" height="15" fill="rgb(233,207,14)" fg:x="75068" fg:w="70"/><text x="71.6468%" y="319.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (146 samples, 0.14%)</title><rect x="71.3264%" y="469" width="0.1389%" height="15" fill="rgb(226,27,51)" fg:x="74994" fg:w="146"/><text x="71.5764%" y="479.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (146 samples, 0.14%)</title><rect x="71.3264%" y="453" width="0.1389%" height="15" fill="rgb(206,104,42)" fg:x="74994" fg:w="146"/><text x="71.5764%" y="463.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (143 samples, 0.14%)</title><rect x="71.3292%" y="437" width="0.1360%" height="15" fill="rgb(212,225,4)" fg:x="74997" fg:w="143"/><text x="71.5792%" y="447.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (143 samples, 0.14%)</title><rect x="71.3292%" y="421" width="0.1360%" height="15" fill="rgb(233,96,42)" fg:x="74997" fg:w="143"/><text x="71.5792%" y="431.50"></text></g><g><title>tracing_core::dispatcher::get_default (143 samples, 0.14%)</title><rect x="71.3292%" y="405" width="0.1360%" height="15" fill="rgb(229,21,32)" fg:x="74997" fg:w="143"/><text x="71.5792%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (143 samples, 0.14%)</title><rect x="71.3292%" y="389" width="0.1360%" height="15" fill="rgb(226,216,24)" fg:x="74997" fg:w="143"/><text x="71.5792%" y="399.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (131 samples, 0.12%)</title><rect x="71.3407%" y="373" width="0.1246%" height="15" fill="rgb(221,163,17)" fg:x="75009" fg:w="131"/><text x="71.5907%" y="383.50"></text></g><g><title>log::__private_api_log (157 samples, 0.15%)</title><rect x="71.3188%" y="485" width="0.1493%" height="15" fill="rgb(216,216,42)" fg:x="74986" fg:w="157"/><text x="71.5688%" y="495.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (21 samples, 0.02%)</title><rect x="71.4710%" y="485" width="0.0200%" height="15" fill="rgb(240,118,7)" fg:x="75146" fg:w="21"/><text x="71.7210%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="71.4710%" y="469" width="0.0200%" height="15" fill="rgb(221,67,37)" fg:x="75146" fg:w="21"/><text x="71.7210%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="71.4710%" y="453" width="0.0200%" height="15" fill="rgb(241,32,44)" fg:x="75146" fg:w="21"/><text x="71.7210%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="71.4719%" y="437" width="0.0190%" height="15" fill="rgb(235,204,43)" fg:x="75147" fg:w="20"/><text x="71.7219%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="71.4719%" y="421" width="0.0190%" height="15" fill="rgb(213,116,10)" fg:x="75147" fg:w="20"/><text x="71.7219%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (21 samples, 0.02%)</title><rect x="71.5708%" y="469" width="0.0200%" height="15" fill="rgb(239,15,48)" fg:x="75251" fg:w="21"/><text x="71.8208%" y="479.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (26 samples, 0.02%)</title><rect x="71.5908%" y="469" width="0.0247%" height="15" fill="rgb(207,123,36)" fg:x="75272" fg:w="26"/><text x="71.8408%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="71.5908%" y="453" width="0.0247%" height="15" fill="rgb(209,103,30)" fg:x="75272" fg:w="26"/><text x="71.8408%" y="463.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="71.5927%" y="437" width="0.0228%" height="15" fill="rgb(238,100,19)" fg:x="75274" fg:w="24"/><text x="71.8427%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="71.5927%" y="421" width="0.0228%" height="15" fill="rgb(244,30,14)" fg:x="75274" fg:w="24"/><text x="71.8427%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="71.5927%" y="405" width="0.0228%" height="15" fill="rgb(249,174,6)" fg:x="75274" fg:w="24"/><text x="71.8427%" y="415.50"></text></g><g><title>__GI___libc_malloc (102 samples, 0.10%)</title><rect x="71.6174%" y="373" width="0.0970%" height="15" fill="rgb(235,213,41)" fg:x="75300" fg:w="102"/><text x="71.8674%" y="383.50"></text></g><g><title>_int_malloc (51 samples, 0.05%)</title><rect x="71.6659%" y="357" width="0.0485%" height="15" fill="rgb(213,118,6)" fg:x="75351" fg:w="51"/><text x="71.9159%" y="367.50"></text></g><g><title>wgpu_core::LifeGuard::new (116 samples, 0.11%)</title><rect x="71.6155%" y="469" width="0.1103%" height="15" fill="rgb(235,44,51)" fg:x="75298" fg:w="116"/><text x="71.8655%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (115 samples, 0.11%)</title><rect x="71.6165%" y="453" width="0.1094%" height="15" fill="rgb(217,9,53)" fg:x="75299" fg:w="115"/><text x="71.8665%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (115 samples, 0.11%)</title><rect x="71.6165%" y="437" width="0.1094%" height="15" fill="rgb(237,172,34)" fg:x="75299" fg:w="115"/><text x="71.8665%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.11%)</title><rect x="71.6165%" y="421" width="0.1094%" height="15" fill="rgb(206,206,11)" fg:x="75299" fg:w="115"/><text x="71.8665%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.11%)</title><rect x="71.6165%" y="405" width="0.1094%" height="15" fill="rgb(214,149,29)" fg:x="75299" fg:w="115"/><text x="71.8665%" y="415.50"></text></g><g><title>alloc::alloc::alloc (115 samples, 0.11%)</title><rect x="71.6165%" y="389" width="0.1094%" height="15" fill="rgb(208,123,3)" fg:x="75299" fg:w="115"/><text x="71.8665%" y="399.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::new (31 samples, 0.03%)</title><rect x="71.7278%" y="469" width="0.0295%" height="15" fill="rgb(229,126,4)" fg:x="75416" fg:w="31"/><text x="71.9778%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="71.7468%" y="453" width="0.0105%" height="15" fill="rgb(222,92,36)" fg:x="75436" fg:w="11"/><text x="71.9968%" y="463.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="71.7468%" y="437" width="0.0105%" height="15" fill="rgb(216,39,41)" fg:x="75436" fg:w="11"/><text x="71.9968%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="71.8057%" y="453" width="0.0133%" height="15" fill="rgb(253,127,28)" fg:x="75498" fg:w="14"/><text x="72.0557%" y="463.50"></text></g><g><title>_nv011glcore (32 samples, 0.03%)</title><rect x="71.8238%" y="405" width="0.0304%" height="15" fill="rgb(249,152,51)" fg:x="75517" fg:w="32"/><text x="72.0738%" y="415.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="71.8257%" y="389" width="0.0285%" height="15" fill="rgb(209,123,42)" fg:x="75519" fg:w="30"/><text x="72.0757%" y="399.50"></text></g><g><title>syscall (63 samples, 0.06%)</title><rect x="71.9579%" y="373" width="0.0599%" height="15" fill="rgb(241,118,22)" fg:x="75658" fg:w="63"/><text x="72.2079%" y="383.50"></text></g><g><title>glXCreateGLXPbufferSGIX (174 samples, 0.17%)</title><rect x="71.8543%" y="405" width="0.1655%" height="15" fill="rgb(208,25,7)" fg:x="75549" fg:w="174"/><text x="72.1043%" y="415.50"></text></g><g><title>_nv011glcore (83 samples, 0.08%)</title><rect x="71.9408%" y="389" width="0.0789%" height="15" fill="rgb(243,144,39)" fg:x="75640" fg:w="83"/><text x="72.1908%" y="399.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (220 samples, 0.21%)</title><rect x="71.8191%" y="453" width="0.2092%" height="15" fill="rgb(250,50,5)" fg:x="75512" fg:w="220"/><text x="72.0691%" y="463.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (219 samples, 0.21%)</title><rect x="71.8200%" y="437" width="0.2083%" height="15" fill="rgb(207,67,11)" fg:x="75513" fg:w="219"/><text x="72.0700%" y="447.50"></text></g><g><title>__glx_Main (219 samples, 0.21%)</title><rect x="71.8200%" y="421" width="0.2083%" height="15" fill="rgb(245,204,40)" fg:x="75513" fg:w="219"/><text x="72.0700%" y="431.50"></text></g><g><title>ash::device::Device::create_buffer (172 samples, 0.16%)</title><rect x="72.0283%" y="453" width="0.1636%" height="15" fill="rgb(238,228,24)" fg:x="75732" fg:w="172"/><text x="72.2783%" y="463.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (162 samples, 0.15%)</title><rect x="72.0378%" y="437" width="0.1541%" height="15" fill="rgb(217,116,22)" fg:x="75742" fg:w="162"/><text x="72.2878%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (162 samples, 0.15%)</title><rect x="72.0378%" y="421" width="0.1541%" height="15" fill="rgb(234,98,12)" fg:x="75742" fg:w="162"/><text x="72.2878%" y="431.50"></text></g><g><title>_nv011glcore (91 samples, 0.09%)</title><rect x="72.1053%" y="405" width="0.0865%" height="15" fill="rgb(242,170,50)" fg:x="75813" fg:w="91"/><text x="72.3553%" y="415.50"></text></g><g><title>__GI___libc_malloc (90 samples, 0.09%)</title><rect x="72.1063%" y="389" width="0.0856%" height="15" fill="rgb(235,7,5)" fg:x="75814" fg:w="90"/><text x="72.3563%" y="399.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::get_buffer_memory_requirements (15 samples, 0.01%)</title><rect x="72.1919%" y="437" width="0.0143%" height="15" fill="rgb(241,114,28)" fg:x="75904" fg:w="15"/><text x="72.4419%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="72.1938%" y="421" width="0.0124%" height="15" fill="rgb(246,112,42)" fg:x="75906" fg:w="13"/><text x="72.4438%" y="431.50"></text></g><g><title>ash::device::Device::get_buffer_memory_requirements (16 samples, 0.02%)</title><rect x="72.1919%" y="453" width="0.0152%" height="15" fill="rgb(248,228,14)" fg:x="75904" fg:w="16"/><text x="72.4419%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::sharing_mode (20 samples, 0.02%)</title><rect x="72.2100%" y="453" width="0.0190%" height="15" fill="rgb(208,133,18)" fg:x="75923" fg:w="20"/><text x="72.4600%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::size (27 samples, 0.03%)</title><rect x="72.2290%" y="453" width="0.0257%" height="15" fill="rgb(207,35,49)" fg:x="75943" fg:w="27"/><text x="72.4790%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::usage (17 samples, 0.02%)</title><rect x="72.2547%" y="453" width="0.0162%" height="15" fill="rgb(205,68,36)" fg:x="75970" fg:w="17"/><text x="72.5047%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::allocator::GpuAllocator&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (28 samples, 0.03%)</title><rect x="72.2708%" y="453" width="0.0266%" height="15" fill="rgb(245,62,40)" fg:x="75987" fg:w="28"/><text x="72.5208%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="72.2708%" y="437" width="0.0266%" height="15" fill="rgb(228,27,24)" fg:x="75987" fg:w="28"/><text x="72.5208%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (28 samples, 0.03%)</title><rect x="72.2708%" y="421" width="0.0266%" height="15" fill="rgb(253,19,12)" fg:x="75987" fg:w="28"/><text x="72.5208%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (28 samples, 0.03%)</title><rect x="72.2708%" y="405" width="0.0266%" height="15" fill="rgb(232,28,20)" fg:x="75987" fg:w="28"/><text x="72.5208%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="72.2708%" y="389" width="0.0266%" height="15" fill="rgb(218,35,51)" fg:x="75987" fg:w="28"/><text x="72.5208%" y="399.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (31 samples, 0.03%)</title><rect x="72.3013%" y="453" width="0.0295%" height="15" fill="rgb(212,90,40)" fg:x="76019" fg:w="31"/><text x="72.5513%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31 samples, 0.03%)</title><rect x="72.3013%" y="437" width="0.0295%" height="15" fill="rgb(220,172,12)" fg:x="76019" fg:w="31"/><text x="72.5513%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (31 samples, 0.03%)</title><rect x="72.3013%" y="421" width="0.0295%" height="15" fill="rgb(226,159,20)" fg:x="76019" fg:w="31"/><text x="72.5513%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="72.3013%" y="405" width="0.0295%" height="15" fill="rgb(234,205,16)" fg:x="76019" fg:w="31"/><text x="72.5513%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (893 samples, 0.85%)</title><rect x="71.4928%" y="485" width="0.8493%" height="15" fill="rgb(207,9,39)" fg:x="75169" fg:w="893"/><text x="71.7428%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (615 samples, 0.58%)</title><rect x="71.7572%" y="469" width="0.5849%" height="15" fill="rgb(249,143,15)" fg:x="75447" fg:w="615"/><text x="72.0072%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="72.3431%" y="469" width="0.0124%" height="15" fill="rgb(253,133,29)" fg:x="76063" fg:w="13"/><text x="72.5931%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="72.3555%" y="469" width="0.0162%" height="15" fill="rgb(221,187,0)" fg:x="76076" fg:w="17"/><text x="72.6055%" y="479.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="72.3555%" y="453" width="0.0162%" height="15" fill="rgb(205,204,26)" fg:x="76076" fg:w="17"/><text x="72.6055%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (17 samples, 0.02%)</title><rect x="72.3555%" y="437" width="0.0162%" height="15" fill="rgb(224,68,54)" fg:x="76076" fg:w="17"/><text x="72.6055%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="72.3555%" y="421" width="0.0162%" height="15" fill="rgb(209,67,4)" fg:x="76076" fg:w="17"/><text x="72.6055%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="72.3555%" y="405" width="0.0162%" height="15" fill="rgb(228,229,18)" fg:x="76076" fg:w="17"/><text x="72.6055%" y="415.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (21 samples, 0.02%)</title><rect x="72.3716%" y="469" width="0.0200%" height="15" fill="rgb(231,89,13)" fg:x="76093" fg:w="21"/><text x="72.6216%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (21 samples, 0.02%)</title><rect x="72.3716%" y="453" width="0.0200%" height="15" fill="rgb(210,182,18)" fg:x="76093" fg:w="21"/><text x="72.6216%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.02%)</title><rect x="72.3716%" y="437" width="0.0200%" height="15" fill="rgb(240,105,2)" fg:x="76093" fg:w="21"/><text x="72.6216%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="72.3716%" y="421" width="0.0200%" height="15" fill="rgb(207,170,50)" fg:x="76093" fg:w="21"/><text x="72.6216%" y="431.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (224 samples, 0.21%)</title><rect x="72.3422%" y="485" width="0.2130%" height="15" fill="rgb(232,133,24)" fg:x="76062" fg:w="224"/><text x="72.5922%" y="495.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (172 samples, 0.16%)</title><rect x="72.3916%" y="469" width="0.1636%" height="15" fill="rgb(235,166,27)" fg:x="76114" fg:w="172"/><text x="72.6416%" y="479.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (166 samples, 0.16%)</title><rect x="72.3973%" y="453" width="0.1579%" height="15" fill="rgb(209,19,13)" fg:x="76120" fg:w="166"/><text x="72.6473%" y="463.50"></text></g><g><title>core::mem::replace (165 samples, 0.16%)</title><rect x="72.3983%" y="437" width="0.1569%" height="15" fill="rgb(226,79,39)" fg:x="76121" fg:w="165"/><text x="72.6483%" y="447.50"></text></g><g><title>core::ptr::read (155 samples, 0.15%)</title><rect x="72.4078%" y="421" width="0.1474%" height="15" fill="rgb(222,163,10)" fg:x="76131" fg:w="155"/><text x="72.6578%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (155 samples, 0.15%)</title><rect x="72.4078%" y="405" width="0.1474%" height="15" fill="rgb(214,44,19)" fg:x="76131" fg:w="155"/><text x="72.6578%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (17 samples, 0.02%)</title><rect x="72.5571%" y="453" width="0.0162%" height="15" fill="rgb(210,217,13)" fg:x="76288" fg:w="17"/><text x="72.8071%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="72.5571%" y="437" width="0.0162%" height="15" fill="rgb(237,61,54)" fg:x="76288" fg:w="17"/><text x="72.8071%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (17 samples, 0.02%)</title><rect x="72.5571%" y="421" width="0.0162%" height="15" fill="rgb(226,184,24)" fg:x="76288" fg:w="17"/><text x="72.8071%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (17 samples, 0.02%)</title><rect x="72.5571%" y="405" width="0.0162%" height="15" fill="rgb(223,226,4)" fg:x="76288" fg:w="17"/><text x="72.8071%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="72.5571%" y="389" width="0.0162%" height="15" fill="rgb(210,26,41)" fg:x="76288" fg:w="17"/><text x="72.8071%" y="399.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.02%)</title><rect x="72.5733%" y="453" width="0.0152%" height="15" fill="rgb(220,221,6)" fg:x="76305" fg:w="16"/><text x="72.8233%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.02%)</title><rect x="72.5733%" y="437" width="0.0152%" height="15" fill="rgb(225,89,49)" fg:x="76305" fg:w="16"/><text x="72.8233%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (16 samples, 0.02%)</title><rect x="72.5733%" y="421" width="0.0152%" height="15" fill="rgb(218,70,45)" fg:x="76305" fg:w="16"/><text x="72.8233%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.02%)</title><rect x="72.5733%" y="405" width="0.0152%" height="15" fill="rgb(238,166,21)" fg:x="76305" fg:w="16"/><text x="72.8233%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (87 samples, 0.08%)</title><rect x="72.5552%" y="469" width="0.0827%" height="15" fill="rgb(224,141,44)" fg:x="76286" fg:w="87"/><text x="72.8052%" y="479.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (52 samples, 0.05%)</title><rect x="72.5885%" y="453" width="0.0495%" height="15" fill="rgb(230,12,49)" fg:x="76321" fg:w="52"/><text x="72.8385%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23 samples, 0.02%)</title><rect x="72.6161%" y="437" width="0.0219%" height="15" fill="rgb(212,174,12)" fg:x="76350" fg:w="23"/><text x="72.8661%" y="447.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (88 samples, 0.08%)</title><rect x="72.5552%" y="485" width="0.0837%" height="15" fill="rgb(246,67,9)" fg:x="76286" fg:w="88"/><text x="72.8052%" y="495.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (12 samples, 0.01%)</title><rect x="72.6389%" y="485" width="0.0114%" height="15" fill="rgb(239,35,23)" fg:x="76374" fg:w="12"/><text x="72.8889%" y="495.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (12 samples, 0.01%)</title><rect x="72.6389%" y="469" width="0.0114%" height="15" fill="rgb(211,167,0)" fg:x="76374" fg:w="12"/><text x="72.8889%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (12 samples, 0.01%)</title><rect x="72.6389%" y="453" width="0.0114%" height="15" fill="rgb(225,119,45)" fg:x="76374" fg:w="12"/><text x="72.8889%" y="463.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::drain (18 samples, 0.02%)</title><rect x="72.6522%" y="485" width="0.0171%" height="15" fill="rgb(210,162,6)" fg:x="76388" fg:w="18"/><text x="72.9022%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (21 samples, 0.02%)</title><rect x="72.6722%" y="405" width="0.0200%" height="15" fill="rgb(208,118,35)" fg:x="76409" fg:w="21"/><text x="72.9222%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (21 samples, 0.02%)</title><rect x="72.6722%" y="389" width="0.0200%" height="15" fill="rgb(239,4,53)" fg:x="76409" fg:w="21"/><text x="72.9222%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="72.6722%" y="373" width="0.0200%" height="15" fill="rgb(213,130,21)" fg:x="76409" fg:w="21"/><text x="72.9222%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (27 samples, 0.03%)</title><rect x="72.6703%" y="469" width="0.0257%" height="15" fill="rgb(235,148,0)" fg:x="76407" fg:w="27"/><text x="72.9203%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (27 samples, 0.03%)</title><rect x="72.6703%" y="453" width="0.0257%" height="15" fill="rgb(244,224,18)" fg:x="76407" fg:w="27"/><text x="72.9203%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.02%)</title><rect x="72.6722%" y="437" width="0.0238%" height="15" fill="rgb(211,214,4)" fg:x="76409" fg:w="25"/><text x="72.9222%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.02%)</title><rect x="72.6722%" y="421" width="0.0238%" height="15" fill="rgb(206,119,25)" fg:x="76409" fg:w="25"/><text x="72.9222%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="72.7007%" y="421" width="0.0162%" height="15" fill="rgb(243,93,47)" fg:x="76439" fg:w="17"/><text x="72.9507%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.02%)</title><rect x="72.7007%" y="405" width="0.0162%" height="15" fill="rgb(224,194,6)" fg:x="76439" fg:w="17"/><text x="72.9507%" y="415.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="72.7007%" y="389" width="0.0162%" height="15" fill="rgb(243,229,6)" fg:x="76439" fg:w="17"/><text x="72.9507%" y="399.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::init (55 samples, 0.05%)</title><rect x="72.6693%" y="485" width="0.0523%" height="15" fill="rgb(207,23,50)" fg:x="76406" fg:w="55"/><text x="72.9193%" y="495.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (27 samples, 0.03%)</title><rect x="72.6960%" y="469" width="0.0257%" height="15" fill="rgb(253,192,32)" fg:x="76434" fg:w="27"/><text x="72.9460%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (27 samples, 0.03%)</title><rect x="72.6960%" y="453" width="0.0257%" height="15" fill="rgb(213,21,6)" fg:x="76434" fg:w="27"/><text x="72.9460%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (25 samples, 0.02%)</title><rect x="72.6979%" y="437" width="0.0238%" height="15" fill="rgb(243,151,13)" fg:x="76436" fg:w="25"/><text x="72.9479%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::block::MemoryBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="72.7321%" y="469" width="0.0114%" height="15" fill="rgb(233,165,41)" fg:x="76472" fg:w="12"/><text x="72.9821%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="72.7321%" y="453" width="0.0114%" height="15" fill="rgb(246,176,45)" fg:x="76472" fg:w="12"/><text x="72.9821%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (12 samples, 0.01%)</title><rect x="72.7321%" y="437" width="0.0114%" height="15" fill="rgb(217,170,52)" fg:x="76472" fg:w="12"/><text x="72.9821%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (12 samples, 0.01%)</title><rect x="72.7321%" y="421" width="0.0114%" height="15" fill="rgb(214,203,54)" fg:x="76472" fg:w="12"/><text x="72.9821%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="72.7321%" y="405" width="0.0114%" height="15" fill="rgb(248,215,49)" fg:x="76472" fg:w="12"/><text x="72.9821%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.01%)</title><rect x="72.7473%" y="469" width="0.0114%" height="15" fill="rgb(208,46,10)" fg:x="76488" fg:w="12"/><text x="72.9973%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.01%)</title><rect x="72.7473%" y="453" width="0.0114%" height="15" fill="rgb(254,5,31)" fg:x="76488" fg:w="12"/><text x="72.9973%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.01%)</title><rect x="72.7473%" y="437" width="0.0114%" height="15" fill="rgb(222,104,33)" fg:x="76488" fg:w="12"/><text x="72.9973%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="72.7473%" y="421" width="0.0114%" height="15" fill="rgb(248,49,16)" fg:x="76488" fg:w="12"/><text x="72.9973%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (6,785 samples, 6.45%)</title><rect x="66.3075%" y="645" width="6.4532%" height="15" fill="rgb(232,198,41)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="655.50">&lt;Func as..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (6,785 samples, 6.45%)</title><rect x="66.3075%" y="629" width="6.4532%" height="15" fill="rgb(214,125,3)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="639.50">&lt;Func as..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6,785 samples, 6.45%)</title><rect x="66.3075%" y="613" width="6.4532%" height="15" fill="rgb(229,220,28)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="623.50">core::op..</text></g><g><title>core::ops::function::FnMut::call_mut (6,785 samples, 6.45%)</title><rect x="66.3075%" y="597" width="6.4532%" height="15" fill="rgb(222,64,37)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="607.50">core::op..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (6,785 samples, 6.45%)</title><rect x="66.3075%" y="581" width="6.4532%" height="15" fill="rgb(249,184,13)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="591.50">stellar_..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (6,785 samples, 6.45%)</title><rect x="66.3075%" y="565" width="6.4532%" height="15" fill="rgb(252,176,6)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="575.50">bevy_ren..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (6,785 samples, 6.45%)</title><rect x="66.3075%" y="549" width="6.4532%" height="15" fill="rgb(228,153,7)" fg:x="69717" fg:w="6785"/><text x="66.5575%" y="559.50">&lt;wgpu::D..</text></g><g><title>wgpu::Device::create_buffer (6,718 samples, 6.39%)</title><rect x="66.3712%" y="533" width="6.3895%" height="15" fill="rgb(242,193,5)" fg:x="69784" fg:w="6718"/><text x="66.6212%" y="543.50">wgpu::De..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (6,718 samples, 6.39%)</title><rect x="66.3712%" y="517" width="6.3895%" height="15" fill="rgb(232,140,9)" fg:x="69784" fg:w="6718"/><text x="66.6212%" y="527.50">&lt;wgpu::b..</text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (6,718 samples, 6.39%)</title><rect x="66.3712%" y="501" width="6.3895%" height="15" fill="rgb(213,222,16)" fg:x="69784" fg:w="6718"/><text x="66.6212%" y="511.50">wgpu_cor..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::map_buffer (38 samples, 0.04%)</title><rect x="72.7245%" y="485" width="0.0361%" height="15" fill="rgb(222,75,50)" fg:x="76464" fg:w="38"/><text x="72.9745%" y="495.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,793 samples, 6.46%)</title><rect x="66.3075%" y="709" width="6.4608%" height="15" fill="rgb(205,180,2)" fg:x="69717" fg:w="6793"/><text x="66.5575%" y="719.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,793 samples, 6.46%)</title><rect x="66.3075%" y="693" width="6.4608%" height="15" fill="rgb(216,34,7)" fg:x="69717" fg:w="6793"/><text x="66.5575%" y="703.50">&lt;core::f..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (6,793 samples, 6.46%)</title><rect x="66.3075%" y="677" width="6.4608%" height="15" fill="rgb(253,16,32)" fg:x="69717" fg:w="6793"/><text x="66.5575%" y="687.50">bevy_ecs..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6,793 samples, 6.46%)</title><rect x="66.3075%" y="661" width="6.4608%" height="15" fill="rgb(208,97,28)" fg:x="69717" fg:w="6793"/><text x="66.5575%" y="671.50">&lt;bevy_ec..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (6,803 samples, 6.47%)</title><rect x="66.3075%" y="837" width="6.4703%" height="15" fill="rgb(225,92,11)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="847.50">&lt;bevy_ec..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (6,803 samples, 6.47%)</title><rect x="66.3075%" y="821" width="6.4703%" height="15" fill="rgb(243,38,12)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="831.50">bevy_tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,803 samples, 6.47%)</title><rect x="66.3075%" y="805" width="6.4703%" height="15" fill="rgb(208,139,16)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="815.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,803 samples, 6.47%)</title><rect x="66.3075%" y="789" width="6.4703%" height="15" fill="rgb(227,24,9)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="799.50">std::thr..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (6,803 samples, 6.47%)</title><rect x="66.3075%" y="773" width="6.4703%" height="15" fill="rgb(206,62,11)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="783.50">bevy_tas..</text></g><g><title>async_executor::Executor::try_tick (6,803 samples, 6.47%)</title><rect x="66.3075%" y="757" width="6.4703%" height="15" fill="rgb(228,134,27)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="767.50">async_ex..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,803 samples, 6.47%)</title><rect x="66.3075%" y="741" width="6.4703%" height="15" fill="rgb(205,55,33)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="751.50">async_ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,803 samples, 6.47%)</title><rect x="66.3075%" y="725" width="6.4703%" height="15" fill="rgb(243,75,43)" fg:x="69717" fg:w="6803"/><text x="66.5575%" y="735.50">&lt;core::f..</text></g><g><title>epaint::tessellator::Tessellator::tessellate_path (12 samples, 0.01%)</title><rect x="72.7825%" y="677" width="0.0114%" height="15" fill="rgb(223,27,42)" fg:x="76525" fg:w="12"/><text x="73.0325%" y="687.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (11 samples, 0.01%)</title><rect x="72.7949%" y="677" width="0.0105%" height="15" fill="rgb(232,189,33)" fg:x="76538" fg:w="11"/><text x="73.0449%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="72.8063%" y="661" width="0.0133%" height="15" fill="rgb(210,9,39)" fg:x="76550" fg:w="14"/><text x="73.0563%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.01%)</title><rect x="72.8063%" y="645" width="0.0133%" height="15" fill="rgb(242,85,26)" fg:x="76550" fg:w="14"/><text x="73.0563%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.01%)</title><rect x="72.8063%" y="629" width="0.0133%" height="15" fill="rgb(248,44,4)" fg:x="76550" fg:w="14"/><text x="73.0563%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="72.8063%" y="613" width="0.0133%" height="15" fill="rgb(250,96,46)" fg:x="76550" fg:w="14"/><text x="73.0563%" y="623.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (44 samples, 0.04%)</title><rect x="72.7806%" y="693" width="0.0418%" height="15" fill="rgb(229,116,26)" fg:x="76523" fg:w="44"/><text x="73.0306%" y="703.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_text (18 samples, 0.02%)</title><rect x="72.8053%" y="677" width="0.0171%" height="15" fill="rgb(246,94,34)" fg:x="76549" fg:w="18"/><text x="73.0553%" y="687.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (48 samples, 0.05%)</title><rect x="72.7778%" y="789" width="0.0457%" height="15" fill="rgb(251,73,21)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="799.50"></text></g><g><title>bevy_render::renderer::render_system::{{closure}} (48 samples, 0.05%)</title><rect x="72.7778%" y="773" width="0.0457%" height="15" fill="rgb(254,121,25)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="783.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (48 samples, 0.05%)</title><rect x="72.7778%" y="757" width="0.0457%" height="15" fill="rgb(215,161,49)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="767.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (48 samples, 0.05%)</title><rect x="72.7778%" y="741" width="0.0457%" height="15" fill="rgb(221,43,13)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="751.50"></text></g><g><title>egui::context::Context::tessellate (48 samples, 0.05%)</title><rect x="72.7778%" y="725" width="0.0457%" height="15" fill="rgb(249,5,37)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="735.50"></text></g><g><title>epaint::tessellator::tessellate_shapes (48 samples, 0.05%)</title><rect x="72.7778%" y="709" width="0.0457%" height="15" fill="rgb(226,25,44)" fg:x="76520" fg:w="48"/><text x="73.0278%" y="719.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::run (14 samples, 0.01%)</title><rect x="72.8244%" y="757" width="0.0133%" height="15" fill="rgb(238,189,16)" fg:x="76569" fg:w="14"/><text x="73.0744%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (14 samples, 0.01%)</title><rect x="72.8244%" y="741" width="0.0133%" height="15" fill="rgb(251,186,8)" fg:x="76569" fg:w="14"/><text x="73.0744%" y="751.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (14 samples, 0.01%)</title><rect x="72.8244%" y="725" width="0.0133%" height="15" fill="rgb(254,34,31)" fg:x="76569" fg:w="14"/><text x="73.0744%" y="735.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (18 samples, 0.02%)</title><rect x="72.8234%" y="789" width="0.0171%" height="15" fill="rgb(225,215,27)" fg:x="76568" fg:w="18"/><text x="73.0734%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (18 samples, 0.02%)</title><rect x="72.8234%" y="773" width="0.0171%" height="15" fill="rgb(221,192,48)" fg:x="76568" fg:w="18"/><text x="73.0734%" y="783.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (15 samples, 0.01%)</title><rect x="72.8405%" y="741" width="0.0143%" height="15" fill="rgb(219,137,20)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="751.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (15 samples, 0.01%)</title><rect x="72.8405%" y="725" width="0.0143%" height="15" fill="rgb(219,84,11)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="735.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (15 samples, 0.01%)</title><rect x="72.8405%" y="709" width="0.0143%" height="15" fill="rgb(224,10,23)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="719.50"></text></g><g><title>__glx_Main (15 samples, 0.01%)</title><rect x="72.8405%" y="693" width="0.0143%" height="15" fill="rgb(248,22,39)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (15 samples, 0.01%)</title><rect x="72.8405%" y="677" width="0.0143%" height="15" fill="rgb(212,154,20)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (15 samples, 0.01%)</title><rect x="72.8405%" y="661" width="0.0143%" height="15" fill="rgb(236,199,50)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (15 samples, 0.01%)</title><rect x="72.8405%" y="645" width="0.0143%" height="15" fill="rgb(211,9,17)" fg:x="76586" fg:w="15"/><text x="73.0905%" y="655.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="72.8415%" y="629" width="0.0133%" height="15" fill="rgb(243,216,36)" fg:x="76587" fg:w="14"/><text x="73.0915%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (6,885 samples, 6.55%)</title><rect x="66.3075%" y="853" width="6.5483%" height="15" fill="rgb(250,2,10)" fg:x="69717" fg:w="6885"/><text x="66.5575%" y="863.50">&lt;bevy_ecs..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (82 samples, 0.08%)</title><rect x="72.7778%" y="837" width="0.0780%" height="15" fill="rgb(226,50,48)" fg:x="76520" fg:w="82"/><text x="73.0278%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (82 samples, 0.08%)</title><rect x="72.7778%" y="821" width="0.0780%" height="15" fill="rgb(243,81,16)" fg:x="76520" fg:w="82"/><text x="73.0278%" y="831.50"></text></g><g><title>bevy_render::renderer::render_system (82 samples, 0.08%)</title><rect x="72.7778%" y="805" width="0.0780%" height="15" fill="rgb(250,14,2)" fg:x="76520" fg:w="82"/><text x="73.0278%" y="815.50"></text></g><g><title>wgpu::SurfaceTexture::present (16 samples, 0.02%)</title><rect x="72.8405%" y="789" width="0.0152%" height="15" fill="rgb(233,135,29)" fg:x="76586" fg:w="16"/><text x="73.0905%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (16 samples, 0.02%)</title><rect x="72.8405%" y="773" width="0.0152%" height="15" fill="rgb(224,64,43)" fg:x="76586" fg:w="16"/><text x="73.0905%" y="783.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (16 samples, 0.02%)</title><rect x="72.8405%" y="757" width="0.0152%" height="15" fill="rgb(238,84,13)" fg:x="76586" fg:w="16"/><text x="73.0905%" y="767.50"></text></g><g><title>async_executor::Executor::state (116 samples, 0.11%)</title><rect x="73.3865%" y="725" width="0.1103%" height="15" fill="rgb(253,48,26)" fg:x="77160" fg:w="116"/><text x="73.6365%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (116 samples, 0.11%)</title><rect x="73.3865%" y="709" width="0.1103%" height="15" fill="rgb(205,223,31)" fg:x="77160" fg:w="116"/><text x="73.6365%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (116 samples, 0.11%)</title><rect x="73.3865%" y="693" width="0.1103%" height="15" fill="rgb(221,41,32)" fg:x="77160" fg:w="116"/><text x="73.6365%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (115 samples, 0.11%)</title><rect x="73.3874%" y="677" width="0.1094%" height="15" fill="rgb(213,158,31)" fg:x="77161" fg:w="115"/><text x="73.6374%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (115 samples, 0.11%)</title><rect x="73.3874%" y="661" width="0.1094%" height="15" fill="rgb(245,126,43)" fg:x="77161" fg:w="115"/><text x="73.6374%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (94 samples, 0.09%)</title><rect x="73.4074%" y="645" width="0.0894%" height="15" fill="rgb(227,7,22)" fg:x="77182" fg:w="94"/><text x="73.6574%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (94 samples, 0.09%)</title><rect x="73.4074%" y="629" width="0.0894%" height="15" fill="rgb(252,90,44)" fg:x="77182" fg:w="94"/><text x="73.6574%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="73.4987%" y="661" width="0.0228%" height="15" fill="rgb(253,91,0)" fg:x="77278" fg:w="24"/><text x="73.7487%" y="671.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="73.5310%" y="485" width="0.0114%" height="15" fill="rgb(252,175,49)" fg:x="77312" fg:w="12"/><text x="73.7810%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="73.5310%" y="469" width="0.0114%" height="15" fill="rgb(246,150,1)" fg:x="77312" fg:w="12"/><text x="73.7810%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="73.5310%" y="501" width="0.0181%" height="15" fill="rgb(241,192,25)" fg:x="77312" fg:w="19"/><text x="73.7810%" y="511.50"></text></g><g><title>bevy_pbr::render::light::extract_clusters (20 samples, 0.02%)</title><rect x="73.5310%" y="565" width="0.0190%" height="15" fill="rgb(239,187,11)" fg:x="77312" fg:w="20"/><text x="73.7810%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="73.5310%" y="549" width="0.0190%" height="15" fill="rgb(218,202,51)" fg:x="77312" fg:w="20"/><text x="73.7810%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.02%)</title><rect x="73.5310%" y="533" width="0.0190%" height="15" fill="rgb(225,176,8)" fg:x="77312" fg:w="20"/><text x="73.7810%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.02%)</title><rect x="73.5310%" y="517" width="0.0190%" height="15" fill="rgb(219,122,41)" fg:x="77312" fg:w="20"/><text x="73.7810%" y="527.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (22 samples, 0.02%)</title><rect x="73.5310%" y="629" width="0.0209%" height="15" fill="rgb(248,140,20)" fg:x="77312" fg:w="22"/><text x="73.7810%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (22 samples, 0.02%)</title><rect x="73.5310%" y="613" width="0.0209%" height="15" fill="rgb(245,41,37)" fg:x="77312" fg:w="22"/><text x="73.7810%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.02%)</title><rect x="73.5310%" y="597" width="0.0209%" height="15" fill="rgb(235,82,39)" fg:x="77312" fg:w="22"/><text x="73.7810%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.02%)</title><rect x="73.5310%" y="581" width="0.0209%" height="15" fill="rgb(230,108,42)" fg:x="77312" fg:w="22"/><text x="73.7810%" y="591.50"></text></g><g><title>__GI___libc_malloc (55 samples, 0.05%)</title><rect x="73.5539%" y="373" width="0.0523%" height="15" fill="rgb(215,150,50)" fg:x="77336" fg:w="55"/><text x="73.8039%" y="383.50"></text></g><g><title>_int_malloc (49 samples, 0.05%)</title><rect x="73.5596%" y="357" width="0.0466%" height="15" fill="rgb(233,212,5)" fg:x="77342" fg:w="49"/><text x="73.8096%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.05%)</title><rect x="73.5539%" y="469" width="0.0533%" height="15" fill="rgb(245,80,22)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.05%)</title><rect x="73.5539%" y="453" width="0.0533%" height="15" fill="rgb(238,129,16)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.05%)</title><rect x="73.5539%" y="437" width="0.0533%" height="15" fill="rgb(240,19,0)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.05%)</title><rect x="73.5539%" y="421" width="0.0533%" height="15" fill="rgb(232,42,35)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.05%)</title><rect x="73.5539%" y="405" width="0.0533%" height="15" fill="rgb(223,130,24)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="415.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.05%)</title><rect x="73.5539%" y="389" width="0.0533%" height="15" fill="rgb(237,16,22)" fg:x="77336" fg:w="56"/><text x="73.8039%" y="399.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::InstanceMaterialData as bevy_render::render_component::ExtractComponent&gt;::extract_component (3,446 samples, 3.28%)</title><rect x="73.5539%" y="549" width="3.2775%" height="15" fill="rgb(248,192,20)" fg:x="77336" fg:w="3446"/><text x="73.8039%" y="559.50">&lt;st..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,446 samples, 3.28%)</title><rect x="73.5539%" y="533" width="3.2775%" height="15" fill="rgb(233,167,2)" fg:x="77336" fg:w="3446"/><text x="73.8039%" y="543.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,446 samples, 3.28%)</title><rect x="73.5539%" y="517" width="3.2775%" height="15" fill="rgb(252,71,44)" fg:x="77336" fg:w="3446"/><text x="73.8039%" y="527.50">all..</text></g><g><title>alloc::slice::hack::to_vec (3,446 samples, 3.28%)</title><rect x="73.5539%" y="501" width="3.2775%" height="15" fill="rgb(238,37,47)" fg:x="77336" fg:w="3446"/><text x="73.8039%" y="511.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,446 samples, 3.28%)</title><rect x="73.5539%" y="485" width="3.2775%" height="15" fill="rgb(214,202,54)" fg:x="77336" fg:w="3446"/><text x="73.8039%" y="495.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,390 samples, 3.22%)</title><rect x="73.6071%" y="469" width="3.2242%" height="15" fill="rgb(254,165,40)" fg:x="77392" fg:w="3390"/><text x="73.8571%" y="479.50">cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3,390 samples, 3.22%)</title><rect x="73.6071%" y="453" width="3.2242%" height="15" fill="rgb(246,173,38)" fg:x="77392" fg:w="3390"/><text x="73.8571%" y="463.50">cor..</text></g><g><title>__memcpy_avx_unaligned_erms (3,390 samples, 3.22%)</title><rect x="73.6071%" y="437" width="3.2242%" height="15" fill="rgb(215,3,27)" fg:x="77392" fg:w="3390"/><text x="73.8571%" y="447.50">__m..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="76.8313%" y="549" width="0.0219%" height="15" fill="rgb(239,169,51)" fg:x="80782" fg:w="23"/><text x="77.0813%" y="559.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="76.8313%" y="533" width="0.0219%" height="15" fill="rgb(212,5,25)" fg:x="80782" fg:w="23"/><text x="77.0813%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (3,472 samples, 3.30%)</title><rect x="73.5520%" y="629" width="3.3022%" height="15" fill="rgb(243,45,17)" fg:x="77334" fg:w="3472"/><text x="73.8020%" y="639.50">&lt;Fu..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (3,472 samples, 3.30%)</title><rect x="73.5520%" y="613" width="3.3022%" height="15" fill="rgb(242,97,9)" fg:x="77334" fg:w="3472"/><text x="73.8020%" y="623.50">&lt;Fu..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,472 samples, 3.30%)</title><rect x="73.5520%" y="597" width="3.3022%" height="15" fill="rgb(228,71,31)" fg:x="77334" fg:w="3472"/><text x="73.8020%" y="607.50">cor..</text></g><g><title>core::ops::function::FnMut::call_mut (3,472 samples, 3.30%)</title><rect x="73.5520%" y="581" width="3.3022%" height="15" fill="rgb(252,184,16)" fg:x="77334" fg:w="3472"/><text x="73.8020%" y="591.50">cor..</text></g><g><title>bevy_render::render_component::extract_components (3,470 samples, 3.30%)</title><rect x="73.5539%" y="565" width="3.3003%" height="15" fill="rgb(236,169,46)" fg:x="77336" fg:w="3470"/><text x="73.8039%" y="575.50">bev..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,495 samples, 3.32%)</title><rect x="73.5310%" y="645" width="3.3241%" height="15" fill="rgb(207,17,47)" fg:x="77312" fg:w="3495"/><text x="73.7810%" y="655.50">&lt;be..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,532 samples, 3.36%)</title><rect x="73.4987%" y="693" width="3.3593%" height="15" fill="rgb(206,201,28)" fg:x="77278" fg:w="3532"/><text x="73.7487%" y="703.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,532 samples, 3.36%)</title><rect x="73.4987%" y="677" width="3.3593%" height="15" fill="rgb(224,184,23)" fg:x="77278" fg:w="3532"/><text x="73.7487%" y="687.50">&lt;co..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,508 samples, 3.34%)</title><rect x="73.5215%" y="661" width="3.3364%" height="15" fill="rgb(208,139,48)" fg:x="77302" fg:w="3508"/><text x="73.7715%" y="671.50">bev..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,540 samples, 3.37%)</title><rect x="73.4987%" y="709" width="3.3669%" height="15" fill="rgb(208,130,10)" fg:x="77278" fg:w="3540"/><text x="73.7487%" y="719.50">&lt;co..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,546 samples, 3.37%)</title><rect x="73.4987%" y="725" width="3.3726%" height="15" fill="rgb(211,213,45)" fg:x="77278" fg:w="3546"/><text x="73.7487%" y="735.50">asy..</text></g><g><title>concurrent_queue::full_fence (4,067 samples, 3.87%)</title><rect x="78.2532%" y="693" width="3.8681%" height="15" fill="rgb(235,100,30)" fg:x="82277" fg:w="4067"/><text x="78.5032%" y="703.50">conc..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3,977 samples, 3.78%)</title><rect x="78.3388%" y="677" width="3.7825%" height="15" fill="rgb(206,144,31)" fg:x="82367" fg:w="3977"/><text x="78.5888%" y="687.50">core..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3,977 samples, 3.78%)</title><rect x="78.3388%" y="661" width="3.7825%" height="15" fill="rgb(224,200,26)" fg:x="82367" fg:w="3977"/><text x="78.5888%" y="671.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (3,977 samples, 3.78%)</title><rect x="78.3388%" y="645" width="3.7825%" height="15" fill="rgb(247,104,53)" fg:x="82367" fg:w="3977"/><text x="78.5888%" y="655.50">core..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (236 samples, 0.22%)</title><rect x="82.1213%" y="693" width="0.2245%" height="15" fill="rgb(220,14,17)" fg:x="86344" fg:w="236"/><text x="82.3713%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (236 samples, 0.22%)</title><rect x="82.1213%" y="677" width="0.2245%" height="15" fill="rgb(230,140,40)" fg:x="86344" fg:w="236"/><text x="82.3713%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (9,848 samples, 9.37%)</title><rect x="73.0897%" y="741" width="9.3664%" height="15" fill="rgb(229,2,41)" fg:x="76848" fg:w="9848"/><text x="73.3397%" y="751.50">async_executo..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5,872 samples, 5.58%)</title><rect x="76.8713%" y="725" width="5.5848%" height="15" fill="rgb(232,89,16)" fg:x="80824" fg:w="5872"/><text x="77.1213%" y="735.50">concurr..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5,567 samples, 5.29%)</title><rect x="77.1614%" y="709" width="5.2947%" height="15" fill="rgb(247,59,52)" fg:x="81129" fg:w="5567"/><text x="77.4114%" y="719.50">concur..</text></g><g><title>core::sync::atomic::AtomicUsize::load (115 samples, 0.11%)</title><rect x="82.3467%" y="693" width="0.1094%" height="15" fill="rgb(226,110,21)" fg:x="86581" fg:w="115"/><text x="82.5967%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (115 samples, 0.11%)</title><rect x="82.3467%" y="677" width="0.1094%" height="15" fill="rgb(224,176,43)" fg:x="86581" fg:w="115"/><text x="82.5967%" y="687.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (132 samples, 0.13%)</title><rect x="82.4580%" y="741" width="0.1255%" height="15" fill="rgb(221,73,6)" fg:x="86698" fg:w="132"/><text x="82.7080%" y="751.50"></text></g><g><title>__tls_get_addr_slow (122 samples, 0.12%)</title><rect x="83.1951%" y="661" width="0.1160%" height="15" fill="rgb(232,78,19)" fg:x="87473" fg:w="122"/><text x="83.4451%" y="671.50"></text></g><g><title>__tls_get_addr (932 samples, 0.89%)</title><rect x="83.0819%" y="677" width="0.8864%" height="15" fill="rgb(233,112,48)" fg:x="87354" fg:w="932"/><text x="83.3319%" y="687.50"></text></g><g><title>update_get_addr (691 samples, 0.66%)</title><rect x="83.3111%" y="661" width="0.6572%" height="15" fill="rgb(243,131,47)" fg:x="87595" fg:w="691"/><text x="83.5611%" y="671.50"></text></g><g><title>_dl_update_slotinfo (572 samples, 0.54%)</title><rect x="83.4243%" y="645" width="0.5440%" height="15" fill="rgb(226,51,1)" fg:x="87714" fg:w="572"/><text x="83.6743%" y="655.50"></text></g><g><title>_fini (117 samples, 0.11%)</title><rect x="83.9683%" y="677" width="0.1113%" height="15" fill="rgb(247,58,7)" fg:x="88286" fg:w="117"/><text x="84.2183%" y="687.50"></text></g><g><title>__tls_get_addr_slow (191 samples, 0.18%)</title><rect x="84.4296%" y="613" width="0.1817%" height="15" fill="rgb(209,7,32)" fg:x="88771" fg:w="191"/><text x="84.6796%" y="623.50"></text></g><g><title>__tls_get_addr (1,094 samples, 1.04%)</title><rect x="84.2147%" y="629" width="1.0405%" height="15" fill="rgb(209,39,41)" fg:x="88545" fg:w="1094"/><text x="84.4647%" y="639.50"></text></g><g><title>update_get_addr (677 samples, 0.64%)</title><rect x="84.6113%" y="613" width="0.6439%" height="15" fill="rgb(226,182,46)" fg:x="88962" fg:w="677"/><text x="84.8613%" y="623.50"></text></g><g><title>_dl_update_slotinfo (553 samples, 0.53%)</title><rect x="84.7292%" y="597" width="0.5260%" height="15" fill="rgb(230,219,10)" fg:x="89086" fg:w="553"/><text x="84.9792%" y="607.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (2,512 samples, 2.39%)</title><rect x="82.9868%" y="693" width="2.3891%" height="15" fill="rgb(227,175,30)" fg:x="87254" fg:w="2512"/><text x="83.2368%" y="703.50">fu..</text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1,363 samples, 1.30%)</title><rect x="84.0796%" y="677" width="1.2963%" height="15" fill="rgb(217,2,50)" fg:x="88403" fg:w="1363"/><text x="84.3296%" y="687.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1,360 samples, 1.29%)</title><rect x="84.0825%" y="661" width="1.2935%" height="15" fill="rgb(229,160,0)" fg:x="88406" fg:w="1360"/><text x="84.3325%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,360 samples, 1.29%)</title><rect x="84.0825%" y="645" width="1.2935%" height="15" fill="rgb(207,78,37)" fg:x="88406" fg:w="1360"/><text x="84.3325%" y="655.50"></text></g><g><title>_fini (127 samples, 0.12%)</title><rect x="85.2552%" y="629" width="0.1208%" height="15" fill="rgb(225,57,0)" fg:x="89639" fg:w="127"/><text x="85.5052%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2,365 samples, 2.25%)</title><rect x="86.4887%" y="565" width="2.2493%" height="15" fill="rgb(232,154,2)" fg:x="90936" fg:w="2365"/><text x="86.7387%" y="575.50">&lt;..</text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (2,242 samples, 2.13%)</title><rect x="86.6057%" y="549" width="2.1324%" height="15" fill="rgb(241,212,25)" fg:x="91059" fg:w="2242"/><text x="86.8557%" y="559.50">w..</text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2,127 samples, 2.02%)</title><rect x="86.7151%" y="533" width="2.0230%" height="15" fill="rgb(226,69,20)" fg:x="91174" fg:w="2127"/><text x="86.9651%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2,127 samples, 2.02%)</title><rect x="86.7151%" y="517" width="2.0230%" height="15" fill="rgb(247,184,54)" fg:x="91174" fg:w="2127"/><text x="86.9651%" y="527.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,119 samples, 2.02%)</title><rect x="86.7227%" y="501" width="2.0154%" height="15" fill="rgb(210,145,0)" fg:x="91182" fg:w="2119"/><text x="86.9727%" y="511.50">c..</text></g><g><title>core::sync::atomic::atomic_add (2,119 samples, 2.02%)</title><rect x="86.7227%" y="485" width="2.0154%" height="15" fill="rgb(253,82,12)" fg:x="91182" fg:w="2119"/><text x="86.9727%" y="495.50">c..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (106 samples, 0.10%)</title><rect x="88.8484%" y="501" width="0.1008%" height="15" fill="rgb(245,42,11)" fg:x="93417" fg:w="106"/><text x="89.0984%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (106 samples, 0.10%)</title><rect x="88.8484%" y="485" width="0.1008%" height="15" fill="rgb(219,147,32)" fg:x="93417" fg:w="106"/><text x="89.0984%" y="495.50"></text></g><g><title>async_task::utils::abort_on_panic (4,947 samples, 4.71%)</title><rect x="86.4868%" y="597" width="4.7051%" height="15" fill="rgb(246,12,7)" fg:x="90934" fg:w="4947"/><text x="86.7368%" y="607.50">async..</text></g><g><title>async_task::header::Header::register::{{closure}} (4,947 samples, 4.71%)</title><rect x="86.4868%" y="581" width="4.7051%" height="15" fill="rgb(243,50,9)" fg:x="90934" fg:w="4947"/><text x="86.7368%" y="591.50">async..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2,580 samples, 2.45%)</title><rect x="88.7381%" y="565" width="2.4538%" height="15" fill="rgb(219,149,6)" fg:x="93301" fg:w="2580"/><text x="88.9881%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2,464 samples, 2.34%)</title><rect x="88.8484%" y="549" width="2.3435%" height="15" fill="rgb(241,51,42)" fg:x="93417" fg:w="2464"/><text x="89.0984%" y="559.50">c..</text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2,464 samples, 2.34%)</title><rect x="88.8484%" y="533" width="2.3435%" height="15" fill="rgb(226,128,27)" fg:x="93417" fg:w="2464"/><text x="89.0984%" y="543.50">&lt;..</text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (2,464 samples, 2.34%)</title><rect x="88.8484%" y="517" width="2.3435%" height="15" fill="rgb(244,144,4)" fg:x="93417" fg:w="2464"/><text x="89.0984%" y="527.50">w..</text></g><g><title>core::mem::drop (2,358 samples, 2.24%)</title><rect x="88.9492%" y="501" width="2.2427%" height="15" fill="rgb(221,4,13)" fg:x="93523" fg:w="2358"/><text x="89.1992%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2,358 samples, 2.24%)</title><rect x="88.9492%" y="485" width="2.2427%" height="15" fill="rgb(208,170,28)" fg:x="93523" fg:w="2358"/><text x="89.1992%" y="495.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,358 samples, 2.24%)</title><rect x="88.9492%" y="469" width="2.2427%" height="15" fill="rgb(226,131,13)" fg:x="93523" fg:w="2358"/><text x="89.1992%" y="479.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2,354 samples, 2.24%)</title><rect x="88.9530%" y="453" width="2.2389%" height="15" fill="rgb(215,72,41)" fg:x="93527" fg:w="2354"/><text x="89.2030%" y="463.50">c..</text></g><g><title>core::sync::atomic::atomic_sub (2,354 samples, 2.24%)</title><rect x="88.9530%" y="437" width="2.2389%" height="15" fill="rgb(243,108,20)" fg:x="93527" fg:w="2354"/><text x="89.2030%" y="447.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (110 samples, 0.10%)</title><rect x="91.1919%" y="597" width="0.1046%" height="15" fill="rgb(230,189,17)" fg:x="95881" fg:w="110"/><text x="91.4419%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (110 samples, 0.10%)</title><rect x="91.1919%" y="581" width="0.1046%" height="15" fill="rgb(220,50,17)" fg:x="95881" fg:w="110"/><text x="91.4419%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4,959 samples, 4.72%)</title><rect x="91.2965%" y="597" width="4.7165%" height="15" fill="rgb(248,152,48)" fg:x="95991" fg:w="4959"/><text x="91.5465%" y="607.50">core:..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4,959 samples, 4.72%)</title><rect x="91.2965%" y="581" width="4.7165%" height="15" fill="rgb(244,91,11)" fg:x="95991" fg:w="4959"/><text x="91.5465%" y="591.50">core:..</text></g><g><title>async_task::header::Header::register (10,696 samples, 10.17%)</title><rect x="85.9457%" y="613" width="10.1729%" height="15" fill="rgb(220,157,5)" fg:x="90365" fg:w="10696"/><text x="86.1957%" y="623.50">async_task::hea..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (111 samples, 0.11%)</title><rect x="96.0130%" y="597" width="0.1056%" height="15" fill="rgb(253,137,8)" fg:x="100950" fg:w="111"/><text x="96.2630%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (111 samples, 0.11%)</title><rect x="96.0130%" y="581" width="0.1056%" height="15" fill="rgb(217,137,51)" fg:x="100950" fg:w="111"/><text x="96.2630%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,228 samples, 1.17%)</title><rect x="96.1186%" y="613" width="1.1679%" height="15" fill="rgb(218,209,53)" fg:x="101061" fg:w="1228"/><text x="96.3686%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1,228 samples, 1.17%)</title><rect x="96.1186%" y="597" width="1.1679%" height="15" fill="rgb(249,137,25)" fg:x="101061" fg:w="1228"/><text x="96.3686%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (12,404 samples, 11.80%)</title><rect x="85.4920%" y="677" width="11.7974%" height="15" fill="rgb(239,155,26)" fg:x="89888" fg:w="12404"/><text x="85.7420%" y="687.50">&lt;futures_lite::fu..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (12,280 samples, 11.68%)</title><rect x="85.6099%" y="661" width="11.6794%" height="15" fill="rgb(227,85,46)" fg:x="90012" fg:w="12280"/><text x="85.8599%" y="671.50">&lt;&amp;mut F as core::..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (12,176 samples, 11.58%)</title><rect x="85.7089%" y="645" width="11.5805%" height="15" fill="rgb(251,107,43)" fg:x="90116" fg:w="12176"/><text x="85.9589%" y="655.50">&lt;async_task::task..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (12,175 samples, 11.58%)</title><rect x="85.7098%" y="629" width="11.5796%" height="15" fill="rgb(234,170,33)" fg:x="90117" fg:w="12175"/><text x="85.9598%" y="639.50">async_task::task:..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (118 samples, 0.11%)</title><rect x="97.2894%" y="677" width="0.1122%" height="15" fill="rgb(206,29,35)" fg:x="102292" fg:w="118"/><text x="97.5394%" y="687.50"></text></g><g><title>core::cell::BorrowRefMut::new (118 samples, 0.11%)</title><rect x="97.2894%" y="661" width="0.1122%" height="15" fill="rgb(227,138,25)" fg:x="102292" fg:w="118"/><text x="97.5394%" y="671.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (131 samples, 0.12%)</title><rect x="97.4016%" y="677" width="0.1246%" height="15" fill="rgb(249,131,35)" fg:x="102410" fg:w="131"/><text x="97.6516%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (130 samples, 0.12%)</title><rect x="97.4026%" y="661" width="0.1236%" height="15" fill="rgb(239,6,40)" fg:x="102411" fg:w="130"/><text x="97.6526%" y="671.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (26,037 samples, 24.76%)</title><rect x="72.8558%" y="837" width="24.7637%" height="15" fill="rgb(246,136,47)" fg:x="76602" fg:w="26037"/><text x="73.1058%" y="847.50">&lt;bevy_ecs::schedule::stage::SystemStage..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (26,037 samples, 24.76%)</title><rect x="72.8558%" y="821" width="24.7637%" height="15" fill="rgb(253,58,26)" fg:x="76602" fg:w="26037"/><text x="73.1058%" y="831.50">&lt;bevy_ecs::schedule::executor_parallel:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (26,026 samples, 24.75%)</title><rect x="72.8662%" y="805" width="24.7532%" height="15" fill="rgb(237,141,10)" fg:x="76613" fg:w="26026"/><text x="73.1162%" y="815.50">bevy_tasks::task_pool::TaskPool::scope</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26,026 samples, 24.75%)</title><rect x="72.8662%" y="789" width="24.7532%" height="15" fill="rgb(234,156,12)" fg:x="76613" fg:w="26026"/><text x="73.1162%" y="799.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26,026 samples, 24.75%)</title><rect x="72.8662%" y="773" width="24.7532%" height="15" fill="rgb(243,224,36)" fg:x="76613" fg:w="26026"/><text x="73.1162%" y="783.50">std::thread::local::LocalKey&lt;T&gt;::try_wi..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (26,023 samples, 24.75%)</title><rect x="72.8691%" y="757" width="24.7503%" height="15" fill="rgb(205,229,51)" fg:x="76616" fg:w="26023"/><text x="73.1191%" y="767.50">bevy_tasks::task_pool::TaskPool::scope:..</text></g><g><title>futures_lite::future::block_on (15,809 samples, 15.04%)</title><rect x="82.5836%" y="741" width="15.0359%" height="15" fill="rgb(223,189,4)" fg:x="86830" fg:w="15809"/><text x="82.8336%" y="751.50">futures_lite::future::b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,584 samples, 14.82%)</title><rect x="82.7975%" y="725" width="14.8219%" height="15" fill="rgb(249,167,54)" fg:x="87055" fg:w="15584"/><text x="83.0475%" y="735.50">std::thread::local::Loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,470 samples, 14.71%)</title><rect x="82.9060%" y="709" width="14.7134%" height="15" fill="rgb(218,34,28)" fg:x="87169" fg:w="15470"/><text x="83.1560%" y="719.50">std::thread::local::Lo..</text></g><g><title>futures_lite::future::block_on::{{closure}} (12,873 samples, 12.24%)</title><rect x="85.3760%" y="693" width="12.2434%" height="15" fill="rgb(232,109,42)" fg:x="89766" fg:w="12873"/><text x="85.6260%" y="703.50">futures_lite::futu..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (98 samples, 0.09%)</title><rect x="97.5262%" y="677" width="0.0932%" height="15" fill="rgb(248,214,46)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (98 samples, 0.09%)</title><rect x="97.5262%" y="661" width="0.0932%" height="15" fill="rgb(244,216,40)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="671.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (98 samples, 0.09%)</title><rect x="97.5262%" y="645" width="0.0932%" height="15" fill="rgb(231,226,31)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (98 samples, 0.09%)</title><rect x="97.5262%" y="629" width="0.0932%" height="15" fill="rgb(238,38,43)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (98 samples, 0.09%)</title><rect x="97.5262%" y="613" width="0.0932%" height="15" fill="rgb(208,88,43)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="623.50"></text></g><g><title>core::mem::replace (98 samples, 0.09%)</title><rect x="97.5262%" y="597" width="0.0932%" height="15" fill="rgb(205,136,37)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="607.50"></text></g><g><title>core::ptr::write (98 samples, 0.09%)</title><rect x="97.5262%" y="581" width="0.0932%" height="15" fill="rgb(237,34,14)" fg:x="102541" fg:w="98"/><text x="97.7762%" y="591.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (23 samples, 0.02%)</title><rect x="97.6289%" y="741" width="0.0219%" height="15" fill="rgb(236,193,44)" fg:x="102649" fg:w="23"/><text x="97.8789%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (32,957 samples, 31.35%)</title><rect x="66.3075%" y="885" width="31.3452%" height="15" fill="rgb(231,48,10)" fg:x="69717" fg:w="32957"/><text x="66.5575%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (32,957 samples, 31.35%)</title><rect x="66.3075%" y="869" width="31.3452%" height="15" fill="rgb(213,141,34)" fg:x="69717" fg:w="32957"/><text x="66.5575%" y="879.50">&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plu..</text></g><g><title>bevy_render::extract (26,072 samples, 24.80%)</title><rect x="72.8558%" y="853" width="24.7969%" height="15" fill="rgb(249,130,34)" fg:x="76602" fg:w="26072"/><text x="73.1058%" y="863.50">bevy_render::extract</text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (35 samples, 0.03%)</title><rect x="97.6194%" y="837" width="0.0333%" height="15" fill="rgb(219,42,41)" fg:x="102639" fg:w="35"/><text x="97.8694%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (35 samples, 0.03%)</title><rect x="97.6194%" y="821" width="0.0333%" height="15" fill="rgb(224,100,54)" fg:x="102639" fg:w="35"/><text x="97.8694%" y="831.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (35 samples, 0.03%)</title><rect x="97.6194%" y="805" width="0.0333%" height="15" fill="rgb(229,200,27)" fg:x="102639" fg:w="35"/><text x="97.8694%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (35 samples, 0.03%)</title><rect x="97.6194%" y="789" width="0.0333%" height="15" fill="rgb(217,118,10)" fg:x="102639" fg:w="35"/><text x="97.8694%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (30 samples, 0.03%)</title><rect x="97.6242%" y="773" width="0.0285%" height="15" fill="rgb(206,22,3)" fg:x="102644" fg:w="30"/><text x="97.8742%" y="783.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (30 samples, 0.03%)</title><rect x="97.6242%" y="757" width="0.0285%" height="15" fill="rgb(232,163,46)" fg:x="102644" fg:w="30"/><text x="97.8742%" y="767.50"></text></g><g><title>epaint::text::fonts::Fonts::begin_frame (12 samples, 0.01%)</title><rect x="97.6536%" y="533" width="0.0114%" height="15" fill="rgb(206,95,13)" fg:x="102675" fg:w="12"/><text x="97.9036%" y="543.50"></text></g><g><title>epaint::text::fonts::GalleyCache::flush_cache (12 samples, 0.01%)</title><rect x="97.6536%" y="517" width="0.0114%" height="15" fill="rgb(253,154,18)" fg:x="102675" fg:w="12"/><text x="97.9036%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::retain (12 samples, 0.01%)</title><rect x="97.6536%" y="501" width="0.0114%" height="15" fill="rgb(219,32,23)" fg:x="102675" fg:w="12"/><text x="97.9036%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (12 samples, 0.01%)</title><rect x="97.6536%" y="485" width="0.0114%" height="15" fill="rgb(230,191,45)" fg:x="102675" fg:w="12"/><text x="97.9036%" y="495.50"></text></g><g><title>egui::context::ContextImpl::update_fonts_mut (14 samples, 0.01%)</title><rect x="97.6527%" y="549" width="0.0133%" height="15" fill="rgb(229,64,36)" fg:x="102674" fg:w="14"/><text x="97.9027%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (19 samples, 0.02%)</title><rect x="97.6527%" y="661" width="0.0181%" height="15" fill="rgb(205,129,25)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (19 samples, 0.02%)</title><rect x="97.6527%" y="645" width="0.0181%" height="15" fill="rgb(254,112,7)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="97.6527%" y="629" width="0.0181%" height="15" fill="rgb(226,53,48)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.02%)</title><rect x="97.6527%" y="613" width="0.0181%" height="15" fill="rgb(214,153,38)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="623.50"></text></g><g><title>bevy_egui::systems::begin_frame (19 samples, 0.02%)</title><rect x="97.6527%" y="597" width="0.0181%" height="15" fill="rgb(243,101,7)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="607.50"></text></g><g><title>egui::context::Context::begin_frame (19 samples, 0.02%)</title><rect x="97.6527%" y="581" width="0.0181%" height="15" fill="rgb(240,140,22)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="591.50"></text></g><g><title>egui::context::ContextImpl::begin_frame_mut (19 samples, 0.02%)</title><rect x="97.6527%" y="565" width="0.0181%" height="15" fill="rgb(235,114,2)" fg:x="102674" fg:w="19"/><text x="97.9027%" y="575.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (27 samples, 0.03%)</title><rect x="97.6527%" y="853" width="0.0257%" height="15" fill="rgb(242,59,12)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (27 samples, 0.03%)</title><rect x="97.6527%" y="837" width="0.0257%" height="15" fill="rgb(252,134,9)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="97.6527%" y="821" width="0.0257%" height="15" fill="rgb(236,4,44)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.03%)</title><rect x="97.6527%" y="805" width="0.0257%" height="15" fill="rgb(254,172,41)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (27 samples, 0.03%)</title><rect x="97.6527%" y="789" width="0.0257%" height="15" fill="rgb(244,63,20)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (27 samples, 0.03%)</title><rect x="97.6527%" y="773" width="0.0257%" height="15" fill="rgb(250,73,31)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27 samples, 0.03%)</title><rect x="97.6527%" y="757" width="0.0257%" height="15" fill="rgb(241,38,36)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="97.6527%" y="741" width="0.0257%" height="15" fill="rgb(245,211,2)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (27 samples, 0.03%)</title><rect x="97.6527%" y="725" width="0.0257%" height="15" fill="rgb(206,120,28)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="97.6527%" y="709" width="0.0257%" height="15" fill="rgb(211,59,34)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (27 samples, 0.03%)</title><rect x="97.6527%" y="693" width="0.0257%" height="15" fill="rgb(233,168,5)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (27 samples, 0.03%)</title><rect x="97.6527%" y="677" width="0.0257%" height="15" fill="rgb(234,33,13)" fg:x="102674" fg:w="27"/><text x="97.9027%" y="687.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (33,017 samples, 31.40%)</title><rect x="66.3075%" y="933" width="31.4023%" height="15" fill="rgb(231,150,26)" fg:x="69717" fg:w="33017"/><text x="66.5575%" y="943.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (33,017 samples, 31.40%)</title><rect x="66.3075%" y="917" width="31.4023%" height="15" fill="rgb(217,191,4)" fg:x="69717" fg:w="33017"/><text x="66.5575%" y="927.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>bevy_app::app::App::update (33,017 samples, 31.40%)</title><rect x="66.3075%" y="901" width="31.4023%" height="15" fill="rgb(246,198,38)" fg:x="69717" fg:w="33017"/><text x="66.5575%" y="911.50">bevy_app::app::App::update</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (60 samples, 0.06%)</title><rect x="97.6527%" y="885" width="0.0571%" height="15" fill="rgb(245,64,37)" fg:x="102674" fg:w="60"/><text x="97.9027%" y="895.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (60 samples, 0.06%)</title><rect x="97.6527%" y="869" width="0.0571%" height="15" fill="rgb(250,30,36)" fg:x="102674" fg:w="60"/><text x="97.9027%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (33 samples, 0.03%)</title><rect x="97.6784%" y="853" width="0.0314%" height="15" fill="rgb(217,86,53)" fg:x="102701" fg:w="33"/><text x="97.9284%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.03%)</title><rect x="97.6784%" y="837" width="0.0314%" height="15" fill="rgb(228,157,16)" fg:x="102701" fg:w="33"/><text x="97.9284%" y="847.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui (33 samples, 0.03%)</title><rect x="97.6784%" y="821" width="0.0314%" height="15" fill="rgb(217,59,31)" fg:x="102701" fg:w="33"/><text x="97.9284%" y="831.50"></text></g><g><title>egui::containers::window::Window::show (33 samples, 0.03%)</title><rect x="97.6784%" y="805" width="0.0314%" height="15" fill="rgb(237,138,41)" fg:x="102701" fg:w="33"/><text x="97.9284%" y="815.50"></text></g><g><title>egui::containers::window::Window::show_dyn (33 samples, 0.03%)</title><rect x="97.6784%" y="789" width="0.0314%" height="15" fill="rgb(227,91,49)" fg:x="102701" fg:w="33"/><text x="97.9284%" y="799.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (33,022 samples, 31.41%)</title><rect x="66.3075%" y="981" width="31.4070%" height="15" fill="rgb(247,21,44)" fg:x="69717" fg:w="33022"/><text x="66.5575%" y="991.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (33,022 samples, 31.41%)</title><rect x="66.3075%" y="965" width="31.4070%" height="15" fill="rgb(219,210,51)" fg:x="69717" fg:w="33022"/><text x="66.5575%" y="975.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (33,022 samples, 31.41%)</title><rect x="66.3075%" y="949" width="31.4070%" height="15" fill="rgb(209,140,6)" fg:x="69717" fg:w="33022"/><text x="66.5575%" y="959.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::..</text></g><g><title>glXCreateGLXPbufferSGIX (29 samples, 0.03%)</title><rect x="97.7174%" y="421" width="0.0276%" height="15" fill="rgb(221,188,24)" fg:x="102742" fg:w="29"/><text x="97.9674%" y="431.50"></text></g><g><title>_nv011glcore (29 samples, 0.03%)</title><rect x="97.7174%" y="405" width="0.0276%" height="15" fill="rgb(232,154,20)" fg:x="102742" fg:w="29"/><text x="97.9674%" y="415.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="97.7174%" y="389" width="0.0276%" height="15" fill="rgb(244,137,50)" fg:x="102742" fg:w="29"/><text x="97.9674%" y="399.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (193 samples, 0.18%)</title><rect x="97.7174%" y="469" width="0.1836%" height="15" fill="rgb(225,185,43)" fg:x="102742" fg:w="193"/><text x="97.9674%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (193 samples, 0.18%)</title><rect x="97.7174%" y="453" width="0.1836%" height="15" fill="rgb(213,205,38)" fg:x="102742" fg:w="193"/><text x="97.9674%" y="463.50"></text></g><g><title>__glx_Main (193 samples, 0.18%)</title><rect x="97.7174%" y="437" width="0.1836%" height="15" fill="rgb(236,73,12)" fg:x="102742" fg:w="193"/><text x="97.9674%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (164 samples, 0.16%)</title><rect x="97.7450%" y="421" width="0.1560%" height="15" fill="rgb(235,219,13)" fg:x="102771" fg:w="164"/><text x="97.9950%" y="431.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (164 samples, 0.16%)</title><rect x="97.7450%" y="405" width="0.1560%" height="15" fill="rgb(218,59,36)" fg:x="102771" fg:w="164"/><text x="97.9950%" y="415.50"></text></g><g><title>_nv011glcore (176 samples, 0.17%)</title><rect x="97.9009%" y="421" width="0.1674%" height="15" fill="rgb(205,110,39)" fg:x="102935" fg:w="176"/><text x="98.1509%" y="431.50"></text></g><g><title>__GI___libc_malloc (176 samples, 0.17%)</title><rect x="97.9009%" y="405" width="0.1674%" height="15" fill="rgb(218,206,42)" fg:x="102935" fg:w="176"/><text x="98.1509%" y="415.50"></text></g><g><title>_int_malloc (176 samples, 0.17%)</title><rect x="97.9009%" y="389" width="0.1674%" height="15" fill="rgb(248,125,24)" fg:x="102935" fg:w="176"/><text x="98.1509%" y="399.50"></text></g><g><title>unlink_chunk.constprop.0 (85 samples, 0.08%)</title><rect x="97.9875%" y="373" width="0.0808%" height="15" fill="rgb(242,28,27)" fg:x="103026" fg:w="85"/><text x="98.2375%" y="383.50"></text></g><g><title>ash::device::Device::create_buffer (248 samples, 0.24%)</title><rect x="97.9009%" y="469" width="0.2359%" height="15" fill="rgb(216,228,15)" fg:x="102935" fg:w="248"/><text x="98.1509%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (248 samples, 0.24%)</title><rect x="97.9009%" y="453" width="0.2359%" height="15" fill="rgb(235,116,46)" fg:x="102935" fg:w="248"/><text x="98.1509%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (248 samples, 0.24%)</title><rect x="97.9009%" y="437" width="0.2359%" height="15" fill="rgb(224,18,32)" fg:x="102935" fg:w="248"/><text x="98.1509%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (72 samples, 0.07%)</title><rect x="98.0683%" y="421" width="0.0685%" height="15" fill="rgb(252,5,12)" fg:x="103111" fg:w="72"/><text x="98.3183%" y="431.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (56 samples, 0.05%)</title><rect x="98.0835%" y="405" width="0.0533%" height="15" fill="rgb(251,36,5)" fg:x="103127" fg:w="56"/><text x="98.3335%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (39 samples, 0.04%)</title><rect x="98.1378%" y="453" width="0.0371%" height="15" fill="rgb(217,53,14)" fg:x="103184" fg:w="39"/><text x="98.3878%" y="463.50"></text></g><g><title>gpu_alloc::block::MemoryBlock&lt;M&gt;::new (17 samples, 0.02%)</title><rect x="98.1587%" y="437" width="0.0162%" height="15" fill="rgb(215,86,45)" fg:x="103206" fg:w="17"/><text x="98.4087%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="98.2424%" y="421" width="0.0485%" height="15" fill="rgb(242,169,11)" fg:x="103294" fg:w="51"/><text x="98.4924%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (50 samples, 0.05%)</title><rect x="98.2433%" y="405" width="0.0476%" height="15" fill="rgb(211,213,45)" fg:x="103295" fg:w="50"/><text x="98.4933%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (50 samples, 0.05%)</title><rect x="98.2433%" y="389" width="0.0476%" height="15" fill="rgb(205,88,11)" fg:x="103295" fg:w="50"/><text x="98.4933%" y="399.50"></text></g><g><title>gpu_alloc::buddy::Size::acquire (90 samples, 0.09%)</title><rect x="98.2947%" y="421" width="0.0856%" height="15" fill="rgb(252,69,26)" fg:x="103349" fg:w="90"/><text x="98.5447%" y="431.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (166 samples, 0.16%)</title><rect x="98.2367%" y="437" width="0.1579%" height="15" fill="rgb(246,123,37)" fg:x="103288" fg:w="166"/><text x="98.4867%" y="447.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="98.3841%" y="421" width="0.0105%" height="15" fill="rgb(212,205,5)" fg:x="103443" fg:w="11"/><text x="98.6341%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="98.4221%" y="389" width="0.0228%" height="15" fill="rgb(253,148,0)" fg:x="103483" fg:w="24"/><text x="98.6721%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="98.4221%" y="373" width="0.0228%" height="15" fill="rgb(239,22,4)" fg:x="103483" fg:w="24"/><text x="98.6721%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="98.4221%" y="357" width="0.0228%" height="15" fill="rgb(226,26,53)" fg:x="103483" fg:w="24"/><text x="98.6721%" y="367.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block (49 samples, 0.05%)</title><rect x="98.3993%" y="421" width="0.0466%" height="15" fill="rgb(225,229,45)" fg:x="103459" fg:w="49"/><text x="98.6493%" y="431.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block_at (28 samples, 0.03%)</title><rect x="98.4193%" y="405" width="0.0266%" height="15" fill="rgb(220,60,37)" fg:x="103480" fg:w="28"/><text x="98.6693%" y="415.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (57 samples, 0.05%)</title><rect x="98.3946%" y="437" width="0.0542%" height="15" fill="rgb(217,180,35)" fg:x="103454" fg:w="57"/><text x="98.6446%" y="447.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (21 samples, 0.02%)</title><rect x="98.4545%" y="437" width="0.0200%" height="15" fill="rgb(229,7,53)" fg:x="103517" fg:w="21"/><text x="98.7045%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (813 samples, 0.77%)</title><rect x="97.7145%" y="661" width="0.7732%" height="15" fill="rgb(254,137,3)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (813 samples, 0.77%)</title><rect x="97.7145%" y="645" width="0.7732%" height="15" fill="rgb(215,140,41)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (813 samples, 0.77%)</title><rect x="97.7145%" y="629" width="0.7732%" height="15" fill="rgb(250,80,15)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (813 samples, 0.77%)</title><rect x="97.7145%" y="613" width="0.7732%" height="15" fill="rgb(252,191,6)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="623.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (813 samples, 0.77%)</title><rect x="97.7145%" y="597" width="0.7732%" height="15" fill="rgb(246,217,18)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="607.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (813 samples, 0.77%)</title><rect x="97.7145%" y="581" width="0.7732%" height="15" fill="rgb(223,93,7)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="591.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (813 samples, 0.77%)</title><rect x="97.7145%" y="565" width="0.7732%" height="15" fill="rgb(225,55,52)" fg:x="102739" fg:w="813"/><text x="97.9645%" y="575.50"></text></g><g><title>wgpu::Device::create_buffer (810 samples, 0.77%)</title><rect x="97.7174%" y="549" width="0.7704%" height="15" fill="rgb(240,31,24)" fg:x="102742" fg:w="810"/><text x="97.9674%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (810 samples, 0.77%)</title><rect x="97.7174%" y="533" width="0.7704%" height="15" fill="rgb(205,56,52)" fg:x="102742" fg:w="810"/><text x="97.9674%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (810 samples, 0.77%)</title><rect x="97.7174%" y="517" width="0.7704%" height="15" fill="rgb(246,146,12)" fg:x="102742" fg:w="810"/><text x="97.9674%" y="527.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (810 samples, 0.77%)</title><rect x="97.7174%" y="501" width="0.7704%" height="15" fill="rgb(239,84,36)" fg:x="102742" fg:w="810"/><text x="97.9674%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (810 samples, 0.77%)</title><rect x="97.7174%" y="485" width="0.7704%" height="15" fill="rgb(207,41,40)" fg:x="102742" fg:w="810"/><text x="97.9674%" y="495.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (369 samples, 0.35%)</title><rect x="98.1368%" y="469" width="0.3510%" height="15" fill="rgb(241,179,25)" fg:x="103183" fg:w="369"/><text x="98.3868%" y="479.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (329 samples, 0.31%)</title><rect x="98.1748%" y="453" width="0.3129%" height="15" fill="rgb(210,0,34)" fg:x="103223" fg:w="329"/><text x="98.4248%" y="463.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::types (14 samples, 0.01%)</title><rect x="98.4744%" y="437" width="0.0133%" height="15" fill="rgb(225,217,29)" fg:x="103538" fg:w="14"/><text x="98.7244%" y="447.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (816 samples, 0.78%)</title><rect x="97.7145%" y="853" width="0.7761%" height="15" fill="rgb(216,191,38)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (816 samples, 0.78%)</title><rect x="97.7145%" y="837" width="0.7761%" height="15" fill="rgb(232,140,52)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (816 samples, 0.78%)</title><rect x="97.7145%" y="821" width="0.7761%" height="15" fill="rgb(223,158,51)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (816 samples, 0.78%)</title><rect x="97.7145%" y="805" width="0.7761%" height="15" fill="rgb(235,29,51)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (816 samples, 0.78%)</title><rect x="97.7145%" y="789" width="0.7761%" height="15" fill="rgb(215,181,18)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (816 samples, 0.78%)</title><rect x="97.7145%" y="773" width="0.7761%" height="15" fill="rgb(227,125,34)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (816 samples, 0.78%)</title><rect x="97.7145%" y="757" width="0.7761%" height="15" fill="rgb(230,197,49)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (816 samples, 0.78%)</title><rect x="97.7145%" y="741" width="0.7761%" height="15" fill="rgb(239,141,16)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (816 samples, 0.78%)</title><rect x="97.7145%" y="725" width="0.7761%" height="15" fill="rgb(225,105,43)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (816 samples, 0.78%)</title><rect x="97.7145%" y="709" width="0.7761%" height="15" fill="rgb(214,131,14)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (816 samples, 0.78%)</title><rect x="97.7145%" y="693" width="0.7761%" height="15" fill="rgb(229,177,11)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (816 samples, 0.78%)</title><rect x="97.7145%" y="677" width="0.7761%" height="15" fill="rgb(231,180,14)" fg:x="102739" fg:w="816"/><text x="97.9645%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (822 samples, 0.78%)</title><rect x="97.7145%" y="869" width="0.7818%" height="15" fill="rgb(232,88,2)" fg:x="102739" fg:w="822"/><text x="97.9645%" y="879.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="98.4992%" y="501" width="0.0352%" height="15" fill="rgb(205,220,8)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="511.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="98.4992%" y="485" width="0.0352%" height="15" fill="rgb(225,23,53)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect x="98.4992%" y="469" width="0.0352%" height="15" fill="rgb(213,62,29)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.04%)</title><rect x="98.4992%" y="453" width="0.0352%" height="15" fill="rgb(227,75,7)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.04%)</title><rect x="98.4992%" y="437" width="0.0352%" height="15" fill="rgb(207,105,14)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.04%)</title><rect x="98.4992%" y="421" width="0.0352%" height="15" fill="rgb(245,62,29)" fg:x="103564" fg:w="37"/><text x="98.7492%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (36 samples, 0.03%)</title><rect x="98.5001%" y="405" width="0.0342%" height="15" fill="rgb(236,202,4)" fg:x="103565" fg:w="36"/><text x="98.7501%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.03%)</title><rect x="98.5001%" y="389" width="0.0342%" height="15" fill="rgb(250,67,1)" fg:x="103565" fg:w="36"/><text x="98.7501%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="98.5001%" y="373" width="0.0342%" height="15" fill="rgb(253,115,44)" fg:x="103565" fg:w="36"/><text x="98.7501%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (39 samples, 0.04%)</title><rect x="98.4982%" y="565" width="0.0371%" height="15" fill="rgb(251,139,18)" fg:x="103563" fg:w="39"/><text x="98.7482%" y="575.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="98.4982%" y="549" width="0.0371%" height="15" fill="rgb(218,22,32)" fg:x="103563" fg:w="39"/><text x="98.7482%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="98.4992%" y="533" width="0.0361%" height="15" fill="rgb(243,53,5)" fg:x="103564" fg:w="38"/><text x="98.7492%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (38 samples, 0.04%)</title><rect x="98.4992%" y="517" width="0.0361%" height="15" fill="rgb(227,56,16)" fg:x="103564" fg:w="38"/><text x="98.7492%" y="527.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (42 samples, 0.04%)</title><rect x="98.4982%" y="581" width="0.0399%" height="15" fill="rgb(245,53,0)" fg:x="103563" fg:w="42"/><text x="98.7482%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (44 samples, 0.04%)</title><rect x="98.4982%" y="645" width="0.0418%" height="15" fill="rgb(216,170,35)" fg:x="103563" fg:w="44"/><text x="98.7482%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (44 samples, 0.04%)</title><rect x="98.4982%" y="629" width="0.0418%" height="15" fill="rgb(211,200,8)" fg:x="103563" fg:w="44"/><text x="98.7482%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.04%)</title><rect x="98.4982%" y="613" width="0.0418%" height="15" fill="rgb(228,204,44)" fg:x="103563" fg:w="44"/><text x="98.7482%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (44 samples, 0.04%)</title><rect x="98.4982%" y="597" width="0.0418%" height="15" fill="rgb(214,121,17)" fg:x="103563" fg:w="44"/><text x="98.7482%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (879 samples, 0.84%)</title><rect x="97.7145%" y="901" width="0.8360%" height="15" fill="rgb(233,64,38)" fg:x="102739" fg:w="879"/><text x="97.9645%" y="911.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (879 samples, 0.84%)</title><rect x="97.7145%" y="885" width="0.8360%" height="15" fill="rgb(253,54,19)" fg:x="102739" fg:w="879"/><text x="97.9645%" y="895.50"></text></g><g><title>bevy_render::extract (57 samples, 0.05%)</title><rect x="98.4963%" y="869" width="0.0542%" height="15" fill="rgb(253,94,18)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (57 samples, 0.05%)</title><rect x="98.4963%" y="853" width="0.0542%" height="15" fill="rgb(227,57,52)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (57 samples, 0.05%)</title><rect x="98.4963%" y="837" width="0.0542%" height="15" fill="rgb(230,228,50)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (57 samples, 0.05%)</title><rect x="98.4963%" y="821" width="0.0542%" height="15" fill="rgb(217,205,27)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57 samples, 0.05%)</title><rect x="98.4963%" y="805" width="0.0542%" height="15" fill="rgb(252,71,50)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57 samples, 0.05%)</title><rect x="98.4963%" y="789" width="0.0542%" height="15" fill="rgb(209,86,4)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (57 samples, 0.05%)</title><rect x="98.4963%" y="773" width="0.0542%" height="15" fill="rgb(229,94,0)" fg:x="103561" fg:w="57"/><text x="98.7463%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (56 samples, 0.05%)</title><rect x="98.4973%" y="757" width="0.0533%" height="15" fill="rgb(252,223,21)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (56 samples, 0.05%)</title><rect x="98.4973%" y="741" width="0.0533%" height="15" fill="rgb(230,210,4)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.05%)</title><rect x="98.4973%" y="725" width="0.0533%" height="15" fill="rgb(240,149,38)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (56 samples, 0.05%)</title><rect x="98.4973%" y="709" width="0.0533%" height="15" fill="rgb(254,105,20)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.05%)</title><rect x="98.4973%" y="693" width="0.0533%" height="15" fill="rgb(253,87,46)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (56 samples, 0.05%)</title><rect x="98.4973%" y="677" width="0.0533%" height="15" fill="rgb(253,116,33)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (56 samples, 0.05%)</title><rect x="98.4973%" y="661" width="0.0533%" height="15" fill="rgb(229,198,5)" fg:x="103562" fg:w="56"/><text x="98.7473%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (900 samples, 0.86%)</title><rect x="97.7145%" y="981" width="0.8560%" height="15" fill="rgb(242,38,37)" fg:x="102739" fg:w="900"/><text x="97.9645%" y="991.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (900 samples, 0.86%)</title><rect x="97.7145%" y="965" width="0.8560%" height="15" fill="rgb(242,69,53)" fg:x="102739" fg:w="900"/><text x="97.9645%" y="975.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (900 samples, 0.86%)</title><rect x="97.7145%" y="949" width="0.8560%" height="15" fill="rgb(249,80,16)" fg:x="102739" fg:w="900"/><text x="97.9645%" y="959.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (900 samples, 0.86%)</title><rect x="97.7145%" y="933" width="0.8560%" height="15" fill="rgb(206,128,11)" fg:x="102739" fg:w="900"/><text x="97.9645%" y="943.50"></text></g><g><title>bevy_app::app::App::update (900 samples, 0.86%)</title><rect x="97.7145%" y="917" width="0.8560%" height="15" fill="rgb(212,35,20)" fg:x="102739" fg:w="900"/><text x="97.9645%" y="927.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (21 samples, 0.02%)</title><rect x="98.5505%" y="901" width="0.0200%" height="15" fill="rgb(236,79,13)" fg:x="103618" fg:w="21"/><text x="98.8005%" y="911.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (21 samples, 0.02%)</title><rect x="98.5505%" y="885" width="0.0200%" height="15" fill="rgb(233,123,3)" fg:x="103618" fg:w="21"/><text x="98.8005%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (15 samples, 0.01%)</title><rect x="98.5562%" y="869" width="0.0143%" height="15" fill="rgb(214,93,52)" fg:x="103624" fg:w="15"/><text x="98.8062%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.01%)</title><rect x="98.5562%" y="853" width="0.0143%" height="15" fill="rgb(251,37,40)" fg:x="103624" fg:w="15"/><text x="98.8062%" y="863.50"></text></g><g><title>bevy_inspector_egui::world_inspector::plugin::world_inspector_ui (15 samples, 0.01%)</title><rect x="98.5562%" y="837" width="0.0143%" height="15" fill="rgb(227,80,54)" fg:x="103624" fg:w="15"/><text x="98.8062%" y="847.50"></text></g><g><title>egui::containers::window::Window::show (15 samples, 0.01%)</title><rect x="98.5562%" y="821" width="0.0143%" height="15" fill="rgb(254,48,11)" fg:x="103624" fg:w="15"/><text x="98.8062%" y="831.50"></text></g><g><title>egui::containers::window::Window::show_dyn (15 samples, 0.01%)</title><rect x="98.5562%" y="805" width="0.0143%" height="15" fill="rgb(235,193,26)" fg:x="103624" fg:w="15"/><text x="98.8062%" y="815.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (12 samples, 0.01%)</title><rect x="98.5933%" y="677" width="0.0114%" height="15" fill="rgb(229,99,21)" fg:x="103663" fg:w="12"/><text x="98.8433%" y="687.50"></text></g><g><title>wgpu::backend::direct::pass_impl::&lt;impl wgpu::RenderInner&lt;wgpu::backend::direct::Context&gt; for wgpu_core::command::render::RenderPass&gt;::set_vertex_buffer (12 samples, 0.01%)</title><rect x="98.5933%" y="661" width="0.0114%" height="15" fill="rgb(211,140,41)" fg:x="103663" fg:w="12"/><text x="98.8433%" y="671.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_vertex_buffer (14 samples, 0.01%)</title><rect x="98.5933%" y="693" width="0.0133%" height="15" fill="rgb(240,227,30)" fg:x="103663" fg:w="14"/><text x="98.8433%" y="703.50"></text></g><g><title>&lt;E as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (38 samples, 0.04%)</title><rect x="98.5753%" y="725" width="0.0361%" height="15" fill="rgb(215,224,45)" fg:x="103644" fg:w="38"/><text x="98.8253%" y="735.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::DrawMeshInstanced as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (23 samples, 0.02%)</title><rect x="98.5895%" y="709" width="0.0219%" height="15" fill="rgb(206,123,31)" fg:x="103659" fg:w="23"/><text x="98.8395%" y="719.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (39 samples, 0.04%)</title><rect x="98.5753%" y="741" width="0.0371%" height="15" fill="rgb(210,138,16)" fg:x="103644" fg:w="39"/><text x="98.8253%" y="751.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (43 samples, 0.04%)</title><rect x="98.5753%" y="757" width="0.0409%" height="15" fill="rgb(228,57,28)" fg:x="103644" fg:w="43"/><text x="98.8253%" y="767.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (44 samples, 0.04%)</title><rect x="98.5753%" y="773" width="0.0418%" height="15" fill="rgb(242,170,10)" fg:x="103644" fg:w="44"/><text x="98.8253%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (46 samples, 0.04%)</title><rect x="98.5753%" y="805" width="0.0438%" height="15" fill="rgb(228,214,39)" fg:x="103644" fg:w="46"/><text x="98.8253%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (46 samples, 0.04%)</title><rect x="98.5753%" y="789" width="0.0438%" height="15" fill="rgb(218,179,33)" fg:x="103644" fg:w="46"/><text x="98.8253%" y="799.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (15 samples, 0.01%)</title><rect x="98.6371%" y="757" width="0.0143%" height="15" fill="rgb(235,193,39)" fg:x="103709" fg:w="15"/><text x="98.8871%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::allocator::GpuAllocator&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="98.6694%" y="693" width="0.0257%" height="15" fill="rgb(219,221,36)" fg:x="103743" fg:w="27"/><text x="98.9194%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="98.6694%" y="677" width="0.0257%" height="15" fill="rgb(248,218,19)" fg:x="103743" fg:w="27"/><text x="98.9194%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (27 samples, 0.03%)</title><rect x="98.6694%" y="661" width="0.0257%" height="15" fill="rgb(205,50,9)" fg:x="103743" fg:w="27"/><text x="98.9194%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (27 samples, 0.03%)</title><rect x="98.6694%" y="645" width="0.0257%" height="15" fill="rgb(238,81,28)" fg:x="103743" fg:w="27"/><text x="98.9194%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.03%)</title><rect x="98.6694%" y="629" width="0.0257%" height="15" fill="rgb(235,110,19)" fg:x="103743" fg:w="27"/><text x="98.9194%" y="639.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (46 samples, 0.04%)</title><rect x="98.6951%" y="693" width="0.0438%" height="15" fill="rgb(214,7,14)" fg:x="103770" fg:w="46"/><text x="98.9451%" y="703.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (32 samples, 0.03%)</title><rect x="98.7084%" y="677" width="0.0304%" height="15" fill="rgb(211,77,3)" fg:x="103784" fg:w="32"/><text x="98.9584%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::buddy::BuddyBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (28 samples, 0.03%)</title><rect x="98.7122%" y="661" width="0.0266%" height="15" fill="rgb(229,5,9)" fg:x="103788" fg:w="28"/><text x="98.9622%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (28 samples, 0.03%)</title><rect x="98.7122%" y="645" width="0.0266%" height="15" fill="rgb(225,90,11)" fg:x="103788" fg:w="28"/><text x="98.9622%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="98.7122%" y="629" width="0.0266%" height="15" fill="rgb(242,56,8)" fg:x="103788" fg:w="28"/><text x="98.9622%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.03%)</title><rect x="98.7122%" y="613" width="0.0266%" height="15" fill="rgb(249,212,39)" fg:x="103788" fg:w="28"/><text x="98.9622%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.03%)</title><rect x="98.7122%" y="597" width="0.0266%" height="15" fill="rgb(236,90,9)" fg:x="103788" fg:w="28"/><text x="98.9622%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::into_inner (21 samples, 0.02%)</title><rect x="98.7388%" y="693" width="0.0200%" height="15" fill="rgb(206,88,35)" fg:x="103816" fg:w="21"/><text x="98.9888%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.02%)</title><rect x="98.7588%" y="693" width="0.0209%" height="15" fill="rgb(205,126,30)" fg:x="103837" fg:w="22"/><text x="99.0088%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.02%)</title><rect x="98.7588%" y="677" width="0.0209%" height="15" fill="rgb(230,176,12)" fg:x="103837" fg:w="22"/><text x="99.0088%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (22 samples, 0.02%)</title><rect x="98.7588%" y="661" width="0.0209%" height="15" fill="rgb(243,19,9)" fg:x="103837" fg:w="22"/><text x="99.0088%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="98.7588%" y="645" width="0.0209%" height="15" fill="rgb(245,171,17)" fg:x="103837" fg:w="22"/><text x="99.0088%" y="655.50"></text></g><g><title>_nv011glcore (109 samples, 0.10%)</title><rect x="98.8749%" y="677" width="0.1037%" height="15" fill="rgb(227,52,21)" fg:x="103959" fg:w="109"/><text x="99.1249%" y="687.50"></text></g><g><title>__free (105 samples, 0.10%)</title><rect x="98.8787%" y="661" width="0.0999%" height="15" fill="rgb(238,69,14)" fg:x="103963" fg:w="105"/><text x="99.1287%" y="671.50"></text></g><g><title>_int_free (96 samples, 0.09%)</title><rect x="98.8872%" y="645" width="0.0913%" height="15" fill="rgb(241,156,39)" fg:x="103972" fg:w="96"/><text x="99.1372%" y="655.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (420 samples, 0.40%)</title><rect x="98.6542%" y="741" width="0.3995%" height="15" fill="rgb(212,227,28)" fg:x="103727" fg:w="420"/><text x="98.9042%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (420 samples, 0.40%)</title><rect x="98.6542%" y="725" width="0.3995%" height="15" fill="rgb(209,118,27)" fg:x="103727" fg:w="420"/><text x="98.9042%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (411 samples, 0.39%)</title><rect x="98.6628%" y="709" width="0.3909%" height="15" fill="rgb(226,102,5)" fg:x="103736" fg:w="411"/><text x="98.9128%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (288 samples, 0.27%)</title><rect x="98.7797%" y="693" width="0.2739%" height="15" fill="rgb(223,34,3)" fg:x="103859" fg:w="288"/><text x="99.0297%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (79 samples, 0.08%)</title><rect x="98.9785%" y="677" width="0.0751%" height="15" fill="rgb(221,81,38)" fg:x="104068" fg:w="79"/><text x="99.2285%" y="687.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (422 samples, 0.40%)</title><rect x="98.6532%" y="757" width="0.4014%" height="15" fill="rgb(236,219,28)" fg:x="103726" fg:w="422"/><text x="98.9032%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (518 samples, 0.49%)</title><rect x="98.5705%" y="885" width="0.4927%" height="15" fill="rgb(213,200,14)" fg:x="103639" fg:w="518"/><text x="98.8205%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (513 samples, 0.49%)</title><rect x="98.5753%" y="869" width="0.4879%" height="15" fill="rgb(240,33,19)" fg:x="103644" fg:w="513"/><text x="98.8253%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (513 samples, 0.49%)</title><rect x="98.5753%" y="853" width="0.4879%" height="15" fill="rgb(233,113,27)" fg:x="103644" fg:w="513"/><text x="98.8253%" y="863.50"></text></g><g><title>bevy_render::renderer::render_system (513 samples, 0.49%)</title><rect x="98.5753%" y="837" width="0.4879%" height="15" fill="rgb(220,221,18)" fg:x="103644" fg:w="513"/><text x="98.8253%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (513 samples, 0.49%)</title><rect x="98.5753%" y="821" width="0.4879%" height="15" fill="rgb(238,92,8)" fg:x="103644" fg:w="513"/><text x="98.8253%" y="831.50"></text></g><g><title>wgpu::Queue::submit (467 samples, 0.44%)</title><rect x="98.6190%" y="805" width="0.4442%" height="15" fill="rgb(222,164,16)" fg:x="103690" fg:w="467"/><text x="98.8690%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (467 samples, 0.44%)</title><rect x="98.6190%" y="789" width="0.4442%" height="15" fill="rgb(241,119,3)" fg:x="103690" fg:w="467"/><text x="98.8690%" y="799.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (467 samples, 0.44%)</title><rect x="98.6190%" y="773" width="0.4442%" height="15" fill="rgb(241,44,8)" fg:x="103690" fg:w="467"/><text x="98.8690%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (519 samples, 0.49%)</title><rect x="98.5705%" y="917" width="0.4936%" height="15" fill="rgb(230,36,40)" fg:x="103639" fg:w="519"/><text x="98.8205%" y="927.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (519 samples, 0.49%)</title><rect x="98.5705%" y="901" width="0.4936%" height="15" fill="rgb(243,16,36)" fg:x="103639" fg:w="519"/><text x="98.8205%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (523 samples, 0.50%)</title><rect x="98.5705%" y="981" width="0.4974%" height="15" fill="rgb(231,4,26)" fg:x="103639" fg:w="523"/><text x="98.8205%" y="991.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (523 samples, 0.50%)</title><rect x="98.5705%" y="965" width="0.4974%" height="15" fill="rgb(240,9,31)" fg:x="103639" fg:w="523"/><text x="98.8205%" y="975.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (523 samples, 0.50%)</title><rect x="98.5705%" y="949" width="0.4974%" height="15" fill="rgb(207,173,15)" fg:x="103639" fg:w="523"/><text x="98.8205%" y="959.50"></text></g><g><title>bevy_app::app::App::update (523 samples, 0.50%)</title><rect x="98.5705%" y="933" width="0.4974%" height="15" fill="rgb(224,192,53)" fg:x="103639" fg:w="523"/><text x="98.8205%" y="943.50"></text></g><g><title>[unknown] (64,408 samples, 61.26%)</title><rect x="37.8155%" y="997" width="61.2581%" height="15" fill="rgb(223,67,28)" fg:x="39760" fg:w="64408"/><text x="38.0655%" y="1007.50">[unknown]</text></g><g><title>__GI___ctype_init (11 samples, 0.01%)</title><rect x="99.1526%" y="965" width="0.0105%" height="15" fill="rgb(211,20,47)" fg:x="104251" fg:w="11"/><text x="99.4026%" y="975.50"></text></g><g><title>___pthread_cond_timedwait (26 samples, 0.02%)</title><rect x="99.1630%" y="917" width="0.0247%" height="15" fill="rgb(240,228,2)" fg:x="104262" fg:w="26"/><text x="99.4130%" y="927.50"></text></g><g><title>__futex_abstimed_wait_common (22 samples, 0.02%)</title><rect x="99.1668%" y="901" width="0.0209%" height="15" fill="rgb(248,151,12)" fg:x="104266" fg:w="22"/><text x="99.4168%" y="911.50"></text></g><g><title>_nv011glcore (29 samples, 0.03%)</title><rect x="99.1630%" y="965" width="0.0276%" height="15" fill="rgb(244,8,39)" fg:x="104262" fg:w="29"/><text x="99.4130%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (29 samples, 0.03%)</title><rect x="99.1630%" y="949" width="0.0276%" height="15" fill="rgb(222,26,8)" fg:x="104262" fg:w="29"/><text x="99.4130%" y="959.50"></text></g><g><title>_nv011glcore (29 samples, 0.03%)</title><rect x="99.1630%" y="933" width="0.0276%" height="15" fill="rgb(213,106,44)" fg:x="104262" fg:w="29"/><text x="99.4130%" y="943.50"></text></g><g><title>std::thread::sleep (39 samples, 0.04%)</title><rect x="99.1963%" y="757" width="0.0371%" height="15" fill="rgb(214,129,20)" fg:x="104297" fg:w="39"/><text x="99.4463%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (39 samples, 0.04%)</title><rect x="99.1963%" y="741" width="0.0371%" height="15" fill="rgb(212,32,13)" fg:x="104297" fg:w="39"/><text x="99.4463%" y="751.50"></text></g><g><title>__GI___nanosleep (39 samples, 0.04%)</title><rect x="99.1963%" y="725" width="0.0371%" height="15" fill="rgb(208,168,33)" fg:x="104297" fg:w="39"/><text x="99.4463%" y="735.50"></text></g><g><title>__clock_nanosleep (35 samples, 0.03%)</title><rect x="99.2001%" y="709" width="0.0333%" height="15" fill="rgb(231,207,8)" fg:x="104301" fg:w="35"/><text x="99.4501%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.05%)</title><rect x="99.1906%" y="949" width="0.0466%" height="15" fill="rgb(235,219,23)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.05%)</title><rect x="99.1906%" y="933" width="0.0466%" height="15" fill="rgb(226,216,26)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (49 samples, 0.05%)</title><rect x="99.1906%" y="917" width="0.0466%" height="15" fill="rgb(239,137,16)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (49 samples, 0.05%)</title><rect x="99.1906%" y="901" width="0.0466%" height="15" fill="rgb(207,12,36)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="911.50"></text></g><g><title>std::panic::catch_unwind (49 samples, 0.05%)</title><rect x="99.1906%" y="885" width="0.0466%" height="15" fill="rgb(210,214,24)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="895.50"></text></g><g><title>std::panicking::try (49 samples, 0.05%)</title><rect x="99.1906%" y="869" width="0.0466%" height="15" fill="rgb(206,56,30)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="879.50"></text></g><g><title>std::panicking::try::do_call (49 samples, 0.05%)</title><rect x="99.1906%" y="853" width="0.0466%" height="15" fill="rgb(228,143,26)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 0.05%)</title><rect x="99.1906%" y="837" width="0.0466%" height="15" fill="rgb(216,218,46)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (49 samples, 0.05%)</title><rect x="99.1906%" y="821" width="0.0466%" height="15" fill="rgb(206,6,19)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 0.05%)</title><rect x="99.1906%" y="805" width="0.0466%" height="15" fill="rgb(239,177,51)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="815.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (49 samples, 0.05%)</title><rect x="99.1906%" y="789" width="0.0466%" height="15" fill="rgb(216,55,25)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="799.50"></text></g><g><title>gilrs::ff::server::run (49 samples, 0.05%)</title><rect x="99.1906%" y="773" width="0.0466%" height="15" fill="rgb(231,163,29)" fg:x="104291" fg:w="49"/><text x="99.4406%" y="783.50"></text></g><g><title>__GI___clone (173 samples, 0.16%)</title><rect x="99.0736%" y="997" width="0.1645%" height="15" fill="rgb(232,149,50)" fg:x="104168" fg:w="173"/><text x="99.3236%" y="1007.50"></text></g><g><title>start_thread (94 samples, 0.09%)</title><rect x="99.1488%" y="981" width="0.0894%" height="15" fill="rgb(223,142,48)" fg:x="104247" fg:w="94"/><text x="99.3988%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50 samples, 0.05%)</title><rect x="99.1906%" y="965" width="0.0476%" height="15" fill="rgb(245,83,23)" fg:x="104291" fg:w="50"/><text x="99.4406%" y="975.50"></text></g><g><title>[libudev.so.1.7.3] (11 samples, 0.01%)</title><rect x="99.2581%" y="501" width="0.0105%" height="15" fill="rgb(224,63,2)" fg:x="104362" fg:w="11"/><text x="99.5081%" y="511.50"></text></g><g><title>[libudev.so.1.7.3] (19 samples, 0.02%)</title><rect x="99.2553%" y="517" width="0.0181%" height="15" fill="rgb(218,65,53)" fg:x="104359" fg:w="19"/><text x="99.5053%" y="527.50"></text></g><g><title>[libudev.so.1.7.3] (29 samples, 0.03%)</title><rect x="99.2553%" y="533" width="0.0276%" height="15" fill="rgb(221,84,29)" fg:x="104359" fg:w="29"/><text x="99.5053%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (34 samples, 0.03%)</title><rect x="99.2553%" y="549" width="0.0323%" height="15" fill="rgb(234,0,32)" fg:x="104359" fg:w="34"/><text x="99.5053%" y="559.50"></text></g><g><title>udev_device_new_from_environment (11 samples, 0.01%)</title><rect x="99.2876%" y="549" width="0.0105%" height="15" fill="rgb(206,20,16)" fg:x="104393" fg:w="11"/><text x="99.5376%" y="559.50"></text></g><g><title>udev_device_new_from_environment (11 samples, 0.01%)</title><rect x="99.2876%" y="533" width="0.0105%" height="15" fill="rgb(244,172,18)" fg:x="104393" fg:w="11"/><text x="99.5376%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (46 samples, 0.04%)</title><rect x="99.2553%" y="565" width="0.0438%" height="15" fill="rgb(254,133,1)" fg:x="104359" fg:w="46"/><text x="99.5053%" y="575.50"></text></g><g><title>__libc_start_main_alias_2 (53 samples, 0.05%)</title><rect x="99.2534%" y="981" width="0.0504%" height="15" fill="rgb(222,206,41)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="991.50"></text></g><g><title>__libc_start_call_main (53 samples, 0.05%)</title><rect x="99.2534%" y="965" width="0.0504%" height="15" fill="rgb(212,3,42)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="975.50"></text></g><g><title>main (53 samples, 0.05%)</title><rect x="99.2534%" y="949" width="0.0504%" height="15" fill="rgb(241,11,4)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="959.50"></text></g><g><title>std::rt::lang_start_internal (53 samples, 0.05%)</title><rect x="99.2534%" y="933" width="0.0504%" height="15" fill="rgb(205,19,26)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="943.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.05%)</title><rect x="99.2534%" y="917" width="0.0504%" height="15" fill="rgb(210,179,32)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="927.50"></text></g><g><title>std::panicking::try (53 samples, 0.05%)</title><rect x="99.2534%" y="901" width="0.0504%" height="15" fill="rgb(227,116,49)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="911.50"></text></g><g><title>std::panicking::try::do_call (53 samples, 0.05%)</title><rect x="99.2534%" y="885" width="0.0504%" height="15" fill="rgb(211,146,6)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="895.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (53 samples, 0.05%)</title><rect x="99.2534%" y="869" width="0.0504%" height="15" fill="rgb(219,44,39)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="879.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.05%)</title><rect x="99.2534%" y="853" width="0.0504%" height="15" fill="rgb(234,128,11)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="863.50"></text></g><g><title>std::panicking::try (53 samples, 0.05%)</title><rect x="99.2534%" y="837" width="0.0504%" height="15" fill="rgb(220,183,53)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="847.50"></text></g><g><title>std::panicking::try::do_call (53 samples, 0.05%)</title><rect x="99.2534%" y="821" width="0.0504%" height="15" fill="rgb(213,219,32)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (53 samples, 0.05%)</title><rect x="99.2534%" y="805" width="0.0504%" height="15" fill="rgb(232,156,16)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}} (53 samples, 0.05%)</title><rect x="99.2534%" y="789" width="0.0504%" height="15" fill="rgb(246,135,34)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (53 samples, 0.05%)</title><rect x="99.2534%" y="773" width="0.0504%" height="15" fill="rgb(241,99,0)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (53 samples, 0.05%)</title><rect x="99.2534%" y="757" width="0.0504%" height="15" fill="rgb(222,103,45)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="767.50"></text></g><g><title>stellar_coordinates_test::main (53 samples, 0.05%)</title><rect x="99.2534%" y="741" width="0.0504%" height="15" fill="rgb(212,57,4)" fg:x="104357" fg:w="53"/><text x="99.5034%" y="751.50"></text></g><g><title>bevy_app::app::App::add_plugins (52 samples, 0.05%)</title><rect x="99.2543%" y="725" width="0.0495%" height="15" fill="rgb(215,68,47)" fg:x="104358" fg:w="52"/><text x="99.5043%" y="735.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (52 samples, 0.05%)</title><rect x="99.2543%" y="709" width="0.0495%" height="15" fill="rgb(230,84,2)" fg:x="104358" fg:w="52"/><text x="99.5043%" y="719.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (52 samples, 0.05%)</title><rect x="99.2543%" y="693" width="0.0495%" height="15" fill="rgb(220,102,14)" fg:x="104358" fg:w="52"/><text x="99.5043%" y="703.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (52 samples, 0.05%)</title><rect x="99.2543%" y="677" width="0.0495%" height="15" fill="rgb(240,10,32)" fg:x="104358" fg:w="52"/><text x="99.5043%" y="687.50"></text></g><g><title>gilrs_core::Gilrs::new (51 samples, 0.05%)</title><rect x="99.2553%" y="661" width="0.0485%" height="15" fill="rgb(215,47,27)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="671.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (51 samples, 0.05%)</title><rect x="99.2553%" y="645" width="0.0485%" height="15" fill="rgb(233,188,43)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (51 samples, 0.05%)</title><rect x="99.2553%" y="629" width="0.0485%" height="15" fill="rgb(253,190,1)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="639.50"></text></g><g><title>udev_enumerate_scan_devices (51 samples, 0.05%)</title><rect x="99.2553%" y="613" width="0.0485%" height="15" fill="rgb(206,114,52)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="623.50"></text></g><g><title>udev_device_get_properties_list_entry (51 samples, 0.05%)</title><rect x="99.2553%" y="597" width="0.0485%" height="15" fill="rgb(233,120,37)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="607.50"></text></g><g><title>udev_device_get_properties_list_entry (51 samples, 0.05%)</title><rect x="99.2553%" y="581" width="0.0485%" height="15" fill="rgb(214,52,39)" fg:x="104359" fg:w="51"/><text x="99.5053%" y="591.50"></text></g><g><title>_start (60 samples, 0.06%)</title><rect x="99.2486%" y="997" width="0.0571%" height="15" fill="rgb(223,80,29)" fg:x="104352" fg:w="60"/><text x="99.4986%" y="1007.50"></text></g><g><title>anon.b4aeb4112201abe8c8a57f184ba7e955.24.llvm.4296881455672245523 (11 samples, 0.01%)</title><rect x="99.3200%" y="997" width="0.0105%" height="15" fill="rgb(230,101,40)" fg:x="104427" fg:w="11"/><text x="99.5700%" y="1007.50"></text></g><g><title>async_executor::Executor::is_empty (134 samples, 0.13%)</title><rect x="99.3418%" y="997" width="0.1274%" height="15" fill="rgb(219,211,8)" fg:x="104450" fg:w="134"/><text x="99.5918%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (134 samples, 0.13%)</title><rect x="99.3418%" y="981" width="0.1274%" height="15" fill="rgb(252,126,28)" fg:x="104450" fg:w="134"/><text x="99.5918%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::is_empty (28 samples, 0.03%)</title><rect x="99.4693%" y="997" width="0.0266%" height="15" fill="rgb(215,56,38)" fg:x="104584" fg:w="28"/><text x="99.7193%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (28 samples, 0.03%)</title><rect x="99.4693%" y="981" width="0.0266%" height="15" fill="rgb(249,55,44)" fg:x="104584" fg:w="28"/><text x="99.7193%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (383 samples, 0.36%)</title><rect x="99.4997%" y="997" width="0.3643%" height="15" fill="rgb(220,221,32)" fg:x="104616" fg:w="383"/><text x="99.7497%" y="1007.50"></text></g><g><title>stellar_coordin (70,640 samples, 67.19%)</title><rect x="32.7034%" y="1013" width="67.1853%" height="15" fill="rgb(212,216,41)" fg:x="34385" fg:w="70640"/><text x="32.9534%" y="1023.50">stellar_coordin</text></g><g><title>[anon] (11 samples, 0.01%)</title><rect x="99.8916%" y="997" width="0.0105%" height="15" fill="rgb(228,213,43)" fg:x="105028" fg:w="11"/><text x="100.1416%" y="1007.50"></text></g><g><title>pa_pstream_register_memfd_mempool (17 samples, 0.02%)</title><rect x="99.9230%" y="853" width="0.0162%" height="15" fill="rgb(211,31,26)" fg:x="105061" fg:w="17"/><text x="100.1730%" y="863.50"></text></g><g><title>pa_pstream_set_srbchannel (17 samples, 0.02%)</title><rect x="99.9230%" y="837" width="0.0162%" height="15" fill="rgb(229,202,19)" fg:x="105061" fg:w="17"/><text x="100.1730%" y="847.50"></text></g><g><title>pa_mainloop_dispatch (35 samples, 0.03%)</title><rect x="99.9068%" y="901" width="0.0333%" height="15" fill="rgb(229,105,46)" fg:x="105044" fg:w="35"/><text x="100.1568%" y="911.50"></text></g><g><title>pa_srbchannel_read (24 samples, 0.02%)</title><rect x="99.9173%" y="885" width="0.0228%" height="15" fill="rgb(235,108,1)" fg:x="105055" fg:w="24"/><text x="100.1673%" y="895.50"></text></g><g><title>pa_pstream_register_memfd_mempool (19 samples, 0.02%)</title><rect x="99.9220%" y="869" width="0.0181%" height="15" fill="rgb(245,111,35)" fg:x="105060" fg:w="19"/><text x="100.1720%" y="879.50"></text></g><g><title>__libc_poll (44 samples, 0.04%)</title><rect x="99.9448%" y="869" width="0.0418%" height="15" fill="rgb(219,185,31)" fg:x="105084" fg:w="44"/><text x="100.1948%" y="879.50"></text></g><g><title>pa_mainloop_poll (60 samples, 0.06%)</title><rect x="99.9401%" y="901" width="0.0571%" height="15" fill="rgb(214,4,43)" fg:x="105079" fg:w="60"/><text x="100.1901%" y="911.50"></text></g><g><title>pa_stream_set_name (59 samples, 0.06%)</title><rect x="99.9410%" y="885" width="0.0561%" height="15" fill="rgb(235,227,40)" fg:x="105080" fg:w="59"/><text x="100.1910%" y="895.50"></text></g><g><title>all (105,142 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(230,88,30)" fg:x="0" fg:w="105142"/><text x="0.2500%" y="1039.50"></text></g><g><title>threaded-ml (117 samples, 0.11%)</title><rect x="99.8887%" y="1013" width="0.1113%" height="15" fill="rgb(216,217,1)" fg:x="105025" fg:w="117"/><text x="100.1387%" y="1023.50"></text></g><g><title>__GI___clone (98 samples, 0.09%)</title><rect x="99.9068%" y="997" width="0.0932%" height="15" fill="rgb(248,139,50)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="1007.50"></text></g><g><title>start_thread (98 samples, 0.09%)</title><rect x="99.9068%" y="981" width="0.0932%" height="15" fill="rgb(233,1,21)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="991.50"></text></g><g><title>pa_mutex_unlock (98 samples, 0.09%)</title><rect x="99.9068%" y="965" width="0.0932%" height="15" fill="rgb(215,183,12)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="975.50"></text></g><g><title>pa_stream_update_sample_rate (98 samples, 0.09%)</title><rect x="99.9068%" y="949" width="0.0932%" height="15" fill="rgb(229,104,42)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="959.50"></text></g><g><title>pa_mainloop_run (98 samples, 0.09%)</title><rect x="99.9068%" y="933" width="0.0932%" height="15" fill="rgb(243,34,48)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="943.50"></text></g><g><title>pa_mainloop_iterate (98 samples, 0.09%)</title><rect x="99.9068%" y="917" width="0.0932%" height="15" fill="rgb(239,11,44)" fg:x="105044" fg:w="98"/><text x="100.1568%" y="927.50"></text></g></svg></svg>