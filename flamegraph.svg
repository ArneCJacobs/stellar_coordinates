<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1061.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="50662"><g><title>Async_Compute_T (9 samples, 0.02%)</title><rect x="0.0000%" y="1013" width="0.0178%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="9"/><text x="0.2500%" y="1023.50"></text></g><g><title>__GI___clone (8 samples, 0.02%)</title><rect x="0.0020%" y="997" width="0.0158%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="8"/><text x="0.2520%" y="1007.50"></text></g><g><title>start_thread (8 samples, 0.02%)</title><rect x="0.0020%" y="981" width="0.0158%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="8"/><text x="0.2520%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.01%)</title><rect x="0.0039%" y="965" width="0.0138%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="7"/><text x="0.2539%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.01%)</title><rect x="0.0039%" y="949" width="0.0138%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="7"/><text x="0.2539%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.01%)</title><rect x="0.0039%" y="933" width="0.0138%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="7"/><text x="0.2539%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.01%)</title><rect x="0.0039%" y="917" width="0.0138%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="7"/><text x="0.2539%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6 samples, 0.01%)</title><rect x="0.0059%" y="901" width="0.0118%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="6"/><text x="0.2559%" y="911.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="0.0059%" y="885" width="0.0118%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="6"/><text x="0.2559%" y="895.50"></text></g><g><title>std::panicking::try (6 samples, 0.01%)</title><rect x="0.0059%" y="869" width="0.0118%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="6"/><text x="0.2559%" y="879.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="0.0059%" y="853" width="0.0118%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="6"/><text x="0.2559%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.01%)</title><rect x="0.0059%" y="837" width="0.0118%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="6"/><text x="0.2559%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="0.0059%" y="821" width="0.0118%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="6"/><text x="0.2559%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.01%)</title><rect x="0.0059%" y="805" width="0.0118%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="6"/><text x="0.2559%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="0.0059%" y="789" width="0.0118%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="6"/><text x="0.2559%" y="799.50"></text></g><g><title>futures_lite::future::block_on (6 samples, 0.01%)</title><rect x="0.0059%" y="773" width="0.0118%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="6"/><text x="0.2559%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="0.0059%" y="757" width="0.0118%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="6"/><text x="0.2559%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="0.0059%" y="741" width="0.0118%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="6"/><text x="0.2559%" y="751.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.0336%" y="981" width="0.0118%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="6"/><text x="0.2836%" y="991.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="0.0493%" y="981" width="0.0197%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="10"/><text x="0.2993%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="0.0711%" y="981" width="0.0257%" height="15" fill="rgb(249,33,26)" fg:x="36" fg:w="13"/><text x="0.3211%" y="991.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (9 samples, 0.02%)</title><rect x="0.0790%" y="965" width="0.0178%" height="15" fill="rgb(235,183,28)" fg:x="40" fg:w="9"/><text x="0.3290%" y="975.50"></text></g><g><title>[[heap]] (103 samples, 0.20%)</title><rect x="0.0296%" y="997" width="0.2033%" height="15" fill="rgb(221,5,38)" fg:x="15" fg:w="103"/><text x="0.2796%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="0.2388%" y="981" width="0.0237%" height="15" fill="rgb(247,18,42)" fg:x="121" fg:w="12"/><text x="0.4888%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6 samples, 0.01%)</title><rect x="0.2842%" y="981" width="0.0118%" height="15" fill="rgb(241,131,45)" fg:x="144" fg:w="6"/><text x="0.5342%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (8 samples, 0.02%)</title><rect x="0.3277%" y="981" width="0.0158%" height="15" fill="rgb(249,31,29)" fg:x="166" fg:w="8"/><text x="0.5777%" y="991.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (9 samples, 0.02%)</title><rect x="0.3573%" y="981" width="0.0178%" height="15" fill="rgb(225,111,53)" fg:x="181" fg:w="9"/><text x="0.6073%" y="991.50"></text></g><g><title>parking::Parker::new (11 samples, 0.02%)</title><rect x="0.3889%" y="981" width="0.0217%" height="15" fill="rgb(238,160,17)" fg:x="197" fg:w="11"/><text x="0.6389%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.3948%" y="965" width="0.0158%" height="15" fill="rgb(214,148,48)" fg:x="200" fg:w="8"/><text x="0.6448%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (8 samples, 0.02%)</title><rect x="0.3948%" y="949" width="0.0158%" height="15" fill="rgb(232,36,49)" fg:x="200" fg:w="8"/><text x="0.6448%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.3948%" y="933" width="0.0158%" height="15" fill="rgb(209,103,24)" fg:x="200" fg:w="8"/><text x="0.6448%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.3948%" y="917" width="0.0158%" height="15" fill="rgb(229,88,8)" fg:x="200" fg:w="8"/><text x="0.6448%" y="927.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8 samples, 0.02%)</title><rect x="0.3948%" y="901" width="0.0158%" height="15" fill="rgb(213,181,19)" fg:x="200" fg:w="8"/><text x="0.6448%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.3987%" y="885" width="0.0118%" height="15" fill="rgb(254,191,54)" fg:x="202" fg:w="6"/><text x="0.6487%" y="895.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (6 samples, 0.01%)</title><rect x="0.3987%" y="869" width="0.0118%" height="15" fill="rgb(241,83,37)" fg:x="202" fg:w="6"/><text x="0.6487%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.3987%" y="853" width="0.0118%" height="15" fill="rgb(233,36,39)" fg:x="202" fg:w="6"/><text x="0.6487%" y="863.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6 samples, 0.01%)</title><rect x="0.3987%" y="837" width="0.0118%" height="15" fill="rgb(226,3,54)" fg:x="202" fg:w="6"/><text x="0.6487%" y="847.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.3987%" y="821" width="0.0118%" height="15" fill="rgb(245,192,40)" fg:x="202" fg:w="6"/><text x="0.6487%" y="831.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="0.3987%" y="805" width="0.0118%" height="15" fill="rgb(238,167,29)" fg:x="202" fg:w="6"/><text x="0.6487%" y="815.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="0.3987%" y="789" width="0.0118%" height="15" fill="rgb(232,182,51)" fg:x="202" fg:w="6"/><text x="0.6487%" y="799.50"></text></g><g><title>std::sys::unix::futex::futex_wait (8 samples, 0.02%)</title><rect x="0.4185%" y="981" width="0.0158%" height="15" fill="rgb(231,60,39)" fg:x="212" fg:w="8"/><text x="0.6685%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="0.4520%" y="981" width="0.0158%" height="15" fill="rgb(208,69,12)" fg:x="229" fg:w="8"/><text x="0.7020%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="0.4560%" y="965" width="0.0118%" height="15" fill="rgb(235,93,37)" fg:x="231" fg:w="6"/><text x="0.7060%" y="975.50"></text></g><g><title>update_get_addr (6 samples, 0.01%)</title><rect x="0.4698%" y="981" width="0.0118%" height="15" fill="rgb(213,116,39)" fg:x="238" fg:w="6"/><text x="0.7198%" y="991.50"></text></g><g><title>[anon] (128 samples, 0.25%)</title><rect x="0.2349%" y="997" width="0.2527%" height="15" fill="rgb(222,207,29)" fg:x="119" fg:w="128"/><text x="0.4849%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="0.4954%" y="981" width="0.0355%" height="15" fill="rgb(206,96,30)" fg:x="251" fg:w="18"/><text x="0.7454%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.03%)</title><rect x="0.4994%" y="965" width="0.0316%" height="15" fill="rgb(218,138,4)" fg:x="253" fg:w="16"/><text x="0.7494%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.03%)</title><rect x="0.4994%" y="949" width="0.0316%" height="15" fill="rgb(250,191,14)" fg:x="253" fg:w="16"/><text x="0.7494%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.03%)</title><rect x="0.4994%" y="933" width="0.0316%" height="15" fill="rgb(239,60,40)" fg:x="253" fg:w="16"/><text x="0.7494%" y="943.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="0.4994%" y="917" width="0.0316%" height="15" fill="rgb(206,27,48)" fg:x="253" fg:w="16"/><text x="0.7494%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="0.4994%" y="901" width="0.0316%" height="15" fill="rgb(225,35,8)" fg:x="253" fg:w="16"/><text x="0.7494%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.03%)</title><rect x="0.4994%" y="885" width="0.0316%" height="15" fill="rgb(250,213,24)" fg:x="253" fg:w="16"/><text x="0.7494%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.03%)</title><rect x="0.4994%" y="869" width="0.0316%" height="15" fill="rgb(247,123,22)" fg:x="253" fg:w="16"/><text x="0.7494%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.03%)</title><rect x="0.4994%" y="853" width="0.0316%" height="15" fill="rgb(231,138,38)" fg:x="253" fg:w="16"/><text x="0.7494%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.03%)</title><rect x="0.4994%" y="837" width="0.0316%" height="15" fill="rgb(231,145,46)" fg:x="253" fg:w="16"/><text x="0.7494%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.03%)</title><rect x="0.4994%" y="821" width="0.0316%" height="15" fill="rgb(251,118,11)" fg:x="253" fg:w="16"/><text x="0.7494%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (42 samples, 0.08%)</title><rect x="0.5468%" y="981" width="0.0829%" height="15" fill="rgb(217,147,25)" fg:x="277" fg:w="42"/><text x="0.7968%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="0.6514%" y="981" width="0.0257%" height="15" fill="rgb(247,81,37)" fg:x="330" fg:w="13"/><text x="0.9014%" y="991.50"></text></g><g><title>__rdl_alloc (6 samples, 0.01%)</title><rect x="0.6770%" y="981" width="0.0118%" height="15" fill="rgb(209,12,38)" fg:x="343" fg:w="6"/><text x="0.9270%" y="991.50"></text></g><g><title>async_executor::steal (8 samples, 0.02%)</title><rect x="0.7224%" y="981" width="0.0158%" height="15" fill="rgb(227,1,9)" fg:x="366" fg:w="8"/><text x="0.9724%" y="991.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (14 samples, 0.03%)</title><rect x="0.7441%" y="981" width="0.0276%" height="15" fill="rgb(248,47,43)" fg:x="377" fg:w="14"/><text x="0.9941%" y="991.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (12 samples, 0.02%)</title><rect x="0.7481%" y="965" width="0.0237%" height="15" fill="rgb(221,10,30)" fg:x="379" fg:w="12"/><text x="0.9981%" y="975.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (9 samples, 0.02%)</title><rect x="0.7836%" y="981" width="0.0178%" height="15" fill="rgb(210,229,1)" fg:x="397" fg:w="9"/><text x="1.0336%" y="991.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (23 samples, 0.05%)</title><rect x="0.8014%" y="981" width="0.0454%" height="15" fill="rgb(222,148,37)" fg:x="406" fg:w="23"/><text x="1.0514%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (24 samples, 0.05%)</title><rect x="0.8468%" y="981" width="0.0474%" height="15" fill="rgb(234,67,33)" fg:x="429" fg:w="24"/><text x="1.0968%" y="991.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (8 samples, 0.02%)</title><rect x="0.8784%" y="965" width="0.0158%" height="15" fill="rgb(247,98,35)" fg:x="445" fg:w="8"/><text x="1.1284%" y="975.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (8 samples, 0.02%)</title><rect x="0.8784%" y="949" width="0.0158%" height="15" fill="rgb(247,138,52)" fg:x="445" fg:w="8"/><text x="1.1284%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.03%)</title><rect x="0.9159%" y="981" width="0.0316%" height="15" fill="rgb(213,79,30)" fg:x="464" fg:w="16"/><text x="1.1659%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.02%)</title><rect x="0.9317%" y="965" width="0.0158%" height="15" fill="rgb(246,177,23)" fg:x="472" fg:w="8"/><text x="1.1817%" y="975.50"></text></g><g><title>parking::Parker::park (7 samples, 0.01%)</title><rect x="0.9850%" y="981" width="0.0138%" height="15" fill="rgb(230,62,27)" fg:x="499" fg:w="7"/><text x="1.2350%" y="991.50"></text></g><g><title>syscall (10 samples, 0.02%)</title><rect x="1.0225%" y="981" width="0.0197%" height="15" fill="rgb(216,154,8)" fg:x="518" fg:w="10"/><text x="1.2725%" y="991.50"></text></g><g><title>[unknown] (286 samples, 0.56%)</title><rect x="0.4875%" y="997" width="0.5645%" height="15" fill="rgb(244,35,45)" fg:x="247" fg:w="286"/><text x="0.7375%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="1.1291%" y="629" width="0.0138%" height="15" fill="rgb(251,115,12)" fg:x="572" fg:w="7"/><text x="1.3791%" y="639.50"></text></g><g><title>core::task::wake::Waker::will_wake (10 samples, 0.02%)</title><rect x="1.1429%" y="629" width="0.0197%" height="15" fill="rgb(240,54,50)" fg:x="579" fg:w="10"/><text x="1.3929%" y="639.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="1.1429%" y="613" width="0.0197%" height="15" fill="rgb(233,84,52)" fg:x="579" fg:w="10"/><text x="1.3929%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.02%)</title><rect x="1.1448%" y="597" width="0.0178%" height="15" fill="rgb(207,117,47)" fg:x="580" fg:w="9"/><text x="1.3948%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="1.1448%" y="581" width="0.0178%" height="15" fill="rgb(249,43,39)" fg:x="580" fg:w="9"/><text x="1.3948%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (39 samples, 0.08%)</title><rect x="1.1172%" y="645" width="0.0770%" height="15" fill="rgb(209,38,44)" fg:x="566" fg:w="39"/><text x="1.3672%" y="655.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.03%)</title><rect x="1.1626%" y="629" width="0.0316%" height="15" fill="rgb(236,212,23)" fg:x="589" fg:w="16"/><text x="1.4126%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.03%)</title><rect x="1.1626%" y="613" width="0.0316%" height="15" fill="rgb(242,79,21)" fg:x="589" fg:w="16"/><text x="1.4126%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.03%)</title><rect x="1.1626%" y="597" width="0.0316%" height="15" fill="rgb(211,96,35)" fg:x="589" fg:w="16"/><text x="1.4126%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.03%)</title><rect x="1.1626%" y="581" width="0.0316%" height="15" fill="rgb(253,215,40)" fg:x="589" fg:w="16"/><text x="1.4126%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.03%)</title><rect x="1.1626%" y="565" width="0.0316%" height="15" fill="rgb(211,81,21)" fg:x="589" fg:w="16"/><text x="1.4126%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.03%)</title><rect x="1.1626%" y="549" width="0.0316%" height="15" fill="rgb(208,190,38)" fg:x="589" fg:w="16"/><text x="1.4126%" y="559.50"></text></g><g><title>concurrent_queue::full_fence (6 samples, 0.01%)</title><rect x="1.2455%" y="597" width="0.0118%" height="15" fill="rgb(235,213,38)" fg:x="631" fg:w="6"/><text x="1.4955%" y="607.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.18%)</title><rect x="1.1034%" y="661" width="0.1816%" height="15" fill="rgb(237,122,38)" fg:x="559" fg:w="92"/><text x="1.3534%" y="671.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (46 samples, 0.09%)</title><rect x="1.1942%" y="645" width="0.0908%" height="15" fill="rgb(244,218,35)" fg:x="605" fg:w="46"/><text x="1.4442%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (46 samples, 0.09%)</title><rect x="1.1942%" y="629" width="0.0908%" height="15" fill="rgb(240,68,47)" fg:x="605" fg:w="46"/><text x="1.4442%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (22 samples, 0.04%)</title><rect x="1.2416%" y="613" width="0.0434%" height="15" fill="rgb(210,16,53)" fg:x="629" fg:w="22"/><text x="1.4916%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.03%)</title><rect x="1.2593%" y="597" width="0.0257%" height="15" fill="rgb(235,124,12)" fg:x="638" fg:w="13"/><text x="1.5093%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.03%)</title><rect x="1.2593%" y="581" width="0.0257%" height="15" fill="rgb(224,169,11)" fg:x="638" fg:w="13"/><text x="1.5093%" y="591.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (15 samples, 0.03%)</title><rect x="1.2870%" y="629" width="0.0296%" height="15" fill="rgb(250,166,2)" fg:x="652" fg:w="15"/><text x="1.5370%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="1.3876%" y="517" width="0.0138%" height="15" fill="rgb(242,216,29)" fg:x="703" fg:w="7"/><text x="1.6376%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.01%)</title><rect x="1.3876%" y="501" width="0.0138%" height="15" fill="rgb(230,116,27)" fg:x="703" fg:w="7"/><text x="1.6376%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.04%)</title><rect x="1.4034%" y="469" width="0.0375%" height="15" fill="rgb(228,99,48)" fg:x="711" fg:w="19"/><text x="1.6534%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.04%)</title><rect x="1.4054%" y="453" width="0.0355%" height="15" fill="rgb(253,11,6)" fg:x="712" fg:w="18"/><text x="1.6554%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.03%)</title><rect x="1.4074%" y="437" width="0.0336%" height="15" fill="rgb(247,143,39)" fg:x="713" fg:w="17"/><text x="1.6574%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="1.4251%" y="421" width="0.0158%" height="15" fill="rgb(236,97,10)" fg:x="722" fg:w="8"/><text x="1.6751%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (6 samples, 0.01%)</title><rect x="1.4291%" y="405" width="0.0118%" height="15" fill="rgb(233,208,19)" fg:x="724" fg:w="6"/><text x="1.6791%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.01%)</title><rect x="1.4291%" y="389" width="0.0118%" height="15" fill="rgb(216,164,2)" fg:x="724" fg:w="6"/><text x="1.6791%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="1.4291%" y="373" width="0.0118%" height="15" fill="rgb(220,129,5)" fg:x="724" fg:w="6"/><text x="1.6791%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="1.4014%" y="517" width="0.0415%" height="15" fill="rgb(242,17,10)" fg:x="710" fg:w="21"/><text x="1.6514%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.04%)</title><rect x="1.4014%" y="501" width="0.0415%" height="15" fill="rgb(242,107,0)" fg:x="710" fg:w="21"/><text x="1.6514%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.04%)</title><rect x="1.4014%" y="485" width="0.0415%" height="15" fill="rgb(251,28,31)" fg:x="710" fg:w="21"/><text x="1.6514%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (59 samples, 0.12%)</title><rect x="1.5455%" y="485" width="0.1165%" height="15" fill="rgb(233,223,10)" fg:x="783" fg:w="59"/><text x="1.7955%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48 samples, 0.09%)</title><rect x="1.5672%" y="469" width="0.0947%" height="15" fill="rgb(215,21,27)" fg:x="794" fg:w="48"/><text x="1.8172%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.09%)</title><rect x="1.5672%" y="453" width="0.0947%" height="15" fill="rgb(232,23,21)" fg:x="794" fg:w="48"/><text x="1.8172%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (111 samples, 0.22%)</title><rect x="1.4528%" y="501" width="0.2191%" height="15" fill="rgb(244,5,23)" fg:x="736" fg:w="111"/><text x="1.7028%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="1.6798%" y="485" width="0.0138%" height="15" fill="rgb(226,81,46)" fg:x="851" fg:w="7"/><text x="1.9298%" y="495.50"></text></g><g><title>__free (8 samples, 0.02%)</title><rect x="1.7015%" y="469" width="0.0158%" height="15" fill="rgb(247,70,30)" fg:x="862" fg:w="8"/><text x="1.9515%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (9 samples, 0.02%)</title><rect x="1.7192%" y="469" width="0.0178%" height="15" fill="rgb(212,68,19)" fg:x="871" fg:w="9"/><text x="1.9692%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (9 samples, 0.02%)</title><rect x="1.7192%" y="453" width="0.0178%" height="15" fill="rgb(240,187,13)" fg:x="871" fg:w="9"/><text x="1.9692%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (9 samples, 0.02%)</title><rect x="1.7192%" y="437" width="0.0178%" height="15" fill="rgb(223,113,26)" fg:x="871" fg:w="9"/><text x="1.9692%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="1.7192%" y="421" width="0.0178%" height="15" fill="rgb(206,192,2)" fg:x="871" fg:w="9"/><text x="1.9692%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.03%)</title><rect x="1.7508%" y="469" width="0.0336%" height="15" fill="rgb(241,108,4)" fg:x="887" fg:w="17"/><text x="2.0008%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.03%)</title><rect x="1.7508%" y="453" width="0.0336%" height="15" fill="rgb(247,173,49)" fg:x="887" fg:w="17"/><text x="2.0008%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.02%)</title><rect x="1.7844%" y="469" width="0.0237%" height="15" fill="rgb(224,114,35)" fg:x="904" fg:w="12"/><text x="2.0344%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.02%)</title><rect x="1.7844%" y="453" width="0.0237%" height="15" fill="rgb(245,159,27)" fg:x="904" fg:w="12"/><text x="2.0344%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (75 samples, 0.15%)</title><rect x="1.6719%" y="501" width="0.1480%" height="15" fill="rgb(245,172,44)" fg:x="847" fg:w="75"/><text x="1.9219%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (64 samples, 0.13%)</title><rect x="1.6936%" y="485" width="0.1263%" height="15" fill="rgb(236,23,11)" fg:x="858" fg:w="64"/><text x="1.9436%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="1.8081%" y="469" width="0.0118%" height="15" fill="rgb(205,117,38)" fg:x="916" fg:w="6"/><text x="2.0581%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="1.8081%" y="453" width="0.0118%" height="15" fill="rgb(237,72,25)" fg:x="916" fg:w="6"/><text x="2.0581%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="1.8219%" y="469" width="0.0178%" height="15" fill="rgb(244,70,9)" fg:x="923" fg:w="9"/><text x="2.0719%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="1.8219%" y="453" width="0.0178%" height="15" fill="rgb(217,125,39)" fg:x="923" fg:w="9"/><text x="2.0719%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.03%)</title><rect x="1.8199%" y="501" width="0.0257%" height="15" fill="rgb(235,36,10)" fg:x="922" fg:w="13"/><text x="2.0699%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (13 samples, 0.03%)</title><rect x="1.8199%" y="485" width="0.0257%" height="15" fill="rgb(251,123,47)" fg:x="922" fg:w="13"/><text x="2.0699%" y="495.50"></text></g><g><title>async_executor::steal (207 samples, 0.41%)</title><rect x="1.4429%" y="517" width="0.4086%" height="15" fill="rgb(221,13,13)" fg:x="731" fg:w="207"/><text x="1.6929%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (44 samples, 0.09%)</title><rect x="1.9462%" y="485" width="0.0869%" height="15" fill="rgb(238,131,9)" fg:x="986" fg:w="44"/><text x="2.1962%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (42 samples, 0.08%)</title><rect x="1.9502%" y="469" width="0.0829%" height="15" fill="rgb(211,50,8)" fg:x="988" fg:w="42"/><text x="2.2002%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.08%)</title><rect x="1.9502%" y="453" width="0.0829%" height="15" fill="rgb(245,182,24)" fg:x="988" fg:w="42"/><text x="2.2002%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.08%)</title><rect x="1.9502%" y="437" width="0.0829%" height="15" fill="rgb(242,14,37)" fg:x="988" fg:w="42"/><text x="2.2002%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.03%)</title><rect x="2.0331%" y="485" width="0.0296%" height="15" fill="rgb(246,228,12)" fg:x="1030" fg:w="15"/><text x="2.2831%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.03%)</title><rect x="2.0331%" y="469" width="0.0296%" height="15" fill="rgb(213,55,15)" fg:x="1030" fg:w="15"/><text x="2.2831%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (109 samples, 0.22%)</title><rect x="1.9008%" y="501" width="0.2152%" height="15" fill="rgb(209,9,3)" fg:x="963" fg:w="109"/><text x="2.1508%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.05%)</title><rect x="2.0627%" y="485" width="0.0533%" height="15" fill="rgb(230,59,30)" fg:x="1045" fg:w="27"/><text x="2.3127%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.05%)</title><rect x="2.0627%" y="469" width="0.0533%" height="15" fill="rgb(209,121,21)" fg:x="1045" fg:w="27"/><text x="2.3127%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (10 samples, 0.02%)</title><rect x="2.1436%" y="485" width="0.0197%" height="15" fill="rgb(220,109,13)" fg:x="1086" fg:w="10"/><text x="2.3936%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.02%)</title><rect x="2.1436%" y="469" width="0.0197%" height="15" fill="rgb(232,18,1)" fg:x="1086" fg:w="10"/><text x="2.3936%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="2.1436%" y="453" width="0.0197%" height="15" fill="rgb(215,41,42)" fg:x="1086" fg:w="10"/><text x="2.3936%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="2.1436%" y="437" width="0.0197%" height="15" fill="rgb(224,123,36)" fg:x="1086" fg:w="10"/><text x="2.3936%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (9 samples, 0.02%)</title><rect x="2.1653%" y="485" width="0.0178%" height="15" fill="rgb(240,125,3)" fg:x="1097" fg:w="9"/><text x="2.4153%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="2.1673%" y="469" width="0.0158%" height="15" fill="rgb(205,98,50)" fg:x="1098" fg:w="8"/><text x="2.4173%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="2.1673%" y="453" width="0.0158%" height="15" fill="rgb(205,185,37)" fg:x="1098" fg:w="8"/><text x="2.4173%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 0.01%)</title><rect x="2.1969%" y="485" width="0.0138%" height="15" fill="rgb(238,207,15)" fg:x="1113" fg:w="7"/><text x="2.4469%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.01%)</title><rect x="2.1969%" y="469" width="0.0138%" height="15" fill="rgb(213,199,42)" fg:x="1113" fg:w="7"/><text x="2.4469%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (18 samples, 0.04%)</title><rect x="2.2107%" y="485" width="0.0355%" height="15" fill="rgb(235,201,11)" fg:x="1120" fg:w="18"/><text x="2.4607%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_or (18 samples, 0.04%)</title><rect x="2.2107%" y="469" width="0.0355%" height="15" fill="rgb(207,46,11)" fg:x="1120" fg:w="18"/><text x="2.4607%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (216 samples, 0.43%)</title><rect x="1.8515%" y="517" width="0.4264%" height="15" fill="rgb(241,35,35)" fg:x="938" fg:w="216"/><text x="2.1015%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (82 samples, 0.16%)</title><rect x="2.1160%" y="501" width="0.1619%" height="15" fill="rgb(243,32,47)" fg:x="1072" fg:w="82"/><text x="2.3660%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.03%)</title><rect x="2.2463%" y="485" width="0.0316%" height="15" fill="rgb(247,202,23)" fg:x="1138" fg:w="16"/><text x="2.4963%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.03%)</title><rect x="2.2463%" y="469" width="0.0316%" height="15" fill="rgb(219,102,11)" fg:x="1138" fg:w="16"/><text x="2.4963%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (22 samples, 0.04%)</title><rect x="2.2798%" y="453" width="0.0434%" height="15" fill="rgb(243,110,44)" fg:x="1155" fg:w="22"/><text x="2.5298%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.04%)</title><rect x="2.2798%" y="437" width="0.0434%" height="15" fill="rgb(222,74,54)" fg:x="1155" fg:w="22"/><text x="2.5298%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (24 samples, 0.05%)</title><rect x="2.2778%" y="517" width="0.0474%" height="15" fill="rgb(216,99,12)" fg:x="1154" fg:w="24"/><text x="2.5278%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.05%)</title><rect x="2.2778%" y="501" width="0.0474%" height="15" fill="rgb(226,22,26)" fg:x="1154" fg:w="24"/><text x="2.5278%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (23 samples, 0.05%)</title><rect x="2.2798%" y="485" width="0.0454%" height="15" fill="rgb(217,163,10)" fg:x="1155" fg:w="23"/><text x="2.5298%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (23 samples, 0.05%)</title><rect x="2.2798%" y="469" width="0.0454%" height="15" fill="rgb(213,25,53)" fg:x="1155" fg:w="23"/><text x="2.5298%" y="479.50"></text></g><g><title>__tls_get_addr (33 samples, 0.07%)</title><rect x="2.3390%" y="405" width="0.0651%" height="15" fill="rgb(252,105,26)" fg:x="1185" fg:w="33"/><text x="2.5890%" y="415.50"></text></g><g><title>update_get_addr (16 samples, 0.03%)</title><rect x="2.3726%" y="389" width="0.0316%" height="15" fill="rgb(220,39,43)" fg:x="1202" fg:w="16"/><text x="2.6226%" y="399.50"></text></g><g><title>_dl_update_slotinfo (14 samples, 0.03%)</title><rect x="2.3765%" y="373" width="0.0276%" height="15" fill="rgb(229,68,48)" fg:x="1204" fg:w="14"/><text x="2.6265%" y="383.50"></text></g><g><title>fastrand::RNG::__getit (48 samples, 0.09%)</title><rect x="2.3252%" y="469" width="0.0947%" height="15" fill="rgb(252,8,32)" fg:x="1178" fg:w="48"/><text x="2.5752%" y="479.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (43 samples, 0.08%)</title><rect x="2.3351%" y="453" width="0.0849%" height="15" fill="rgb(223,20,43)" fg:x="1183" fg:w="43"/><text x="2.5851%" y="463.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (43 samples, 0.08%)</title><rect x="2.3351%" y="437" width="0.0849%" height="15" fill="rgb(229,81,49)" fg:x="1183" fg:w="43"/><text x="2.5851%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (43 samples, 0.08%)</title><rect x="2.3351%" y="421" width="0.0849%" height="15" fill="rgb(236,28,36)" fg:x="1183" fg:w="43"/><text x="2.5851%" y="431.50"></text></g><g><title>_fini (8 samples, 0.02%)</title><rect x="2.4042%" y="405" width="0.0158%" height="15" fill="rgb(249,185,26)" fg:x="1218" fg:w="8"/><text x="2.6542%" y="415.50"></text></g><g><title>fastrand::usize (49 samples, 0.10%)</title><rect x="2.3252%" y="517" width="0.0967%" height="15" fill="rgb(249,174,33)" fg:x="1178" fg:w="49"/><text x="2.5752%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (49 samples, 0.10%)</title><rect x="2.3252%" y="501" width="0.0967%" height="15" fill="rgb(233,201,37)" fg:x="1178" fg:w="49"/><text x="2.5752%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.10%)</title><rect x="2.3252%" y="485" width="0.0967%" height="15" fill="rgb(221,78,26)" fg:x="1178" fg:w="49"/><text x="2.5752%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (12 samples, 0.02%)</title><rect x="2.4298%" y="469" width="0.0237%" height="15" fill="rgb(250,127,30)" fg:x="1231" fg:w="12"/><text x="2.6798%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.02%)</title><rect x="2.4298%" y="453" width="0.0237%" height="15" fill="rgb(230,49,44)" fg:x="1231" fg:w="12"/><text x="2.6798%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (559 samples, 1.10%)</title><rect x="1.3639%" y="533" width="1.1034%" height="15" fill="rgb(229,67,23)" fg:x="691" fg:w="559"/><text x="1.6139%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (23 samples, 0.05%)</title><rect x="2.4219%" y="517" width="0.0454%" height="15" fill="rgb(249,83,47)" fg:x="1227" fg:w="23"/><text x="2.6719%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (19 samples, 0.04%)</title><rect x="2.4298%" y="501" width="0.0375%" height="15" fill="rgb(215,43,3)" fg:x="1231" fg:w="19"/><text x="2.6798%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (19 samples, 0.04%)</title><rect x="2.4298%" y="485" width="0.0375%" height="15" fill="rgb(238,154,13)" fg:x="1231" fg:w="19"/><text x="2.6798%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (7 samples, 0.01%)</title><rect x="2.4535%" y="469" width="0.0138%" height="15" fill="rgb(219,56,2)" fg:x="1243" fg:w="7"/><text x="2.7035%" y="479.50"></text></g><g><title>async_executor::Sleepers::notify (7 samples, 0.01%)</title><rect x="2.4752%" y="517" width="0.0138%" height="15" fill="rgb(233,0,4)" fg:x="1254" fg:w="7"/><text x="2.7252%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (22 samples, 0.04%)</title><rect x="2.4969%" y="517" width="0.0434%" height="15" fill="rgb(235,30,7)" fg:x="1265" fg:w="22"/><text x="2.7469%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.04%)</title><rect x="2.4969%" y="501" width="0.0434%" height="15" fill="rgb(250,79,13)" fg:x="1265" fg:w="22"/><text x="2.7469%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (7 samples, 0.01%)</title><rect x="2.5404%" y="485" width="0.0138%" height="15" fill="rgb(211,146,34)" fg:x="1287" fg:w="7"/><text x="2.7904%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="2.5404%" y="469" width="0.0138%" height="15" fill="rgb(228,22,38)" fg:x="1287" fg:w="7"/><text x="2.7904%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="2.5404%" y="453" width="0.0138%" height="15" fill="rgb(235,168,5)" fg:x="1287" fg:w="7"/><text x="2.7904%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="2.5404%" y="437" width="0.0138%" height="15" fill="rgb(221,155,16)" fg:x="1287" fg:w="7"/><text x="2.7904%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (9 samples, 0.02%)</title><rect x="2.5798%" y="437" width="0.0178%" height="15" fill="rgb(215,215,53)" fg:x="1307" fg:w="9"/><text x="2.8298%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 0.02%)</title><rect x="2.5798%" y="421" width="0.0178%" height="15" fill="rgb(223,4,10)" fg:x="1307" fg:w="9"/><text x="2.8298%" y="431.50"></text></g><g><title>core::task::wake::Waker::wake (41 samples, 0.08%)</title><rect x="2.5404%" y="517" width="0.0809%" height="15" fill="rgb(234,103,6)" fg:x="1287" fg:w="41"/><text x="2.7904%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (41 samples, 0.08%)</title><rect x="2.5404%" y="501" width="0.0809%" height="15" fill="rgb(227,97,0)" fg:x="1287" fg:w="41"/><text x="2.7904%" y="511.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (34 samples, 0.07%)</title><rect x="2.5542%" y="485" width="0.0671%" height="15" fill="rgb(234,150,53)" fg:x="1294" fg:w="34"/><text x="2.8042%" y="495.50"></text></g><g><title>parking::Unparker::unpark (34 samples, 0.07%)</title><rect x="2.5542%" y="469" width="0.0671%" height="15" fill="rgb(228,201,54)" fg:x="1294" fg:w="34"/><text x="2.8042%" y="479.50"></text></g><g><title>parking::Inner::unpark (24 samples, 0.05%)</title><rect x="2.5739%" y="453" width="0.0474%" height="15" fill="rgb(222,22,37)" fg:x="1304" fg:w="24"/><text x="2.8239%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="2.6272%" y="469" width="0.0118%" height="15" fill="rgb(237,53,32)" fg:x="1331" fg:w="6"/><text x="2.8772%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="2.6272%" y="453" width="0.0118%" height="15" fill="rgb(233,25,53)" fg:x="1331" fg:w="6"/><text x="2.8772%" y="463.50"></text></g><g><title>async_executor::State::notify (88 samples, 0.17%)</title><rect x="2.4673%" y="533" width="0.1737%" height="15" fill="rgb(210,40,34)" fg:x="1250" fg:w="88"/><text x="2.7173%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="2.6213%" y="517" width="0.0197%" height="15" fill="rgb(241,220,44)" fg:x="1328" fg:w="10"/><text x="2.8713%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.01%)</title><rect x="2.6272%" y="501" width="0.0138%" height="15" fill="rgb(235,28,35)" fg:x="1331" fg:w="7"/><text x="2.8772%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (7 samples, 0.01%)</title><rect x="2.6272%" y="485" width="0.0138%" height="15" fill="rgb(210,56,17)" fg:x="1331" fg:w="7"/><text x="2.8772%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="2.6450%" y="501" width="0.0197%" height="15" fill="rgb(224,130,29)" fg:x="1340" fg:w="10"/><text x="2.8950%" y="511.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (9 samples, 0.02%)</title><rect x="2.6470%" y="485" width="0.0178%" height="15" fill="rgb(235,212,8)" fg:x="1341" fg:w="9"/><text x="2.8970%" y="495.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="2.6470%" y="469" width="0.0178%" height="15" fill="rgb(223,33,50)" fg:x="1341" fg:w="9"/><text x="2.8970%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="2.6470%" y="453" width="0.0178%" height="15" fill="rgb(219,149,13)" fg:x="1341" fg:w="9"/><text x="2.8970%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="2.6470%" y="437" width="0.0178%" height="15" fill="rgb(250,156,29)" fg:x="1341" fg:w="9"/><text x="2.8970%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="2.6470%" y="421" width="0.0178%" height="15" fill="rgb(216,193,19)" fg:x="1341" fg:w="9"/><text x="2.8970%" y="431.50"></text></g><g><title>async_executor::Sleepers::insert (14 samples, 0.03%)</title><rect x="2.6450%" y="517" width="0.0276%" height="15" fill="rgb(216,135,14)" fg:x="1340" fg:w="14"/><text x="2.8950%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="2.6766%" y="501" width="0.0197%" height="15" fill="rgb(241,47,5)" fg:x="1356" fg:w="10"/><text x="2.9266%" y="511.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (8 samples, 0.02%)</title><rect x="2.6805%" y="485" width="0.0158%" height="15" fill="rgb(233,42,35)" fg:x="1358" fg:w="8"/><text x="2.9305%" y="495.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="2.6805%" y="469" width="0.0158%" height="15" fill="rgb(231,13,6)" fg:x="1358" fg:w="8"/><text x="2.9305%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="2.6805%" y="453" width="0.0158%" height="15" fill="rgb(207,181,40)" fg:x="1358" fg:w="8"/><text x="2.9305%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.02%)</title><rect x="2.6805%" y="437" width="0.0158%" height="15" fill="rgb(254,173,49)" fg:x="1358" fg:w="8"/><text x="2.9305%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.02%)</title><rect x="2.6805%" y="421" width="0.0158%" height="15" fill="rgb(221,1,38)" fg:x="1358" fg:w="8"/><text x="2.9305%" y="431.50"></text></g><g><title>async_executor::Sleepers::update (15 samples, 0.03%)</title><rect x="2.6726%" y="517" width="0.0296%" height="15" fill="rgb(206,124,46)" fg:x="1354" fg:w="15"/><text x="2.9226%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (6 samples, 0.01%)</title><rect x="2.7101%" y="517" width="0.0118%" height="15" fill="rgb(249,21,11)" fg:x="1373" fg:w="6"/><text x="2.9601%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="2.7101%" y="501" width="0.0118%" height="15" fill="rgb(222,201,40)" fg:x="1373" fg:w="6"/><text x="2.9601%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.04%)</title><rect x="2.7378%" y="469" width="0.0355%" height="15" fill="rgb(235,61,29)" fg:x="1387" fg:w="18"/><text x="2.9878%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.04%)</title><rect x="2.7378%" y="453" width="0.0355%" height="15" fill="rgb(219,207,3)" fg:x="1387" fg:w="18"/><text x="2.9878%" y="463.50"></text></g><g><title>async_executor::Ticker::sleep (72 samples, 0.14%)</title><rect x="2.6410%" y="533" width="0.1421%" height="15" fill="rgb(222,56,46)" fg:x="1338" fg:w="72"/><text x="2.8910%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.05%)</title><rect x="2.7318%" y="517" width="0.0513%" height="15" fill="rgb(239,76,54)" fg:x="1384" fg:w="26"/><text x="2.9818%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.05%)</title><rect x="2.7378%" y="501" width="0.0454%" height="15" fill="rgb(231,124,27)" fg:x="1387" fg:w="23"/><text x="2.9878%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (23 samples, 0.05%)</title><rect x="2.7378%" y="485" width="0.0454%" height="15" fill="rgb(249,195,6)" fg:x="1387" fg:w="23"/><text x="2.9878%" y="495.50"></text></g><g><title>async_executor::Sleepers::remove (9 samples, 0.02%)</title><rect x="2.7851%" y="517" width="0.0178%" height="15" fill="rgb(237,174,47)" fg:x="1411" fg:w="9"/><text x="3.0351%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (7 samples, 0.01%)</title><rect x="2.8049%" y="517" width="0.0138%" height="15" fill="rgb(206,201,31)" fg:x="1421" fg:w="7"/><text x="3.0549%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.01%)</title><rect x="2.8049%" y="501" width="0.0138%" height="15" fill="rgb(231,57,52)" fg:x="1421" fg:w="7"/><text x="3.0549%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (25 samples, 0.05%)</title><rect x="2.8187%" y="517" width="0.0493%" height="15" fill="rgb(248,177,22)" fg:x="1428" fg:w="25"/><text x="3.0687%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.05%)</title><rect x="2.8187%" y="501" width="0.0493%" height="15" fill="rgb(215,211,37)" fg:x="1428" fg:w="25"/><text x="3.0687%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (785 samples, 1.55%)</title><rect x="1.3343%" y="597" width="1.5495%" height="15" fill="rgb(241,128,51)" fg:x="676" fg:w="785"/><text x="1.5843%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (781 samples, 1.54%)</title><rect x="1.3422%" y="581" width="1.5416%" height="15" fill="rgb(227,165,31)" fg:x="680" fg:w="781"/><text x="1.5922%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (780 samples, 1.54%)</title><rect x="1.3442%" y="565" width="1.5396%" height="15" fill="rgb(228,167,24)" fg:x="681" fg:w="780"/><text x="1.5942%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (780 samples, 1.54%)</title><rect x="1.3442%" y="549" width="1.5396%" height="15" fill="rgb(228,143,12)" fg:x="681" fg:w="780"/><text x="1.5942%" y="559.50"></text></g><g><title>async_executor::Ticker::wake (51 samples, 0.10%)</title><rect x="2.7832%" y="533" width="0.1007%" height="15" fill="rgb(249,149,8)" fg:x="1410" fg:w="51"/><text x="3.0332%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="2.8680%" y="517" width="0.0158%" height="15" fill="rgb(243,35,44)" fg:x="1453" fg:w="8"/><text x="3.1180%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="2.8720%" y="501" width="0.0118%" height="15" fill="rgb(246,89,9)" fg:x="1455" fg:w="6"/><text x="3.1220%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="2.8720%" y="485" width="0.0118%" height="15" fill="rgb(233,213,13)" fg:x="1455" fg:w="6"/><text x="3.1220%" y="495.50"></text></g><g><title>async_executor::steal (6 samples, 0.01%)</title><rect x="2.8838%" y="597" width="0.0118%" height="15" fill="rgb(233,141,41)" fg:x="1461" fg:w="6"/><text x="3.1338%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (813 samples, 1.60%)</title><rect x="1.3166%" y="629" width="1.6048%" height="15" fill="rgb(239,167,4)" fg:x="667" fg:w="813"/><text x="1.5666%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (810 samples, 1.60%)</title><rect x="1.3225%" y="613" width="1.5988%" height="15" fill="rgb(209,217,16)" fg:x="670" fg:w="810"/><text x="1.5725%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.03%)</title><rect x="2.8957%" y="597" width="0.0257%" height="15" fill="rgb(219,88,35)" fg:x="1467" fg:w="13"/><text x="3.1457%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.03%)</title><rect x="2.8957%" y="581" width="0.0257%" height="15" fill="rgb(220,193,23)" fg:x="1467" fg:w="13"/><text x="3.1457%" y="591.50"></text></g><g><title>concurrent_queue::full_fence (6 samples, 0.01%)</title><rect x="3.0180%" y="485" width="0.0118%" height="15" fill="rgb(230,90,52)" fg:x="1529" fg:w="6"/><text x="3.2680%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.01%)</title><rect x="3.0180%" y="469" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="1529" fg:w="6"/><text x="3.2680%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.01%)</title><rect x="3.0180%" y="453" width="0.0118%" height="15" fill="rgb(206,74,20)" fg:x="1529" fg:w="6"/><text x="3.2680%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="3.0180%" y="437" width="0.0118%" height="15" fill="rgb(230,138,44)" fg:x="1529" fg:w="6"/><text x="3.2680%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (25 samples, 0.05%)</title><rect x="3.0003%" y="517" width="0.0493%" height="15" fill="rgb(235,182,43)" fg:x="1520" fg:w="25"/><text x="3.2503%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (19 samples, 0.04%)</title><rect x="3.0121%" y="501" width="0.0375%" height="15" fill="rgb(242,16,51)" fg:x="1526" fg:w="19"/><text x="3.2621%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (32 samples, 0.06%)</title><rect x="2.9963%" y="533" width="0.0632%" height="15" fill="rgb(248,9,4)" fg:x="1518" fg:w="32"/><text x="3.2463%" y="543.50"></text></g><g><title>event_listener::Event::listen (12 samples, 0.02%)</title><rect x="3.0595%" y="533" width="0.0237%" height="15" fill="rgb(210,31,22)" fg:x="1550" fg:w="12"/><text x="3.3095%" y="543.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.01%)</title><rect x="3.0713%" y="517" width="0.0118%" height="15" fill="rgb(239,54,39)" fg:x="1556" fg:w="6"/><text x="3.3213%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="3.0713%" y="501" width="0.0118%" height="15" fill="rgb(230,99,41)" fg:x="1556" fg:w="6"/><text x="3.3213%" y="511.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.11%)</title><rect x="2.9884%" y="549" width="0.1105%" height="15" fill="rgb(253,106,12)" fg:x="1514" fg:w="56"/><text x="3.2384%" y="559.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.02%)</title><rect x="3.0832%" y="533" width="0.0158%" height="15" fill="rgb(213,46,41)" fg:x="1562" fg:w="8"/><text x="3.3332%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.02%)</title><rect x="3.1227%" y="453" width="0.0217%" height="15" fill="rgb(215,133,35)" fg:x="1582" fg:w="11"/><text x="3.3727%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.02%)</title><rect x="3.1227%" y="437" width="0.0217%" height="15" fill="rgb(213,28,5)" fg:x="1582" fg:w="11"/><text x="3.3727%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="3.1227%" y="421" width="0.0217%" height="15" fill="rgb(215,77,49)" fg:x="1582" fg:w="11"/><text x="3.3727%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.03%)</title><rect x="3.1187%" y="485" width="0.0276%" height="15" fill="rgb(248,100,22)" fg:x="1580" fg:w="14"/><text x="3.3687%" y="495.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (12 samples, 0.02%)</title><rect x="3.1227%" y="469" width="0.0237%" height="15" fill="rgb(208,67,9)" fg:x="1582" fg:w="12"/><text x="3.3727%" y="479.50"></text></g><g><title>event_listener::Inner::lock (8 samples, 0.02%)</title><rect x="3.1542%" y="469" width="0.0158%" height="15" fill="rgb(219,133,21)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="3.1542%" y="453" width="0.0158%" height="15" fill="rgb(246,46,29)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (8 samples, 0.02%)</title><rect x="3.1542%" y="437" width="0.0158%" height="15" fill="rgb(246,185,52)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (8 samples, 0.02%)</title><rect x="3.1542%" y="421" width="0.0158%" height="15" fill="rgb(252,136,11)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.02%)</title><rect x="3.1542%" y="405" width="0.0158%" height="15" fill="rgb(219,138,53)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="3.1542%" y="389" width="0.0158%" height="15" fill="rgb(211,51,23)" fg:x="1598" fg:w="8"/><text x="3.4042%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.01%)</title><rect x="3.1740%" y="405" width="0.0118%" height="15" fill="rgb(247,221,28)" fg:x="1608" fg:w="6"/><text x="3.4240%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="3.1740%" y="389" width="0.0118%" height="15" fill="rgb(251,222,45)" fg:x="1608" fg:w="6"/><text x="3.4240%" y="399.50"></text></g><g><title>async_executor::State::notify (7 samples, 0.01%)</title><rect x="3.1740%" y="421" width="0.0138%" height="15" fill="rgb(217,162,53)" fg:x="1608" fg:w="7"/><text x="3.4240%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="3.2075%" y="357" width="0.0118%" height="15" fill="rgb(229,93,14)" fg:x="1625" fg:w="6"/><text x="3.4575%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="3.2075%" y="341" width="0.0118%" height="15" fill="rgb(209,67,49)" fg:x="1625" fg:w="6"/><text x="3.4575%" y="351.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (19 samples, 0.04%)</title><rect x="3.1898%" y="405" width="0.0375%" height="15" fill="rgb(213,87,29)" fg:x="1616" fg:w="19"/><text x="3.4398%" y="415.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (19 samples, 0.04%)</title><rect x="3.1898%" y="389" width="0.0375%" height="15" fill="rgb(205,151,52)" fg:x="1616" fg:w="19"/><text x="3.4398%" y="399.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.03%)</title><rect x="3.1977%" y="373" width="0.0296%" height="15" fill="rgb(253,215,39)" fg:x="1620" fg:w="15"/><text x="3.4477%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.02%)</title><rect x="3.2273%" y="405" width="0.0158%" height="15" fill="rgb(221,220,41)" fg:x="1635" fg:w="8"/><text x="3.4773%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.02%)</title><rect x="3.2273%" y="389" width="0.0158%" height="15" fill="rgb(218,133,21)" fg:x="1635" fg:w="8"/><text x="3.4773%" y="399.50"></text></g><g><title>event_listener::List::notify (49 samples, 0.10%)</title><rect x="3.1700%" y="469" width="0.0967%" height="15" fill="rgb(221,193,43)" fg:x="1606" fg:w="49"/><text x="3.4200%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (47 samples, 0.09%)</title><rect x="3.1740%" y="453" width="0.0928%" height="15" fill="rgb(240,128,52)" fg:x="1608" fg:w="47"/><text x="3.4240%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (47 samples, 0.09%)</title><rect x="3.1740%" y="437" width="0.0928%" height="15" fill="rgb(253,114,12)" fg:x="1608" fg:w="47"/><text x="3.4240%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (39 samples, 0.08%)</title><rect x="3.1898%" y="421" width="0.0770%" height="15" fill="rgb(215,223,47)" fg:x="1616" fg:w="39"/><text x="3.4398%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="3.2431%" y="405" width="0.0237%" height="15" fill="rgb(248,225,23)" fg:x="1643" fg:w="12"/><text x="3.4931%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="3.2431%" y="389" width="0.0237%" height="15" fill="rgb(250,108,0)" fg:x="1643" fg:w="12"/><text x="3.4931%" y="399.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (78 samples, 0.15%)</title><rect x="3.1187%" y="501" width="0.1540%" height="15" fill="rgb(228,208,7)" fg:x="1580" fg:w="78"/><text x="3.3687%" y="511.50"></text></g><g><title>event_listener::Event::notify (64 samples, 0.13%)</title><rect x="3.1463%" y="485" width="0.1263%" height="15" fill="rgb(244,45,10)" fg:x="1594" fg:w="64"/><text x="3.3963%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 0.16%)</title><rect x="3.1167%" y="517" width="0.1579%" height="15" fill="rgb(207,125,25)" fg:x="1579" fg:w="80"/><text x="3.3667%" y="527.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (9 samples, 0.02%)</title><rect x="3.3062%" y="501" width="0.0178%" height="15" fill="rgb(210,195,18)" fg:x="1675" fg:w="9"/><text x="3.5562%" y="511.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (7 samples, 0.01%)</title><rect x="3.3102%" y="485" width="0.0138%" height="15" fill="rgb(249,80,12)" fg:x="1677" fg:w="7"/><text x="3.5602%" y="495.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (17 samples, 0.03%)</title><rect x="3.2964%" y="517" width="0.0336%" height="15" fill="rgb(221,65,9)" fg:x="1670" fg:w="17"/><text x="3.5464%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.24%)</title><rect x="3.0990%" y="549" width="0.2428%" height="15" fill="rgb(235,49,36)" fg:x="1570" fg:w="123"/><text x="3.3490%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (122 samples, 0.24%)</title><rect x="3.1009%" y="533" width="0.2408%" height="15" fill="rgb(225,32,20)" fg:x="1571" fg:w="122"/><text x="3.3509%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (22 samples, 0.04%)</title><rect x="3.3418%" y="533" width="0.0434%" height="15" fill="rgb(215,141,46)" fg:x="1693" fg:w="22"/><text x="3.5918%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.04%)</title><rect x="3.3497%" y="517" width="0.0355%" height="15" fill="rgb(250,160,47)" fg:x="1697" fg:w="18"/><text x="3.5997%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (26 samples, 0.05%)</title><rect x="3.3418%" y="549" width="0.0513%" height="15" fill="rgb(216,222,40)" fg:x="1693" fg:w="26"/><text x="3.5918%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="3.4108%" y="533" width="0.0118%" height="15" fill="rgb(234,217,39)" fg:x="1728" fg:w="6"/><text x="3.6608%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="3.4108%" y="517" width="0.0118%" height="15" fill="rgb(207,178,40)" fg:x="1728" fg:w="6"/><text x="3.6608%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="3.4108%" y="501" width="0.0118%" height="15" fill="rgb(221,136,13)" fg:x="1728" fg:w="6"/><text x="3.6608%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="3.4108%" y="485" width="0.0118%" height="15" fill="rgb(249,199,10)" fg:x="1728" fg:w="6"/><text x="3.6608%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="3.4108%" y="469" width="0.0118%" height="15" fill="rgb(249,222,13)" fg:x="1728" fg:w="6"/><text x="3.6608%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (19 samples, 0.04%)</title><rect x="3.3931%" y="549" width="0.0375%" height="15" fill="rgb(244,185,38)" fg:x="1719" fg:w="19"/><text x="3.6431%" y="559.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (6 samples, 0.01%)</title><rect x="3.4345%" y="533" width="0.0118%" height="15" fill="rgb(236,202,9)" fg:x="1740" fg:w="6"/><text x="3.6845%" y="543.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (6 samples, 0.01%)</title><rect x="3.4345%" y="517" width="0.0118%" height="15" fill="rgb(250,229,37)" fg:x="1740" fg:w="6"/><text x="3.6845%" y="527.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (11 samples, 0.02%)</title><rect x="3.4464%" y="533" width="0.0217%" height="15" fill="rgb(206,174,23)" fg:x="1746" fg:w="11"/><text x="3.6964%" y="543.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (10 samples, 0.02%)</title><rect x="3.4483%" y="517" width="0.0197%" height="15" fill="rgb(211,33,43)" fg:x="1747" fg:w="10"/><text x="3.6983%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (20 samples, 0.04%)</title><rect x="3.4306%" y="549" width="0.0395%" height="15" fill="rgb(245,58,50)" fg:x="1738" fg:w="20"/><text x="3.6806%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (266 samples, 0.53%)</title><rect x="2.9825%" y="565" width="0.5250%" height="15" fill="rgb(244,68,36)" fg:x="1511" fg:w="266"/><text x="3.2325%" y="575.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (11 samples, 0.02%)</title><rect x="3.4858%" y="549" width="0.0217%" height="15" fill="rgb(232,229,15)" fg:x="1766" fg:w="11"/><text x="3.7358%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (11 samples, 0.02%)</title><rect x="3.4858%" y="533" width="0.0217%" height="15" fill="rgb(254,30,23)" fg:x="1766" fg:w="11"/><text x="3.7358%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (11 samples, 0.02%)</title><rect x="3.4858%" y="517" width="0.0217%" height="15" fill="rgb(235,160,14)" fg:x="1766" fg:w="11"/><text x="3.7358%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="3.4858%" y="501" width="0.0217%" height="15" fill="rgb(212,155,44)" fg:x="1766" fg:w="11"/><text x="3.7358%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.02%)</title><rect x="3.4858%" y="485" width="0.0217%" height="15" fill="rgb(226,2,50)" fg:x="1766" fg:w="11"/><text x="3.7358%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.02%)</title><rect x="3.4918%" y="469" width="0.0158%" height="15" fill="rgb(234,177,6)" fg:x="1769" fg:w="8"/><text x="3.7418%" y="479.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (8 samples, 0.02%)</title><rect x="3.4918%" y="453" width="0.0158%" height="15" fill="rgb(217,24,9)" fg:x="1769" fg:w="8"/><text x="3.7418%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::count_ones (7 samples, 0.01%)</title><rect x="3.4937%" y="437" width="0.0138%" height="15" fill="rgb(220,13,46)" fg:x="1770" fg:w="7"/><text x="3.7437%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (6 samples, 0.01%)</title><rect x="3.5490%" y="517" width="0.0118%" height="15" fill="rgb(239,221,27)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (6 samples, 0.01%)</title><rect x="3.5490%" y="501" width="0.0118%" height="15" fill="rgb(222,198,25)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="3.5490%" y="485" width="0.0118%" height="15" fill="rgb(211,99,13)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (6 samples, 0.01%)</title><rect x="3.5490%" y="469" width="0.0118%" height="15" fill="rgb(232,111,31)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="3.5490%" y="453" width="0.0118%" height="15" fill="rgb(245,82,37)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.01%)</title><rect x="3.5490%" y="437" width="0.0118%" height="15" fill="rgb(227,149,46)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="3.5490%" y="421" width="0.0118%" height="15" fill="rgb(218,36,50)" fg:x="1798" fg:w="6"/><text x="3.7990%" y="431.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="3.5411%" y="533" width="0.0316%" height="15" fill="rgb(226,80,48)" fg:x="1794" fg:w="16"/><text x="3.7911%" y="543.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.01%)</title><rect x="3.5609%" y="517" width="0.0118%" height="15" fill="rgb(238,224,15)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="3.5609%" y="501" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="3.5609%" y="485" width="0.0118%" height="15" fill="rgb(208,32,45)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="3.5609%" y="469" width="0.0118%" height="15" fill="rgb(207,135,9)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="3.5609%" y="453" width="0.0118%" height="15" fill="rgb(206,86,44)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="3.5609%" y="437" width="0.0118%" height="15" fill="rgb(245,177,15)" fg:x="1804" fg:w="6"/><text x="3.8109%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (55 samples, 0.11%)</title><rect x="3.6161%" y="485" width="0.1086%" height="15" fill="rgb(206,64,50)" fg:x="1832" fg:w="55"/><text x="3.8661%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (55 samples, 0.11%)</title><rect x="3.6161%" y="469" width="0.1086%" height="15" fill="rgb(234,36,40)" fg:x="1832" fg:w="55"/><text x="3.8661%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.11%)</title><rect x="3.6161%" y="453" width="0.1086%" height="15" fill="rgb(213,64,8)" fg:x="1832" fg:w="55"/><text x="3.8661%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (87 samples, 0.17%)</title><rect x="3.5727%" y="517" width="0.1717%" height="15" fill="rgb(210,75,36)" fg:x="1810" fg:w="87"/><text x="3.8227%" y="527.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (67 samples, 0.13%)</title><rect x="3.6122%" y="501" width="0.1322%" height="15" fill="rgb(229,88,21)" fg:x="1830" fg:w="67"/><text x="3.8622%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (10 samples, 0.02%)</title><rect x="3.7247%" y="485" width="0.0197%" height="15" fill="rgb(252,204,47)" fg:x="1887" fg:w="10"/><text x="3.9747%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_and (10 samples, 0.02%)</title><rect x="3.7247%" y="469" width="0.0197%" height="15" fill="rgb(208,77,27)" fg:x="1887" fg:w="10"/><text x="3.9747%" y="479.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (100 samples, 0.20%)</title><rect x="3.5727%" y="533" width="0.1974%" height="15" fill="rgb(221,76,26)" fg:x="1810" fg:w="100"/><text x="3.8227%" y="543.50"></text></g><g><title>event_listener::Event::notify (13 samples, 0.03%)</title><rect x="3.7444%" y="517" width="0.0257%" height="15" fill="rgb(225,139,18)" fg:x="1897" fg:w="13"/><text x="3.9944%" y="527.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.02%)</title><rect x="3.7484%" y="501" width="0.0217%" height="15" fill="rgb(230,137,11)" fg:x="1899" fg:w="11"/><text x="3.9984%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.02%)</title><rect x="3.7484%" y="485" width="0.0217%" height="15" fill="rgb(212,28,1)" fg:x="1899" fg:w="11"/><text x="3.9984%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="3.7484%" y="469" width="0.0217%" height="15" fill="rgb(248,164,17)" fg:x="1899" fg:w="11"/><text x="3.9984%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="3.7721%" y="517" width="0.0237%" height="15" fill="rgb(222,171,42)" fg:x="1911" fg:w="12"/><text x="4.0221%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.02%)</title><rect x="3.7740%" y="501" width="0.0217%" height="15" fill="rgb(243,84,45)" fg:x="1912" fg:w="11"/><text x="4.0240%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.02%)</title><rect x="3.7740%" y="485" width="0.0217%" height="15" fill="rgb(252,49,23)" fg:x="1912" fg:w="11"/><text x="4.0240%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (6 samples, 0.01%)</title><rect x="3.7957%" y="517" width="0.0118%" height="15" fill="rgb(215,19,7)" fg:x="1923" fg:w="6"/><text x="4.0457%" y="527.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (149 samples, 0.29%)</title><rect x="3.5332%" y="549" width="0.2941%" height="15" fill="rgb(238,81,41)" fg:x="1790" fg:w="149"/><text x="3.7832%" y="559.50"></text></g><g><title>event_listener::Event::listen (29 samples, 0.06%)</title><rect x="3.7701%" y="533" width="0.0572%" height="15" fill="rgb(210,199,37)" fg:x="1910" fg:w="29"/><text x="4.0201%" y="543.50"></text></g><g><title>event_listener::full_fence (6 samples, 0.01%)</title><rect x="3.8155%" y="517" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="1933" fg:w="6"/><text x="4.0655%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.02%)</title><rect x="3.8609%" y="485" width="0.0197%" height="15" fill="rgb(226,211,11)" fg:x="1956" fg:w="10"/><text x="4.1109%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.02%)</title><rect x="3.8629%" y="469" width="0.0178%" height="15" fill="rgb(236,162,54)" fg:x="1957" fg:w="9"/><text x="4.1129%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="3.8629%" y="453" width="0.0178%" height="15" fill="rgb(220,229,9)" fg:x="1957" fg:w="9"/><text x="4.1129%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="3.8629%" y="437" width="0.0178%" height="15" fill="rgb(250,87,22)" fg:x="1957" fg:w="9"/><text x="4.1129%" y="447.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="3.8629%" y="421" width="0.0178%" height="15" fill="rgb(239,43,17)" fg:x="1957" fg:w="9"/><text x="4.1129%" y="431.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="3.8629%" y="405" width="0.0178%" height="15" fill="rgb(231,177,25)" fg:x="1957" fg:w="9"/><text x="4.1129%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.08%)</title><rect x="3.8865%" y="485" width="0.0809%" height="15" fill="rgb(219,179,1)" fg:x="1969" fg:w="41"/><text x="4.1365%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.08%)</title><rect x="3.8865%" y="469" width="0.0809%" height="15" fill="rgb(238,219,53)" fg:x="1969" fg:w="41"/><text x="4.1365%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (19 samples, 0.04%)</title><rect x="3.9675%" y="485" width="0.0375%" height="15" fill="rgb(232,167,36)" fg:x="2010" fg:w="19"/><text x="4.2175%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_or (19 samples, 0.04%)</title><rect x="3.9675%" y="469" width="0.0375%" height="15" fill="rgb(244,19,51)" fg:x="2010" fg:w="19"/><text x="4.2175%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (106 samples, 0.21%)</title><rect x="3.8372%" y="517" width="0.2092%" height="15" fill="rgb(224,6,22)" fg:x="1944" fg:w="106"/><text x="4.0872%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (100 samples, 0.20%)</title><rect x="3.8490%" y="501" width="0.1974%" height="15" fill="rgb(224,145,5)" fg:x="1950" fg:w="100"/><text x="4.0990%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.04%)</title><rect x="4.0050%" y="485" width="0.0415%" height="15" fill="rgb(234,130,49)" fg:x="2029" fg:w="21"/><text x="4.2550%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.04%)</title><rect x="4.0050%" y="469" width="0.0415%" height="15" fill="rgb(254,6,2)" fg:x="2029" fg:w="21"/><text x="4.2550%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="4.0484%" y="501" width="0.0138%" height="15" fill="rgb(208,96,46)" fg:x="2051" fg:w="7"/><text x="4.2984%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (12 samples, 0.02%)</title><rect x="4.0859%" y="437" width="0.0237%" height="15" fill="rgb(239,3,39)" fg:x="2070" fg:w="12"/><text x="4.3359%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.02%)</title><rect x="4.0859%" y="421" width="0.0237%" height="15" fill="rgb(233,210,1)" fg:x="2070" fg:w="12"/><text x="4.3359%" y="431.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.04%)</title><rect x="4.0820%" y="501" width="0.0434%" height="15" fill="rgb(244,137,37)" fg:x="2068" fg:w="22"/><text x="4.3320%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.04%)</title><rect x="4.0820%" y="485" width="0.0434%" height="15" fill="rgb(240,136,2)" fg:x="2068" fg:w="22"/><text x="4.3320%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.04%)</title><rect x="4.0859%" y="469" width="0.0395%" height="15" fill="rgb(239,18,37)" fg:x="2070" fg:w="20"/><text x="4.3359%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (20 samples, 0.04%)</title><rect x="4.0859%" y="453" width="0.0395%" height="15" fill="rgb(218,185,22)" fg:x="2070" fg:w="20"/><text x="4.3359%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (8 samples, 0.02%)</title><rect x="4.1096%" y="437" width="0.0158%" height="15" fill="rgb(225,218,4)" fg:x="2082" fg:w="8"/><text x="4.3596%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (9 samples, 0.02%)</title><rect x="4.1333%" y="437" width="0.0178%" height="15" fill="rgb(230,182,32)" fg:x="2094" fg:w="9"/><text x="4.3833%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="4.1333%" y="421" width="0.0178%" height="15" fill="rgb(242,56,43)" fg:x="2094" fg:w="9"/><text x="4.3833%" y="431.50"></text></g><g><title>async_executor::State::notify (16 samples, 0.03%)</title><rect x="4.1313%" y="453" width="0.0316%" height="15" fill="rgb(233,99,24)" fg:x="2093" fg:w="16"/><text x="4.3813%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.03%)</title><rect x="4.1846%" y="389" width="0.0257%" height="15" fill="rgb(234,209,42)" fg:x="2120" fg:w="13"/><text x="4.4346%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.03%)</title><rect x="4.1846%" y="373" width="0.0257%" height="15" fill="rgb(227,7,12)" fg:x="2120" fg:w="13"/><text x="4.4346%" y="383.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (25 samples, 0.05%)</title><rect x="4.1747%" y="437" width="0.0493%" height="15" fill="rgb(245,203,43)" fg:x="2115" fg:w="25"/><text x="4.4247%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (25 samples, 0.05%)</title><rect x="4.1747%" y="421" width="0.0493%" height="15" fill="rgb(238,205,33)" fg:x="2115" fg:w="25"/><text x="4.4247%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (22 samples, 0.04%)</title><rect x="4.1806%" y="405" width="0.0434%" height="15" fill="rgb(231,56,7)" fg:x="2118" fg:w="22"/><text x="4.4306%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.01%)</title><rect x="4.2103%" y="389" width="0.0138%" height="15" fill="rgb(244,186,29)" fg:x="2133" fg:w="7"/><text x="4.4603%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.01%)</title><rect x="4.2103%" y="373" width="0.0138%" height="15" fill="rgb(234,111,31)" fg:x="2133" fg:w="7"/><text x="4.4603%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.02%)</title><rect x="4.2241%" y="437" width="0.0217%" height="15" fill="rgb(241,149,10)" fg:x="2140" fg:w="11"/><text x="4.4741%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.02%)</title><rect x="4.2241%" y="421" width="0.0217%" height="15" fill="rgb(249,206,44)" fg:x="2140" fg:w="11"/><text x="4.4741%" y="431.50"></text></g><g><title>event_listener::List::notify (69 samples, 0.14%)</title><rect x="4.1254%" y="501" width="0.1362%" height="15" fill="rgb(251,153,30)" fg:x="2090" fg:w="69"/><text x="4.3754%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (67 samples, 0.13%)</title><rect x="4.1293%" y="485" width="0.1322%" height="15" fill="rgb(239,152,38)" fg:x="2092" fg:w="67"/><text x="4.3793%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (67 samples, 0.13%)</title><rect x="4.1293%" y="469" width="0.1322%" height="15" fill="rgb(249,139,47)" fg:x="2092" fg:w="67"/><text x="4.3793%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (45 samples, 0.09%)</title><rect x="4.1728%" y="453" width="0.0888%" height="15" fill="rgb(244,64,35)" fg:x="2114" fg:w="45"/><text x="4.4228%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="4.2458%" y="437" width="0.0158%" height="15" fill="rgb(216,46,15)" fg:x="2151" fg:w="8"/><text x="4.4958%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="4.2458%" y="421" width="0.0158%" height="15" fill="rgb(250,74,19)" fg:x="2151" fg:w="8"/><text x="4.4958%" y="431.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (237 samples, 0.47%)</title><rect x="3.8352%" y="533" width="0.4678%" height="15" fill="rgb(249,42,33)" fg:x="1943" fg:w="237"/><text x="4.0852%" y="543.50"></text></g><g><title>event_listener::Event::notify (130 samples, 0.26%)</title><rect x="4.0464%" y="517" width="0.2566%" height="15" fill="rgb(242,149,17)" fg:x="2050" fg:w="130"/><text x="4.2964%" y="527.50"></text></g><g><title>event_listener::full_fence (21 samples, 0.04%)</title><rect x="4.2616%" y="501" width="0.0415%" height="15" fill="rgb(244,29,21)" fg:x="2159" fg:w="21"/><text x="4.5116%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.04%)</title><rect x="4.2616%" y="485" width="0.0415%" height="15" fill="rgb(220,130,37)" fg:x="2159" fg:w="21"/><text x="4.5116%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.04%)</title><rect x="4.2616%" y="469" width="0.0415%" height="15" fill="rgb(211,67,2)" fg:x="2159" fg:w="21"/><text x="4.5116%" y="479.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (271 samples, 0.53%)</title><rect x="3.8273%" y="549" width="0.5349%" height="15" fill="rgb(235,68,52)" fg:x="1939" fg:w="271"/><text x="4.0773%" y="559.50"></text></g><g><title>event_listener::Event::notify (25 samples, 0.05%)</title><rect x="4.3129%" y="533" width="0.0493%" height="15" fill="rgb(246,142,3)" fg:x="2185" fg:w="25"/><text x="4.5629%" y="543.50"></text></g><g><title>event_listener::full_fence (25 samples, 0.05%)</title><rect x="4.3129%" y="517" width="0.0493%" height="15" fill="rgb(241,25,7)" fg:x="2185" fg:w="25"/><text x="4.5629%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.05%)</title><rect x="4.3129%" y="501" width="0.0493%" height="15" fill="rgb(242,119,39)" fg:x="2185" fg:w="25"/><text x="4.5629%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.05%)</title><rect x="4.3129%" y="485" width="0.0493%" height="15" fill="rgb(241,98,45)" fg:x="2185" fg:w="25"/><text x="4.5629%" y="495.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.01%)</title><rect x="4.3761%" y="437" width="0.0118%" height="15" fill="rgb(254,28,30)" fg:x="2217" fg:w="6"/><text x="4.6261%" y="447.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (7 samples, 0.01%)</title><rect x="4.3761%" y="453" width="0.0138%" height="15" fill="rgb(241,142,54)" fg:x="2217" fg:w="7"/><text x="4.6261%" y="463.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (13 samples, 0.03%)</title><rect x="4.3741%" y="469" width="0.0257%" height="15" fill="rgb(222,85,15)" fg:x="2216" fg:w="13"/><text x="4.6241%" y="479.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (19 samples, 0.04%)</title><rect x="4.3682%" y="517" width="0.0375%" height="15" fill="rgb(210,85,47)" fg:x="2213" fg:w="19"/><text x="4.6182%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (19 samples, 0.04%)</title><rect x="4.3682%" y="501" width="0.0375%" height="15" fill="rgb(224,206,25)" fg:x="2213" fg:w="19"/><text x="4.6182%" y="511.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (19 samples, 0.04%)</title><rect x="4.3682%" y="485" width="0.0375%" height="15" fill="rgb(243,201,19)" fg:x="2213" fg:w="19"/><text x="4.6182%" y="495.50"></text></g><g><title>bevy_asset::io::file_asset_io::filesystem_watcher_system (7 samples, 0.01%)</title><rect x="4.4136%" y="469" width="0.0138%" height="15" fill="rgb(236,59,4)" fg:x="2236" fg:w="7"/><text x="4.6636%" y="479.50"></text></g><g><title>bevy_ecs::event::Events&lt;T&gt;::update_system (11 samples, 0.02%)</title><rect x="4.4274%" y="469" width="0.0217%" height="15" fill="rgb(254,179,45)" fg:x="2243" fg:w="11"/><text x="4.6774%" y="479.50"></text></g><g><title>bevy_ecs::event::Events&lt;T&gt;::update (9 samples, 0.02%)</title><rect x="4.4313%" y="453" width="0.0178%" height="15" fill="rgb(226,14,10)" fg:x="2245" fg:w="9"/><text x="4.6813%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6 samples, 0.01%)</title><rect x="4.4373%" y="437" width="0.0118%" height="15" fill="rgb(244,27,41)" fg:x="2248" fg:w="6"/><text x="4.6873%" y="447.50"></text></g><g><title>bevy_render::view::visibility::update_frusta (6 samples, 0.01%)</title><rect x="4.4491%" y="469" width="0.0118%" height="15" fill="rgb(235,35,32)" fg:x="2254" fg:w="6"/><text x="4.6991%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (52 samples, 0.10%)</title><rect x="4.3682%" y="533" width="0.1026%" height="15" fill="rgb(218,68,31)" fg:x="2213" fg:w="52"/><text x="4.6182%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (33 samples, 0.07%)</title><rect x="4.4057%" y="517" width="0.0651%" height="15" fill="rgb(207,120,37)" fg:x="2232" fg:w="33"/><text x="4.6557%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.07%)</title><rect x="4.4057%" y="501" width="0.0651%" height="15" fill="rgb(227,98,0)" fg:x="2232" fg:w="33"/><text x="4.6557%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.07%)</title><rect x="4.4057%" y="485" width="0.0651%" height="15" fill="rgb(207,7,3)" fg:x="2232" fg:w="33"/><text x="4.6557%" y="495.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (8 samples, 0.02%)</title><rect x="4.4905%" y="469" width="0.0158%" height="15" fill="rgb(206,98,19)" fg:x="2275" fg:w="8"/><text x="4.7405%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (9 samples, 0.02%)</title><rect x="4.4905%" y="501" width="0.0178%" height="15" fill="rgb(217,5,26)" fg:x="2275" fg:w="9"/><text x="4.7405%" y="511.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (9 samples, 0.02%)</title><rect x="4.4905%" y="485" width="0.0178%" height="15" fill="rgb(235,190,38)" fg:x="2275" fg:w="9"/><text x="4.7405%" y="495.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (26 samples, 0.05%)</title><rect x="4.4708%" y="517" width="0.0513%" height="15" fill="rgb(247,86,24)" fg:x="2265" fg:w="26"/><text x="4.7208%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (7 samples, 0.01%)</title><rect x="4.5083%" y="501" width="0.0138%" height="15" fill="rgb(205,101,16)" fg:x="2284" fg:w="7"/><text x="4.7583%" y="511.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (8 samples, 0.02%)</title><rect x="4.5557%" y="437" width="0.0158%" height="15" fill="rgb(246,168,33)" fg:x="2308" fg:w="8"/><text x="4.8057%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,hashbrown::map::HashMap&lt;uuid::Uuid,alloc::boxed::Box&lt;dyn bevy_asset::loader::AssetLifecycle&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="4.5715%" y="437" width="0.0118%" height="15" fill="rgb(231,114,1)" fg:x="2316" fg:w="6"/><text x="4.8215%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="4.6327%" y="389" width="0.0158%" height="15" fill="rgb(207,184,53)" fg:x="2347" fg:w="8"/><text x="4.8827%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="4.6327%" y="373" width="0.0158%" height="15" fill="rgb(224,95,51)" fg:x="2347" fg:w="8"/><text x="4.8827%" y="383.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (36 samples, 0.07%)</title><rect x="4.5833%" y="437" width="0.0711%" height="15" fill="rgb(212,188,45)" fg:x="2322" fg:w="36"/><text x="4.8333%" y="447.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (15 samples, 0.03%)</title><rect x="4.6248%" y="421" width="0.0296%" height="15" fill="rgb(223,154,38)" fg:x="2343" fg:w="15"/><text x="4.8748%" y="431.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (13 samples, 0.03%)</title><rect x="4.6287%" y="405" width="0.0257%" height="15" fill="rgb(251,22,52)" fg:x="2345" fg:w="13"/><text x="4.8787%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.02%)</title><rect x="4.6544%" y="437" width="0.0197%" height="15" fill="rgb(229,209,22)" fg:x="2358" fg:w="10"/><text x="4.9044%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.02%)</title><rect x="4.6544%" y="421" width="0.0197%" height="15" fill="rgb(234,138,34)" fg:x="2358" fg:w="10"/><text x="4.9044%" y="431.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (76 samples, 0.15%)</title><rect x="4.5359%" y="469" width="0.1500%" height="15" fill="rgb(212,95,11)" fg:x="2298" fg:w="76"/><text x="4.7859%" y="479.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (76 samples, 0.15%)</title><rect x="4.5359%" y="453" width="0.1500%" height="15" fill="rgb(240,179,47)" fg:x="2298" fg:w="76"/><text x="4.7859%" y="463.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.01%)</title><rect x="4.6741%" y="437" width="0.0118%" height="15" fill="rgb(240,163,11)" fg:x="2368" fg:w="6"/><text x="4.9241%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.01%)</title><rect x="4.6741%" y="421" width="0.0118%" height="15" fill="rgb(236,37,12)" fg:x="2368" fg:w="6"/><text x="4.9241%" y="431.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (6 samples, 0.01%)</title><rect x="4.6741%" y="405" width="0.0118%" height="15" fill="rgb(232,164,16)" fg:x="2368" fg:w="6"/><text x="4.9241%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.04%)</title><rect x="4.7037%" y="357" width="0.0375%" height="15" fill="rgb(244,205,15)" fg:x="2383" fg:w="19"/><text x="4.9537%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="4.7412%" y="309" width="0.0197%" height="15" fill="rgb(223,117,47)" fg:x="2402" fg:w="10"/><text x="4.9912%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="4.7412%" y="293" width="0.0197%" height="15" fill="rgb(244,107,35)" fg:x="2402" fg:w="10"/><text x="4.9912%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="4.7412%" y="277" width="0.0197%" height="15" fill="rgb(205,140,8)" fg:x="2402" fg:w="10"/><text x="4.9912%" y="287.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (65 samples, 0.13%)</title><rect x="4.7037%" y="389" width="0.1283%" height="15" fill="rgb(228,84,46)" fg:x="2383" fg:w="65"/><text x="4.9537%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.13%)</title><rect x="4.7037%" y="373" width="0.1283%" height="15" fill="rgb(254,188,9)" fg:x="2383" fg:w="65"/><text x="4.9537%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.09%)</title><rect x="4.7412%" y="357" width="0.0908%" height="15" fill="rgb(206,112,54)" fg:x="2402" fg:w="46"/><text x="4.9912%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.09%)</title><rect x="4.7412%" y="341" width="0.0908%" height="15" fill="rgb(216,84,49)" fg:x="2402" fg:w="46"/><text x="4.9912%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.09%)</title><rect x="4.7412%" y="325" width="0.0908%" height="15" fill="rgb(214,194,35)" fg:x="2402" fg:w="46"/><text x="4.9912%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (36 samples, 0.07%)</title><rect x="4.7610%" y="309" width="0.0711%" height="15" fill="rgb(249,28,3)" fg:x="2412" fg:w="36"/><text x="5.0110%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.07%)</title><rect x="4.7649%" y="293" width="0.0671%" height="15" fill="rgb(222,56,52)" fg:x="2414" fg:w="34"/><text x="5.0149%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="4.7925%" y="277" width="0.0395%" height="15" fill="rgb(245,217,50)" fg:x="2428" fg:w="20"/><text x="5.0425%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="4.8320%" y="389" width="0.0257%" height="15" fill="rgb(213,201,24)" fg:x="2448" fg:w="13"/><text x="5.0820%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (170 samples, 0.34%)</title><rect x="4.6958%" y="405" width="0.3356%" height="15" fill="rgb(248,116,28)" fg:x="2379" fg:w="170"/><text x="4.9458%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (85 samples, 0.17%)</title><rect x="4.8636%" y="389" width="0.1678%" height="15" fill="rgb(219,72,43)" fg:x="2464" fg:w="85"/><text x="5.1136%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (175 samples, 0.35%)</title><rect x="4.6958%" y="453" width="0.3454%" height="15" fill="rgb(209,138,14)" fg:x="2379" fg:w="175"/><text x="4.9458%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (175 samples, 0.35%)</title><rect x="4.6958%" y="437" width="0.3454%" height="15" fill="rgb(222,18,33)" fg:x="2379" fg:w="175"/><text x="4.9458%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (175 samples, 0.35%)</title><rect x="4.6958%" y="421" width="0.3454%" height="15" fill="rgb(213,199,7)" fg:x="2379" fg:w="175"/><text x="4.9458%" y="431.50"></text></g><g><title>bevy_pbr::render::light::extract_clusters (179 samples, 0.35%)</title><rect x="4.6939%" y="469" width="0.3533%" height="15" fill="rgb(250,110,10)" fg:x="2378" fg:w="179"/><text x="4.9439%" y="479.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5,F6) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (8 samples, 0.02%)</title><rect x="5.1222%" y="437" width="0.0158%" height="15" fill="rgb(248,123,6)" fg:x="2595" fg:w="8"/><text x="5.3722%" y="447.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.05%)</title><rect x="5.0945%" y="453" width="0.0533%" height="15" fill="rgb(206,91,31)" fg:x="2581" fg:w="27"/><text x="5.3445%" y="463.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ss (9 samples, 0.02%)</title><rect x="5.2110%" y="373" width="0.0178%" height="15" fill="rgb(211,154,13)" fg:x="2640" fg:w="9"/><text x="5.4610%" y="383.50"></text></g><g><title>glam::vec3::Vec3A::dot (11 samples, 0.02%)</title><rect x="5.2090%" y="421" width="0.0217%" height="15" fill="rgb(225,148,7)" fg:x="2639" fg:w="11"/><text x="5.4590%" y="431.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector3&lt;f32&gt; for core::core_arch::x86::__m128&gt;::dot (11 samples, 0.02%)</title><rect x="5.2090%" y="405" width="0.0217%" height="15" fill="rgb(220,160,43)" fg:x="2639" fg:w="11"/><text x="5.4590%" y="415.50"></text></g><g><title>glam::core::sse2::vector::dot3_in_x (11 samples, 0.02%)</title><rect x="5.2090%" y="389" width="0.0217%" height="15" fill="rgb(213,52,39)" fg:x="2639" fg:w="11"/><text x="5.4590%" y="399.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_obb (40 samples, 0.08%)</title><rect x="5.1557%" y="453" width="0.0790%" height="15" fill="rgb(243,137,7)" fg:x="2612" fg:w="40"/><text x="5.4057%" y="463.50"></text></g><g><title>bevy_render::primitives::Aabb::relative_radius (15 samples, 0.03%)</title><rect x="5.2051%" y="437" width="0.0296%" height="15" fill="rgb(230,79,13)" fg:x="2637" fg:w="15"/><text x="5.4551%" y="447.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_sphere (16 samples, 0.03%)</title><rect x="5.2347%" y="453" width="0.0316%" height="15" fill="rgb(247,105,23)" fg:x="2652" fg:w="16"/><text x="5.4847%" y="463.50"></text></g><g><title>glam::vec4::Vec4::dot (7 samples, 0.01%)</title><rect x="5.2525%" y="437" width="0.0138%" height="15" fill="rgb(223,179,41)" fg:x="2661" fg:w="7"/><text x="5.5025%" y="447.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector4&lt;f32&gt; for core::core_arch::x86::__m128&gt;::dot (7 samples, 0.01%)</title><rect x="5.2525%" y="421" width="0.0138%" height="15" fill="rgb(218,9,34)" fg:x="2661" fg:w="7"/><text x="5.5025%" y="431.50"></text></g><g><title>glam::core::sse2::vector::dot4_in_x (7 samples, 0.01%)</title><rect x="5.2525%" y="405" width="0.0138%" height="15" fill="rgb(222,106,8)" fg:x="2661" fg:w="7"/><text x="5.5025%" y="415.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (6 samples, 0.01%)</title><rect x="5.2663%" y="453" width="0.0118%" height="15" fill="rgb(211,220,0)" fg:x="2668" fg:w="6"/><text x="5.5163%" y="463.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (27 samples, 0.05%)</title><rect x="5.2781%" y="453" width="0.0533%" height="15" fill="rgb(229,52,16)" fg:x="2674" fg:w="27"/><text x="5.5281%" y="463.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (19 samples, 0.04%)</title><rect x="5.2939%" y="437" width="0.0375%" height="15" fill="rgb(212,155,18)" fg:x="2682" fg:w="19"/><text x="5.5439%" y="447.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (19 samples, 0.04%)</title><rect x="5.2939%" y="421" width="0.0375%" height="15" fill="rgb(242,21,14)" fg:x="2682" fg:w="19"/><text x="5.5439%" y="431.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (16 samples, 0.03%)</title><rect x="5.2998%" y="405" width="0.0316%" height="15" fill="rgb(222,19,48)" fg:x="2685" fg:w="16"/><text x="5.5498%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (6 samples, 0.01%)</title><rect x="5.3196%" y="389" width="0.0118%" height="15" fill="rgb(232,45,27)" fg:x="2695" fg:w="6"/><text x="5.5696%" y="399.50"></text></g><g><title>&lt;f32 as glam::core::traits::scalar::Float&gt;::mul_add (8 samples, 0.02%)</title><rect x="5.3433%" y="405" width="0.0158%" height="15" fill="rgb(249,103,42)" fg:x="2707" fg:w="8"/><text x="5.5933%" y="415.50"></text></g><g><title>glam::mat4::Mat4::transform_point3a (16 samples, 0.03%)</title><rect x="5.3334%" y="453" width="0.0316%" height="15" fill="rgb(246,81,33)" fg:x="2702" fg:w="16"/><text x="5.5834%" y="463.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::FloatMatrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::transform_float4_as_point3 (16 samples, 0.03%)</title><rect x="5.3334%" y="437" width="0.0316%" height="15" fill="rgb(252,33,42)" fg:x="2702" fg:w="16"/><text x="5.5834%" y="447.50"></text></g><g><title>glam::core::traits::vector::FloatVector4::mul_add (11 samples, 0.02%)</title><rect x="5.3433%" y="421" width="0.0217%" height="15" fill="rgb(209,212,41)" fg:x="2707" fg:w="11"/><text x="5.5933%" y="431.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sqrt_ps (9 samples, 0.02%)</title><rect x="5.3650%" y="421" width="0.0178%" height="15" fill="rgb(207,154,6)" fg:x="2718" fg:w="9"/><text x="5.6150%" y="431.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (174 samples, 0.34%)</title><rect x="5.0551%" y="469" width="0.3435%" height="15" fill="rgb(223,64,47)" fg:x="2561" fg:w="174"/><text x="5.3051%" y="479.50"></text></g><g><title>glam::vec3::Vec3A::length (17 samples, 0.03%)</title><rect x="5.3650%" y="453" width="0.0336%" height="15" fill="rgb(211,161,38)" fg:x="2718" fg:w="17"/><text x="5.6150%" y="463.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::FloatVector3&lt;f32&gt; for core::core_arch::x86::__m128&gt;::length (17 samples, 0.03%)</title><rect x="5.3650%" y="437" width="0.0336%" height="15" fill="rgb(219,138,40)" fg:x="2718" fg:w="17"/><text x="5.6150%" y="447.50"></text></g><g><title>glam::core::sse2::vector::dot3_in_x (8 samples, 0.02%)</title><rect x="5.3827%" y="421" width="0.0158%" height="15" fill="rgb(241,228,46)" fg:x="2727" fg:w="8"/><text x="5.6327%" y="431.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ss (8 samples, 0.02%)</title><rect x="5.3827%" y="405" width="0.0158%" height="15" fill="rgb(223,209,38)" fg:x="2727" fg:w="8"/><text x="5.6327%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemMeta&gt; (6 samples, 0.01%)</title><rect x="5.4005%" y="469" width="0.0118%" height="15" fill="rgb(236,164,45)" fg:x="2736" fg:w="6"/><text x="5.6505%" y="479.50"></text></g><g><title>smooth_bevy_cameras::controllers::fps::control_system (11 samples, 0.02%)</title><rect x="5.4123%" y="469" width="0.0217%" height="15" fill="rgb(231,15,5)" fg:x="2742" fg:w="11"/><text x="5.6623%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.02%)</title><rect x="5.4735%" y="421" width="0.0197%" height="15" fill="rgb(252,35,15)" fg:x="2773" fg:w="10"/><text x="5.7235%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.02%)</title><rect x="5.4735%" y="405" width="0.0197%" height="15" fill="rgb(248,181,18)" fg:x="2773" fg:w="10"/><text x="5.7235%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="5.4795%" y="389" width="0.0138%" height="15" fill="rgb(233,39,42)" fg:x="2776" fg:w="7"/><text x="5.7295%" y="399.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="5.4735%" y="437" width="0.0276%" height="15" fill="rgb(238,110,33)" fg:x="2773" fg:w="14"/><text x="5.7235%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.01%)</title><rect x="5.7420%" y="389" width="0.0118%" height="15" fill="rgb(233,195,10)" fg:x="2909" fg:w="6"/><text x="5.9920%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.09%)</title><rect x="5.6946%" y="405" width="0.0888%" height="15" fill="rgb(254,105,3)" fg:x="2885" fg:w="45"/><text x="5.9446%" y="415.50"></text></g><g><title>core::ptr::write (15 samples, 0.03%)</title><rect x="5.7538%" y="389" width="0.0296%" height="15" fill="rgb(221,225,9)" fg:x="2915" fg:w="15"/><text x="6.0038%" y="399.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (10 samples, 0.02%)</title><rect x="6.2710%" y="373" width="0.0197%" height="15" fill="rgb(224,227,45)" fg:x="3177" fg:w="10"/><text x="6.5210%" y="383.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (309 samples, 0.61%)</title><rect x="6.2295%" y="389" width="0.6099%" height="15" fill="rgb(229,198,43)" fg:x="3156" fg:w="309"/><text x="6.4795%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (278 samples, 0.55%)</title><rect x="6.2907%" y="373" width="0.5487%" height="15" fill="rgb(206,209,35)" fg:x="3187" fg:w="278"/><text x="6.5407%" y="383.50"></text></g><g><title>f64xsubf128 (263 samples, 0.52%)</title><rect x="6.3203%" y="357" width="0.5191%" height="15" fill="rgb(245,195,53)" fg:x="3202" fg:w="263"/><text x="6.5703%" y="367.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (685 samples, 1.35%)</title><rect x="5.5012%" y="437" width="1.3521%" height="15" fill="rgb(240,92,26)" fg:x="2787" fg:w="685"/><text x="5.7512%" y="447.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (610 samples, 1.20%)</title><rect x="5.6492%" y="421" width="1.2041%" height="15" fill="rgb(207,40,23)" fg:x="2862" fg:w="610"/><text x="5.8992%" y="431.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (537 samples, 1.06%)</title><rect x="5.7933%" y="405" width="1.0600%" height="15" fill="rgb(223,111,35)" fg:x="2935" fg:w="537"/><text x="6.0433%" y="415.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (7 samples, 0.01%)</title><rect x="6.8394%" y="389" width="0.0138%" height="15" fill="rgb(229,147,28)" fg:x="3465" fg:w="7"/><text x="7.0894%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="6.8671%" y="421" width="0.0138%" height="15" fill="rgb(211,29,28)" fg:x="3479" fg:w="7"/><text x="7.1171%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (1,226 samples, 2.42%)</title><rect x="4.4708%" y="533" width="2.4200%" height="15" fill="rgb(228,72,33)" fg:x="2265" fg:w="1226"/><text x="4.7208%" y="543.50">&lt;F..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (1,200 samples, 2.37%)</title><rect x="4.5221%" y="517" width="2.3686%" height="15" fill="rgb(205,214,31)" fg:x="2291" fg:w="1200"/><text x="4.7721%" y="527.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,200 samples, 2.37%)</title><rect x="4.5221%" y="501" width="2.3686%" height="15" fill="rgb(224,111,15)" fg:x="2291" fg:w="1200"/><text x="4.7721%" y="511.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (1,196 samples, 2.36%)</title><rect x="4.5300%" y="485" width="2.3607%" height="15" fill="rgb(253,21,26)" fg:x="2295" fg:w="1196"/><text x="4.7800%" y="495.50">co..</text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (738 samples, 1.46%)</title><rect x="5.4341%" y="469" width="1.4567%" height="15" fill="rgb(245,139,43)" fg:x="2753" fg:w="738"/><text x="5.6841%" y="479.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (734 samples, 1.45%)</title><rect x="5.4419%" y="453" width="1.4488%" height="15" fill="rgb(252,170,7)" fg:x="2757" fg:w="734"/><text x="5.6919%" y="463.50"></text></g><g><title>glam::vec3::Vec3::select (16 samples, 0.03%)</title><rect x="6.8592%" y="437" width="0.0316%" height="15" fill="rgb(231,118,14)" fg:x="3475" fg:w="16"/><text x="7.1092%" y="447.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (9 samples, 0.02%)</title><rect x="6.8908%" y="517" width="0.0178%" height="15" fill="rgb(238,83,0)" fg:x="3491" fg:w="9"/><text x="7.1408%" y="527.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::add_measurement (6 samples, 0.01%)</title><rect x="6.9164%" y="453" width="0.0118%" height="15" fill="rgb(221,39,39)" fg:x="3504" fg:w="6"/><text x="7.1664%" y="463.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (10 samples, 0.02%)</title><rect x="6.9125%" y="469" width="0.0197%" height="15" fill="rgb(222,119,46)" fg:x="3502" fg:w="10"/><text x="7.1625%" y="479.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (121 samples, 0.24%)</title><rect x="6.9401%" y="389" width="0.2388%" height="15" fill="rgb(222,165,49)" fg:x="3516" fg:w="121"/><text x="7.1901%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (121 samples, 0.24%)</title><rect x="6.9401%" y="373" width="0.2388%" height="15" fill="rgb(219,113,52)" fg:x="3516" fg:w="121"/><text x="7.1901%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (119 samples, 0.23%)</title><rect x="6.9441%" y="357" width="0.2349%" height="15" fill="rgb(214,7,15)" fg:x="3518" fg:w="119"/><text x="7.1941%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (119 samples, 0.23%)</title><rect x="6.9441%" y="341" width="0.2349%" height="15" fill="rgb(235,32,4)" fg:x="3518" fg:w="119"/><text x="7.1941%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (119 samples, 0.23%)</title><rect x="6.9441%" y="325" width="0.2349%" height="15" fill="rgb(238,90,54)" fg:x="3518" fg:w="119"/><text x="7.1941%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119 samples, 0.23%)</title><rect x="6.9441%" y="309" width="0.2349%" height="15" fill="rgb(213,208,19)" fg:x="3518" fg:w="119"/><text x="7.1941%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (114 samples, 0.23%)</title><rect x="6.9539%" y="293" width="0.2250%" height="15" fill="rgb(233,156,4)" fg:x="3523" fg:w="114"/><text x="7.2039%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (114 samples, 0.23%)</title><rect x="6.9539%" y="277" width="0.2250%" height="15" fill="rgb(207,194,5)" fg:x="3523" fg:w="114"/><text x="7.2039%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (114 samples, 0.23%)</title><rect x="6.9539%" y="261" width="0.2250%" height="15" fill="rgb(206,111,30)" fg:x="3523" fg:w="114"/><text x="7.2039%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.02%)</title><rect x="7.1849%" y="341" width="0.0237%" height="15" fill="rgb(243,70,54)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.02%)</title><rect x="7.1849%" y="325" width="0.0237%" height="15" fill="rgb(242,28,8)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.02%)</title><rect x="7.1849%" y="309" width="0.0237%" height="15" fill="rgb(219,106,18)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="7.1849%" y="293" width="0.0237%" height="15" fill="rgb(244,222,10)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="7.1849%" y="277" width="0.0237%" height="15" fill="rgb(236,179,52)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="287.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="7.1849%" y="261" width="0.0237%" height="15" fill="rgb(213,23,39)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="271.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="7.1849%" y="245" width="0.0237%" height="15" fill="rgb(238,48,10)" fg:x="3640" fg:w="12"/><text x="7.4349%" y="255.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="7.1928%" y="229" width="0.0158%" height="15" fill="rgb(251,196,23)" fg:x="3644" fg:w="8"/><text x="7.4428%" y="239.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (140 samples, 0.28%)</title><rect x="6.9342%" y="453" width="0.2763%" height="15" fill="rgb(250,152,24)" fg:x="3513" fg:w="140"/><text x="7.1842%" y="463.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (140 samples, 0.28%)</title><rect x="6.9342%" y="437" width="0.2763%" height="15" fill="rgb(209,150,17)" fg:x="3513" fg:w="140"/><text x="7.1842%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (140 samples, 0.28%)</title><rect x="6.9342%" y="421" width="0.2763%" height="15" fill="rgb(234,202,34)" fg:x="3513" fg:w="140"/><text x="7.1842%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (140 samples, 0.28%)</title><rect x="6.9342%" y="405" width="0.2763%" height="15" fill="rgb(253,148,53)" fg:x="3513" fg:w="140"/><text x="7.1842%" y="415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (13 samples, 0.03%)</title><rect x="7.1849%" y="389" width="0.0257%" height="15" fill="rgb(218,129,16)" fg:x="3640" fg:w="13"/><text x="7.4349%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (13 samples, 0.03%)</title><rect x="7.1849%" y="373" width="0.0257%" height="15" fill="rgb(216,85,19)" fg:x="3640" fg:w="13"/><text x="7.4349%" y="383.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (13 samples, 0.03%)</title><rect x="7.1849%" y="357" width="0.0257%" height="15" fill="rgb(235,228,7)" fg:x="3640" fg:w="13"/><text x="7.4349%" y="367.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="7.2204%" y="453" width="0.0118%" height="15" fill="rgb(245,175,0)" fg:x="3658" fg:w="6"/><text x="7.4704%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.01%)</title><rect x="7.2204%" y="437" width="0.0118%" height="15" fill="rgb(208,168,36)" fg:x="3658" fg:w="6"/><text x="7.4704%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.01%)</title><rect x="7.2204%" y="421" width="0.0118%" height="15" fill="rgb(246,171,24)" fg:x="3658" fg:w="6"/><text x="7.4704%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="7.2461%" y="405" width="0.0118%" height="15" fill="rgb(215,142,24)" fg:x="3671" fg:w="6"/><text x="7.4961%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="7.2461%" y="389" width="0.0118%" height="15" fill="rgb(250,187,7)" fg:x="3671" fg:w="6"/><text x="7.4961%" y="399.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (166 samples, 0.33%)</title><rect x="6.9322%" y="469" width="0.3277%" height="15" fill="rgb(228,66,33)" fg:x="3512" fg:w="166"/><text x="7.1822%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="7.2362%" y="453" width="0.0237%" height="15" fill="rgb(234,215,21)" fg:x="3666" fg:w="12"/><text x="7.4862%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="7.2362%" y="437" width="0.0237%" height="15" fill="rgb(222,191,20)" fg:x="3666" fg:w="12"/><text x="7.4862%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (8 samples, 0.02%)</title><rect x="7.2441%" y="421" width="0.0158%" height="15" fill="rgb(245,79,54)" fg:x="3670" fg:w="8"/><text x="7.4941%" y="431.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::InstanceMaterialDataBuffer as bevy_render::render_component::ExtractComponent&gt;::extract_component (56 samples, 0.11%)</title><rect x="7.2619%" y="453" width="0.1105%" height="15" fill="rgb(240,10,37)" fg:x="3679" fg:w="56"/><text x="7.5119%" y="463.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (56 samples, 0.11%)</title><rect x="7.2619%" y="437" width="0.1105%" height="15" fill="rgb(214,192,32)" fg:x="3679" fg:w="56"/><text x="7.5119%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.11%)</title><rect x="7.2658%" y="421" width="0.1066%" height="15" fill="rgb(209,36,54)" fg:x="3681" fg:w="54"/><text x="7.5158%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.11%)</title><rect x="7.2658%" y="405" width="0.1066%" height="15" fill="rgb(220,10,11)" fg:x="3681" fg:w="54"/><text x="7.5158%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.11%)</title><rect x="7.2658%" y="389" width="0.1066%" height="15" fill="rgb(221,106,17)" fg:x="3681" fg:w="54"/><text x="7.5158%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (41 samples, 0.08%)</title><rect x="7.3724%" y="453" width="0.0809%" height="15" fill="rgb(251,142,44)" fg:x="3735" fg:w="41"/><text x="7.6224%" y="463.50"></text></g><g><title>core::ptr::write (35 samples, 0.07%)</title><rect x="7.3842%" y="437" width="0.0691%" height="15" fill="rgb(238,13,15)" fg:x="3741" fg:w="35"/><text x="7.6342%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="7.4533%" y="453" width="0.0118%" height="15" fill="rgb(208,107,27)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="7.4533%" y="437" width="0.0118%" height="15" fill="rgb(205,136,37)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="7.4533%" y="421" width="0.0118%" height="15" fill="rgb(250,205,27)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="7.4533%" y="405" width="0.0118%" height="15" fill="rgb(210,80,43)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="7.4533%" y="389" width="0.0118%" height="15" fill="rgb(247,160,36)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="7.4533%" y="373" width="0.0118%" height="15" fill="rgb(234,13,49)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="383.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="7.4533%" y="357" width="0.0118%" height="15" fill="rgb(234,122,0)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="367.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="7.4533%" y="341" width="0.0118%" height="15" fill="rgb(207,146,38)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="351.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="7.4533%" y="325" width="0.0118%" height="15" fill="rgb(207,177,25)" fg:x="3776" fg:w="6"/><text x="7.7033%" y="335.50"></text></g><g><title>bevy_render::render_component::extract_components (112 samples, 0.22%)</title><rect x="7.2599%" y="469" width="0.2211%" height="15" fill="rgb(211,178,42)" fg:x="3678" fg:w="112"/><text x="7.5099%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="7.4671%" y="453" width="0.0138%" height="15" fill="rgb(230,69,54)" fg:x="3783" fg:w="7"/><text x="7.7171%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (311 samples, 0.61%)</title><rect x="6.8908%" y="533" width="0.6139%" height="15" fill="rgb(214,135,41)" fg:x="3491" fg:w="311"/><text x="7.1408%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (302 samples, 0.60%)</title><rect x="6.9085%" y="517" width="0.5961%" height="15" fill="rgb(237,67,25)" fg:x="3500" fg:w="302"/><text x="7.1585%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (302 samples, 0.60%)</title><rect x="6.9085%" y="501" width="0.5961%" height="15" fill="rgb(222,189,50)" fg:x="3500" fg:w="302"/><text x="7.1585%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (302 samples, 0.60%)</title><rect x="6.9085%" y="485" width="0.5961%" height="15" fill="rgb(245,148,34)" fg:x="3500" fg:w="302"/><text x="7.1585%" y="495.50"></text></g><g><title>bevy_transform::systems::transform_propagate_system (9 samples, 0.02%)</title><rect x="7.4869%" y="469" width="0.0178%" height="15" fill="rgb(222,29,6)" fg:x="3793" fg:w="9"/><text x="7.7369%" y="479.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="7.4869%" y="453" width="0.0178%" height="15" fill="rgb(221,189,43)" fg:x="3793" fg:w="9"/><text x="7.7369%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (63 samples, 0.12%)</title><rect x="7.5204%" y="453" width="0.1244%" height="15" fill="rgb(207,36,27)" fg:x="3810" fg:w="63"/><text x="7.7704%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (63 samples, 0.12%)</title><rect x="7.5204%" y="437" width="0.1244%" height="15" fill="rgb(217,90,24)" fg:x="3810" fg:w="63"/><text x="7.7704%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (63 samples, 0.12%)</title><rect x="7.5204%" y="421" width="0.1244%" height="15" fill="rgb(224,66,35)" fg:x="3810" fg:w="63"/><text x="7.7704%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.12%)</title><rect x="7.5224%" y="405" width="0.1224%" height="15" fill="rgb(221,13,50)" fg:x="3811" fg:w="62"/><text x="7.7724%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (62 samples, 0.12%)</title><rect x="7.5224%" y="389" width="0.1224%" height="15" fill="rgb(236,68,49)" fg:x="3811" fg:w="62"/><text x="7.7724%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="7.8145%" y="437" width="0.0197%" height="15" fill="rgb(229,146,28)" fg:x="3959" fg:w="10"/><text x="8.0645%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (9 samples, 0.02%)</title><rect x="7.8362%" y="437" width="0.0178%" height="15" fill="rgb(225,31,38)" fg:x="3970" fg:w="9"/><text x="8.0862%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.02%)</title><rect x="7.8362%" y="421" width="0.0178%" height="15" fill="rgb(250,208,3)" fg:x="3970" fg:w="9"/><text x="8.0862%" y="431.50"></text></g><g><title>core::intrinsics::copy (49 samples, 0.10%)</title><rect x="7.9053%" y="405" width="0.0967%" height="15" fill="rgb(246,54,23)" fg:x="4005" fg:w="49"/><text x="8.1553%" y="415.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (233 samples, 0.46%)</title><rect x="7.6468%" y="453" width="0.4599%" height="15" fill="rgb(243,76,11)" fg:x="3874" fg:w="233"/><text x="7.8968%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (128 samples, 0.25%)</title><rect x="7.8540%" y="437" width="0.2527%" height="15" fill="rgb(245,21,50)" fg:x="3979" fg:w="128"/><text x="8.1040%" y="447.50"></text></g><g><title>core::ptr::swap (106 samples, 0.21%)</title><rect x="7.8974%" y="421" width="0.2092%" height="15" fill="rgb(228,9,43)" fg:x="4001" fg:w="106"/><text x="8.1474%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.10%)</title><rect x="8.0021%" y="405" width="0.1046%" height="15" fill="rgb(208,100,47)" fg:x="4054" fg:w="53"/><text x="8.2521%" y="415.50"></text></g><g><title>bevy_prototype_debug_lines::update (330 samples, 0.65%)</title><rect x="7.5204%" y="469" width="0.6514%" height="15" fill="rgb(232,26,8)" fg:x="3810" fg:w="330"/><text x="7.7704%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.06%)</title><rect x="8.1106%" y="453" width="0.0612%" height="15" fill="rgb(216,166,38)" fg:x="4109" fg:w="31"/><text x="8.3606%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (341 samples, 0.67%)</title><rect x="7.5125%" y="517" width="0.6731%" height="15" fill="rgb(251,202,51)" fg:x="3806" fg:w="341"/><text x="7.7625%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (341 samples, 0.67%)</title><rect x="7.5125%" y="501" width="0.6731%" height="15" fill="rgb(254,216,34)" fg:x="3806" fg:w="341"/><text x="7.7625%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (341 samples, 0.67%)</title><rect x="7.5125%" y="485" width="0.6731%" height="15" fill="rgb(251,32,27)" fg:x="3806" fg:w="341"/><text x="7.7625%" y="495.50"></text></g><g><title>smooth_bevy_cameras::controllers::fps::default_input_map (7 samples, 0.01%)</title><rect x="8.1718%" y="469" width="0.0138%" height="15" fill="rgb(208,127,28)" fg:x="4140" fg:w="7"/><text x="8.4218%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (347 samples, 0.68%)</title><rect x="7.5046%" y="533" width="0.6849%" height="15" fill="rgb(224,137,22)" fg:x="3802" fg:w="347"/><text x="7.7546%" y="543.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="8.2093%" y="453" width="0.0138%" height="15" fill="rgb(254,70,32)" fg:x="4159" fg:w="7"/><text x="8.4593%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.04%)</title><rect x="8.2231%" y="453" width="0.0375%" height="15" fill="rgb(229,75,37)" fg:x="4166" fg:w="19"/><text x="8.4731%" y="463.50"></text></g><g><title>core::ptr::write (17 samples, 0.03%)</title><rect x="8.2271%" y="437" width="0.0336%" height="15" fill="rgb(252,64,23)" fg:x="4168" fg:w="17"/><text x="8.4771%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="8.2271%" y="421" width="0.0336%" height="15" fill="rgb(232,162,48)" fg:x="4168" fg:w="17"/><text x="8.4771%" y="431.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (15 samples, 0.03%)</title><rect x="8.2804%" y="453" width="0.0296%" height="15" fill="rgb(246,160,12)" fg:x="4195" fg:w="15"/><text x="8.5304%" y="463.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (10 samples, 0.02%)</title><rect x="8.2902%" y="437" width="0.0197%" height="15" fill="rgb(247,166,0)" fg:x="4200" fg:w="10"/><text x="8.5402%" y="447.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (10 samples, 0.02%)</title><rect x="8.2902%" y="421" width="0.0197%" height="15" fill="rgb(249,219,21)" fg:x="4200" fg:w="10"/><text x="8.5402%" y="431.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (7 samples, 0.01%)</title><rect x="8.2962%" y="405" width="0.0138%" height="15" fill="rgb(205,209,3)" fg:x="4203" fg:w="7"/><text x="8.5462%" y="415.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (8 samples, 0.02%)</title><rect x="8.3159%" y="421" width="0.0158%" height="15" fill="rgb(243,44,1)" fg:x="4213" fg:w="8"/><text x="8.5659%" y="431.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (6 samples, 0.01%)</title><rect x="8.3317%" y="421" width="0.0118%" height="15" fill="rgb(206,159,16)" fg:x="4221" fg:w="6"/><text x="8.5817%" y="431.50"></text></g><g><title>glam::mat4::Mat4::inverse (26 samples, 0.05%)</title><rect x="8.3100%" y="453" width="0.0513%" height="15" fill="rgb(244,77,30)" fg:x="4210" fg:w="26"/><text x="8.5600%" y="463.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::FloatMatrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::inverse (25 samples, 0.05%)</title><rect x="8.3119%" y="437" width="0.0493%" height="15" fill="rgb(218,69,12)" fg:x="4211" fg:w="25"/><text x="8.5619%" y="447.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes (90 samples, 0.18%)</title><rect x="8.1975%" y="469" width="0.1776%" height="15" fill="rgb(212,87,7)" fg:x="4153" fg:w="90"/><text x="8.4475%" y="479.50"></text></g><g><title>glam::mat4::Mat4::transpose (7 samples, 0.01%)</title><rect x="8.3613%" y="453" width="0.0138%" height="15" fill="rgb(245,114,25)" fg:x="4236" fg:w="7"/><text x="8.6113%" y="463.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::Matrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::transpose (7 samples, 0.01%)</title><rect x="8.3613%" y="437" width="0.0138%" height="15" fill="rgb(210,61,42)" fg:x="4236" fg:w="7"/><text x="8.6113%" y="447.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (7 samples, 0.01%)</title><rect x="8.3613%" y="421" width="0.0138%" height="15" fill="rgb(211,52,33)" fg:x="4236" fg:w="7"/><text x="8.6113%" y="431.50"></text></g><g><title>bevy_render::camera::camera::extract_cameras (10 samples, 0.02%)</title><rect x="8.3751%" y="469" width="0.0197%" height="15" fill="rgb(234,58,33)" fg:x="4243" fg:w="10"/><text x="8.6251%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (110 samples, 0.22%)</title><rect x="8.1896%" y="533" width="0.2171%" height="15" fill="rgb(220,115,36)" fg:x="4149" fg:w="110"/><text x="8.4396%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (106 samples, 0.21%)</title><rect x="8.1975%" y="517" width="0.2092%" height="15" fill="rgb(243,153,54)" fg:x="4153" fg:w="106"/><text x="8.4475%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (106 samples, 0.21%)</title><rect x="8.1975%" y="501" width="0.2092%" height="15" fill="rgb(251,47,18)" fg:x="4153" fg:w="106"/><text x="8.4475%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (106 samples, 0.21%)</title><rect x="8.1975%" y="485" width="0.2092%" height="15" fill="rgb(242,102,42)" fg:x="4153" fg:w="106"/><text x="8.4475%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSetState&lt;(PF0,PF1)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (10 samples, 0.02%)</title><rect x="8.4126%" y="501" width="0.0197%" height="15" fill="rgb(234,31,38)" fg:x="4262" fg:w="10"/><text x="8.6626%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::SystemMeta as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="8.4126%" y="485" width="0.0197%" height="15" fill="rgb(221,117,51)" fg:x="4262" fg:w="10"/><text x="8.6626%" y="495.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (15 samples, 0.03%)</title><rect x="8.4067%" y="517" width="0.0296%" height="15" fill="rgb(212,20,18)" fg:x="4259" fg:w="15"/><text x="8.6567%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.03%)</title><rect x="8.4403%" y="453" width="0.0296%" height="15" fill="rgb(245,133,36)" fg:x="4276" fg:w="15"/><text x="8.6903%" y="463.50"></text></g><g><title>core::ptr::write (9 samples, 0.02%)</title><rect x="8.4521%" y="437" width="0.0178%" height="15" fill="rgb(212,6,19)" fg:x="4282" fg:w="9"/><text x="8.7021%" y="447.50"></text></g><g><title>bevy_pbr::render::mesh::extract_skinned_meshes (21 samples, 0.04%)</title><rect x="8.4383%" y="469" width="0.0415%" height="15" fill="rgb(218,1,36)" fg:x="4275" fg:w="21"/><text x="8.6883%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (35 samples, 0.07%)</title><rect x="8.4363%" y="517" width="0.0691%" height="15" fill="rgb(246,84,54)" fg:x="4274" fg:w="35"/><text x="8.6863%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.07%)</title><rect x="8.4363%" y="501" width="0.0691%" height="15" fill="rgb(242,110,6)" fg:x="4274" fg:w="35"/><text x="8.6863%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 0.07%)</title><rect x="8.4363%" y="485" width="0.0691%" height="15" fill="rgb(214,47,5)" fg:x="4274" fg:w="35"/><text x="8.6863%" y="495.50"></text></g><g><title>bevy_render::camera::camera::camera_system (13 samples, 0.03%)</title><rect x="8.4797%" y="469" width="0.0257%" height="15" fill="rgb(218,159,25)" fg:x="4296" fg:w="13"/><text x="8.7297%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (51 samples, 0.10%)</title><rect x="8.4067%" y="533" width="0.1007%" height="15" fill="rgb(215,211,28)" fg:x="4259" fg:w="51"/><text x="8.6567%" y="543.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSetState&lt;(PF0,PF1)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (7 samples, 0.01%)</title><rect x="8.5093%" y="501" width="0.0138%" height="15" fill="rgb(238,59,32)" fg:x="4311" fg:w="7"/><text x="8.7593%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::SystemMeta as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="8.5093%" y="485" width="0.0138%" height="15" fill="rgb(226,82,3)" fg:x="4311" fg:w="7"/><text x="8.7593%" y="495.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (9 samples, 0.02%)</title><rect x="8.5074%" y="517" width="0.0178%" height="15" fill="rgb(240,164,32)" fg:x="4310" fg:w="9"/><text x="8.7574%" y="527.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (16 samples, 0.03%)</title><rect x="8.5074%" y="533" width="0.0316%" height="15" fill="rgb(232,46,7)" fg:x="4310" fg:w="16"/><text x="8.7574%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="8.5251%" y="517" width="0.0138%" height="15" fill="rgb(229,129,53)" fg:x="4319" fg:w="7"/><text x="8.7751%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="8.5251%" y="501" width="0.0138%" height="15" fill="rgb(234,188,29)" fg:x="4319" fg:w="7"/><text x="8.7751%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="8.5251%" y="485" width="0.0138%" height="15" fill="rgb(246,141,4)" fg:x="4319" fg:w="7"/><text x="8.7751%" y="495.50"></text></g><g><title>bevy_text::text2d::text2d_system (6 samples, 0.01%)</title><rect x="8.5271%" y="469" width="0.0118%" height="15" fill="rgb(229,23,39)" fg:x="4320" fg:w="6"/><text x="8.7771%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSetState&lt;(PF0,PF1,PF2)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (8 samples, 0.02%)</title><rect x="8.5429%" y="501" width="0.0158%" height="15" fill="rgb(206,12,3)" fg:x="4328" fg:w="8"/><text x="8.7929%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::SystemMeta as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="8.5429%" y="485" width="0.0158%" height="15" fill="rgb(252,226,20)" fg:x="4328" fg:w="8"/><text x="8.7929%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (6 samples, 0.01%)</title><rect x="8.5587%" y="501" width="0.0118%" height="15" fill="rgb(216,123,35)" fg:x="4336" fg:w="6"/><text x="8.8087%" y="511.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (6 samples, 0.01%)</title><rect x="8.5587%" y="485" width="0.0118%" height="15" fill="rgb(212,68,40)" fg:x="4336" fg:w="6"/><text x="8.8087%" y="495.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7,P8) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (19 samples, 0.04%)</title><rect x="8.5389%" y="517" width="0.0375%" height="15" fill="rgb(254,125,32)" fg:x="4326" fg:w="19"/><text x="8.7889%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.04%)</title><rect x="8.5863%" y="453" width="0.0434%" height="15" fill="rgb(253,97,22)" fg:x="4350" fg:w="22"/><text x="8.8363%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (30 samples, 0.06%)</title><rect x="8.6297%" y="453" width="0.0592%" height="15" fill="rgb(241,101,14)" fg:x="4372" fg:w="30"/><text x="8.8797%" y="463.50"></text></g><g><title>bevy_pbr::light::ClusterConfig::dimensions_for_screen_size (6 samples, 0.01%)</title><rect x="8.6969%" y="453" width="0.0118%" height="15" fill="rgb(238,103,29)" fg:x="4406" fg:w="6"/><text x="8.9469%" y="463.50"></text></g><g><title>bevy_pbr::light::assign_lights_to_clusters (87 samples, 0.17%)</title><rect x="8.5764%" y="469" width="0.1717%" height="15" fill="rgb(233,195,47)" fg:x="4345" fg:w="87"/><text x="8.8264%" y="479.50"></text></g><g><title>bevy_ui::flex::flex_node_system (12 samples, 0.02%)</title><rect x="8.7482%" y="469" width="0.0237%" height="15" fill="rgb(246,218,30)" fg:x="4432" fg:w="12"/><text x="8.9982%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (108 samples, 0.21%)</title><rect x="8.5764%" y="517" width="0.2132%" height="15" fill="rgb(219,145,47)" fg:x="4345" fg:w="108"/><text x="8.8264%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (108 samples, 0.21%)</title><rect x="8.5764%" y="501" width="0.2132%" height="15" fill="rgb(243,12,26)" fg:x="4345" fg:w="108"/><text x="8.8264%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (108 samples, 0.21%)</title><rect x="8.5764%" y="485" width="0.2132%" height="15" fill="rgb(214,87,16)" fg:x="4345" fg:w="108"/><text x="8.8264%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="8.7738%" y="469" width="0.0158%" height="15" fill="rgb(208,99,42)" fg:x="4445" fg:w="8"/><text x="9.0238%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (128 samples, 0.25%)</title><rect x="8.5389%" y="533" width="0.2527%" height="15" fill="rgb(253,99,2)" fg:x="4326" fg:w="128"/><text x="8.7889%" y="543.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (25 samples, 0.05%)</title><rect x="8.7916%" y="533" width="0.0493%" height="15" fill="rgb(220,168,23)" fg:x="4454" fg:w="25"/><text x="9.0416%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (25 samples, 0.05%)</title><rect x="8.7916%" y="517" width="0.0493%" height="15" fill="rgb(242,38,24)" fg:x="4454" fg:w="25"/><text x="9.0416%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.05%)</title><rect x="8.7916%" y="501" width="0.0493%" height="15" fill="rgb(225,182,9)" fg:x="4454" fg:w="25"/><text x="9.0416%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,274 samples, 4.49%)</title><rect x="4.3622%" y="549" width="4.4886%" height="15" fill="rgb(243,178,37)" fg:x="2210" fg:w="2274"/><text x="4.6122%" y="559.50">&lt;bevy..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="8.8508%" y="533" width="0.0316%" height="15" fill="rgb(232,139,19)" fg:x="4484" fg:w="16"/><text x="9.1008%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.03%)</title><rect x="8.8508%" y="517" width="0.0316%" height="15" fill="rgb(225,201,24)" fg:x="4484" fg:w="16"/><text x="9.1008%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.03%)</title><rect x="8.8508%" y="501" width="0.0316%" height="15" fill="rgb(221,47,46)" fg:x="4484" fg:w="16"/><text x="9.1008%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (27 samples, 0.05%)</title><rect x="8.8508%" y="549" width="0.0533%" height="15" fill="rgb(249,23,13)" fg:x="4484" fg:w="27"/><text x="9.1008%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="8.8824%" y="533" width="0.0217%" height="15" fill="rgb(219,9,5)" fg:x="4500" fg:w="11"/><text x="9.1324%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="8.8824%" y="517" width="0.0217%" height="15" fill="rgb(254,171,16)" fg:x="4500" fg:w="11"/><text x="9.1324%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="8.8844%" y="501" width="0.0197%" height="15" fill="rgb(230,171,20)" fg:x="4501" fg:w="10"/><text x="9.1344%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="8.8844%" y="485" width="0.0197%" height="15" fill="rgb(210,71,41)" fg:x="4501" fg:w="10"/><text x="9.1344%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.03%)</title><rect x="8.9061%" y="485" width="0.0316%" height="15" fill="rgb(206,173,20)" fg:x="4512" fg:w="16"/><text x="9.1561%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.03%)</title><rect x="8.9061%" y="469" width="0.0316%" height="15" fill="rgb(233,88,34)" fg:x="4512" fg:w="16"/><text x="9.1561%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="8.9061%" y="453" width="0.0316%" height="15" fill="rgb(223,209,46)" fg:x="4512" fg:w="16"/><text x="9.1561%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.03%)</title><rect x="8.9081%" y="437" width="0.0296%" height="15" fill="rgb(250,43,18)" fg:x="4513" fg:w="15"/><text x="9.1581%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.03%)</title><rect x="8.9081%" y="421" width="0.0296%" height="15" fill="rgb(208,13,10)" fg:x="4513" fg:w="15"/><text x="9.1581%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.03%)</title><rect x="8.9081%" y="405" width="0.0296%" height="15" fill="rgb(212,200,36)" fg:x="4513" fg:w="15"/><text x="9.1581%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.03%)</title><rect x="8.9081%" y="389" width="0.0296%" height="15" fill="rgb(225,90,30)" fg:x="4513" fg:w="15"/><text x="9.1581%" y="399.50"></text></g><g><title>event_listener::Inner::lock (28 samples, 0.06%)</title><rect x="8.9396%" y="485" width="0.0553%" height="15" fill="rgb(236,182,39)" fg:x="4529" fg:w="28"/><text x="9.1896%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.06%)</title><rect x="8.9396%" y="469" width="0.0553%" height="15" fill="rgb(212,144,35)" fg:x="4529" fg:w="28"/><text x="9.1896%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.05%)</title><rect x="8.9416%" y="453" width="0.0533%" height="15" fill="rgb(228,63,44)" fg:x="4530" fg:w="27"/><text x="9.1916%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (27 samples, 0.05%)</title><rect x="8.9416%" y="437" width="0.0533%" height="15" fill="rgb(228,109,6)" fg:x="4530" fg:w="27"/><text x="9.1916%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (27 samples, 0.05%)</title><rect x="8.9416%" y="421" width="0.0533%" height="15" fill="rgb(238,117,24)" fg:x="4530" fg:w="27"/><text x="9.1916%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.05%)</title><rect x="8.9416%" y="405" width="0.0533%" height="15" fill="rgb(242,26,26)" fg:x="4530" fg:w="27"/><text x="9.1916%" y="415.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (51 samples, 0.10%)</title><rect x="8.9041%" y="501" width="0.1007%" height="15" fill="rgb(221,92,48)" fg:x="4511" fg:w="51"/><text x="9.1541%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (59 samples, 0.12%)</title><rect x="8.9041%" y="549" width="0.1165%" height="15" fill="rgb(209,209,32)" fg:x="4511" fg:w="59"/><text x="9.1541%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (59 samples, 0.12%)</title><rect x="8.9041%" y="533" width="0.1165%" height="15" fill="rgb(221,70,22)" fg:x="4511" fg:w="59"/><text x="9.1541%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (59 samples, 0.12%)</title><rect x="8.9041%" y="517" width="0.1165%" height="15" fill="rgb(248,145,5)" fg:x="4511" fg:w="59"/><text x="9.1541%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (8 samples, 0.02%)</title><rect x="9.0048%" y="501" width="0.0158%" height="15" fill="rgb(226,116,26)" fg:x="4562" fg:w="8"/><text x="9.2548%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="9.0048%" y="485" width="0.0158%" height="15" fill="rgb(244,5,17)" fg:x="4562" fg:w="8"/><text x="9.2548%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="9.0068%" y="469" width="0.0138%" height="15" fill="rgb(252,159,33)" fg:x="4563" fg:w="7"/><text x="9.2568%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="9.0068%" y="453" width="0.0138%" height="15" fill="rgb(206,71,0)" fg:x="4563" fg:w="7"/><text x="9.2568%" y="463.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.05%)</title><rect x="9.0206%" y="533" width="0.0513%" height="15" fill="rgb(233,118,54)" fg:x="4570" fg:w="26"/><text x="9.2706%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.05%)</title><rect x="9.0225%" y="517" width="0.0493%" height="15" fill="rgb(234,83,48)" fg:x="4571" fg:w="25"/><text x="9.2725%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.05%)</title><rect x="9.0225%" y="501" width="0.0493%" height="15" fill="rgb(228,3,54)" fg:x="4571" fg:w="25"/><text x="9.2725%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,101 samples, 6.12%)</title><rect x="2.9805%" y="581" width="6.1210%" height="15" fill="rgb(226,155,13)" fg:x="1510" fg:w="3101"/><text x="3.2305%" y="591.50">&lt;core::f..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,832 samples, 5.59%)</title><rect x="3.5115%" y="565" width="5.5900%" height="15" fill="rgb(241,28,37)" fg:x="1779" fg:w="2832"/><text x="3.7615%" y="575.50">bevy_ec..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (41 samples, 0.08%)</title><rect x="9.0206%" y="549" width="0.0809%" height="15" fill="rgb(233,93,10)" fg:x="4570" fg:w="41"/><text x="9.2706%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="9.0719%" y="533" width="0.0296%" height="15" fill="rgb(225,113,19)" fg:x="4596" fg:w="15"/><text x="9.3219%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="9.0719%" y="517" width="0.0296%" height="15" fill="rgb(241,2,18)" fg:x="4596" fg:w="15"/><text x="9.3219%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.03%)</title><rect x="9.0758%" y="501" width="0.0257%" height="15" fill="rgb(228,207,21)" fg:x="4598" fg:w="13"/><text x="9.3258%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.03%)</title><rect x="9.0758%" y="485" width="0.0257%" height="15" fill="rgb(213,211,35)" fg:x="4598" fg:w="13"/><text x="9.3258%" y="495.50"></text></g><g><title>core::mem::drop (40 samples, 0.08%)</title><rect x="9.1054%" y="533" width="0.0790%" height="15" fill="rgb(209,83,10)" fg:x="4613" fg:w="40"/><text x="9.3554%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (40 samples, 0.08%)</title><rect x="9.1054%" y="517" width="0.0790%" height="15" fill="rgb(209,164,1)" fg:x="4613" fg:w="40"/><text x="9.3554%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (40 samples, 0.08%)</title><rect x="9.1054%" y="501" width="0.0790%" height="15" fill="rgb(213,184,43)" fg:x="4613" fg:w="40"/><text x="9.3554%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (40 samples, 0.08%)</title><rect x="9.1054%" y="485" width="0.0790%" height="15" fill="rgb(231,61,34)" fg:x="4613" fg:w="40"/><text x="9.3554%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.08%)</title><rect x="9.1074%" y="469" width="0.0770%" height="15" fill="rgb(235,75,3)" fg:x="4614" fg:w="39"/><text x="9.3574%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.08%)</title><rect x="9.1074%" y="453" width="0.0770%" height="15" fill="rgb(220,106,47)" fg:x="4614" fg:w="39"/><text x="9.3574%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="9.1844%" y="533" width="0.0217%" height="15" fill="rgb(210,196,33)" fg:x="4653" fg:w="11"/><text x="9.4344%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="9.1844%" y="517" width="0.0217%" height="15" fill="rgb(229,154,42)" fg:x="4653" fg:w="11"/><text x="9.4344%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.02%)</title><rect x="9.1864%" y="501" width="0.0197%" height="15" fill="rgb(228,114,26)" fg:x="4654" fg:w="10"/><text x="9.4364%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (10 samples, 0.02%)</title><rect x="9.1864%" y="485" width="0.0197%" height="15" fill="rgb(208,144,1)" fg:x="4654" fg:w="10"/><text x="9.4364%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.02%)</title><rect x="9.1864%" y="469" width="0.0197%" height="15" fill="rgb(239,112,37)" fg:x="4654" fg:w="10"/><text x="9.4364%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.02%)</title><rect x="9.1864%" y="453" width="0.0197%" height="15" fill="rgb(210,96,50)" fg:x="4654" fg:w="10"/><text x="9.4364%" y="463.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (6 samples, 0.01%)</title><rect x="9.2061%" y="533" width="0.0118%" height="15" fill="rgb(222,178,2)" fg:x="4664" fg:w="6"/><text x="9.4561%" y="543.50"></text></g><g><title>std::sync::poison::Flag::get (13 samples, 0.03%)</title><rect x="9.2298%" y="485" width="0.0257%" height="15" fill="rgb(226,74,18)" fg:x="4676" fg:w="13"/><text x="9.4798%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (13 samples, 0.03%)</title><rect x="9.2298%" y="469" width="0.0257%" height="15" fill="rgb(225,67,54)" fg:x="4676" fg:w="13"/><text x="9.4798%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.03%)</title><rect x="9.2298%" y="453" width="0.0257%" height="15" fill="rgb(251,92,32)" fg:x="4676" fg:w="13"/><text x="9.4798%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.03%)</title><rect x="9.2278%" y="517" width="0.0296%" height="15" fill="rgb(228,149,22)" fg:x="4675" fg:w="15"/><text x="9.4778%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.03%)</title><rect x="9.2298%" y="501" width="0.0276%" height="15" fill="rgb(243,54,13)" fg:x="4676" fg:w="14"/><text x="9.4798%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (37 samples, 0.07%)</title><rect x="9.2594%" y="485" width="0.0730%" height="15" fill="rgb(243,180,28)" fg:x="4691" fg:w="37"/><text x="9.5094%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.07%)</title><rect x="9.2594%" y="469" width="0.0730%" height="15" fill="rgb(208,167,24)" fg:x="4691" fg:w="37"/><text x="9.5094%" y="479.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.23%)</title><rect x="9.1054%" y="565" width="0.2309%" height="15" fill="rgb(245,73,45)" fg:x="4613" fg:w="117"/><text x="9.3554%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (117 samples, 0.23%)</title><rect x="9.1054%" y="549" width="0.2309%" height="15" fill="rgb(237,203,48)" fg:x="4613" fg:w="117"/><text x="9.3554%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.11%)</title><rect x="9.2278%" y="533" width="0.1086%" height="15" fill="rgb(211,197,16)" fg:x="4675" fg:w="55"/><text x="9.4778%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (40 samples, 0.08%)</title><rect x="9.2574%" y="517" width="0.0790%" height="15" fill="rgb(243,99,51)" fg:x="4690" fg:w="40"/><text x="9.5074%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (40 samples, 0.08%)</title><rect x="9.2574%" y="501" width="0.0790%" height="15" fill="rgb(215,123,29)" fg:x="4690" fg:w="40"/><text x="9.5074%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,242 samples, 6.40%)</title><rect x="2.9549%" y="613" width="6.3993%" height="15" fill="rgb(239,186,37)" fg:x="1497" fg:w="3242"/><text x="3.2049%" y="623.50">&lt;core::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,238 samples, 6.39%)</title><rect x="2.9628%" y="597" width="6.3914%" height="15" fill="rgb(252,136,39)" fg:x="1501" fg:w="3238"/><text x="3.2128%" y="607.50">async_ex..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (126 samples, 0.25%)</title><rect x="9.1054%" y="581" width="0.2487%" height="15" fill="rgb(223,213,32)" fg:x="4613" fg:w="126"/><text x="9.3554%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="9.3364%" y="565" width="0.0178%" height="15" fill="rgb(233,115,5)" fg:x="4730" fg:w="9"/><text x="9.5864%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (9 samples, 0.02%)</title><rect x="9.3364%" y="549" width="0.0178%" height="15" fill="rgb(207,226,44)" fg:x="4730" fg:w="9"/><text x="9.5864%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="9.3364%" y="533" width="0.0178%" height="15" fill="rgb(208,126,0)" fg:x="4730" fg:w="9"/><text x="9.5864%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="9.3364%" y="517" width="0.0178%" height="15" fill="rgb(244,66,21)" fg:x="4730" fg:w="9"/><text x="9.5864%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="9.3364%" y="501" width="0.0178%" height="15" fill="rgb(222,97,12)" fg:x="4730" fg:w="9"/><text x="9.5864%" y="511.50"></text></g><g><title>async_task::header::Header::take (12 samples, 0.02%)</title><rect x="9.3542%" y="613" width="0.0237%" height="15" fill="rgb(219,213,19)" fg:x="4739" fg:w="12"/><text x="9.6042%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.02%)</title><rect x="9.3601%" y="597" width="0.0178%" height="15" fill="rgb(252,169,30)" fg:x="4742" fg:w="9"/><text x="9.6101%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.02%)</title><rect x="9.3601%" y="581" width="0.0178%" height="15" fill="rgb(206,32,51)" fg:x="4742" fg:w="9"/><text x="9.6101%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (11 samples, 0.02%)</title><rect x="9.3778%" y="613" width="0.0217%" height="15" fill="rgb(250,172,42)" fg:x="4751" fg:w="11"/><text x="9.6278%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="9.3798%" y="597" width="0.0197%" height="15" fill="rgb(209,34,43)" fg:x="4752" fg:w="10"/><text x="9.6298%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="9.3798%" y="581" width="0.0197%" height="15" fill="rgb(223,11,35)" fg:x="4752" fg:w="10"/><text x="9.6298%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (6 samples, 0.01%)</title><rect x="9.4035%" y="549" width="0.0118%" height="15" fill="rgb(251,219,26)" fg:x="4764" fg:w="6"/><text x="9.6535%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="9.4035%" y="533" width="0.0118%" height="15" fill="rgb(231,119,3)" fg:x="4764" fg:w="6"/><text x="9.6535%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="9.4035%" y="517" width="0.0118%" height="15" fill="rgb(216,97,11)" fg:x="4764" fg:w="6"/><text x="9.6535%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.02%)</title><rect x="9.4351%" y="485" width="0.0237%" height="15" fill="rgb(223,59,9)" fg:x="4780" fg:w="12"/><text x="9.6851%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.02%)</title><rect x="9.4351%" y="469" width="0.0237%" height="15" fill="rgb(233,93,31)" fg:x="4780" fg:w="12"/><text x="9.6851%" y="479.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (27 samples, 0.05%)</title><rect x="9.4153%" y="533" width="0.0533%" height="15" fill="rgb(239,81,33)" fg:x="4770" fg:w="27"/><text x="9.6653%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (26 samples, 0.05%)</title><rect x="9.4173%" y="517" width="0.0513%" height="15" fill="rgb(213,120,34)" fg:x="4771" fg:w="26"/><text x="9.6673%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (24 samples, 0.05%)</title><rect x="9.4213%" y="501" width="0.0474%" height="15" fill="rgb(243,49,53)" fg:x="4773" fg:w="24"/><text x="9.6713%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="9.4686%" y="533" width="0.0178%" height="15" fill="rgb(247,216,33)" fg:x="4797" fg:w="9"/><text x="9.7186%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="9.4686%" y="517" width="0.0178%" height="15" fill="rgb(226,26,14)" fg:x="4797" fg:w="9"/><text x="9.7186%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (55 samples, 0.11%)</title><rect x="9.3995%" y="565" width="0.1086%" height="15" fill="rgb(215,49,53)" fg:x="4762" fg:w="55"/><text x="9.6495%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (47 samples, 0.09%)</title><rect x="9.4153%" y="549" width="0.0928%" height="15" fill="rgb(245,162,40)" fg:x="4770" fg:w="47"/><text x="9.6653%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.02%)</title><rect x="9.4864%" y="533" width="0.0217%" height="15" fill="rgb(229,68,17)" fg:x="4806" fg:w="11"/><text x="9.7364%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.02%)</title><rect x="9.4864%" y="517" width="0.0217%" height="15" fill="rgb(213,182,10)" fg:x="4806" fg:w="11"/><text x="9.7364%" y="527.50"></text></g><g><title>async_task::utils::abort_on_panic (58 samples, 0.11%)</title><rect x="9.3995%" y="613" width="0.1145%" height="15" fill="rgb(245,125,30)" fg:x="4762" fg:w="58"/><text x="9.6495%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (58 samples, 0.11%)</title><rect x="9.3995%" y="597" width="0.1145%" height="15" fill="rgb(232,202,2)" fg:x="4762" fg:w="58"/><text x="9.6495%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake (58 samples, 0.11%)</title><rect x="9.3995%" y="581" width="0.1145%" height="15" fill="rgb(237,140,51)" fg:x="4762" fg:w="58"/><text x="9.6495%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (68 samples, 0.13%)</title><rect x="9.5140%" y="613" width="0.1342%" height="15" fill="rgb(236,157,25)" fg:x="4820" fg:w="68"/><text x="9.7640%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (68 samples, 0.13%)</title><rect x="9.5140%" y="597" width="0.1342%" height="15" fill="rgb(219,209,0)" fg:x="4820" fg:w="68"/><text x="9.7640%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,408 samples, 6.73%)</title><rect x="2.9253%" y="629" width="6.7269%" height="15" fill="rgb(240,116,54)" fg:x="1482" fg:w="3408"/><text x="3.1753%" y="639.50">async_tas..</text></g><g><title>async_task::runnable::Runnable::run (32 samples, 0.06%)</title><rect x="9.6522%" y="629" width="0.0632%" height="15" fill="rgb(216,10,36)" fg:x="4890" fg:w="32"/><text x="9.9022%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,373 samples, 8.63%)</title><rect x="1.1034%" y="677" width="8.6317%" height="15" fill="rgb(222,72,44)" fg:x="559" fg:w="4373"/><text x="1.3534%" y="687.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,281 samples, 8.45%)</title><rect x="1.2850%" y="661" width="8.4501%" height="15" fill="rgb(232,159,9)" fg:x="651" fg:w="4281"/><text x="1.5350%" y="671.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,281 samples, 8.45%)</title><rect x="1.2850%" y="645" width="8.4501%" height="15" fill="rgb(210,39,32)" fg:x="651" fg:w="4281"/><text x="1.5350%" y="655.50">async_execut..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.02%)</title><rect x="9.7154%" y="629" width="0.0197%" height="15" fill="rgb(216,194,45)" fg:x="4922" fg:w="10"/><text x="9.9654%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.02%)</title><rect x="9.7154%" y="613" width="0.0197%" height="15" fill="rgb(218,18,35)" fg:x="4922" fg:w="10"/><text x="9.9654%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,384 samples, 8.65%)</title><rect x="1.0856%" y="709" width="8.6534%" height="15" fill="rgb(207,83,51)" fg:x="550" fg:w="4384"/><text x="1.3356%" y="719.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,383 samples, 8.65%)</title><rect x="1.0876%" y="693" width="8.6515%" height="15" fill="rgb(225,63,43)" fg:x="551" fg:w="4383"/><text x="1.3376%" y="703.50">async_execut..</text></g><g><title>std::sync::poison::Flag::done (8 samples, 0.02%)</title><rect x="9.7430%" y="645" width="0.0158%" height="15" fill="rgb(207,57,36)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="655.50"></text></g><g><title>std::thread::panicking (8 samples, 0.02%)</title><rect x="9.7430%" y="629" width="0.0158%" height="15" fill="rgb(216,99,33)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="639.50"></text></g><g><title>std::panicking::panicking (8 samples, 0.02%)</title><rect x="9.7430%" y="613" width="0.0158%" height="15" fill="rgb(225,42,16)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="623.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (8 samples, 0.02%)</title><rect x="9.7430%" y="597" width="0.0158%" height="15" fill="rgb(220,201,45)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="9.7430%" y="581" width="0.0158%" height="15" fill="rgb(225,33,4)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="9.7430%" y="565" width="0.0158%" height="15" fill="rgb(224,33,50)" fg:x="4936" fg:w="8"/><text x="9.9930%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (10 samples, 0.02%)</title><rect x="9.7410%" y="677" width="0.0197%" height="15" fill="rgb(246,198,51)" fg:x="4935" fg:w="10"/><text x="9.9910%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="9.7410%" y="661" width="0.0197%" height="15" fill="rgb(205,22,4)" fg:x="4935" fg:w="10"/><text x="9.9910%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.02%)</title><rect x="9.7608%" y="677" width="0.0158%" height="15" fill="rgb(206,3,8)" fg:x="4945" fg:w="8"/><text x="10.0108%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="9.7608%" y="661" width="0.0158%" height="15" fill="rgb(251,23,15)" fg:x="4945" fg:w="8"/><text x="10.0108%" y="671.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (19 samples, 0.04%)</title><rect x="9.8377%" y="597" width="0.0375%" height="15" fill="rgb(252,88,28)" fg:x="4984" fg:w="19"/><text x="10.0877%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (15 samples, 0.03%)</title><rect x="9.8753%" y="597" width="0.0296%" height="15" fill="rgb(212,127,14)" fg:x="5003" fg:w="15"/><text x="10.1253%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (328 samples, 0.65%)</title><rect x="9.8259%" y="613" width="0.6474%" height="15" fill="rgb(247,145,37)" fg:x="4978" fg:w="328"/><text x="10.0759%" y="623.50"></text></g><g><title>syscall (288 samples, 0.57%)</title><rect x="9.9049%" y="597" width="0.5685%" height="15" fill="rgb(209,117,53)" fg:x="5018" fg:w="288"/><text x="10.1549%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (26 samples, 0.05%)</title><rect x="10.4733%" y="613" width="0.0513%" height="15" fill="rgb(212,90,42)" fg:x="5306" fg:w="26"/><text x="10.7233%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (26 samples, 0.05%)</title><rect x="10.4733%" y="597" width="0.0513%" height="15" fill="rgb(218,164,37)" fg:x="5306" fg:w="26"/><text x="10.7233%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.05%)</title><rect x="10.4733%" y="581" width="0.0513%" height="15" fill="rgb(246,65,34)" fg:x="5306" fg:w="26"/><text x="10.7233%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (378 samples, 0.75%)</title><rect x="9.7864%" y="645" width="0.7461%" height="15" fill="rgb(231,100,33)" fg:x="4958" fg:w="378"/><text x="10.0364%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (377 samples, 0.74%)</title><rect x="9.7884%" y="629" width="0.7441%" height="15" fill="rgb(228,126,14)" fg:x="4959" fg:w="377"/><text x="10.0384%" y="639.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (4,806 samples, 9.49%)</title><rect x="1.0521%" y="725" width="9.4864%" height="15" fill="rgb(215,173,21)" fg:x="533" fg:w="4806"/><text x="1.3021%" y="735.50">futures_lite::..</text></g><g><title>parking::Parker::park (405 samples, 0.80%)</title><rect x="9.7391%" y="709" width="0.7994%" height="15" fill="rgb(210,6,40)" fg:x="4934" fg:w="405"/><text x="9.9891%" y="719.50"></text></g><g><title>parking::Inner::park (405 samples, 0.80%)</title><rect x="9.7391%" y="693" width="0.7994%" height="15" fill="rgb(212,48,18)" fg:x="4934" fg:w="405"/><text x="9.9891%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (386 samples, 0.76%)</title><rect x="9.7766%" y="677" width="0.7619%" height="15" fill="rgb(230,214,11)" fg:x="4953" fg:w="386"/><text x="10.0266%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (381 samples, 0.75%)</title><rect x="9.7864%" y="661" width="0.7520%" height="15" fill="rgb(254,105,39)" fg:x="4958" fg:w="381"/><text x="10.0364%" y="671.50"></text></g><g><title>__GI___clone (4,807 samples, 9.49%)</title><rect x="1.0521%" y="997" width="9.4884%" height="15" fill="rgb(245,158,5)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="1007.50">__GI___clone</text></g><g><title>start_thread (4,807 samples, 9.49%)</title><rect x="1.0521%" y="981" width="9.4884%" height="15" fill="rgb(249,208,11)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="991.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,807 samples, 9.49%)</title><rect x="1.0521%" y="965" width="9.4884%" height="15" fill="rgb(210,39,28)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="975.50">std::sys::unix..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,807 samples, 9.49%)</title><rect x="1.0521%" y="949" width="9.4884%" height="15" fill="rgb(211,56,53)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="959.50">&lt;alloc::boxed:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,807 samples, 9.49%)</title><rect x="1.0521%" y="933" width="9.4884%" height="15" fill="rgb(226,201,30)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="943.50">&lt;alloc::boxed:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,807 samples, 9.49%)</title><rect x="1.0521%" y="917" width="9.4884%" height="15" fill="rgb(239,101,34)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="927.50">core::ops::fun..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4,807 samples, 9.49%)</title><rect x="1.0521%" y="901" width="9.4884%" height="15" fill="rgb(226,209,5)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="911.50">std::thread::B..</text></g><g><title>std::panic::catch_unwind (4,807 samples, 9.49%)</title><rect x="1.0521%" y="885" width="9.4884%" height="15" fill="rgb(250,105,47)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="895.50">std::panic::ca..</text></g><g><title>std::panicking::try (4,807 samples, 9.49%)</title><rect x="1.0521%" y="869" width="9.4884%" height="15" fill="rgb(230,72,3)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="879.50">std::panicking..</text></g><g><title>std::panicking::try::do_call (4,807 samples, 9.49%)</title><rect x="1.0521%" y="853" width="9.4884%" height="15" fill="rgb(232,218,39)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="863.50">std::panicking..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,807 samples, 9.49%)</title><rect x="1.0521%" y="837" width="9.4884%" height="15" fill="rgb(248,166,6)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="847.50">&lt;core::panic::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4,807 samples, 9.49%)</title><rect x="1.0521%" y="821" width="9.4884%" height="15" fill="rgb(247,89,20)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="831.50">std::thread::B..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,807 samples, 9.49%)</title><rect x="1.0521%" y="805" width="9.4884%" height="15" fill="rgb(248,130,54)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="815.50">std::sys_commo..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (4,807 samples, 9.49%)</title><rect x="1.0521%" y="789" width="9.4884%" height="15" fill="rgb(234,196,4)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="799.50">bevy_tasks::ta..</text></g><g><title>futures_lite::future::block_on (4,807 samples, 9.49%)</title><rect x="1.0521%" y="773" width="9.4884%" height="15" fill="rgb(250,143,31)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="783.50">futures_lite::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,807 samples, 9.49%)</title><rect x="1.0521%" y="757" width="9.4884%" height="15" fill="rgb(211,110,34)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="767.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,807 samples, 9.49%)</title><rect x="1.0521%" y="741" width="9.4884%" height="15" fill="rgb(215,124,48)" fg:x="533" fg:w="4807"/><text x="1.3021%" y="751.50">std::thread::l..</text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="10.5641%" y="981" width="0.0138%" height="15" fill="rgb(216,46,13)" fg:x="5352" fg:w="7"/><text x="10.8141%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="10.5779%" y="981" width="0.0158%" height="15" fill="rgb(205,184,25)" fg:x="5359" fg:w="8"/><text x="10.8279%" y="991.50"></text></g><g><title>parking::Parker::new (19 samples, 0.04%)</title><rect x="10.5641%" y="997" width="0.0375%" height="15" fill="rgb(228,1,10)" fg:x="5352" fg:w="19"/><text x="10.8141%" y="1007.50"></text></g><g><title>Compute_Task_Po (5,374 samples, 10.61%)</title><rect x="0.0178%" y="1013" width="10.6076%" height="15" fill="rgb(213,116,27)" fg:x="9" fg:w="5374"/><text x="0.2678%" y="1023.50">Compute_Task_Po</text></g><g><title>std::thread::current (12 samples, 0.02%)</title><rect x="10.6016%" y="997" width="0.0237%" height="15" fill="rgb(241,95,50)" fg:x="5371" fg:w="12"/><text x="10.8516%" y="1007.50"></text></g><g><title>[[heap]] (14 samples, 0.03%)</title><rect x="10.6352%" y="997" width="0.0276%" height="15" fill="rgb(238,48,32)" fg:x="5388" fg:w="14"/><text x="10.8852%" y="1007.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (6 samples, 0.01%)</title><rect x="10.6628%" y="981" width="0.0118%" height="15" fill="rgb(235,113,49)" fg:x="5402" fg:w="6"/><text x="10.9128%" y="991.50"></text></g><g><title>[anon] (23 samples, 0.05%)</title><rect x="10.6628%" y="997" width="0.0454%" height="15" fill="rgb(205,127,43)" fg:x="5402" fg:w="23"/><text x="10.9128%" y="1007.50"></text></g><g><title>[unknown] (33 samples, 0.07%)</title><rect x="10.7082%" y="997" width="0.0651%" height="15" fill="rgb(250,162,2)" fg:x="5425" fg:w="33"/><text x="10.9582%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (8 samples, 0.02%)</title><rect x="10.7951%" y="501" width="0.0158%" height="15" fill="rgb(220,13,41)" fg:x="5469" fg:w="8"/><text x="11.0451%" y="511.50"></text></g><g><title>async_executor::steal (11 samples, 0.02%)</title><rect x="10.7911%" y="517" width="0.0217%" height="15" fill="rgb(249,221,25)" fg:x="5467" fg:w="11"/><text x="11.0411%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="10.8148%" y="501" width="0.0118%" height="15" fill="rgb(215,208,19)" fg:x="5479" fg:w="6"/><text x="11.0648%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (26 samples, 0.05%)</title><rect x="10.7872%" y="533" width="0.0513%" height="15" fill="rgb(236,175,2)" fg:x="5465" fg:w="26"/><text x="11.0372%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.03%)</title><rect x="10.8128%" y="517" width="0.0257%" height="15" fill="rgb(241,52,2)" fg:x="5478" fg:w="13"/><text x="11.0628%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="10.8267%" y="501" width="0.0118%" height="15" fill="rgb(248,140,14)" fg:x="5485" fg:w="6"/><text x="11.0767%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.07%)</title><rect x="10.7832%" y="597" width="0.0671%" height="15" fill="rgb(253,22,42)" fg:x="5463" fg:w="34"/><text x="11.0332%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (33 samples, 0.07%)</title><rect x="10.7852%" y="581" width="0.0651%" height="15" fill="rgb(234,61,47)" fg:x="5464" fg:w="33"/><text x="11.0352%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.07%)</title><rect x="10.7852%" y="565" width="0.0651%" height="15" fill="rgb(208,226,15)" fg:x="5464" fg:w="33"/><text x="11.0352%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (33 samples, 0.07%)</title><rect x="10.7852%" y="549" width="0.0651%" height="15" fill="rgb(217,221,4)" fg:x="5464" fg:w="33"/><text x="11.0352%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.07%)</title><rect x="10.7832%" y="629" width="0.0691%" height="15" fill="rgb(212,174,34)" fg:x="5463" fg:w="35"/><text x="11.0332%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (35 samples, 0.07%)</title><rect x="10.7832%" y="613" width="0.0691%" height="15" fill="rgb(253,83,4)" fg:x="5463" fg:w="35"/><text x="11.0332%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="10.8523%" y="565" width="0.0138%" height="15" fill="rgb(250,195,49)" fg:x="5498" fg:w="7"/><text x="11.1023%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="10.8740%" y="549" width="0.0237%" height="15" fill="rgb(241,192,25)" fg:x="5509" fg:w="12"/><text x="11.1240%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (11 samples, 0.02%)</title><rect x="10.8760%" y="533" width="0.0217%" height="15" fill="rgb(208,124,10)" fg:x="5510" fg:w="11"/><text x="11.1260%" y="543.50"></text></g><g><title>event_listener::Event::notify (9 samples, 0.02%)</title><rect x="10.8799%" y="517" width="0.0178%" height="15" fill="rgb(222,33,0)" fg:x="5512" fg:w="9"/><text x="11.1299%" y="527.50"></text></g><g><title>event_listener::List::notify (8 samples, 0.02%)</title><rect x="10.8819%" y="501" width="0.0158%" height="15" fill="rgb(234,209,28)" fg:x="5513" fg:w="8"/><text x="11.1319%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (8 samples, 0.02%)</title><rect x="10.8819%" y="485" width="0.0158%" height="15" fill="rgb(224,11,23)" fg:x="5513" fg:w="8"/><text x="11.1319%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (8 samples, 0.02%)</title><rect x="10.8819%" y="469" width="0.0158%" height="15" fill="rgb(232,99,1)" fg:x="5513" fg:w="8"/><text x="11.1319%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (6 samples, 0.01%)</title><rect x="10.8859%" y="453" width="0.0118%" height="15" fill="rgb(237,95,45)" fg:x="5515" fg:w="6"/><text x="11.1359%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="10.9017%" y="533" width="0.0178%" height="15" fill="rgb(208,109,11)" fg:x="5523" fg:w="9"/><text x="11.1517%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (9 samples, 0.02%)</title><rect x="10.9017%" y="517" width="0.0178%" height="15" fill="rgb(216,190,48)" fg:x="5523" fg:w="9"/><text x="11.1517%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.02%)</title><rect x="10.9017%" y="501" width="0.0178%" height="15" fill="rgb(251,171,36)" fg:x="5523" fg:w="9"/><text x="11.1517%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (9 samples, 0.02%)</title><rect x="10.9017%" y="485" width="0.0178%" height="15" fill="rgb(230,62,22)" fg:x="5523" fg:w="9"/><text x="11.1517%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (9 samples, 0.02%)</title><rect x="10.9017%" y="469" width="0.0178%" height="15" fill="rgb(225,114,35)" fg:x="5523" fg:w="9"/><text x="11.1517%" y="479.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (10 samples, 0.02%)</title><rect x="10.9234%" y="469" width="0.0197%" height="15" fill="rgb(215,118,42)" fg:x="5534" fg:w="10"/><text x="11.1734%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (7 samples, 0.01%)</title><rect x="10.9293%" y="453" width="0.0138%" height="15" fill="rgb(243,119,21)" fg:x="5537" fg:w="7"/><text x="11.1793%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="10.9490%" y="421" width="0.0197%" height="15" fill="rgb(252,177,53)" fg:x="5547" fg:w="10"/><text x="11.1990%" y="431.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="10.9490%" y="405" width="0.0197%" height="15" fill="rgb(237,209,29)" fg:x="5547" fg:w="10"/><text x="11.1990%" y="415.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (47 samples, 0.09%)</title><rect x="10.9451%" y="437" width="0.0928%" height="15" fill="rgb(212,65,23)" fg:x="5545" fg:w="47"/><text x="11.1951%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (30 samples, 0.06%)</title><rect x="10.9786%" y="421" width="0.0592%" height="15" fill="rgb(230,222,46)" fg:x="5562" fg:w="30"/><text x="11.2286%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.06%)</title><rect x="10.9786%" y="405" width="0.0592%" height="15" fill="rgb(215,135,32)" fg:x="5562" fg:w="30"/><text x="11.2286%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.06%)</title><rect x="10.9786%" y="389" width="0.0592%" height="15" fill="rgb(246,101,22)" fg:x="5562" fg:w="30"/><text x="11.2286%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="11.0458%" y="405" width="0.0118%" height="15" fill="rgb(206,107,13)" fg:x="5596" fg:w="6"/><text x="11.2958%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="11.0458%" y="389" width="0.0118%" height="15" fill="rgb(250,100,44)" fg:x="5596" fg:w="6"/><text x="11.2958%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="11.0458%" y="373" width="0.0118%" height="15" fill="rgb(231,147,38)" fg:x="5596" fg:w="6"/><text x="11.2958%" y="383.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (7 samples, 0.01%)</title><rect x="11.0675%" y="357" width="0.0138%" height="15" fill="rgb(229,8,40)" fg:x="5607" fg:w="7"/><text x="11.3175%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.01%)</title><rect x="11.0675%" y="341" width="0.0138%" height="15" fill="rgb(221,135,30)" fg:x="5607" fg:w="7"/><text x="11.3175%" y="351.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (25 samples, 0.05%)</title><rect x="11.0379%" y="437" width="0.0493%" height="15" fill="rgb(249,193,18)" fg:x="5592" fg:w="25"/><text x="11.2879%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (25 samples, 0.05%)</title><rect x="11.0379%" y="421" width="0.0493%" height="15" fill="rgb(209,133,39)" fg:x="5592" fg:w="25"/><text x="11.2879%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (15 samples, 0.03%)</title><rect x="11.0576%" y="405" width="0.0296%" height="15" fill="rgb(232,100,14)" fg:x="5602" fg:w="15"/><text x="11.3076%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="11.0576%" y="389" width="0.0296%" height="15" fill="rgb(224,185,1)" fg:x="5602" fg:w="15"/><text x="11.3076%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="11.0576%" y="373" width="0.0296%" height="15" fill="rgb(223,139,8)" fg:x="5602" fg:w="15"/><text x="11.3076%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (73 samples, 0.14%)</title><rect x="10.9451%" y="453" width="0.1441%" height="15" fill="rgb(232,213,38)" fg:x="5545" fg:w="73"/><text x="11.1951%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (89 samples, 0.18%)</title><rect x="10.9194%" y="533" width="0.1757%" height="15" fill="rgb(207,94,22)" fg:x="5532" fg:w="89"/><text x="11.1694%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (89 samples, 0.18%)</title><rect x="10.9194%" y="517" width="0.1757%" height="15" fill="rgb(219,183,54)" fg:x="5532" fg:w="89"/><text x="11.1694%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (89 samples, 0.18%)</title><rect x="10.9194%" y="501" width="0.1757%" height="15" fill="rgb(216,185,54)" fg:x="5532" fg:w="89"/><text x="11.1694%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (89 samples, 0.18%)</title><rect x="10.9194%" y="485" width="0.1757%" height="15" fill="rgb(254,217,39)" fg:x="5532" fg:w="89"/><text x="11.1694%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (77 samples, 0.15%)</title><rect x="10.9431%" y="469" width="0.1520%" height="15" fill="rgb(240,178,23)" fg:x="5544" fg:w="77"/><text x="11.1931%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="11.1030%" y="421" width="0.0138%" height="15" fill="rgb(218,11,47)" fg:x="5625" fg:w="7"/><text x="11.3530%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="11.1030%" y="405" width="0.0138%" height="15" fill="rgb(218,51,51)" fg:x="5625" fg:w="7"/><text x="11.3530%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (28 samples, 0.06%)</title><rect x="11.1504%" y="325" width="0.0553%" height="15" fill="rgb(238,126,27)" fg:x="5649" fg:w="28"/><text x="11.4004%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.06%)</title><rect x="11.1504%" y="309" width="0.0553%" height="15" fill="rgb(249,202,22)" fg:x="5649" fg:w="28"/><text x="11.4004%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (27 samples, 0.05%)</title><rect x="11.1523%" y="293" width="0.0533%" height="15" fill="rgb(254,195,49)" fg:x="5650" fg:w="27"/><text x="11.4023%" y="303.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (47 samples, 0.09%)</title><rect x="11.1168%" y="421" width="0.0928%" height="15" fill="rgb(208,123,14)" fg:x="5632" fg:w="47"/><text x="11.3668%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (47 samples, 0.09%)</title><rect x="11.1168%" y="405" width="0.0928%" height="15" fill="rgb(224,200,8)" fg:x="5632" fg:w="47"/><text x="11.3668%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (47 samples, 0.09%)</title><rect x="11.1168%" y="389" width="0.0928%" height="15" fill="rgb(217,61,36)" fg:x="5632" fg:w="47"/><text x="11.3668%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (44 samples, 0.09%)</title><rect x="11.1227%" y="373" width="0.0869%" height="15" fill="rgb(206,35,45)" fg:x="5635" fg:w="44"/><text x="11.3727%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (41 samples, 0.08%)</title><rect x="11.1287%" y="357" width="0.0809%" height="15" fill="rgb(217,65,33)" fg:x="5638" fg:w="41"/><text x="11.3787%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (41 samples, 0.08%)</title><rect x="11.1287%" y="341" width="0.0809%" height="15" fill="rgb(222,158,48)" fg:x="5638" fg:w="41"/><text x="11.3787%" y="351.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (55 samples, 0.11%)</title><rect x="11.1030%" y="453" width="0.1086%" height="15" fill="rgb(254,2,54)" fg:x="5625" fg:w="55"/><text x="11.3530%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (55 samples, 0.11%)</title><rect x="11.1030%" y="437" width="0.1086%" height="15" fill="rgb(250,143,38)" fg:x="5625" fg:w="55"/><text x="11.3530%" y="447.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (61 samples, 0.12%)</title><rect x="11.1030%" y="469" width="0.1204%" height="15" fill="rgb(248,25,0)" fg:x="5625" fg:w="61"/><text x="11.3530%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="11.2116%" y="453" width="0.0118%" height="15" fill="rgb(206,152,27)" fg:x="5680" fg:w="6"/><text x="11.4616%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="11.2116%" y="437" width="0.0118%" height="15" fill="rgb(240,77,30)" fg:x="5680" fg:w="6"/><text x="11.4616%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="11.2116%" y="421" width="0.0118%" height="15" fill="rgb(231,5,3)" fg:x="5680" fg:w="6"/><text x="11.4616%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="11.2116%" y="405" width="0.0118%" height="15" fill="rgb(207,226,32)" fg:x="5680" fg:w="6"/><text x="11.4616%" y="415.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (6 samples, 0.01%)</title><rect x="11.2234%" y="469" width="0.0118%" height="15" fill="rgb(222,207,47)" fg:x="5686" fg:w="6"/><text x="11.4734%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (72 samples, 0.14%)</title><rect x="11.0951%" y="533" width="0.1421%" height="15" fill="rgb(229,115,45)" fg:x="5621" fg:w="72"/><text x="11.3451%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (72 samples, 0.14%)</title><rect x="11.0951%" y="517" width="0.1421%" height="15" fill="rgb(224,191,6)" fg:x="5621" fg:w="72"/><text x="11.3451%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72 samples, 0.14%)</title><rect x="11.0951%" y="501" width="0.1421%" height="15" fill="rgb(230,227,24)" fg:x="5621" fg:w="72"/><text x="11.3451%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (72 samples, 0.14%)</title><rect x="11.0951%" y="485" width="0.1421%" height="15" fill="rgb(228,80,19)" fg:x="5621" fg:w="72"/><text x="11.3451%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (7 samples, 0.01%)</title><rect x="11.2491%" y="453" width="0.0138%" height="15" fill="rgb(247,229,0)" fg:x="5699" fg:w="7"/><text x="11.4991%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (6 samples, 0.01%)</title><rect x="11.2510%" y="437" width="0.0118%" height="15" fill="rgb(237,194,15)" fg:x="5700" fg:w="6"/><text x="11.5010%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="11.2510%" y="421" width="0.0118%" height="15" fill="rgb(219,203,20)" fg:x="5700" fg:w="6"/><text x="11.5010%" y="431.50"></text></g><g><title>bevy_crevice::internal::align_offset (8 samples, 0.02%)</title><rect x="11.2866%" y="357" width="0.0158%" height="15" fill="rgb(234,128,8)" fg:x="5718" fg:w="8"/><text x="11.5366%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.04%)</title><rect x="11.3083%" y="325" width="0.0434%" height="15" fill="rgb(248,202,8)" fg:x="5729" fg:w="22"/><text x="11.5583%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.04%)</title><rect x="11.3083%" y="309" width="0.0434%" height="15" fill="rgb(206,104,37)" fg:x="5729" fg:w="22"/><text x="11.5583%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.04%)</title><rect x="11.3083%" y="293" width="0.0434%" height="15" fill="rgb(223,8,27)" fg:x="5729" fg:w="22"/><text x="11.5583%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (42 samples, 0.08%)</title><rect x="11.2708%" y="389" width="0.0829%" height="15" fill="rgb(216,217,28)" fg:x="5710" fg:w="42"/><text x="11.5208%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (39 samples, 0.08%)</title><rect x="11.2767%" y="373" width="0.0770%" height="15" fill="rgb(249,199,1)" fg:x="5713" fg:w="39"/><text x="11.5267%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (26 samples, 0.05%)</title><rect x="11.3024%" y="357" width="0.0513%" height="15" fill="rgb(240,85,17)" fg:x="5726" fg:w="26"/><text x="11.5524%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (26 samples, 0.05%)</title><rect x="11.3024%" y="341" width="0.0513%" height="15" fill="rgb(206,108,45)" fg:x="5726" fg:w="26"/><text x="11.5524%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (46 samples, 0.09%)</title><rect x="11.2708%" y="421" width="0.0908%" height="15" fill="rgb(245,210,41)" fg:x="5710" fg:w="46"/><text x="11.5208%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (46 samples, 0.09%)</title><rect x="11.2708%" y="405" width="0.0908%" height="15" fill="rgb(206,13,37)" fg:x="5710" fg:w="46"/><text x="11.5208%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (71 samples, 0.14%)</title><rect x="11.2372%" y="533" width="0.1401%" height="15" fill="rgb(250,61,18)" fg:x="5693" fg:w="71"/><text x="11.4872%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (71 samples, 0.14%)</title><rect x="11.2372%" y="517" width="0.1401%" height="15" fill="rgb(235,172,48)" fg:x="5693" fg:w="71"/><text x="11.4872%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (71 samples, 0.14%)</title><rect x="11.2372%" y="501" width="0.1401%" height="15" fill="rgb(249,201,17)" fg:x="5693" fg:w="71"/><text x="11.4872%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (71 samples, 0.14%)</title><rect x="11.2372%" y="485" width="0.1401%" height="15" fill="rgb(219,208,6)" fg:x="5693" fg:w="71"/><text x="11.4872%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (71 samples, 0.14%)</title><rect x="11.2372%" y="469" width="0.1401%" height="15" fill="rgb(248,31,23)" fg:x="5693" fg:w="71"/><text x="11.4872%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (58 samples, 0.11%)</title><rect x="11.2629%" y="453" width="0.1145%" height="15" fill="rgb(245,15,42)" fg:x="5706" fg:w="58"/><text x="11.5129%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (58 samples, 0.11%)</title><rect x="11.2629%" y="437" width="0.1145%" height="15" fill="rgb(222,217,39)" fg:x="5706" fg:w="58"/><text x="11.5129%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (8 samples, 0.02%)</title><rect x="11.3616%" y="421" width="0.0158%" height="15" fill="rgb(210,219,27)" fg:x="5756" fg:w="8"/><text x="11.6116%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (6 samples, 0.01%)</title><rect x="11.3655%" y="405" width="0.0118%" height="15" fill="rgb(252,166,36)" fg:x="5758" fg:w="6"/><text x="11.6155%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (6 samples, 0.01%)</title><rect x="11.3655%" y="389" width="0.0118%" height="15" fill="rgb(245,132,34)" fg:x="5758" fg:w="6"/><text x="11.6155%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="11.3655%" y="373" width="0.0118%" height="15" fill="rgb(236,54,3)" fg:x="5758" fg:w="6"/><text x="11.6155%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="11.3655%" y="357" width="0.0118%" height="15" fill="rgb(241,173,43)" fg:x="5758" fg:w="6"/><text x="11.6155%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (7 samples, 0.01%)</title><rect x="11.3774%" y="533" width="0.0138%" height="15" fill="rgb(215,190,9)" fg:x="5764" fg:w="7"/><text x="11.6274%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="11.3774%" y="517" width="0.0138%" height="15" fill="rgb(242,101,16)" fg:x="5764" fg:w="7"/><text x="11.6274%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="11.3774%" y="501" width="0.0138%" height="15" fill="rgb(223,190,21)" fg:x="5764" fg:w="7"/><text x="11.6274%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="11.3774%" y="485" width="0.0138%" height="15" fill="rgb(215,228,25)" fg:x="5764" fg:w="7"/><text x="11.6274%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (251 samples, 0.50%)</title><rect x="10.8977%" y="549" width="0.4954%" height="15" fill="rgb(225,36,22)" fg:x="5521" fg:w="251"/><text x="11.1477%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (277 samples, 0.55%)</title><rect x="10.8523%" y="613" width="0.5468%" height="15" fill="rgb(251,106,46)" fg:x="5498" fg:w="277"/><text x="11.1023%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (277 samples, 0.55%)</title><rect x="10.8523%" y="597" width="0.5468%" height="15" fill="rgb(208,90,1)" fg:x="5498" fg:w="277"/><text x="11.1023%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (277 samples, 0.55%)</title><rect x="10.8523%" y="581" width="0.5468%" height="15" fill="rgb(243,10,4)" fg:x="5498" fg:w="277"/><text x="11.1023%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (270 samples, 0.53%)</title><rect x="10.8661%" y="565" width="0.5329%" height="15" fill="rgb(212,137,27)" fg:x="5505" fg:w="270"/><text x="11.1161%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (280 samples, 0.55%)</title><rect x="10.8523%" y="629" width="0.5527%" height="15" fill="rgb(231,220,49)" fg:x="5498" fg:w="280"/><text x="11.1023%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (320 samples, 0.63%)</title><rect x="10.7753%" y="709" width="0.6316%" height="15" fill="rgb(237,96,20)" fg:x="5459" fg:w="320"/><text x="11.0253%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (320 samples, 0.63%)</title><rect x="10.7753%" y="693" width="0.6316%" height="15" fill="rgb(239,229,30)" fg:x="5459" fg:w="320"/><text x="11.0253%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (320 samples, 0.63%)</title><rect x="10.7753%" y="677" width="0.6316%" height="15" fill="rgb(219,65,33)" fg:x="5459" fg:w="320"/><text x="11.0253%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (317 samples, 0.63%)</title><rect x="10.7813%" y="661" width="0.6257%" height="15" fill="rgb(243,134,7)" fg:x="5462" fg:w="317"/><text x="11.0313%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (317 samples, 0.63%)</title><rect x="10.7813%" y="645" width="0.6257%" height="15" fill="rgb(216,177,54)" fg:x="5462" fg:w="317"/><text x="11.0313%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (19 samples, 0.04%)</title><rect x="11.4129%" y="613" width="0.0375%" height="15" fill="rgb(211,160,20)" fg:x="5782" fg:w="19"/><text x="11.6629%" y="623.50"></text></g><g><title>syscall (19 samples, 0.04%)</title><rect x="11.4129%" y="597" width="0.0375%" height="15" fill="rgb(239,85,39)" fg:x="5782" fg:w="19"/><text x="11.6629%" y="607.50"></text></g><g><title>__GI___clone (345 samples, 0.68%)</title><rect x="10.7734%" y="997" width="0.6810%" height="15" fill="rgb(232,125,22)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="1007.50"></text></g><g><title>start_thread (345 samples, 0.68%)</title><rect x="10.7734%" y="981" width="0.6810%" height="15" fill="rgb(244,57,34)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (345 samples, 0.68%)</title><rect x="10.7734%" y="965" width="0.6810%" height="15" fill="rgb(214,203,32)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (345 samples, 0.68%)</title><rect x="10.7734%" y="949" width="0.6810%" height="15" fill="rgb(207,58,43)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (345 samples, 0.68%)</title><rect x="10.7734%" y="933" width="0.6810%" height="15" fill="rgb(215,193,15)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (345 samples, 0.68%)</title><rect x="10.7734%" y="917" width="0.6810%" height="15" fill="rgb(232,15,44)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (345 samples, 0.68%)</title><rect x="10.7734%" y="901" width="0.6810%" height="15" fill="rgb(212,3,48)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="911.50"></text></g><g><title>std::panic::catch_unwind (345 samples, 0.68%)</title><rect x="10.7734%" y="885" width="0.6810%" height="15" fill="rgb(218,128,7)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="895.50"></text></g><g><title>std::panicking::try (345 samples, 0.68%)</title><rect x="10.7734%" y="869" width="0.6810%" height="15" fill="rgb(226,216,39)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="879.50"></text></g><g><title>std::panicking::try::do_call (345 samples, 0.68%)</title><rect x="10.7734%" y="853" width="0.6810%" height="15" fill="rgb(243,47,51)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (345 samples, 0.68%)</title><rect x="10.7734%" y="837" width="0.6810%" height="15" fill="rgb(241,183,40)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (345 samples, 0.68%)</title><rect x="10.7734%" y="821" width="0.6810%" height="15" fill="rgb(231,217,32)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (345 samples, 0.68%)</title><rect x="10.7734%" y="805" width="0.6810%" height="15" fill="rgb(229,61,38)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (345 samples, 0.68%)</title><rect x="10.7734%" y="789" width="0.6810%" height="15" fill="rgb(225,210,5)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="799.50"></text></g><g><title>futures_lite::future::block_on (345 samples, 0.68%)</title><rect x="10.7734%" y="773" width="0.6810%" height="15" fill="rgb(231,79,45)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (345 samples, 0.68%)</title><rect x="10.7734%" y="757" width="0.6810%" height="15" fill="rgb(224,100,7)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (345 samples, 0.68%)</title><rect x="10.7734%" y="741" width="0.6810%" height="15" fill="rgb(241,198,18)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (345 samples, 0.68%)</title><rect x="10.7734%" y="725" width="0.6810%" height="15" fill="rgb(252,97,53)" fg:x="5458" fg:w="345"/><text x="11.0234%" y="735.50"></text></g><g><title>parking::Parker::park (24 samples, 0.05%)</title><rect x="11.4070%" y="709" width="0.0474%" height="15" fill="rgb(220,88,7)" fg:x="5779" fg:w="24"/><text x="11.6570%" y="719.50"></text></g><g><title>parking::Inner::park (24 samples, 0.05%)</title><rect x="11.4070%" y="693" width="0.0474%" height="15" fill="rgb(213,176,14)" fg:x="5779" fg:w="24"/><text x="11.6570%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (22 samples, 0.04%)</title><rect x="11.4109%" y="677" width="0.0434%" height="15" fill="rgb(246,73,7)" fg:x="5781" fg:w="22"/><text x="11.6609%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (22 samples, 0.04%)</title><rect x="11.4109%" y="661" width="0.0434%" height="15" fill="rgb(245,64,36)" fg:x="5781" fg:w="22"/><text x="11.6609%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (22 samples, 0.04%)</title><rect x="11.4109%" y="645" width="0.0434%" height="15" fill="rgb(245,80,10)" fg:x="5781" fg:w="22"/><text x="11.6609%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (22 samples, 0.04%)</title><rect x="11.4109%" y="629" width="0.0434%" height="15" fill="rgb(232,107,50)" fg:x="5781" fg:w="22"/><text x="11.6609%" y="639.50"></text></g><g><title>TaskPool_(10) (417 samples, 0.82%)</title><rect x="10.6332%" y="1013" width="0.8231%" height="15" fill="rgb(253,3,0)" fg:x="5387" fg:w="417"/><text x="10.8832%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="11.4583%" y="981" width="0.0217%" height="15" fill="rgb(212,99,53)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="11.4583%" y="965" width="0.0217%" height="15" fill="rgb(249,111,54)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (11 samples, 0.02%)</title><rect x="11.4583%" y="949" width="0.0217%" height="15" fill="rgb(249,55,30)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (11 samples, 0.02%)</title><rect x="11.4583%" y="933" width="0.0217%" height="15" fill="rgb(237,47,42)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (11 samples, 0.02%)</title><rect x="11.4583%" y="917" width="0.0217%" height="15" fill="rgb(211,20,18)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.02%)</title><rect x="11.4583%" y="901" width="0.0217%" height="15" fill="rgb(231,203,46)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="11.4583%" y="885" width="0.0217%" height="15" fill="rgb(237,142,3)" fg:x="5805" fg:w="11"/><text x="11.7083%" y="895.50"></text></g><g><title>[[heap]] (26 samples, 0.05%)</title><rect x="11.4583%" y="997" width="0.0513%" height="15" fill="rgb(241,107,1)" fg:x="5805" fg:w="26"/><text x="11.7083%" y="1007.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (10 samples, 0.02%)</title><rect x="11.5116%" y="981" width="0.0197%" height="15" fill="rgb(229,83,13)" fg:x="5832" fg:w="10"/><text x="11.7616%" y="991.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (7 samples, 0.01%)</title><rect x="11.5511%" y="981" width="0.0138%" height="15" fill="rgb(241,91,40)" fg:x="5852" fg:w="7"/><text x="11.8011%" y="991.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (15 samples, 0.03%)</title><rect x="11.5649%" y="981" width="0.0296%" height="15" fill="rgb(225,3,45)" fg:x="5859" fg:w="15"/><text x="11.8149%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.03%)</title><rect x="11.5649%" y="965" width="0.0296%" height="15" fill="rgb(244,223,14)" fg:x="5859" fg:w="15"/><text x="11.8149%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.03%)</title><rect x="11.5649%" y="949" width="0.0296%" height="15" fill="rgb(224,124,37)" fg:x="5859" fg:w="15"/><text x="11.8149%" y="959.50"></text></g><g><title>[anon] (51 samples, 0.10%)</title><rect x="11.5096%" y="997" width="0.1007%" height="15" fill="rgb(251,171,30)" fg:x="5831" fg:w="51"/><text x="11.7596%" y="1007.50"></text></g><g><title>[unknown] (66 samples, 0.13%)</title><rect x="11.6103%" y="997" width="0.1303%" height="15" fill="rgb(236,46,54)" fg:x="5882" fg:w="66"/><text x="11.8603%" y="1007.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="11.7445%" y="661" width="0.0197%" height="15" fill="rgb(245,213,5)" fg:x="5950" fg:w="10"/><text x="11.9945%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (21 samples, 0.04%)</title><rect x="11.7741%" y="501" width="0.0415%" height="15" fill="rgb(230,144,27)" fg:x="5965" fg:w="21"/><text x="12.0241%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (11 samples, 0.02%)</title><rect x="11.7938%" y="485" width="0.0217%" height="15" fill="rgb(220,86,6)" fg:x="5975" fg:w="11"/><text x="12.0438%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="11.7978%" y="469" width="0.0178%" height="15" fill="rgb(240,20,13)" fg:x="5977" fg:w="9"/><text x="12.0478%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="11.7978%" y="453" width="0.0178%" height="15" fill="rgb(217,89,34)" fg:x="5977" fg:w="9"/><text x="12.0478%" y="463.50"></text></g><g><title>async_executor::steal (24 samples, 0.05%)</title><rect x="11.7721%" y="517" width="0.0474%" height="15" fill="rgb(229,13,5)" fg:x="5964" fg:w="24"/><text x="12.0221%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (10 samples, 0.02%)</title><rect x="11.8235%" y="485" width="0.0197%" height="15" fill="rgb(244,67,35)" fg:x="5990" fg:w="10"/><text x="12.0735%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.02%)</title><rect x="11.8235%" y="469" width="0.0197%" height="15" fill="rgb(221,40,2)" fg:x="5990" fg:w="10"/><text x="12.0735%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="11.8235%" y="453" width="0.0197%" height="15" fill="rgb(237,157,21)" fg:x="5990" fg:w="10"/><text x="12.0735%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="11.8235%" y="437" width="0.0197%" height="15" fill="rgb(222,94,11)" fg:x="5990" fg:w="10"/><text x="12.0735%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (13 samples, 0.03%)</title><rect x="11.8235%" y="501" width="0.0257%" height="15" fill="rgb(249,113,6)" fg:x="5990" fg:w="13"/><text x="12.0735%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (18 samples, 0.04%)</title><rect x="11.8195%" y="517" width="0.0355%" height="15" fill="rgb(238,137,36)" fg:x="5988" fg:w="18"/><text x="12.0695%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (50 samples, 0.10%)</title><rect x="11.7702%" y="533" width="0.0987%" height="15" fill="rgb(210,102,26)" fg:x="5963" fg:w="50"/><text x="12.0202%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (6 samples, 0.01%)</title><rect x="11.8748%" y="533" width="0.0118%" height="15" fill="rgb(218,30,30)" fg:x="6016" fg:w="6"/><text x="12.1248%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.13%)</title><rect x="11.7642%" y="629" width="0.1283%" height="15" fill="rgb(214,67,26)" fg:x="5960" fg:w="65"/><text x="12.0142%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (65 samples, 0.13%)</title><rect x="11.7642%" y="613" width="0.1283%" height="15" fill="rgb(251,9,53)" fg:x="5960" fg:w="65"/><text x="12.0142%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.13%)</title><rect x="11.7662%" y="597" width="0.1263%" height="15" fill="rgb(228,204,25)" fg:x="5961" fg:w="64"/><text x="12.0162%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (64 samples, 0.13%)</title><rect x="11.7662%" y="581" width="0.1263%" height="15" fill="rgb(207,153,8)" fg:x="5961" fg:w="64"/><text x="12.0162%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (64 samples, 0.13%)</title><rect x="11.7662%" y="565" width="0.1263%" height="15" fill="rgb(242,9,16)" fg:x="5961" fg:w="64"/><text x="12.0162%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (64 samples, 0.13%)</title><rect x="11.7662%" y="549" width="0.1263%" height="15" fill="rgb(217,211,10)" fg:x="5961" fg:w="64"/><text x="12.0162%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="11.9044%" y="549" width="0.0118%" height="15" fill="rgb(219,228,52)" fg:x="6031" fg:w="6"/><text x="12.1544%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (6 samples, 0.01%)</title><rect x="11.9044%" y="533" width="0.0118%" height="15" fill="rgb(231,92,29)" fg:x="6031" fg:w="6"/><text x="12.1544%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (17 samples, 0.03%)</title><rect x="11.8965%" y="565" width="0.0336%" height="15" fill="rgb(232,8,23)" fg:x="6027" fg:w="17"/><text x="12.1465%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (9 samples, 0.02%)</title><rect x="11.9399%" y="533" width="0.0178%" height="15" fill="rgb(216,211,34)" fg:x="6049" fg:w="9"/><text x="12.1899%" y="543.50"></text></g><g><title>event_listener::Event::notify (7 samples, 0.01%)</title><rect x="11.9439%" y="517" width="0.0138%" height="15" fill="rgb(236,151,0)" fg:x="6051" fg:w="7"/><text x="12.1939%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="11.9399%" y="549" width="0.0197%" height="15" fill="rgb(209,168,3)" fg:x="6049" fg:w="10"/><text x="12.1899%" y="559.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="11.9735%" y="453" width="0.0197%" height="15" fill="rgb(208,129,28)" fg:x="6066" fg:w="10"/><text x="12.2235%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="11.9754%" y="437" width="0.0178%" height="15" fill="rgb(229,78,22)" fg:x="6067" fg:w="9"/><text x="12.2254%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="11.9754%" y="421" width="0.0178%" height="15" fill="rgb(228,187,13)" fg:x="6067" fg:w="9"/><text x="12.2254%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="11.9754%" y="405" width="0.0178%" height="15" fill="rgb(240,119,24)" fg:x="6067" fg:w="9"/><text x="12.2254%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (22 samples, 0.04%)</title><rect x="11.9597%" y="533" width="0.0434%" height="15" fill="rgb(209,194,42)" fg:x="6059" fg:w="22"/><text x="12.2097%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (22 samples, 0.04%)</title><rect x="11.9597%" y="517" width="0.0434%" height="15" fill="rgb(247,200,46)" fg:x="6059" fg:w="22"/><text x="12.2097%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.04%)</title><rect x="11.9597%" y="501" width="0.0434%" height="15" fill="rgb(218,76,16)" fg:x="6059" fg:w="22"/><text x="12.2097%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.04%)</title><rect x="11.9597%" y="485" width="0.0434%" height="15" fill="rgb(225,21,48)" fg:x="6059" fg:w="22"/><text x="12.2097%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (22 samples, 0.04%)</title><rect x="11.9597%" y="469" width="0.0434%" height="15" fill="rgb(239,223,50)" fg:x="6059" fg:w="22"/><text x="12.2097%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="12.0169%" y="437" width="0.0257%" height="15" fill="rgb(244,45,21)" fg:x="6088" fg:w="13"/><text x="12.2669%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="12.0169%" y="421" width="0.0257%" height="15" fill="rgb(232,33,43)" fg:x="6088" fg:w="13"/><text x="12.2669%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (21 samples, 0.04%)</title><rect x="12.0129%" y="469" width="0.0415%" height="15" fill="rgb(209,8,3)" fg:x="6086" fg:w="21"/><text x="12.2629%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (19 samples, 0.04%)</title><rect x="12.0169%" y="453" width="0.0375%" height="15" fill="rgb(214,25,53)" fg:x="6088" fg:w="19"/><text x="12.2669%" y="463.50"></text></g><g><title>alloc::vec::from_elem (12 samples, 0.02%)</title><rect x="12.0741%" y="421" width="0.0237%" height="15" fill="rgb(254,186,54)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (12 samples, 0.02%)</title><rect x="12.0741%" y="405" width="0.0237%" height="15" fill="rgb(208,174,49)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (12 samples, 0.02%)</title><rect x="12.0741%" y="389" width="0.0237%" height="15" fill="rgb(233,191,51)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="12.0741%" y="373" width="0.0237%" height="15" fill="rgb(222,134,10)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (12 samples, 0.02%)</title><rect x="12.0741%" y="357" width="0.0237%" height="15" fill="rgb(230,226,20)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="12.0741%" y="341" width="0.0237%" height="15" fill="rgb(251,111,25)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (12 samples, 0.02%)</title><rect x="12.0741%" y="325" width="0.0237%" height="15" fill="rgb(224,40,46)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (12 samples, 0.02%)</title><rect x="12.0741%" y="309" width="0.0237%" height="15" fill="rgb(236,108,47)" fg:x="6117" fg:w="12"/><text x="12.3241%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (75 samples, 0.15%)</title><rect x="12.0564%" y="437" width="0.1480%" height="15" fill="rgb(234,93,0)" fg:x="6108" fg:w="75"/><text x="12.3064%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (54 samples, 0.11%)</title><rect x="12.0978%" y="421" width="0.1066%" height="15" fill="rgb(224,213,32)" fg:x="6129" fg:w="54"/><text x="12.3478%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.11%)</title><rect x="12.0978%" y="405" width="0.1066%" height="15" fill="rgb(251,11,48)" fg:x="6129" fg:w="54"/><text x="12.3478%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (52 samples, 0.10%)</title><rect x="12.1018%" y="389" width="0.1026%" height="15" fill="rgb(236,173,5)" fg:x="6131" fg:w="52"/><text x="12.3518%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.02%)</title><rect x="12.2163%" y="405" width="0.0178%" height="15" fill="rgb(230,95,12)" fg:x="6189" fg:w="9"/><text x="12.4663%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="12.2163%" y="389" width="0.0178%" height="15" fill="rgb(232,209,1)" fg:x="6189" fg:w="9"/><text x="12.4663%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="12.2163%" y="373" width="0.0178%" height="15" fill="rgb(232,6,1)" fg:x="6189" fg:w="9"/><text x="12.4663%" y="383.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (7 samples, 0.01%)</title><rect x="12.2380%" y="357" width="0.0138%" height="15" fill="rgb(210,224,50)" fg:x="6200" fg:w="7"/><text x="12.4880%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.01%)</title><rect x="12.2399%" y="341" width="0.0118%" height="15" fill="rgb(228,127,35)" fg:x="6201" fg:w="6"/><text x="12.4899%" y="351.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (6 samples, 0.01%)</title><rect x="12.2538%" y="357" width="0.0118%" height="15" fill="rgb(245,102,45)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="367.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.01%)</title><rect x="12.2538%" y="341" width="0.0118%" height="15" fill="rgb(214,1,49)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.01%)</title><rect x="12.2538%" y="325" width="0.0118%" height="15" fill="rgb(226,163,40)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="335.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (6 samples, 0.01%)</title><rect x="12.2538%" y="309" width="0.0118%" height="15" fill="rgb(239,212,28)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="319.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (6 samples, 0.01%)</title><rect x="12.2538%" y="293" width="0.0118%" height="15" fill="rgb(220,20,13)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.01%)</title><rect x="12.2538%" y="277" width="0.0118%" height="15" fill="rgb(210,164,35)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="287.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.01%)</title><rect x="12.2538%" y="261" width="0.0118%" height="15" fill="rgb(248,109,41)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="271.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="12.2538%" y="245" width="0.0118%" height="15" fill="rgb(238,23,50)" fg:x="6208" fg:w="6"/><text x="12.5038%" y="255.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (32 samples, 0.06%)</title><rect x="12.2044%" y="437" width="0.0632%" height="15" fill="rgb(211,48,49)" fg:x="6183" fg:w="32"/><text x="12.4544%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (31 samples, 0.06%)</title><rect x="12.2064%" y="421" width="0.0612%" height="15" fill="rgb(223,36,21)" fg:x="6184" fg:w="31"/><text x="12.4564%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (17 samples, 0.03%)</title><rect x="12.2340%" y="405" width="0.0336%" height="15" fill="rgb(207,123,46)" fg:x="6198" fg:w="17"/><text x="12.4840%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (17 samples, 0.03%)</title><rect x="12.2340%" y="389" width="0.0336%" height="15" fill="rgb(240,218,32)" fg:x="6198" fg:w="17"/><text x="12.4840%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (17 samples, 0.03%)</title><rect x="12.2340%" y="373" width="0.0336%" height="15" fill="rgb(252,5,43)" fg:x="6198" fg:w="17"/><text x="12.4840%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (108 samples, 0.21%)</title><rect x="12.0564%" y="453" width="0.2132%" height="15" fill="rgb(252,84,19)" fg:x="6108" fg:w="108"/><text x="12.3064%" y="463.50"></text></g><g><title>&lt;bevy_render::texture::image::Image as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (6 samples, 0.01%)</title><rect x="12.2696%" y="453" width="0.0118%" height="15" fill="rgb(243,152,39)" fg:x="6216" fg:w="6"/><text x="12.5196%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="12.2834%" y="373" width="0.0118%" height="15" fill="rgb(234,160,15)" fg:x="6223" fg:w="6"/><text x="12.5334%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (6 samples, 0.01%)</title><rect x="12.2834%" y="357" width="0.0118%" height="15" fill="rgb(237,34,20)" fg:x="6223" fg:w="6"/><text x="12.5334%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_render::mesh::mesh::GpuMesh&gt;&gt; (7 samples, 0.01%)</title><rect x="12.2834%" y="453" width="0.0138%" height="15" fill="rgb(229,97,13)" fg:x="6223" fg:w="7"/><text x="12.5334%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::mesh::mesh::GpuMesh&gt; (7 samples, 0.01%)</title><rect x="12.2834%" y="437" width="0.0138%" height="15" fill="rgb(234,71,50)" fg:x="6223" fg:w="7"/><text x="12.5334%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (7 samples, 0.01%)</title><rect x="12.2834%" y="421" width="0.0138%" height="15" fill="rgb(253,155,4)" fg:x="6223" fg:w="7"/><text x="12.5334%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (7 samples, 0.01%)</title><rect x="12.2834%" y="405" width="0.0138%" height="15" fill="rgb(222,185,37)" fg:x="6223" fg:w="7"/><text x="12.5334%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="12.2834%" y="389" width="0.0138%" height="15" fill="rgb(251,177,13)" fg:x="6223" fg:w="7"/><text x="12.5334%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (150 samples, 0.30%)</title><rect x="12.0031%" y="533" width="0.2961%" height="15" fill="rgb(250,179,40)" fg:x="6081" fg:w="150"/><text x="12.2531%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (149 samples, 0.29%)</title><rect x="12.0051%" y="517" width="0.2941%" height="15" fill="rgb(242,44,2)" fg:x="6082" fg:w="149"/><text x="12.2551%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (149 samples, 0.29%)</title><rect x="12.0051%" y="501" width="0.2941%" height="15" fill="rgb(216,177,13)" fg:x="6082" fg:w="149"/><text x="12.2551%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (149 samples, 0.29%)</title><rect x="12.0051%" y="485" width="0.2941%" height="15" fill="rgb(216,106,43)" fg:x="6082" fg:w="149"/><text x="12.2551%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (124 samples, 0.24%)</title><rect x="12.0544%" y="469" width="0.2448%" height="15" fill="rgb(216,183,2)" fg:x="6107" fg:w="124"/><text x="12.3044%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="12.3150%" y="421" width="0.0197%" height="15" fill="rgb(249,75,3)" fg:x="6239" fg:w="10"/><text x="12.5650%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="12.3169%" y="405" width="0.0178%" height="15" fill="rgb(219,67,39)" fg:x="6240" fg:w="9"/><text x="12.5669%" y="415.50"></text></g><g><title>core::cmp::min (7 samples, 0.01%)</title><rect x="12.3959%" y="325" width="0.0138%" height="15" fill="rgb(253,228,2)" fg:x="6280" fg:w="7"/><text x="12.6459%" y="335.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="12.3959%" y="309" width="0.0138%" height="15" fill="rgb(235,138,27)" fg:x="6280" fg:w="7"/><text x="12.6459%" y="319.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.01%)</title><rect x="12.3959%" y="293" width="0.0138%" height="15" fill="rgb(236,97,51)" fg:x="6280" fg:w="7"/><text x="12.6459%" y="303.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="12.4097%" y="325" width="0.0138%" height="15" fill="rgb(240,80,30)" fg:x="6287" fg:w="7"/><text x="12.6597%" y="335.50"></text></g><g><title>core::ptr::read (7 samples, 0.01%)</title><rect x="12.4097%" y="309" width="0.0138%" height="15" fill="rgb(230,178,19)" fg:x="6287" fg:w="7"/><text x="12.6597%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (70 samples, 0.14%)</title><rect x="12.4235%" y="325" width="0.1382%" height="15" fill="rgb(210,190,27)" fg:x="6294" fg:w="70"/><text x="12.6735%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.14%)</title><rect x="12.4235%" y="309" width="0.1382%" height="15" fill="rgb(222,107,31)" fg:x="6294" fg:w="70"/><text x="12.6735%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (66 samples, 0.13%)</title><rect x="12.4314%" y="293" width="0.1303%" height="15" fill="rgb(216,127,34)" fg:x="6298" fg:w="66"/><text x="12.6814%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (132 samples, 0.26%)</title><rect x="12.3150%" y="453" width="0.2606%" height="15" fill="rgb(234,116,52)" fg:x="6239" fg:w="132"/><text x="12.5650%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (132 samples, 0.26%)</title><rect x="12.3150%" y="437" width="0.2606%" height="15" fill="rgb(222,124,15)" fg:x="6239" fg:w="132"/><text x="12.5650%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (122 samples, 0.24%)</title><rect x="12.3347%" y="421" width="0.2408%" height="15" fill="rgb(231,179,28)" fg:x="6249" fg:w="122"/><text x="12.5847%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (122 samples, 0.24%)</title><rect x="12.3347%" y="405" width="0.2408%" height="15" fill="rgb(226,93,45)" fg:x="6249" fg:w="122"/><text x="12.5847%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (122 samples, 0.24%)</title><rect x="12.3347%" y="389" width="0.2408%" height="15" fill="rgb(215,8,51)" fg:x="6249" fg:w="122"/><text x="12.5847%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (116 samples, 0.23%)</title><rect x="12.3465%" y="373" width="0.2290%" height="15" fill="rgb(223,106,5)" fg:x="6255" fg:w="116"/><text x="12.5965%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (108 samples, 0.21%)</title><rect x="12.3623%" y="357" width="0.2132%" height="15" fill="rgb(250,191,5)" fg:x="6263" fg:w="108"/><text x="12.6123%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (108 samples, 0.21%)</title><rect x="12.3623%" y="341" width="0.2132%" height="15" fill="rgb(242,132,44)" fg:x="6263" fg:w="108"/><text x="12.6123%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (7 samples, 0.01%)</title><rect x="12.5617%" y="325" width="0.0138%" height="15" fill="rgb(251,152,29)" fg:x="6364" fg:w="7"/><text x="12.8117%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (7 samples, 0.01%)</title><rect x="12.5617%" y="309" width="0.0138%" height="15" fill="rgb(218,179,5)" fg:x="6364" fg:w="7"/><text x="12.8117%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="12.5637%" y="293" width="0.0118%" height="15" fill="rgb(227,67,19)" fg:x="6365" fg:w="6"/><text x="12.8137%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="12.5637%" y="277" width="0.0118%" height="15" fill="rgb(233,119,31)" fg:x="6365" fg:w="6"/><text x="12.8137%" y="287.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (143 samples, 0.28%)</title><rect x="12.3150%" y="469" width="0.2823%" height="15" fill="rgb(241,120,22)" fg:x="6239" fg:w="143"/><text x="12.5650%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.02%)</title><rect x="12.5755%" y="453" width="0.0217%" height="15" fill="rgb(224,102,30)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="12.5755%" y="437" width="0.0217%" height="15" fill="rgb(210,164,37)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="12.5755%" y="421" width="0.0217%" height="15" fill="rgb(226,191,16)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="12.5755%" y="405" width="0.0217%" height="15" fill="rgb(214,40,45)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="12.5755%" y="389" width="0.0217%" height="15" fill="rgb(244,29,26)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.02%)</title><rect x="12.5755%" y="373" width="0.0217%" height="15" fill="rgb(216,16,5)" fg:x="6371" fg:w="11"/><text x="12.8255%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (7 samples, 0.01%)</title><rect x="12.6012%" y="389" width="0.0138%" height="15" fill="rgb(249,76,35)" fg:x="6384" fg:w="7"/><text x="12.8512%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.01%)</title><rect x="12.6012%" y="373" width="0.0138%" height="15" fill="rgb(207,11,44)" fg:x="6384" fg:w="7"/><text x="12.8512%" y="383.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (11 samples, 0.02%)</title><rect x="12.5972%" y="469" width="0.0217%" height="15" fill="rgb(228,190,49)" fg:x="6382" fg:w="11"/><text x="12.8472%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (11 samples, 0.02%)</title><rect x="12.5972%" y="453" width="0.0217%" height="15" fill="rgb(214,173,12)" fg:x="6382" fg:w="11"/><text x="12.8472%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (11 samples, 0.02%)</title><rect x="12.5972%" y="437" width="0.0217%" height="15" fill="rgb(218,26,35)" fg:x="6382" fg:w="11"/><text x="12.8472%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (11 samples, 0.02%)</title><rect x="12.5972%" y="421" width="0.0217%" height="15" fill="rgb(220,200,19)" fg:x="6382" fg:w="11"/><text x="12.8472%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="12.5992%" y="405" width="0.0197%" height="15" fill="rgb(239,95,49)" fg:x="6383" fg:w="10"/><text x="12.8492%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (165 samples, 0.33%)</title><rect x="12.2992%" y="533" width="0.3257%" height="15" fill="rgb(235,85,53)" fg:x="6231" fg:w="165"/><text x="12.5492%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (164 samples, 0.32%)</title><rect x="12.3011%" y="517" width="0.3237%" height="15" fill="rgb(233,133,31)" fg:x="6232" fg:w="164"/><text x="12.5511%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (164 samples, 0.32%)</title><rect x="12.3011%" y="501" width="0.3237%" height="15" fill="rgb(218,25,20)" fg:x="6232" fg:w="164"/><text x="12.5511%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (164 samples, 0.32%)</title><rect x="12.3011%" y="485" width="0.3237%" height="15" fill="rgb(252,210,38)" fg:x="6232" fg:w="164"/><text x="12.5511%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (22 samples, 0.04%)</title><rect x="12.6584%" y="453" width="0.0434%" height="15" fill="rgb(242,134,21)" fg:x="6413" fg:w="22"/><text x="12.9084%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (18 samples, 0.04%)</title><rect x="12.6663%" y="437" width="0.0355%" height="15" fill="rgb(213,28,48)" fg:x="6417" fg:w="18"/><text x="12.9163%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.04%)</title><rect x="12.6663%" y="421" width="0.0355%" height="15" fill="rgb(250,196,2)" fg:x="6417" fg:w="18"/><text x="12.9163%" y="431.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="12.6880%" y="405" width="0.0138%" height="15" fill="rgb(227,5,17)" fg:x="6428" fg:w="7"/><text x="12.9380%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="12.7018%" y="421" width="0.0138%" height="15" fill="rgb(221,226,24)" fg:x="6435" fg:w="7"/><text x="12.9518%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="12.7018%" y="405" width="0.0138%" height="15" fill="rgb(211,5,48)" fg:x="6435" fg:w="7"/><text x="12.9518%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (16 samples, 0.03%)</title><rect x="12.7413%" y="357" width="0.0316%" height="15" fill="rgb(219,150,6)" fg:x="6455" fg:w="16"/><text x="12.9913%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (29 samples, 0.06%)</title><rect x="12.7788%" y="325" width="0.0572%" height="15" fill="rgb(251,46,16)" fg:x="6474" fg:w="29"/><text x="13.0288%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.06%)</title><rect x="12.7788%" y="309" width="0.0572%" height="15" fill="rgb(220,204,40)" fg:x="6474" fg:w="29"/><text x="13.0288%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.06%)</title><rect x="12.7788%" y="293" width="0.0572%" height="15" fill="rgb(211,85,2)" fg:x="6474" fg:w="29"/><text x="13.0288%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (59 samples, 0.12%)</title><rect x="12.7216%" y="389" width="0.1165%" height="15" fill="rgb(229,17,7)" fg:x="6445" fg:w="59"/><text x="12.9716%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (56 samples, 0.11%)</title><rect x="12.7275%" y="373" width="0.1105%" height="15" fill="rgb(239,72,28)" fg:x="6448" fg:w="56"/><text x="12.9775%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (33 samples, 0.07%)</title><rect x="12.7729%" y="357" width="0.0651%" height="15" fill="rgb(230,47,54)" fg:x="6471" fg:w="33"/><text x="13.0229%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (33 samples, 0.07%)</title><rect x="12.7729%" y="341" width="0.0651%" height="15" fill="rgb(214,50,8)" fg:x="6471" fg:w="33"/><text x="13.0229%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (68 samples, 0.13%)</title><rect x="12.7156%" y="421" width="0.1342%" height="15" fill="rgb(216,198,43)" fg:x="6442" fg:w="68"/><text x="12.9656%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (68 samples, 0.13%)</title><rect x="12.7156%" y="405" width="0.1342%" height="15" fill="rgb(234,20,35)" fg:x="6442" fg:w="68"/><text x="12.9656%" y="415.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (11 samples, 0.02%)</title><rect x="12.8499%" y="421" width="0.0217%" height="15" fill="rgb(254,45,19)" fg:x="6510" fg:w="11"/><text x="13.0999%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (9 samples, 0.02%)</title><rect x="12.8538%" y="405" width="0.0178%" height="15" fill="rgb(219,14,44)" fg:x="6512" fg:w="9"/><text x="13.1038%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (6 samples, 0.01%)</title><rect x="12.8597%" y="389" width="0.0118%" height="15" fill="rgb(217,220,26)" fg:x="6515" fg:w="6"/><text x="13.1097%" y="399.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (88 samples, 0.17%)</title><rect x="12.7018%" y="453" width="0.1737%" height="15" fill="rgb(213,158,28)" fg:x="6435" fg:w="88"/><text x="12.9518%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (88 samples, 0.17%)</title><rect x="12.7018%" y="437" width="0.1737%" height="15" fill="rgb(252,51,52)" fg:x="6435" fg:w="88"/><text x="12.9518%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (128 samples, 0.25%)</title><rect x="12.6248%" y="533" width="0.2527%" height="15" fill="rgb(246,89,16)" fg:x="6396" fg:w="128"/><text x="12.8748%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (128 samples, 0.25%)</title><rect x="12.6248%" y="517" width="0.2527%" height="15" fill="rgb(216,158,49)" fg:x="6396" fg:w="128"/><text x="12.8748%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (128 samples, 0.25%)</title><rect x="12.6248%" y="501" width="0.2527%" height="15" fill="rgb(236,107,19)" fg:x="6396" fg:w="128"/><text x="12.8748%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (128 samples, 0.25%)</title><rect x="12.6248%" y="485" width="0.2527%" height="15" fill="rgb(228,185,30)" fg:x="6396" fg:w="128"/><text x="12.8748%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (128 samples, 0.25%)</title><rect x="12.6248%" y="469" width="0.2527%" height="15" fill="rgb(246,134,8)" fg:x="6396" fg:w="128"/><text x="12.8748%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (15 samples, 0.03%)</title><rect x="12.8795%" y="533" width="0.0296%" height="15" fill="rgb(214,143,50)" fg:x="6525" fg:w="15"/><text x="13.1295%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (15 samples, 0.03%)</title><rect x="12.8795%" y="517" width="0.0296%" height="15" fill="rgb(228,75,8)" fg:x="6525" fg:w="15"/><text x="13.1295%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="12.8795%" y="501" width="0.0296%" height="15" fill="rgb(207,175,4)" fg:x="6525" fg:w="15"/><text x="13.1295%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.03%)</title><rect x="12.8795%" y="485" width="0.0296%" height="15" fill="rgb(205,108,24)" fg:x="6525" fg:w="15"/><text x="13.1295%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (10 samples, 0.02%)</title><rect x="12.8893%" y="469" width="0.0197%" height="15" fill="rgb(244,120,49)" fg:x="6530" fg:w="10"/><text x="13.1393%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (488 samples, 0.96%)</title><rect x="11.9597%" y="549" width="0.9632%" height="15" fill="rgb(223,47,38)" fg:x="6059" fg:w="488"/><text x="12.2097%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (528 samples, 1.04%)</title><rect x="11.8965%" y="581" width="1.0422%" height="15" fill="rgb(229,179,11)" fg:x="6027" fg:w="528"/><text x="12.1465%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (510 samples, 1.01%)</title><rect x="11.9320%" y="565" width="1.0067%" height="15" fill="rgb(231,122,1)" fg:x="6045" fg:w="510"/><text x="12.1820%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (535 samples, 1.06%)</title><rect x="11.8925%" y="613" width="1.0560%" height="15" fill="rgb(245,119,9)" fg:x="6025" fg:w="535"/><text x="12.1425%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (534 samples, 1.05%)</title><rect x="11.8945%" y="597" width="1.0540%" height="15" fill="rgb(241,163,25)" fg:x="6026" fg:w="534"/><text x="12.1445%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (543 samples, 1.07%)</title><rect x="11.8925%" y="629" width="1.0718%" height="15" fill="rgb(217,214,3)" fg:x="6025" fg:w="543"/><text x="12.1425%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (620 samples, 1.22%)</title><rect x="11.7445%" y="709" width="1.2238%" height="15" fill="rgb(240,86,28)" fg:x="5950" fg:w="620"/><text x="11.9945%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (620 samples, 1.22%)</title><rect x="11.7445%" y="693" width="1.2238%" height="15" fill="rgb(215,47,9)" fg:x="5950" fg:w="620"/><text x="11.9945%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (620 samples, 1.22%)</title><rect x="11.7445%" y="677" width="1.2238%" height="15" fill="rgb(252,25,45)" fg:x="5950" fg:w="620"/><text x="11.9945%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (610 samples, 1.20%)</title><rect x="11.7642%" y="661" width="1.2041%" height="15" fill="rgb(251,164,9)" fg:x="5960" fg:w="610"/><text x="12.0142%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (610 samples, 1.20%)</title><rect x="11.7642%" y="645" width="1.2041%" height="15" fill="rgb(233,194,0)" fg:x="5960" fg:w="610"/><text x="12.0142%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (20 samples, 0.04%)</title><rect x="12.9782%" y="613" width="0.0395%" height="15" fill="rgb(249,111,24)" fg:x="6575" fg:w="20"/><text x="13.2282%" y="623.50"></text></g><g><title>syscall (19 samples, 0.04%)</title><rect x="12.9801%" y="597" width="0.0375%" height="15" fill="rgb(250,223,3)" fg:x="6576" fg:w="19"/><text x="13.2301%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (23 samples, 0.05%)</title><rect x="12.9782%" y="645" width="0.0454%" height="15" fill="rgb(236,178,37)" fg:x="6575" fg:w="23"/><text x="13.2282%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (23 samples, 0.05%)</title><rect x="12.9782%" y="629" width="0.0454%" height="15" fill="rgb(241,158,50)" fg:x="6575" fg:w="23"/><text x="13.2282%" y="639.50"></text></g><g><title>__GI___clone (651 samples, 1.28%)</title><rect x="11.7406%" y="997" width="1.2850%" height="15" fill="rgb(213,121,41)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="1007.50"></text></g><g><title>start_thread (651 samples, 1.28%)</title><rect x="11.7406%" y="981" width="1.2850%" height="15" fill="rgb(240,92,3)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (651 samples, 1.28%)</title><rect x="11.7406%" y="965" width="1.2850%" height="15" fill="rgb(205,123,3)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (651 samples, 1.28%)</title><rect x="11.7406%" y="949" width="1.2850%" height="15" fill="rgb(205,97,47)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (651 samples, 1.28%)</title><rect x="11.7406%" y="933" width="1.2850%" height="15" fill="rgb(247,152,14)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (651 samples, 1.28%)</title><rect x="11.7406%" y="917" width="1.2850%" height="15" fill="rgb(248,195,53)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (651 samples, 1.28%)</title><rect x="11.7406%" y="901" width="1.2850%" height="15" fill="rgb(226,201,16)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="911.50"></text></g><g><title>std::panic::catch_unwind (651 samples, 1.28%)</title><rect x="11.7406%" y="885" width="1.2850%" height="15" fill="rgb(205,98,0)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="895.50"></text></g><g><title>std::panicking::try (651 samples, 1.28%)</title><rect x="11.7406%" y="869" width="1.2850%" height="15" fill="rgb(214,191,48)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="879.50"></text></g><g><title>std::panicking::try::do_call (651 samples, 1.28%)</title><rect x="11.7406%" y="853" width="1.2850%" height="15" fill="rgb(237,112,39)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (651 samples, 1.28%)</title><rect x="11.7406%" y="837" width="1.2850%" height="15" fill="rgb(247,203,27)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (651 samples, 1.28%)</title><rect x="11.7406%" y="821" width="1.2850%" height="15" fill="rgb(235,124,28)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (651 samples, 1.28%)</title><rect x="11.7406%" y="805" width="1.2850%" height="15" fill="rgb(208,207,46)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (651 samples, 1.28%)</title><rect x="11.7406%" y="789" width="1.2850%" height="15" fill="rgb(234,176,4)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="799.50"></text></g><g><title>futures_lite::future::block_on (651 samples, 1.28%)</title><rect x="11.7406%" y="773" width="1.2850%" height="15" fill="rgb(230,133,28)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (651 samples, 1.28%)</title><rect x="11.7406%" y="757" width="1.2850%" height="15" fill="rgb(211,137,40)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (651 samples, 1.28%)</title><rect x="11.7406%" y="741" width="1.2850%" height="15" fill="rgb(254,35,13)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (651 samples, 1.28%)</title><rect x="11.7406%" y="725" width="1.2850%" height="15" fill="rgb(225,49,51)" fg:x="5948" fg:w="651"/><text x="11.9906%" y="735.50"></text></g><g><title>parking::Parker::park (29 samples, 0.06%)</title><rect x="12.9683%" y="709" width="0.0572%" height="15" fill="rgb(251,10,15)" fg:x="6570" fg:w="29"/><text x="13.2183%" y="719.50"></text></g><g><title>parking::Inner::park (29 samples, 0.06%)</title><rect x="12.9683%" y="693" width="0.0572%" height="15" fill="rgb(228,207,15)" fg:x="6570" fg:w="29"/><text x="13.2183%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (25 samples, 0.05%)</title><rect x="12.9762%" y="677" width="0.0493%" height="15" fill="rgb(241,99,19)" fg:x="6574" fg:w="25"/><text x="13.2262%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (24 samples, 0.05%)</title><rect x="12.9782%" y="661" width="0.0474%" height="15" fill="rgb(207,104,49)" fg:x="6575" fg:w="24"/><text x="13.2282%" y="671.50"></text></g><g><title>TaskPool_(11) (805 samples, 1.59%)</title><rect x="11.4563%" y="1013" width="1.5890%" height="15" fill="rgb(234,99,18)" fg:x="5804" fg:w="805"/><text x="11.7063%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (6 samples, 0.01%)</title><rect x="13.0453%" y="981" width="0.0118%" height="15" fill="rgb(213,191,49)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (6 samples, 0.01%)</title><rect x="13.0453%" y="965" width="0.0118%" height="15" fill="rgb(210,226,19)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (6 samples, 0.01%)</title><rect x="13.0453%" y="949" width="0.0118%" height="15" fill="rgb(229,97,18)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (6 samples, 0.01%)</title><rect x="13.0453%" y="933" width="0.0118%" height="15" fill="rgb(211,167,15)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (6 samples, 0.01%)</title><rect x="13.0453%" y="917" width="0.0118%" height="15" fill="rgb(210,169,34)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="13.0453%" y="901" width="0.0118%" height="15" fill="rgb(241,121,31)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="13.0453%" y="885" width="0.0118%" height="15" fill="rgb(232,40,11)" fg:x="6609" fg:w="6"/><text x="13.2953%" y="895.50"></text></g><g><title>[[heap]] (10 samples, 0.02%)</title><rect x="13.0453%" y="997" width="0.0197%" height="15" fill="rgb(205,86,26)" fg:x="6609" fg:w="10"/><text x="13.2953%" y="1007.50"></text></g><g><title>[anon] (14 samples, 0.03%)</title><rect x="13.0650%" y="997" width="0.0276%" height="15" fill="rgb(231,126,28)" fg:x="6619" fg:w="14"/><text x="13.3150%" y="1007.50"></text></g><g><title>[unknown] (24 samples, 0.05%)</title><rect x="13.0927%" y="997" width="0.0474%" height="15" fill="rgb(219,221,18)" fg:x="6633" fg:w="24"/><text x="13.3427%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (11 samples, 0.02%)</title><rect x="13.1538%" y="501" width="0.0217%" height="15" fill="rgb(211,40,0)" fg:x="6664" fg:w="11"/><text x="13.4038%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (6 samples, 0.01%)</title><rect x="13.1637%" y="485" width="0.0118%" height="15" fill="rgb(239,85,43)" fg:x="6669" fg:w="6"/><text x="13.4137%" y="495.50"></text></g><g><title>async_executor::steal (13 samples, 0.03%)</title><rect x="13.1519%" y="517" width="0.0257%" height="15" fill="rgb(231,55,21)" fg:x="6663" fg:w="13"/><text x="13.4019%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="13.1775%" y="517" width="0.0118%" height="15" fill="rgb(225,184,43)" fg:x="6676" fg:w="6"/><text x="13.4275%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (25 samples, 0.05%)</title><rect x="13.1459%" y="533" width="0.0493%" height="15" fill="rgb(251,158,41)" fg:x="6660" fg:w="25"/><text x="13.3959%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.06%)</title><rect x="13.1420%" y="629" width="0.0572%" height="15" fill="rgb(234,159,37)" fg:x="6658" fg:w="29"/><text x="13.3920%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (28 samples, 0.06%)</title><rect x="13.1440%" y="613" width="0.0553%" height="15" fill="rgb(216,204,22)" fg:x="6659" fg:w="28"/><text x="13.3940%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.06%)</title><rect x="13.1440%" y="597" width="0.0553%" height="15" fill="rgb(214,17,3)" fg:x="6659" fg:w="28"/><text x="13.3940%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (28 samples, 0.06%)</title><rect x="13.1440%" y="581" width="0.0553%" height="15" fill="rgb(212,111,17)" fg:x="6659" fg:w="28"/><text x="13.3940%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.06%)</title><rect x="13.1440%" y="565" width="0.0553%" height="15" fill="rgb(221,157,24)" fg:x="6659" fg:w="28"/><text x="13.3940%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (28 samples, 0.06%)</title><rect x="13.1440%" y="549" width="0.0553%" height="15" fill="rgb(252,16,13)" fg:x="6659" fg:w="28"/><text x="13.3940%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (9 samples, 0.02%)</title><rect x="13.2071%" y="565" width="0.0178%" height="15" fill="rgb(221,62,2)" fg:x="6691" fg:w="9"/><text x="13.4571%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="13.2289%" y="549" width="0.0138%" height="15" fill="rgb(247,87,22)" fg:x="6702" fg:w="7"/><text x="13.4789%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (7 samples, 0.01%)</title><rect x="13.2289%" y="533" width="0.0138%" height="15" fill="rgb(215,73,9)" fg:x="6702" fg:w="7"/><text x="13.4789%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="13.2427%" y="533" width="0.0178%" height="15" fill="rgb(207,175,33)" fg:x="6709" fg:w="9"/><text x="13.4927%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (8 samples, 0.02%)</title><rect x="13.2446%" y="517" width="0.0158%" height="15" fill="rgb(243,129,54)" fg:x="6710" fg:w="8"/><text x="13.4946%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="13.2446%" y="501" width="0.0158%" height="15" fill="rgb(227,119,45)" fg:x="6710" fg:w="8"/><text x="13.4946%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.02%)</title><rect x="13.2446%" y="485" width="0.0158%" height="15" fill="rgb(205,109,36)" fg:x="6710" fg:w="8"/><text x="13.4946%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (8 samples, 0.02%)</title><rect x="13.2446%" y="469" width="0.0158%" height="15" fill="rgb(205,6,39)" fg:x="6710" fg:w="8"/><text x="13.4946%" y="479.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="13.2486%" y="453" width="0.0118%" height="15" fill="rgb(221,32,16)" fg:x="6712" fg:w="6"/><text x="13.4986%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="13.2486%" y="437" width="0.0118%" height="15" fill="rgb(228,144,50)" fg:x="6712" fg:w="6"/><text x="13.4986%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="13.2486%" y="421" width="0.0118%" height="15" fill="rgb(229,201,53)" fg:x="6712" fg:w="6"/><text x="13.4986%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="13.2486%" y="405" width="0.0118%" height="15" fill="rgb(249,153,27)" fg:x="6712" fg:w="6"/><text x="13.4986%" y="415.50"></text></g><g><title>alloc::vec::from_elem (7 samples, 0.01%)</title><rect x="13.2940%" y="421" width="0.0138%" height="15" fill="rgb(227,106,25)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 0.01%)</title><rect x="13.2940%" y="405" width="0.0138%" height="15" fill="rgb(230,65,29)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7 samples, 0.01%)</title><rect x="13.2940%" y="389" width="0.0138%" height="15" fill="rgb(221,57,46)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="13.2940%" y="373" width="0.0138%" height="15" fill="rgb(229,161,17)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7 samples, 0.01%)</title><rect x="13.2940%" y="357" width="0.0138%" height="15" fill="rgb(222,213,11)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="13.2940%" y="341" width="0.0138%" height="15" fill="rgb(235,35,13)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.01%)</title><rect x="13.2940%" y="325" width="0.0138%" height="15" fill="rgb(233,158,34)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="13.2940%" y="309" width="0.0138%" height="15" fill="rgb(215,151,48)" fg:x="6735" fg:w="7"/><text x="13.5440%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (27 samples, 0.05%)</title><rect x="13.2821%" y="437" width="0.0533%" height="15" fill="rgb(229,84,14)" fg:x="6729" fg:w="27"/><text x="13.5321%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.03%)</title><rect x="13.3078%" y="421" width="0.0276%" height="15" fill="rgb(229,68,14)" fg:x="6742" fg:w="14"/><text x="13.5578%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.03%)</title><rect x="13.3078%" y="405" width="0.0276%" height="15" fill="rgb(243,106,26)" fg:x="6742" fg:w="14"/><text x="13.5578%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="13.3118%" y="389" width="0.0237%" height="15" fill="rgb(206,45,38)" fg:x="6744" fg:w="12"/><text x="13.5618%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (10 samples, 0.02%)</title><rect x="13.3354%" y="437" width="0.0197%" height="15" fill="rgb(226,6,15)" fg:x="6756" fg:w="10"/><text x="13.5854%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (10 samples, 0.02%)</title><rect x="13.3354%" y="421" width="0.0197%" height="15" fill="rgb(232,22,54)" fg:x="6756" fg:w="10"/><text x="13.5854%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (6 samples, 0.01%)</title><rect x="13.3433%" y="405" width="0.0118%" height="15" fill="rgb(229,222,32)" fg:x="6760" fg:w="6"/><text x="13.5933%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="13.3433%" y="389" width="0.0118%" height="15" fill="rgb(228,62,29)" fg:x="6760" fg:w="6"/><text x="13.5933%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="13.3433%" y="373" width="0.0118%" height="15" fill="rgb(251,103,34)" fg:x="6760" fg:w="6"/><text x="13.5933%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (38 samples, 0.08%)</title><rect x="13.2821%" y="453" width="0.0750%" height="15" fill="rgb(233,12,30)" fg:x="6729" fg:w="38"/><text x="13.5321%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (54 samples, 0.11%)</title><rect x="13.2604%" y="533" width="0.1066%" height="15" fill="rgb(238,52,0)" fg:x="6718" fg:w="54"/><text x="13.5104%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (52 samples, 0.10%)</title><rect x="13.2644%" y="517" width="0.1026%" height="15" fill="rgb(223,98,5)" fg:x="6720" fg:w="52"/><text x="13.5144%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (52 samples, 0.10%)</title><rect x="13.2644%" y="501" width="0.1026%" height="15" fill="rgb(228,75,37)" fg:x="6720" fg:w="52"/><text x="13.5144%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (52 samples, 0.10%)</title><rect x="13.2644%" y="485" width="0.1026%" height="15" fill="rgb(205,115,49)" fg:x="6720" fg:w="52"/><text x="13.5144%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (43 samples, 0.08%)</title><rect x="13.2821%" y="469" width="0.0849%" height="15" fill="rgb(250,154,43)" fg:x="6729" fg:w="43"/><text x="13.5321%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="13.3828%" y="421" width="0.0158%" height="15" fill="rgb(226,43,29)" fg:x="6780" fg:w="8"/><text x="13.6328%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="13.3828%" y="405" width="0.0158%" height="15" fill="rgb(249,228,39)" fg:x="6780" fg:w="8"/><text x="13.6328%" y="415.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="13.4302%" y="325" width="0.0118%" height="15" fill="rgb(216,79,43)" fg:x="6804" fg:w="6"/><text x="13.6802%" y="335.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="13.4302%" y="309" width="0.0118%" height="15" fill="rgb(228,95,12)" fg:x="6804" fg:w="6"/><text x="13.6802%" y="319.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="13.4302%" y="293" width="0.0118%" height="15" fill="rgb(249,221,15)" fg:x="6804" fg:w="6"/><text x="13.6802%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (38 samples, 0.08%)</title><rect x="13.4499%" y="325" width="0.0750%" height="15" fill="rgb(233,34,13)" fg:x="6814" fg:w="38"/><text x="13.6999%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.08%)</title><rect x="13.4499%" y="309" width="0.0750%" height="15" fill="rgb(214,103,39)" fg:x="6814" fg:w="38"/><text x="13.6999%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (36 samples, 0.07%)</title><rect x="13.4539%" y="293" width="0.0711%" height="15" fill="rgb(251,126,39)" fg:x="6816" fg:w="36"/><text x="13.7039%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (65 samples, 0.13%)</title><rect x="13.3986%" y="389" width="0.1283%" height="15" fill="rgb(214,216,36)" fg:x="6788" fg:w="65"/><text x="13.6486%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (61 samples, 0.12%)</title><rect x="13.4065%" y="373" width="0.1204%" height="15" fill="rgb(220,221,8)" fg:x="6792" fg:w="61"/><text x="13.6565%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (56 samples, 0.11%)</title><rect x="13.4164%" y="357" width="0.1105%" height="15" fill="rgb(240,216,3)" fg:x="6797" fg:w="56"/><text x="13.6664%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (56 samples, 0.11%)</title><rect x="13.4164%" y="341" width="0.1105%" height="15" fill="rgb(232,218,17)" fg:x="6797" fg:w="56"/><text x="13.6664%" y="351.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (74 samples, 0.15%)</title><rect x="13.3828%" y="453" width="0.1461%" height="15" fill="rgb(229,163,45)" fg:x="6780" fg:w="74"/><text x="13.6328%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (74 samples, 0.15%)</title><rect x="13.3828%" y="437" width="0.1461%" height="15" fill="rgb(231,110,42)" fg:x="6780" fg:w="74"/><text x="13.6328%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (66 samples, 0.13%)</title><rect x="13.3986%" y="421" width="0.1303%" height="15" fill="rgb(208,170,48)" fg:x="6788" fg:w="66"/><text x="13.6486%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (66 samples, 0.13%)</title><rect x="13.3986%" y="405" width="0.1303%" height="15" fill="rgb(239,116,25)" fg:x="6788" fg:w="66"/><text x="13.6486%" y="415.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (79 samples, 0.16%)</title><rect x="13.3808%" y="469" width="0.1559%" height="15" fill="rgb(219,200,50)" fg:x="6779" fg:w="79"/><text x="13.6308%" y="479.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (9 samples, 0.02%)</title><rect x="13.5368%" y="469" width="0.0178%" height="15" fill="rgb(245,200,0)" fg:x="6858" fg:w="9"/><text x="13.7868%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (9 samples, 0.02%)</title><rect x="13.5368%" y="453" width="0.0178%" height="15" fill="rgb(245,119,33)" fg:x="6858" fg:w="9"/><text x="13.7868%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (9 samples, 0.02%)</title><rect x="13.5368%" y="437" width="0.0178%" height="15" fill="rgb(231,125,12)" fg:x="6858" fg:w="9"/><text x="13.7868%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="13.5368%" y="421" width="0.0178%" height="15" fill="rgb(216,96,41)" fg:x="6858" fg:w="9"/><text x="13.7868%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="13.5368%" y="405" width="0.0178%" height="15" fill="rgb(248,43,45)" fg:x="6858" fg:w="9"/><text x="13.7868%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (97 samples, 0.19%)</title><rect x="13.3670%" y="533" width="0.1915%" height="15" fill="rgb(217,222,7)" fg:x="6772" fg:w="97"/><text x="13.6170%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (97 samples, 0.19%)</title><rect x="13.3670%" y="517" width="0.1915%" height="15" fill="rgb(233,28,6)" fg:x="6772" fg:w="97"/><text x="13.6170%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (97 samples, 0.19%)</title><rect x="13.3670%" y="501" width="0.1915%" height="15" fill="rgb(231,218,15)" fg:x="6772" fg:w="97"/><text x="13.6170%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (96 samples, 0.19%)</title><rect x="13.3690%" y="485" width="0.1895%" height="15" fill="rgb(226,171,48)" fg:x="6773" fg:w="96"/><text x="13.6190%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (6 samples, 0.01%)</title><rect x="13.5763%" y="453" width="0.0118%" height="15" fill="rgb(235,201,9)" fg:x="6878" fg:w="6"/><text x="13.8263%" y="463.50"></text></g><g><title>bevy_crevice::internal::align_offset (9 samples, 0.02%)</title><rect x="13.6039%" y="357" width="0.0178%" height="15" fill="rgb(217,80,15)" fg:x="6892" fg:w="9"/><text x="13.8539%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (27 samples, 0.05%)</title><rect x="13.6315%" y="325" width="0.0533%" height="15" fill="rgb(219,152,8)" fg:x="6906" fg:w="27"/><text x="13.8815%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.05%)</title><rect x="13.6315%" y="309" width="0.0533%" height="15" fill="rgb(243,107,38)" fg:x="6906" fg:w="27"/><text x="13.8815%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.05%)</title><rect x="13.6315%" y="293" width="0.0533%" height="15" fill="rgb(231,17,5)" fg:x="6906" fg:w="27"/><text x="13.8815%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (46 samples, 0.09%)</title><rect x="13.5999%" y="389" width="0.0908%" height="15" fill="rgb(209,25,54)" fg:x="6890" fg:w="46"/><text x="13.8499%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (45 samples, 0.09%)</title><rect x="13.6019%" y="373" width="0.0888%" height="15" fill="rgb(219,0,2)" fg:x="6891" fg:w="45"/><text x="13.8519%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (35 samples, 0.07%)</title><rect x="13.6216%" y="357" width="0.0691%" height="15" fill="rgb(246,9,5)" fg:x="6901" fg:w="35"/><text x="13.8716%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (35 samples, 0.07%)</title><rect x="13.6216%" y="341" width="0.0691%" height="15" fill="rgb(226,159,4)" fg:x="6901" fg:w="35"/><text x="13.8716%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (48 samples, 0.09%)</title><rect x="13.5980%" y="421" width="0.0947%" height="15" fill="rgb(219,175,34)" fg:x="6889" fg:w="48"/><text x="13.8480%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (48 samples, 0.09%)</title><rect x="13.5980%" y="405" width="0.0947%" height="15" fill="rgb(236,10,46)" fg:x="6889" fg:w="48"/><text x="13.8480%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (73 samples, 0.14%)</title><rect x="13.5585%" y="533" width="0.1441%" height="15" fill="rgb(240,211,16)" fg:x="6869" fg:w="73"/><text x="13.8085%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (73 samples, 0.14%)</title><rect x="13.5585%" y="517" width="0.1441%" height="15" fill="rgb(205,3,43)" fg:x="6869" fg:w="73"/><text x="13.8085%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (73 samples, 0.14%)</title><rect x="13.5585%" y="501" width="0.1441%" height="15" fill="rgb(245,7,22)" fg:x="6869" fg:w="73"/><text x="13.8085%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (73 samples, 0.14%)</title><rect x="13.5585%" y="485" width="0.1441%" height="15" fill="rgb(239,132,32)" fg:x="6869" fg:w="73"/><text x="13.8085%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (73 samples, 0.14%)</title><rect x="13.5585%" y="469" width="0.1441%" height="15" fill="rgb(228,202,34)" fg:x="6869" fg:w="73"/><text x="13.8085%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (58 samples, 0.11%)</title><rect x="13.5881%" y="453" width="0.1145%" height="15" fill="rgb(254,200,22)" fg:x="6884" fg:w="58"/><text x="13.8381%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (58 samples, 0.11%)</title><rect x="13.5881%" y="437" width="0.1145%" height="15" fill="rgb(219,10,39)" fg:x="6884" fg:w="58"/><text x="13.8381%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (246 samples, 0.49%)</title><rect x="13.2427%" y="549" width="0.4856%" height="15" fill="rgb(226,210,39)" fg:x="6709" fg:w="246"/><text x="13.4927%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (266 samples, 0.53%)</title><rect x="13.2071%" y="581" width="0.5250%" height="15" fill="rgb(208,219,16)" fg:x="6691" fg:w="266"/><text x="13.4571%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (257 samples, 0.51%)</title><rect x="13.2249%" y="565" width="0.5073%" height="15" fill="rgb(216,158,51)" fg:x="6700" fg:w="257"/><text x="13.4749%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (269 samples, 0.53%)</title><rect x="13.2032%" y="613" width="0.5310%" height="15" fill="rgb(233,14,44)" fg:x="6689" fg:w="269"/><text x="13.4532%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (268 samples, 0.53%)</title><rect x="13.2052%" y="597" width="0.5290%" height="15" fill="rgb(237,97,39)" fg:x="6690" fg:w="268"/><text x="13.4552%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (273 samples, 0.54%)</title><rect x="13.2032%" y="629" width="0.5389%" height="15" fill="rgb(218,198,43)" fg:x="6689" fg:w="273"/><text x="13.4532%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 0.60%)</title><rect x="13.1420%" y="709" width="0.6040%" height="15" fill="rgb(231,104,20)" fg:x="6658" fg:w="306"/><text x="13.3920%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (306 samples, 0.60%)</title><rect x="13.1420%" y="693" width="0.6040%" height="15" fill="rgb(254,36,13)" fg:x="6658" fg:w="306"/><text x="13.3920%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (306 samples, 0.60%)</title><rect x="13.1420%" y="677" width="0.6040%" height="15" fill="rgb(248,14,50)" fg:x="6658" fg:w="306"/><text x="13.3920%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 0.60%)</title><rect x="13.1420%" y="661" width="0.6040%" height="15" fill="rgb(217,107,29)" fg:x="6658" fg:w="306"/><text x="13.3920%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (306 samples, 0.60%)</title><rect x="13.1420%" y="645" width="0.6040%" height="15" fill="rgb(251,169,33)" fg:x="6658" fg:w="306"/><text x="13.3920%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (12 samples, 0.02%)</title><rect x="13.7480%" y="613" width="0.0237%" height="15" fill="rgb(217,108,32)" fg:x="6965" fg:w="12"/><text x="13.9980%" y="623.50"></text></g><g><title>syscall (9 samples, 0.02%)</title><rect x="13.7539%" y="597" width="0.0178%" height="15" fill="rgb(219,66,42)" fg:x="6968" fg:w="9"/><text x="14.0039%" y="607.50"></text></g><g><title>__GI___clone (323 samples, 0.64%)</title><rect x="13.1400%" y="997" width="0.6376%" height="15" fill="rgb(206,180,7)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="1007.50"></text></g><g><title>start_thread (323 samples, 0.64%)</title><rect x="13.1400%" y="981" width="0.6376%" height="15" fill="rgb(208,226,31)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (323 samples, 0.64%)</title><rect x="13.1400%" y="965" width="0.6376%" height="15" fill="rgb(218,26,49)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (323 samples, 0.64%)</title><rect x="13.1400%" y="949" width="0.6376%" height="15" fill="rgb(233,197,48)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (323 samples, 0.64%)</title><rect x="13.1400%" y="933" width="0.6376%" height="15" fill="rgb(252,181,51)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (323 samples, 0.64%)</title><rect x="13.1400%" y="917" width="0.6376%" height="15" fill="rgb(253,90,19)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (323 samples, 0.64%)</title><rect x="13.1400%" y="901" width="0.6376%" height="15" fill="rgb(215,171,30)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="911.50"></text></g><g><title>std::panic::catch_unwind (323 samples, 0.64%)</title><rect x="13.1400%" y="885" width="0.6376%" height="15" fill="rgb(214,222,9)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="895.50"></text></g><g><title>std::panicking::try (323 samples, 0.64%)</title><rect x="13.1400%" y="869" width="0.6376%" height="15" fill="rgb(223,3,22)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="879.50"></text></g><g><title>std::panicking::try::do_call (323 samples, 0.64%)</title><rect x="13.1400%" y="853" width="0.6376%" height="15" fill="rgb(225,196,46)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (323 samples, 0.64%)</title><rect x="13.1400%" y="837" width="0.6376%" height="15" fill="rgb(209,110,37)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (323 samples, 0.64%)</title><rect x="13.1400%" y="821" width="0.6376%" height="15" fill="rgb(249,89,12)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (323 samples, 0.64%)</title><rect x="13.1400%" y="805" width="0.6376%" height="15" fill="rgb(226,27,33)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (323 samples, 0.64%)</title><rect x="13.1400%" y="789" width="0.6376%" height="15" fill="rgb(213,82,22)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="799.50"></text></g><g><title>futures_lite::future::block_on (323 samples, 0.64%)</title><rect x="13.1400%" y="773" width="0.6376%" height="15" fill="rgb(248,140,0)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (323 samples, 0.64%)</title><rect x="13.1400%" y="757" width="0.6376%" height="15" fill="rgb(228,106,3)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (323 samples, 0.64%)</title><rect x="13.1400%" y="741" width="0.6376%" height="15" fill="rgb(209,23,37)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (323 samples, 0.64%)</title><rect x="13.1400%" y="725" width="0.6376%" height="15" fill="rgb(241,93,50)" fg:x="6657" fg:w="323"/><text x="13.3900%" y="735.50"></text></g><g><title>parking::Parker::park (16 samples, 0.03%)</title><rect x="13.7460%" y="709" width="0.0316%" height="15" fill="rgb(253,46,43)" fg:x="6964" fg:w="16"/><text x="13.9960%" y="719.50"></text></g><g><title>parking::Inner::park (16 samples, 0.03%)</title><rect x="13.7460%" y="693" width="0.0316%" height="15" fill="rgb(226,206,43)" fg:x="6964" fg:w="16"/><text x="13.9960%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (15 samples, 0.03%)</title><rect x="13.7480%" y="677" width="0.0296%" height="15" fill="rgb(217,54,7)" fg:x="6965" fg:w="15"/><text x="13.9980%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (15 samples, 0.03%)</title><rect x="13.7480%" y="661" width="0.0296%" height="15" fill="rgb(223,5,52)" fg:x="6965" fg:w="15"/><text x="13.9980%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (15 samples, 0.03%)</title><rect x="13.7480%" y="645" width="0.0296%" height="15" fill="rgb(206,52,46)" fg:x="6965" fg:w="15"/><text x="13.9980%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (15 samples, 0.03%)</title><rect x="13.7480%" y="629" width="0.0296%" height="15" fill="rgb(253,136,11)" fg:x="6965" fg:w="15"/><text x="13.9980%" y="639.50"></text></g><g><title>TaskPool_(3) (380 samples, 0.75%)</title><rect x="13.0453%" y="1013" width="0.7501%" height="15" fill="rgb(208,106,33)" fg:x="6609" fg:w="380"/><text x="13.2953%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="13.7993%" y="981" width="0.0217%" height="15" fill="rgb(206,54,4)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="13.7993%" y="965" width="0.0217%" height="15" fill="rgb(213,3,15)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (11 samples, 0.02%)</title><rect x="13.7993%" y="949" width="0.0217%" height="15" fill="rgb(252,211,39)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (11 samples, 0.02%)</title><rect x="13.7993%" y="933" width="0.0217%" height="15" fill="rgb(223,6,36)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (11 samples, 0.02%)</title><rect x="13.7993%" y="917" width="0.0217%" height="15" fill="rgb(252,169,45)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.02%)</title><rect x="13.7993%" y="901" width="0.0217%" height="15" fill="rgb(212,48,26)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="13.7993%" y="885" width="0.0217%" height="15" fill="rgb(251,102,48)" fg:x="6991" fg:w="11"/><text x="14.0493%" y="895.50"></text></g><g><title>[[heap]] (24 samples, 0.05%)</title><rect x="13.7993%" y="997" width="0.0474%" height="15" fill="rgb(243,208,16)" fg:x="6991" fg:w="24"/><text x="14.0493%" y="1007.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (6 samples, 0.01%)</title><rect x="13.8467%" y="981" width="0.0118%" height="15" fill="rgb(219,96,24)" fg:x="7015" fg:w="6"/><text x="14.0967%" y="991.50"></text></g><g><title>[anon] (27 samples, 0.05%)</title><rect x="13.8467%" y="997" width="0.0533%" height="15" fill="rgb(219,33,29)" fg:x="7015" fg:w="27"/><text x="14.0967%" y="1007.50"></text></g><g><title>[unknown] (50 samples, 0.10%)</title><rect x="13.9000%" y="997" width="0.0987%" height="15" fill="rgb(223,176,5)" fg:x="7042" fg:w="50"/><text x="14.1500%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (13 samples, 0.03%)</title><rect x="14.0302%" y="501" width="0.0257%" height="15" fill="rgb(228,140,14)" fg:x="7108" fg:w="13"/><text x="14.2802%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (10 samples, 0.02%)</title><rect x="14.0362%" y="485" width="0.0197%" height="15" fill="rgb(217,179,31)" fg:x="7111" fg:w="10"/><text x="14.2862%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="14.0421%" y="469" width="0.0138%" height="15" fill="rgb(230,9,30)" fg:x="7114" fg:w="7"/><text x="14.2921%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="14.0421%" y="453" width="0.0138%" height="15" fill="rgb(230,136,20)" fg:x="7114" fg:w="7"/><text x="14.2921%" y="463.50"></text></g><g><title>async_executor::steal (17 samples, 0.03%)</title><rect x="14.0283%" y="517" width="0.0336%" height="15" fill="rgb(215,210,22)" fg:x="7107" fg:w="17"/><text x="14.2783%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="14.0658%" y="501" width="0.0138%" height="15" fill="rgb(218,43,5)" fg:x="7126" fg:w="7"/><text x="14.3158%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (12 samples, 0.02%)</title><rect x="14.0618%" y="517" width="0.0237%" height="15" fill="rgb(216,11,5)" fg:x="7124" fg:w="12"/><text x="14.3118%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (41 samples, 0.08%)</title><rect x="14.0243%" y="533" width="0.0809%" height="15" fill="rgb(209,82,29)" fg:x="7105" fg:w="41"/><text x="14.2743%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.10%)</title><rect x="14.0184%" y="597" width="0.1026%" height="15" fill="rgb(244,115,12)" fg:x="7102" fg:w="52"/><text x="14.2684%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (51 samples, 0.10%)</title><rect x="14.0204%" y="581" width="0.1007%" height="15" fill="rgb(222,82,18)" fg:x="7103" fg:w="51"/><text x="14.2704%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (50 samples, 0.10%)</title><rect x="14.0223%" y="565" width="0.0987%" height="15" fill="rgb(249,227,8)" fg:x="7104" fg:w="50"/><text x="14.2723%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (50 samples, 0.10%)</title><rect x="14.0223%" y="549" width="0.0987%" height="15" fill="rgb(253,141,45)" fg:x="7104" fg:w="50"/><text x="14.2723%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.11%)</title><rect x="14.0164%" y="629" width="0.1066%" height="15" fill="rgb(234,184,4)" fg:x="7101" fg:w="54"/><text x="14.2664%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (54 samples, 0.11%)</title><rect x="14.0164%" y="613" width="0.1066%" height="15" fill="rgb(218,194,23)" fg:x="7101" fg:w="54"/><text x="14.2664%" y="623.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="14.1349%" y="549" width="0.0178%" height="15" fill="rgb(235,66,41)" fg:x="7161" fg:w="9"/><text x="14.3849%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (17 samples, 0.03%)</title><rect x="14.1329%" y="565" width="0.0336%" height="15" fill="rgb(245,217,1)" fg:x="7160" fg:w="17"/><text x="14.3829%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="14.1763%" y="549" width="0.0138%" height="15" fill="rgb(229,91,1)" fg:x="7182" fg:w="7"/><text x="14.4263%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (7 samples, 0.01%)</title><rect x="14.1763%" y="533" width="0.0138%" height="15" fill="rgb(207,101,30)" fg:x="7182" fg:w="7"/><text x="14.4263%" y="543.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="14.1960%" y="453" width="0.0138%" height="15" fill="rgb(223,82,49)" fg:x="7192" fg:w="7"/><text x="14.4460%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="14.1960%" y="437" width="0.0138%" height="15" fill="rgb(218,167,17)" fg:x="7192" fg:w="7"/><text x="14.4460%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="14.1960%" y="421" width="0.0138%" height="15" fill="rgb(208,103,14)" fg:x="7192" fg:w="7"/><text x="14.4460%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="14.1960%" y="405" width="0.0138%" height="15" fill="rgb(238,20,8)" fg:x="7192" fg:w="7"/><text x="14.4460%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (13 samples, 0.03%)</title><rect x="14.1901%" y="533" width="0.0257%" height="15" fill="rgb(218,80,54)" fg:x="7189" fg:w="13"/><text x="14.4401%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (12 samples, 0.02%)</title><rect x="14.1921%" y="517" width="0.0237%" height="15" fill="rgb(240,144,17)" fg:x="7190" fg:w="12"/><text x="14.4421%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="14.1921%" y="501" width="0.0237%" height="15" fill="rgb(245,27,50)" fg:x="7190" fg:w="12"/><text x="14.4421%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12 samples, 0.02%)</title><rect x="14.1921%" y="485" width="0.0237%" height="15" fill="rgb(251,51,7)" fg:x="7190" fg:w="12"/><text x="14.4421%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (12 samples, 0.02%)</title><rect x="14.1921%" y="469" width="0.0237%" height="15" fill="rgb(245,217,29)" fg:x="7190" fg:w="12"/><text x="14.4421%" y="479.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (11 samples, 0.02%)</title><rect x="14.2237%" y="469" width="0.0217%" height="15" fill="rgb(221,176,29)" fg:x="7206" fg:w="11"/><text x="14.4737%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (8 samples, 0.02%)</title><rect x="14.2296%" y="453" width="0.0158%" height="15" fill="rgb(212,180,24)" fg:x="7209" fg:w="8"/><text x="14.4796%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="14.2691%" y="421" width="0.0178%" height="15" fill="rgb(254,24,2)" fg:x="7229" fg:w="9"/><text x="14.5191%" y="431.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="14.2691%" y="405" width="0.0178%" height="15" fill="rgb(230,100,2)" fg:x="7229" fg:w="9"/><text x="14.5191%" y="415.50"></text></g><g><title>alloc::vec::from_elem (7 samples, 0.01%)</title><rect x="14.2868%" y="421" width="0.0138%" height="15" fill="rgb(219,142,25)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 0.01%)</title><rect x="14.2868%" y="405" width="0.0138%" height="15" fill="rgb(240,73,43)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7 samples, 0.01%)</title><rect x="14.2868%" y="389" width="0.0138%" height="15" fill="rgb(214,114,15)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="14.2868%" y="373" width="0.0138%" height="15" fill="rgb(207,130,4)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7 samples, 0.01%)</title><rect x="14.2868%" y="357" width="0.0138%" height="15" fill="rgb(221,25,40)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="14.2868%" y="341" width="0.0138%" height="15" fill="rgb(241,184,7)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.01%)</title><rect x="14.2868%" y="325" width="0.0138%" height="15" fill="rgb(235,159,4)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="14.2868%" y="309" width="0.0138%" height="15" fill="rgb(214,87,48)" fg:x="7238" fg:w="7"/><text x="14.5368%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (79 samples, 0.16%)</title><rect x="14.2493%" y="437" width="0.1559%" height="15" fill="rgb(246,198,24)" fg:x="7219" fg:w="79"/><text x="14.4993%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (52 samples, 0.10%)</title><rect x="14.3026%" y="421" width="0.1026%" height="15" fill="rgb(209,66,40)" fg:x="7246" fg:w="52"/><text x="14.5526%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.10%)</title><rect x="14.3026%" y="405" width="0.1026%" height="15" fill="rgb(233,147,39)" fg:x="7246" fg:w="52"/><text x="14.5526%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.08%)</title><rect x="14.3204%" y="389" width="0.0849%" height="15" fill="rgb(231,145,52)" fg:x="7255" fg:w="43"/><text x="14.5704%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (8 samples, 0.02%)</title><rect x="14.4250%" y="357" width="0.0158%" height="15" fill="rgb(206,20,26)" fg:x="7308" fg:w="8"/><text x="14.6750%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="14.4250%" y="341" width="0.0158%" height="15" fill="rgb(238,220,4)" fg:x="7308" fg:w="8"/><text x="14.6750%" y="351.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (12 samples, 0.02%)</title><rect x="14.4428%" y="357" width="0.0237%" height="15" fill="rgb(252,195,42)" fg:x="7317" fg:w="12"/><text x="14.6928%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.02%)</title><rect x="14.4448%" y="341" width="0.0217%" height="15" fill="rgb(209,10,6)" fg:x="7318" fg:w="11"/><text x="14.6948%" y="351.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (114 samples, 0.23%)</title><rect x="14.2454%" y="453" width="0.2250%" height="15" fill="rgb(229,3,52)" fg:x="7217" fg:w="114"/><text x="14.4954%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (33 samples, 0.07%)</title><rect x="14.4053%" y="437" width="0.0651%" height="15" fill="rgb(253,49,37)" fg:x="7298" fg:w="33"/><text x="14.6553%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (31 samples, 0.06%)</title><rect x="14.4092%" y="421" width="0.0612%" height="15" fill="rgb(240,103,49)" fg:x="7300" fg:w="31"/><text x="14.6592%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (25 samples, 0.05%)</title><rect x="14.4211%" y="405" width="0.0493%" height="15" fill="rgb(250,182,30)" fg:x="7306" fg:w="25"/><text x="14.6711%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (25 samples, 0.05%)</title><rect x="14.4211%" y="389" width="0.0493%" height="15" fill="rgb(248,8,30)" fg:x="7306" fg:w="25"/><text x="14.6711%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (25 samples, 0.05%)</title><rect x="14.4211%" y="373" width="0.0493%" height="15" fill="rgb(237,120,30)" fg:x="7306" fg:w="25"/><text x="14.6711%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (135 samples, 0.27%)</title><rect x="14.2158%" y="533" width="0.2665%" height="15" fill="rgb(221,146,34)" fg:x="7202" fg:w="135"/><text x="14.4658%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (135 samples, 0.27%)</title><rect x="14.2158%" y="517" width="0.2665%" height="15" fill="rgb(242,55,13)" fg:x="7202" fg:w="135"/><text x="14.4658%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (135 samples, 0.27%)</title><rect x="14.2158%" y="501" width="0.2665%" height="15" fill="rgb(242,112,31)" fg:x="7202" fg:w="135"/><text x="14.4658%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (135 samples, 0.27%)</title><rect x="14.2158%" y="485" width="0.2665%" height="15" fill="rgb(249,192,27)" fg:x="7202" fg:w="135"/><text x="14.4658%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (120 samples, 0.24%)</title><rect x="14.2454%" y="469" width="0.2369%" height="15" fill="rgb(208,204,44)" fg:x="7217" fg:w="120"/><text x="14.4954%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_render::mesh::mesh::GpuMesh&gt;&gt; (6 samples, 0.01%)</title><rect x="14.4704%" y="453" width="0.0118%" height="15" fill="rgb(208,93,54)" fg:x="7331" fg:w="6"/><text x="14.7204%" y="463.50"></text></g><g><title>bevy_pbr::render::mesh::queue_mesh_bind_group (8 samples, 0.02%)</title><rect x="14.4882%" y="469" width="0.0158%" height="15" fill="rgb(242,1,31)" fg:x="7340" fg:w="8"/><text x="14.7382%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (8 samples, 0.02%)</title><rect x="14.4882%" y="453" width="0.0158%" height="15" fill="rgb(241,83,25)" fg:x="7340" fg:w="8"/><text x="14.7382%" y="463.50"></text></g><g><title>wgpu::Device::create_bind_group (7 samples, 0.01%)</title><rect x="14.4902%" y="437" width="0.0138%" height="15" fill="rgb(205,169,50)" fg:x="7341" fg:w="7"/><text x="14.7402%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (7 samples, 0.01%)</title><rect x="14.4902%" y="421" width="0.0138%" height="15" fill="rgb(239,186,37)" fg:x="7341" fg:w="7"/><text x="14.7402%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (7 samples, 0.01%)</title><rect x="14.4902%" y="405" width="0.0138%" height="15" fill="rgb(205,221,10)" fg:x="7341" fg:w="7"/><text x="14.7402%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="14.5059%" y="421" width="0.0138%" height="15" fill="rgb(218,196,15)" fg:x="7349" fg:w="7"/><text x="14.7559%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="14.5059%" y="405" width="0.0138%" height="15" fill="rgb(218,196,35)" fg:x="7349" fg:w="7"/><text x="14.7559%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="14.5198%" y="373" width="0.0138%" height="15" fill="rgb(233,63,24)" fg:x="7356" fg:w="7"/><text x="14.7698%" y="383.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="14.5198%" y="357" width="0.0138%" height="15" fill="rgb(225,8,4)" fg:x="7356" fg:w="7"/><text x="14.7698%" y="367.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="14.5829%" y="325" width="0.0118%" height="15" fill="rgb(234,105,35)" fg:x="7388" fg:w="6"/><text x="14.8329%" y="335.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="14.5829%" y="309" width="0.0118%" height="15" fill="rgb(236,21,32)" fg:x="7388" fg:w="6"/><text x="14.8329%" y="319.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="14.5829%" y="293" width="0.0118%" height="15" fill="rgb(228,109,6)" fg:x="7388" fg:w="6"/><text x="14.8329%" y="303.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="14.5948%" y="325" width="0.0118%" height="15" fill="rgb(229,215,31)" fg:x="7394" fg:w="6"/><text x="14.8448%" y="335.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="14.5948%" y="309" width="0.0118%" height="15" fill="rgb(221,52,54)" fg:x="7394" fg:w="6"/><text x="14.8448%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="14.6145%" y="293" width="0.0118%" height="15" fill="rgb(252,129,43)" fg:x="7404" fg:w="6"/><text x="14.8645%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (50 samples, 0.10%)</title><rect x="14.6066%" y="325" width="0.0987%" height="15" fill="rgb(248,183,27)" fg:x="7400" fg:w="50"/><text x="14.8566%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.10%)</title><rect x="14.6066%" y="309" width="0.0987%" height="15" fill="rgb(250,0,22)" fg:x="7400" fg:w="50"/><text x="14.8566%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (40 samples, 0.08%)</title><rect x="14.6263%" y="293" width="0.0790%" height="15" fill="rgb(213,166,10)" fg:x="7410" fg:w="40"/><text x="14.8763%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (108 samples, 0.21%)</title><rect x="14.5040%" y="453" width="0.2132%" height="15" fill="rgb(207,163,36)" fg:x="7348" fg:w="108"/><text x="14.7540%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (108 samples, 0.21%)</title><rect x="14.5040%" y="437" width="0.2132%" height="15" fill="rgb(208,122,22)" fg:x="7348" fg:w="108"/><text x="14.7540%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (100 samples, 0.20%)</title><rect x="14.5198%" y="421" width="0.1974%" height="15" fill="rgb(207,104,49)" fg:x="7356" fg:w="100"/><text x="14.7698%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (100 samples, 0.20%)</title><rect x="14.5198%" y="405" width="0.1974%" height="15" fill="rgb(248,211,50)" fg:x="7356" fg:w="100"/><text x="14.7698%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (100 samples, 0.20%)</title><rect x="14.5198%" y="389" width="0.1974%" height="15" fill="rgb(217,13,45)" fg:x="7356" fg:w="100"/><text x="14.7698%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (93 samples, 0.18%)</title><rect x="14.5336%" y="373" width="0.1836%" height="15" fill="rgb(211,216,49)" fg:x="7363" fg:w="93"/><text x="14.7836%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (85 samples, 0.17%)</title><rect x="14.5494%" y="357" width="0.1678%" height="15" fill="rgb(221,58,53)" fg:x="7371" fg:w="85"/><text x="14.7994%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (85 samples, 0.17%)</title><rect x="14.5494%" y="341" width="0.1678%" height="15" fill="rgb(220,112,41)" fg:x="7371" fg:w="85"/><text x="14.7994%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (6 samples, 0.01%)</title><rect x="14.7053%" y="325" width="0.0118%" height="15" fill="rgb(236,38,28)" fg:x="7450" fg:w="6"/><text x="14.9553%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (6 samples, 0.01%)</title><rect x="14.7053%" y="309" width="0.0118%" height="15" fill="rgb(227,195,22)" fg:x="7450" fg:w="6"/><text x="14.9553%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="14.7053%" y="293" width="0.0118%" height="15" fill="rgb(214,55,33)" fg:x="7450" fg:w="6"/><text x="14.9553%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="14.7053%" y="277" width="0.0118%" height="15" fill="rgb(248,80,13)" fg:x="7450" fg:w="6"/><text x="14.9553%" y="287.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (120 samples, 0.24%)</title><rect x="14.5040%" y="469" width="0.2369%" height="15" fill="rgb(238,52,6)" fg:x="7348" fg:w="120"/><text x="14.7540%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.02%)</title><rect x="14.7171%" y="453" width="0.0237%" height="15" fill="rgb(224,198,47)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.7171%" y="437" width="0.0237%" height="15" fill="rgb(233,171,20)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.7171%" y="421" width="0.0237%" height="15" fill="rgb(241,30,25)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.7171%" y="405" width="0.0237%" height="15" fill="rgb(207,171,38)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="14.7171%" y="389" width="0.0237%" height="15" fill="rgb(234,70,1)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.02%)</title><rect x="14.7171%" y="373" width="0.0237%" height="15" fill="rgb(232,178,18)" fg:x="7456" fg:w="12"/><text x="14.9671%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="14.7408%" y="421" width="0.0158%" height="15" fill="rgb(241,78,40)" fg:x="7468" fg:w="8"/><text x="14.9908%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="14.7428%" y="405" width="0.0138%" height="15" fill="rgb(222,35,25)" fg:x="7469" fg:w="7"/><text x="14.9928%" y="415.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (9 samples, 0.02%)</title><rect x="14.7408%" y="469" width="0.0178%" height="15" fill="rgb(207,92,16)" fg:x="7468" fg:w="9"/><text x="14.9908%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (9 samples, 0.02%)</title><rect x="14.7408%" y="453" width="0.0178%" height="15" fill="rgb(216,59,51)" fg:x="7468" fg:w="9"/><text x="14.9908%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (9 samples, 0.02%)</title><rect x="14.7408%" y="437" width="0.0178%" height="15" fill="rgb(213,80,28)" fg:x="7468" fg:w="9"/><text x="14.9908%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (141 samples, 0.28%)</title><rect x="14.4823%" y="533" width="0.2783%" height="15" fill="rgb(220,93,7)" fg:x="7337" fg:w="141"/><text x="14.7323%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (141 samples, 0.28%)</title><rect x="14.4823%" y="517" width="0.2783%" height="15" fill="rgb(225,24,44)" fg:x="7337" fg:w="141"/><text x="14.7323%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (141 samples, 0.28%)</title><rect x="14.4823%" y="501" width="0.2783%" height="15" fill="rgb(243,74,40)" fg:x="7337" fg:w="141"/><text x="14.7323%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (141 samples, 0.28%)</title><rect x="14.4823%" y="485" width="0.2783%" height="15" fill="rgb(228,39,7)" fg:x="7337" fg:w="141"/><text x="14.7323%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (12 samples, 0.02%)</title><rect x="14.7704%" y="453" width="0.0237%" height="15" fill="rgb(227,79,8)" fg:x="7483" fg:w="12"/><text x="15.0204%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (10 samples, 0.02%)</title><rect x="14.7744%" y="437" width="0.0197%" height="15" fill="rgb(236,58,11)" fg:x="7485" fg:w="10"/><text x="15.0244%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.02%)</title><rect x="14.7744%" y="421" width="0.0197%" height="15" fill="rgb(249,63,35)" fg:x="7485" fg:w="10"/><text x="15.0244%" y="431.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="14.7823%" y="405" width="0.0118%" height="15" fill="rgb(252,114,16)" fg:x="7489" fg:w="6"/><text x="15.0323%" y="415.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (6 samples, 0.01%)</title><rect x="14.8000%" y="389" width="0.0118%" height="15" fill="rgb(254,151,24)" fg:x="7498" fg:w="6"/><text x="15.0500%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.01%)</title><rect x="14.8000%" y="373" width="0.0118%" height="15" fill="rgb(253,54,39)" fg:x="7498" fg:w="6"/><text x="15.0500%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (16 samples, 0.03%)</title><rect x="14.7941%" y="421" width="0.0316%" height="15" fill="rgb(243,25,45)" fg:x="7495" fg:w="16"/><text x="15.0441%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (16 samples, 0.03%)</title><rect x="14.7941%" y="405" width="0.0316%" height="15" fill="rgb(234,134,9)" fg:x="7495" fg:w="16"/><text x="15.0441%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (14 samples, 0.03%)</title><rect x="14.8494%" y="357" width="0.0276%" height="15" fill="rgb(227,166,31)" fg:x="7523" fg:w="14"/><text x="15.0994%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (20 samples, 0.04%)</title><rect x="14.8829%" y="325" width="0.0395%" height="15" fill="rgb(245,143,41)" fg:x="7540" fg:w="20"/><text x="15.1329%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.04%)</title><rect x="14.8829%" y="309" width="0.0395%" height="15" fill="rgb(238,181,32)" fg:x="7540" fg:w="20"/><text x="15.1329%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="14.8829%" y="293" width="0.0395%" height="15" fill="rgb(224,113,18)" fg:x="7540" fg:w="20"/><text x="15.1329%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (45 samples, 0.09%)</title><rect x="14.8356%" y="389" width="0.0888%" height="15" fill="rgb(240,229,28)" fg:x="7516" fg:w="45"/><text x="15.0856%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (40 samples, 0.08%)</title><rect x="14.8454%" y="373" width="0.0790%" height="15" fill="rgb(250,185,3)" fg:x="7521" fg:w="40"/><text x="15.0954%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (24 samples, 0.05%)</title><rect x="14.8770%" y="357" width="0.0474%" height="15" fill="rgb(212,59,25)" fg:x="7537" fg:w="24"/><text x="15.1270%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (24 samples, 0.05%)</title><rect x="14.8770%" y="341" width="0.0474%" height="15" fill="rgb(221,87,20)" fg:x="7537" fg:w="24"/><text x="15.1270%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (54 samples, 0.11%)</title><rect x="14.8257%" y="421" width="0.1066%" height="15" fill="rgb(213,74,28)" fg:x="7511" fg:w="54"/><text x="15.0757%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (54 samples, 0.11%)</title><rect x="14.8257%" y="405" width="0.1066%" height="15" fill="rgb(224,132,34)" fg:x="7511" fg:w="54"/><text x="15.0757%" y="415.50"></text></g><g><title>ash::device::Device::create_buffer (6 samples, 0.01%)</title><rect x="14.9481%" y="309" width="0.0118%" height="15" fill="rgb(222,101,24)" fg:x="7573" fg:w="6"/><text x="15.1981%" y="319.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (10 samples, 0.02%)</title><rect x="14.9461%" y="341" width="0.0197%" height="15" fill="rgb(254,142,4)" fg:x="7572" fg:w="10"/><text x="15.1961%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (10 samples, 0.02%)</title><rect x="14.9461%" y="325" width="0.0197%" height="15" fill="rgb(230,229,49)" fg:x="7572" fg:w="10"/><text x="15.1961%" y="335.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (105 samples, 0.21%)</title><rect x="14.7606%" y="533" width="0.2073%" height="15" fill="rgb(238,70,47)" fg:x="7478" fg:w="105"/><text x="15.0106%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (105 samples, 0.21%)</title><rect x="14.7606%" y="517" width="0.2073%" height="15" fill="rgb(231,160,17)" fg:x="7478" fg:w="105"/><text x="15.0106%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (105 samples, 0.21%)</title><rect x="14.7606%" y="501" width="0.2073%" height="15" fill="rgb(218,68,53)" fg:x="7478" fg:w="105"/><text x="15.0106%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (105 samples, 0.21%)</title><rect x="14.7606%" y="485" width="0.2073%" height="15" fill="rgb(236,111,10)" fg:x="7478" fg:w="105"/><text x="15.0106%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (105 samples, 0.21%)</title><rect x="14.7606%" y="469" width="0.2073%" height="15" fill="rgb(224,34,41)" fg:x="7478" fg:w="105"/><text x="15.0106%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (88 samples, 0.17%)</title><rect x="14.7941%" y="453" width="0.1737%" height="15" fill="rgb(241,118,19)" fg:x="7495" fg:w="88"/><text x="15.0441%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (88 samples, 0.17%)</title><rect x="14.7941%" y="437" width="0.1737%" height="15" fill="rgb(238,129,25)" fg:x="7495" fg:w="88"/><text x="15.0441%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (18 samples, 0.04%)</title><rect x="14.9323%" y="421" width="0.0355%" height="15" fill="rgb(238,22,31)" fg:x="7565" fg:w="18"/><text x="15.1823%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (16 samples, 0.03%)</title><rect x="14.9362%" y="405" width="0.0316%" height="15" fill="rgb(222,174,48)" fg:x="7567" fg:w="16"/><text x="15.1862%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (15 samples, 0.03%)</title><rect x="14.9382%" y="389" width="0.0296%" height="15" fill="rgb(206,152,40)" fg:x="7568" fg:w="15"/><text x="15.1882%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="14.9382%" y="373" width="0.0296%" height="15" fill="rgb(218,99,54)" fg:x="7568" fg:w="15"/><text x="15.1882%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="14.9382%" y="357" width="0.0296%" height="15" fill="rgb(220,174,26)" fg:x="7568" fg:w="15"/><text x="15.1882%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (13 samples, 0.03%)</title><rect x="14.9757%" y="533" width="0.0257%" height="15" fill="rgb(245,116,9)" fg:x="7587" fg:w="13"/><text x="15.2257%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (13 samples, 0.03%)</title><rect x="14.9757%" y="517" width="0.0257%" height="15" fill="rgb(209,72,35)" fg:x="7587" fg:w="13"/><text x="15.2257%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.03%)</title><rect x="14.9757%" y="501" width="0.0257%" height="15" fill="rgb(226,126,21)" fg:x="7587" fg:w="13"/><text x="15.2257%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.03%)</title><rect x="14.9757%" y="485" width="0.0257%" height="15" fill="rgb(227,192,1)" fg:x="7587" fg:w="13"/><text x="15.2257%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (12 samples, 0.02%)</title><rect x="14.9777%" y="469" width="0.0237%" height="15" fill="rgb(237,180,29)" fg:x="7588" fg:w="12"/><text x="15.2277%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (416 samples, 0.82%)</title><rect x="14.1901%" y="549" width="0.8211%" height="15" fill="rgb(230,197,35)" fg:x="7189" fg:w="416"/><text x="14.4401%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (450 samples, 0.89%)</title><rect x="14.1329%" y="581" width="0.8882%" height="15" fill="rgb(246,193,31)" fg:x="7160" fg:w="450"/><text x="14.3829%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (433 samples, 0.85%)</title><rect x="14.1664%" y="565" width="0.8547%" height="15" fill="rgb(241,36,4)" fg:x="7177" fg:w="433"/><text x="14.4164%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (457 samples, 0.90%)</title><rect x="14.1250%" y="613" width="0.9021%" height="15" fill="rgb(241,130,17)" fg:x="7156" fg:w="457"/><text x="14.3750%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (454 samples, 0.90%)</title><rect x="14.1309%" y="597" width="0.8961%" height="15" fill="rgb(206,137,32)" fg:x="7159" fg:w="454"/><text x="14.3809%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (460 samples, 0.91%)</title><rect x="14.1230%" y="629" width="0.9080%" height="15" fill="rgb(237,228,51)" fg:x="7155" fg:w="460"/><text x="14.3730%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (524 samples, 1.03%)</title><rect x="14.0046%" y="709" width="1.0343%" height="15" fill="rgb(243,6,42)" fg:x="7095" fg:w="524"/><text x="14.2546%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (524 samples, 1.03%)</title><rect x="14.0046%" y="693" width="1.0343%" height="15" fill="rgb(251,74,28)" fg:x="7095" fg:w="524"/><text x="14.2546%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (523 samples, 1.03%)</title><rect x="14.0066%" y="677" width="1.0323%" height="15" fill="rgb(218,20,49)" fg:x="7096" fg:w="523"/><text x="14.2566%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (519 samples, 1.02%)</title><rect x="14.0144%" y="661" width="1.0244%" height="15" fill="rgb(238,28,14)" fg:x="7100" fg:w="519"/><text x="14.2644%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (519 samples, 1.02%)</title><rect x="14.0144%" y="645" width="1.0244%" height="15" fill="rgb(229,40,46)" fg:x="7100" fg:w="519"/><text x="14.2644%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.01%)</title><rect x="15.0488%" y="613" width="0.0118%" height="15" fill="rgb(244,195,20)" fg:x="7624" fg:w="6"/><text x="15.2988%" y="623.50"></text></g><g><title>__GI___clone (540 samples, 1.07%)</title><rect x="13.9987%" y="997" width="1.0659%" height="15" fill="rgb(253,56,35)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="1007.50"></text></g><g><title>start_thread (540 samples, 1.07%)</title><rect x="13.9987%" y="981" width="1.0659%" height="15" fill="rgb(210,149,44)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (540 samples, 1.07%)</title><rect x="13.9987%" y="965" width="1.0659%" height="15" fill="rgb(240,135,12)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (540 samples, 1.07%)</title><rect x="13.9987%" y="949" width="1.0659%" height="15" fill="rgb(251,24,50)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (540 samples, 1.07%)</title><rect x="13.9987%" y="933" width="1.0659%" height="15" fill="rgb(243,200,47)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (540 samples, 1.07%)</title><rect x="13.9987%" y="917" width="1.0659%" height="15" fill="rgb(224,166,26)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (540 samples, 1.07%)</title><rect x="13.9987%" y="901" width="1.0659%" height="15" fill="rgb(233,0,47)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="911.50"></text></g><g><title>std::panic::catch_unwind (540 samples, 1.07%)</title><rect x="13.9987%" y="885" width="1.0659%" height="15" fill="rgb(253,80,5)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="895.50"></text></g><g><title>std::panicking::try (540 samples, 1.07%)</title><rect x="13.9987%" y="869" width="1.0659%" height="15" fill="rgb(214,133,25)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="879.50"></text></g><g><title>std::panicking::try::do_call (540 samples, 1.07%)</title><rect x="13.9987%" y="853" width="1.0659%" height="15" fill="rgb(209,27,14)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (540 samples, 1.07%)</title><rect x="13.9987%" y="837" width="1.0659%" height="15" fill="rgb(219,102,51)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (540 samples, 1.07%)</title><rect x="13.9987%" y="821" width="1.0659%" height="15" fill="rgb(237,18,16)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (540 samples, 1.07%)</title><rect x="13.9987%" y="805" width="1.0659%" height="15" fill="rgb(241,85,17)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (540 samples, 1.07%)</title><rect x="13.9987%" y="789" width="1.0659%" height="15" fill="rgb(236,90,42)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="799.50"></text></g><g><title>futures_lite::future::block_on (540 samples, 1.07%)</title><rect x="13.9987%" y="773" width="1.0659%" height="15" fill="rgb(249,57,21)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (540 samples, 1.07%)</title><rect x="13.9987%" y="757" width="1.0659%" height="15" fill="rgb(243,12,36)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (540 samples, 1.07%)</title><rect x="13.9987%" y="741" width="1.0659%" height="15" fill="rgb(253,128,47)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (540 samples, 1.07%)</title><rect x="13.9987%" y="725" width="1.0659%" height="15" fill="rgb(207,33,20)" fg:x="7092" fg:w="540"/><text x="14.2487%" y="735.50"></text></g><g><title>parking::Parker::park (13 samples, 0.03%)</title><rect x="15.0389%" y="709" width="0.0257%" height="15" fill="rgb(233,215,35)" fg:x="7619" fg:w="13"/><text x="15.2889%" y="719.50"></text></g><g><title>parking::Inner::park (13 samples, 0.03%)</title><rect x="15.0389%" y="693" width="0.0257%" height="15" fill="rgb(249,188,52)" fg:x="7619" fg:w="13"/><text x="15.2889%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (9 samples, 0.02%)</title><rect x="15.0468%" y="677" width="0.0178%" height="15" fill="rgb(225,12,32)" fg:x="7623" fg:w="9"/><text x="15.2968%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (9 samples, 0.02%)</title><rect x="15.0468%" y="661" width="0.0178%" height="15" fill="rgb(247,98,14)" fg:x="7623" fg:w="9"/><text x="15.2968%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (9 samples, 0.02%)</title><rect x="15.0468%" y="645" width="0.0178%" height="15" fill="rgb(247,219,48)" fg:x="7623" fg:w="9"/><text x="15.2968%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (9 samples, 0.02%)</title><rect x="15.0468%" y="629" width="0.0178%" height="15" fill="rgb(253,60,48)" fg:x="7623" fg:w="9"/><text x="15.2968%" y="639.50"></text></g><g><title>TaskPool_(4) (650 samples, 1.28%)</title><rect x="13.7953%" y="1013" width="1.2830%" height="15" fill="rgb(245,15,52)" fg:x="6989" fg:w="650"/><text x="14.0453%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (10 samples, 0.02%)</title><rect x="15.0784%" y="981" width="0.0197%" height="15" fill="rgb(220,133,28)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (10 samples, 0.02%)</title><rect x="15.0784%" y="965" width="0.0197%" height="15" fill="rgb(217,180,4)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (10 samples, 0.02%)</title><rect x="15.0784%" y="949" width="0.0197%" height="15" fill="rgb(251,24,1)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (10 samples, 0.02%)</title><rect x="15.0784%" y="933" width="0.0197%" height="15" fill="rgb(212,185,49)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (10 samples, 0.02%)</title><rect x="15.0784%" y="917" width="0.0197%" height="15" fill="rgb(215,175,22)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (10 samples, 0.02%)</title><rect x="15.0784%" y="901" width="0.0197%" height="15" fill="rgb(250,205,14)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="15.0784%" y="885" width="0.0197%" height="15" fill="rgb(225,211,22)" fg:x="7639" fg:w="10"/><text x="15.3284%" y="895.50"></text></g><g><title>[[heap]] (24 samples, 0.05%)</title><rect x="15.0784%" y="997" width="0.0474%" height="15" fill="rgb(251,179,42)" fg:x="7639" fg:w="24"/><text x="15.3284%" y="1007.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (6 samples, 0.01%)</title><rect x="15.1573%" y="981" width="0.0118%" height="15" fill="rgb(208,216,51)" fg:x="7679" fg:w="6"/><text x="15.4073%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="15.1573%" y="965" width="0.0118%" height="15" fill="rgb(235,36,11)" fg:x="7679" fg:w="6"/><text x="15.4073%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="15.1573%" y="949" width="0.0118%" height="15" fill="rgb(213,189,28)" fg:x="7679" fg:w="6"/><text x="15.4073%" y="959.50"></text></g><g><title>[anon] (32 samples, 0.06%)</title><rect x="15.1257%" y="997" width="0.0632%" height="15" fill="rgb(227,203,42)" fg:x="7663" fg:w="32"/><text x="15.3757%" y="1007.50"></text></g><g><title>[unknown] (51 samples, 0.10%)</title><rect x="15.1909%" y="997" width="0.1007%" height="15" fill="rgb(244,72,36)" fg:x="7696" fg:w="51"/><text x="15.4409%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (17 samples, 0.03%)</title><rect x="15.3133%" y="501" width="0.0336%" height="15" fill="rgb(213,53,17)" fg:x="7758" fg:w="17"/><text x="15.5633%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (10 samples, 0.02%)</title><rect x="15.3271%" y="485" width="0.0197%" height="15" fill="rgb(207,167,3)" fg:x="7765" fg:w="10"/><text x="15.5771%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="15.3310%" y="469" width="0.0158%" height="15" fill="rgb(216,98,30)" fg:x="7767" fg:w="8"/><text x="15.5810%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="15.3310%" y="453" width="0.0158%" height="15" fill="rgb(236,123,15)" fg:x="7767" fg:w="8"/><text x="15.5810%" y="463.50"></text></g><g><title>async_executor::steal (18 samples, 0.04%)</title><rect x="15.3133%" y="517" width="0.0355%" height="15" fill="rgb(248,81,50)" fg:x="7758" fg:w="18"/><text x="15.5633%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (8 samples, 0.02%)</title><rect x="15.3646%" y="485" width="0.0158%" height="15" fill="rgb(214,120,4)" fg:x="7784" fg:w="8"/><text x="15.6146%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (8 samples, 0.02%)</title><rect x="15.3646%" y="469" width="0.0158%" height="15" fill="rgb(208,179,34)" fg:x="7784" fg:w="8"/><text x="15.6146%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.02%)</title><rect x="15.3646%" y="453" width="0.0158%" height="15" fill="rgb(227,140,7)" fg:x="7784" fg:w="8"/><text x="15.6146%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="15.3646%" y="437" width="0.0158%" height="15" fill="rgb(214,22,6)" fg:x="7784" fg:w="8"/><text x="15.6146%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (17 samples, 0.03%)</title><rect x="15.3567%" y="501" width="0.0336%" height="15" fill="rgb(207,137,27)" fg:x="7780" fg:w="17"/><text x="15.6067%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (23 samples, 0.05%)</title><rect x="15.3488%" y="517" width="0.0454%" height="15" fill="rgb(210,8,46)" fg:x="7776" fg:w="23"/><text x="15.5988%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (50 samples, 0.10%)</title><rect x="15.3054%" y="533" width="0.0987%" height="15" fill="rgb(240,16,54)" fg:x="7754" fg:w="50"/><text x="15.5554%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (6 samples, 0.01%)</title><rect x="15.4119%" y="533" width="0.0118%" height="15" fill="rgb(211,209,29)" fg:x="7808" fg:w="6"/><text x="15.6619%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.12%)</title><rect x="15.3054%" y="597" width="0.1244%" height="15" fill="rgb(226,228,24)" fg:x="7754" fg:w="63"/><text x="15.5554%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (63 samples, 0.12%)</title><rect x="15.3054%" y="581" width="0.1244%" height="15" fill="rgb(222,84,9)" fg:x="7754" fg:w="63"/><text x="15.5554%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (63 samples, 0.12%)</title><rect x="15.3054%" y="565" width="0.1244%" height="15" fill="rgb(234,203,30)" fg:x="7754" fg:w="63"/><text x="15.5554%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (63 samples, 0.12%)</title><rect x="15.3054%" y="549" width="0.1244%" height="15" fill="rgb(238,109,14)" fg:x="7754" fg:w="63"/><text x="15.5554%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.13%)</title><rect x="15.3034%" y="629" width="0.1303%" height="15" fill="rgb(233,206,34)" fg:x="7753" fg:w="66"/><text x="15.5534%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (66 samples, 0.13%)</title><rect x="15.3034%" y="613" width="0.1303%" height="15" fill="rgb(220,167,47)" fg:x="7753" fg:w="66"/><text x="15.5534%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (17 samples, 0.03%)</title><rect x="15.4356%" y="565" width="0.0336%" height="15" fill="rgb(238,105,10)" fg:x="7820" fg:w="17"/><text x="15.6856%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="15.4791%" y="549" width="0.0178%" height="15" fill="rgb(213,227,17)" fg:x="7842" fg:w="9"/><text x="15.7291%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (9 samples, 0.02%)</title><rect x="15.4791%" y="533" width="0.0178%" height="15" fill="rgb(217,132,38)" fg:x="7842" fg:w="9"/><text x="15.7291%" y="543.50"></text></g><g><title>event_listener::Event::notify (6 samples, 0.01%)</title><rect x="15.4850%" y="517" width="0.0118%" height="15" fill="rgb(242,146,4)" fg:x="7845" fg:w="6"/><text x="15.7350%" y="527.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="15.5008%" y="453" width="0.0197%" height="15" fill="rgb(212,61,9)" fg:x="7853" fg:w="10"/><text x="15.7508%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="15.5008%" y="437" width="0.0197%" height="15" fill="rgb(247,126,22)" fg:x="7853" fg:w="10"/><text x="15.7508%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.02%)</title><rect x="15.5008%" y="421" width="0.0197%" height="15" fill="rgb(220,196,2)" fg:x="7853" fg:w="10"/><text x="15.7508%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="15.5008%" y="405" width="0.0197%" height="15" fill="rgb(208,46,4)" fg:x="7853" fg:w="10"/><text x="15.7508%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (15 samples, 0.03%)</title><rect x="15.4988%" y="533" width="0.0296%" height="15" fill="rgb(252,104,46)" fg:x="7852" fg:w="15"/><text x="15.7488%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (15 samples, 0.03%)</title><rect x="15.4988%" y="517" width="0.0296%" height="15" fill="rgb(237,152,48)" fg:x="7852" fg:w="15"/><text x="15.7488%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="15.4988%" y="501" width="0.0296%" height="15" fill="rgb(221,59,37)" fg:x="7852" fg:w="15"/><text x="15.7488%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.03%)</title><rect x="15.4988%" y="485" width="0.0296%" height="15" fill="rgb(209,202,51)" fg:x="7852" fg:w="15"/><text x="15.7488%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (15 samples, 0.03%)</title><rect x="15.4988%" y="469" width="0.0296%" height="15" fill="rgb(228,81,30)" fg:x="7852" fg:w="15"/><text x="15.7488%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="15.5501%" y="437" width="0.0138%" height="15" fill="rgb(227,42,39)" fg:x="7878" fg:w="7"/><text x="15.8001%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="15.5501%" y="421" width="0.0138%" height="15" fill="rgb(221,26,2)" fg:x="7878" fg:w="7"/><text x="15.8001%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (16 samples, 0.03%)</title><rect x="15.5383%" y="469" width="0.0316%" height="15" fill="rgb(254,61,31)" fg:x="7872" fg:w="16"/><text x="15.7883%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (10 samples, 0.02%)</title><rect x="15.5501%" y="453" width="0.0197%" height="15" fill="rgb(222,173,38)" fg:x="7878" fg:w="10"/><text x="15.8001%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="15.5856%" y="421" width="0.0158%" height="15" fill="rgb(218,50,12)" fg:x="7896" fg:w="8"/><text x="15.8356%" y="431.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="15.5856%" y="405" width="0.0158%" height="15" fill="rgb(223,88,40)" fg:x="7896" fg:w="8"/><text x="15.8356%" y="415.50"></text></g><g><title>alloc::vec::from_elem (6 samples, 0.01%)</title><rect x="15.6014%" y="421" width="0.0118%" height="15" fill="rgb(237,54,19)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.01%)</title><rect x="15.6014%" y="405" width="0.0118%" height="15" fill="rgb(251,129,25)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (6 samples, 0.01%)</title><rect x="15.6014%" y="389" width="0.0118%" height="15" fill="rgb(238,97,19)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="15.6014%" y="373" width="0.0118%" height="15" fill="rgb(240,169,18)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (6 samples, 0.01%)</title><rect x="15.6014%" y="357" width="0.0118%" height="15" fill="rgb(230,187,49)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="15.6014%" y="341" width="0.0118%" height="15" fill="rgb(209,44,26)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.01%)</title><rect x="15.6014%" y="325" width="0.0118%" height="15" fill="rgb(244,0,6)" fg:x="7904" fg:w="6"/><text x="15.8514%" y="335.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (54 samples, 0.11%)</title><rect x="15.5718%" y="437" width="0.1066%" height="15" fill="rgb(248,18,21)" fg:x="7889" fg:w="54"/><text x="15.8218%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (33 samples, 0.07%)</title><rect x="15.6133%" y="421" width="0.0651%" height="15" fill="rgb(245,180,19)" fg:x="7910" fg:w="33"/><text x="15.8633%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.07%)</title><rect x="15.6133%" y="405" width="0.0651%" height="15" fill="rgb(252,118,36)" fg:x="7910" fg:w="33"/><text x="15.8633%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.06%)</title><rect x="15.6192%" y="389" width="0.0592%" height="15" fill="rgb(210,224,19)" fg:x="7913" fg:w="30"/><text x="15.8692%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="15.6863%" y="405" width="0.0138%" height="15" fill="rgb(218,30,24)" fg:x="7947" fg:w="7"/><text x="15.9363%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="15.6863%" y="389" width="0.0138%" height="15" fill="rgb(219,75,50)" fg:x="7947" fg:w="7"/><text x="15.9363%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="15.6863%" y="373" width="0.0138%" height="15" fill="rgb(234,72,50)" fg:x="7947" fg:w="7"/><text x="15.9363%" y="383.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (10 samples, 0.02%)</title><rect x="15.7179%" y="357" width="0.0197%" height="15" fill="rgb(219,100,48)" fg:x="7963" fg:w="10"/><text x="15.9679%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (10 samples, 0.02%)</title><rect x="15.7179%" y="341" width="0.0197%" height="15" fill="rgb(253,5,41)" fg:x="7963" fg:w="10"/><text x="15.9679%" y="351.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (87 samples, 0.17%)</title><rect x="15.5699%" y="453" width="0.1717%" height="15" fill="rgb(247,181,11)" fg:x="7888" fg:w="87"/><text x="15.8199%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (32 samples, 0.06%)</title><rect x="15.6784%" y="437" width="0.0632%" height="15" fill="rgb(222,223,25)" fg:x="7943" fg:w="32"/><text x="15.9284%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (30 samples, 0.06%)</title><rect x="15.6824%" y="421" width="0.0592%" height="15" fill="rgb(214,198,28)" fg:x="7945" fg:w="30"/><text x="15.9324%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (21 samples, 0.04%)</title><rect x="15.7001%" y="405" width="0.0415%" height="15" fill="rgb(230,46,43)" fg:x="7954" fg:w="21"/><text x="15.9501%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (21 samples, 0.04%)</title><rect x="15.7001%" y="389" width="0.0415%" height="15" fill="rgb(233,65,53)" fg:x="7954" fg:w="21"/><text x="15.9501%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (21 samples, 0.04%)</title><rect x="15.7001%" y="373" width="0.0415%" height="15" fill="rgb(221,121,27)" fg:x="7954" fg:w="21"/><text x="15.9501%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_render::mesh::mesh::GpuMesh&gt;&gt; (9 samples, 0.02%)</title><rect x="15.7416%" y="453" width="0.0178%" height="15" fill="rgb(247,70,47)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::mesh::mesh::GpuMesh&gt; (9 samples, 0.02%)</title><rect x="15.7416%" y="437" width="0.0178%" height="15" fill="rgb(228,85,35)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (9 samples, 0.02%)</title><rect x="15.7416%" y="421" width="0.0178%" height="15" fill="rgb(209,50,18)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (9 samples, 0.02%)</title><rect x="15.7416%" y="405" width="0.0178%" height="15" fill="rgb(250,19,35)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="15.7416%" y="389" width="0.0178%" height="15" fill="rgb(253,107,29)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.02%)</title><rect x="15.7416%" y="373" width="0.0178%" height="15" fill="rgb(252,179,29)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (9 samples, 0.02%)</title><rect x="15.7416%" y="357" width="0.0178%" height="15" fill="rgb(238,194,6)" fg:x="7975" fg:w="9"/><text x="15.9916%" y="367.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (8 samples, 0.02%)</title><rect x="15.7436%" y="341" width="0.0158%" height="15" fill="rgb(238,164,29)" fg:x="7976" fg:w="8"/><text x="15.9936%" y="351.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (119 samples, 0.23%)</title><rect x="15.5284%" y="533" width="0.2349%" height="15" fill="rgb(224,25,9)" fg:x="7867" fg:w="119"/><text x="15.7784%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (117 samples, 0.23%)</title><rect x="15.5324%" y="517" width="0.2309%" height="15" fill="rgb(244,153,23)" fg:x="7869" fg:w="117"/><text x="15.7824%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (117 samples, 0.23%)</title><rect x="15.5324%" y="501" width="0.2309%" height="15" fill="rgb(212,203,14)" fg:x="7869" fg:w="117"/><text x="15.7824%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (117 samples, 0.23%)</title><rect x="15.5324%" y="485" width="0.2309%" height="15" fill="rgb(220,164,20)" fg:x="7869" fg:w="117"/><text x="15.7824%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (98 samples, 0.19%)</title><rect x="15.5699%" y="469" width="0.1934%" height="15" fill="rgb(222,203,48)" fg:x="7888" fg:w="98"/><text x="15.8199%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="15.7712%" y="421" width="0.0178%" height="15" fill="rgb(215,159,22)" fg:x="7990" fg:w="9"/><text x="16.0212%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="15.7712%" y="405" width="0.0178%" height="15" fill="rgb(216,183,47)" fg:x="7990" fg:w="9"/><text x="16.0212%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.01%)</title><rect x="15.7909%" y="373" width="0.0118%" height="15" fill="rgb(229,195,25)" fg:x="8000" fg:w="6"/><text x="16.0409%" y="383.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.01%)</title><rect x="15.7909%" y="357" width="0.0118%" height="15" fill="rgb(224,132,51)" fg:x="8000" fg:w="6"/><text x="16.0409%" y="367.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="15.8482%" y="325" width="0.0158%" height="15" fill="rgb(240,63,7)" fg:x="8029" fg:w="8"/><text x="16.0982%" y="335.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="15.8482%" y="309" width="0.0158%" height="15" fill="rgb(249,182,41)" fg:x="8029" fg:w="8"/><text x="16.0982%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (38 samples, 0.08%)</title><rect x="15.8640%" y="325" width="0.0750%" height="15" fill="rgb(243,47,26)" fg:x="8037" fg:w="38"/><text x="16.1140%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.08%)</title><rect x="15.8640%" y="309" width="0.0750%" height="15" fill="rgb(233,48,2)" fg:x="8037" fg:w="38"/><text x="16.1140%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (35 samples, 0.07%)</title><rect x="15.8699%" y="293" width="0.0691%" height="15" fill="rgb(244,165,34)" fg:x="8040" fg:w="35"/><text x="16.1199%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (94 samples, 0.19%)</title><rect x="15.7712%" y="453" width="0.1855%" height="15" fill="rgb(207,89,7)" fg:x="7990" fg:w="94"/><text x="16.0212%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (94 samples, 0.19%)</title><rect x="15.7712%" y="437" width="0.1855%" height="15" fill="rgb(244,117,36)" fg:x="7990" fg:w="94"/><text x="16.0212%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (85 samples, 0.17%)</title><rect x="15.7890%" y="421" width="0.1678%" height="15" fill="rgb(226,144,34)" fg:x="7999" fg:w="85"/><text x="16.0390%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (85 samples, 0.17%)</title><rect x="15.7890%" y="405" width="0.1678%" height="15" fill="rgb(213,23,19)" fg:x="7999" fg:w="85"/><text x="16.0390%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (85 samples, 0.17%)</title><rect x="15.7890%" y="389" width="0.1678%" height="15" fill="rgb(217,75,12)" fg:x="7999" fg:w="85"/><text x="16.0390%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (78 samples, 0.15%)</title><rect x="15.8028%" y="373" width="0.1540%" height="15" fill="rgb(224,159,17)" fg:x="8006" fg:w="78"/><text x="16.0528%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (70 samples, 0.14%)</title><rect x="15.8186%" y="357" width="0.1382%" height="15" fill="rgb(217,118,1)" fg:x="8014" fg:w="70"/><text x="16.0686%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (70 samples, 0.14%)</title><rect x="15.8186%" y="341" width="0.1382%" height="15" fill="rgb(232,180,48)" fg:x="8014" fg:w="70"/><text x="16.0686%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (9 samples, 0.02%)</title><rect x="15.9390%" y="325" width="0.0178%" height="15" fill="rgb(230,27,33)" fg:x="8075" fg:w="9"/><text x="16.1890%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (9 samples, 0.02%)</title><rect x="15.9390%" y="309" width="0.0178%" height="15" fill="rgb(205,31,21)" fg:x="8075" fg:w="9"/><text x="16.1890%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.02%)</title><rect x="15.9390%" y="293" width="0.0178%" height="15" fill="rgb(253,59,4)" fg:x="8075" fg:w="9"/><text x="16.1890%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.02%)</title><rect x="15.9390%" y="277" width="0.0178%" height="15" fill="rgb(224,201,9)" fg:x="8075" fg:w="9"/><text x="16.1890%" y="287.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (103 samples, 0.20%)</title><rect x="15.7712%" y="469" width="0.2033%" height="15" fill="rgb(229,206,30)" fg:x="7990" fg:w="103"/><text x="16.0212%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.02%)</title><rect x="15.9567%" y="453" width="0.0178%" height="15" fill="rgb(212,67,47)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="15.9567%" y="437" width="0.0178%" height="15" fill="rgb(211,96,50)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="15.9567%" y="421" width="0.0178%" height="15" fill="rgb(252,114,18)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="15.9567%" y="405" width="0.0178%" height="15" fill="rgb(223,58,37)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="15.9567%" y="389" width="0.0178%" height="15" fill="rgb(237,70,4)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.02%)</title><rect x="15.9567%" y="373" width="0.0178%" height="15" fill="rgb(244,85,46)" fg:x="8084" fg:w="9"/><text x="16.2067%" y="383.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="15.9607%" y="357" width="0.0138%" height="15" fill="rgb(223,39,52)" fg:x="8086" fg:w="7"/><text x="16.2107%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (116 samples, 0.23%)</title><rect x="15.7633%" y="533" width="0.2290%" height="15" fill="rgb(218,200,14)" fg:x="7986" fg:w="116"/><text x="16.0133%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (115 samples, 0.23%)</title><rect x="15.7653%" y="517" width="0.2270%" height="15" fill="rgb(208,171,16)" fg:x="7987" fg:w="115"/><text x="16.0153%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (115 samples, 0.23%)</title><rect x="15.7653%" y="501" width="0.2270%" height="15" fill="rgb(234,200,18)" fg:x="7987" fg:w="115"/><text x="16.0153%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (115 samples, 0.23%)</title><rect x="15.7653%" y="485" width="0.2270%" height="15" fill="rgb(228,45,11)" fg:x="7987" fg:w="115"/><text x="16.0153%" y="495.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (9 samples, 0.02%)</title><rect x="15.9745%" y="469" width="0.0178%" height="15" fill="rgb(237,182,11)" fg:x="8093" fg:w="9"/><text x="16.2245%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (8 samples, 0.02%)</title><rect x="15.9765%" y="453" width="0.0158%" height="15" fill="rgb(241,175,49)" fg:x="8094" fg:w="8"/><text x="16.2265%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (8 samples, 0.02%)</title><rect x="15.9765%" y="437" width="0.0158%" height="15" fill="rgb(247,38,35)" fg:x="8094" fg:w="8"/><text x="16.2265%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="15.9765%" y="421" width="0.0158%" height="15" fill="rgb(228,39,49)" fg:x="8094" fg:w="8"/><text x="16.2265%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="15.9765%" y="405" width="0.0158%" height="15" fill="rgb(226,101,26)" fg:x="8094" fg:w="8"/><text x="16.2265%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="16.0238%" y="405" width="0.0118%" height="15" fill="rgb(206,141,19)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="16.0238%" y="389" width="0.0118%" height="15" fill="rgb(211,200,13)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="16.0238%" y="373" width="0.0118%" height="15" fill="rgb(241,121,6)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="16.0238%" y="357" width="0.0118%" height="15" fill="rgb(234,221,29)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="16.0238%" y="341" width="0.0118%" height="15" fill="rgb(229,136,5)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="351.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.01%)</title><rect x="16.0238%" y="325" width="0.0118%" height="15" fill="rgb(238,36,11)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="335.50"></text></g><g><title>__realloc (6 samples, 0.01%)</title><rect x="16.0238%" y="309" width="0.0118%" height="15" fill="rgb(251,55,41)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="319.50"></text></g><g><title>_int_realloc (6 samples, 0.01%)</title><rect x="16.0238%" y="293" width="0.0118%" height="15" fill="rgb(242,34,40)" fg:x="8118" fg:w="6"/><text x="16.2738%" y="303.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (17 samples, 0.03%)</title><rect x="16.0120%" y="453" width="0.0336%" height="15" fill="rgb(215,42,17)" fg:x="8112" fg:w="17"/><text x="16.2620%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (12 samples, 0.02%)</title><rect x="16.0219%" y="437" width="0.0237%" height="15" fill="rgb(207,44,46)" fg:x="8117" fg:w="12"/><text x="16.2719%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="16.0219%" y="421" width="0.0237%" height="15" fill="rgb(211,206,28)" fg:x="8117" fg:w="12"/><text x="16.2719%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="16.0456%" y="421" width="0.0158%" height="15" fill="rgb(237,167,16)" fg:x="8129" fg:w="8"/><text x="16.2956%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="16.0456%" y="405" width="0.0158%" height="15" fill="rgb(233,66,6)" fg:x="8129" fg:w="8"/><text x="16.2956%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (11 samples, 0.02%)</title><rect x="16.0811%" y="357" width="0.0217%" height="15" fill="rgb(246,123,29)" fg:x="8147" fg:w="11"/><text x="16.3311%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (33 samples, 0.07%)</title><rect x="16.1127%" y="325" width="0.0651%" height="15" fill="rgb(209,62,40)" fg:x="8163" fg:w="33"/><text x="16.3627%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.07%)</title><rect x="16.1127%" y="309" width="0.0651%" height="15" fill="rgb(218,4,25)" fg:x="8163" fg:w="33"/><text x="16.3627%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.07%)</title><rect x="16.1127%" y="293" width="0.0651%" height="15" fill="rgb(253,91,49)" fg:x="8163" fg:w="33"/><text x="16.3627%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (60 samples, 0.12%)</title><rect x="16.0673%" y="389" width="0.1184%" height="15" fill="rgb(228,155,29)" fg:x="8140" fg:w="60"/><text x="16.3173%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (56 samples, 0.11%)</title><rect x="16.0752%" y="373" width="0.1105%" height="15" fill="rgb(243,57,37)" fg:x="8144" fg:w="56"/><text x="16.3252%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (41 samples, 0.08%)</title><rect x="16.1048%" y="357" width="0.0809%" height="15" fill="rgb(244,167,17)" fg:x="8159" fg:w="41"/><text x="16.3548%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (41 samples, 0.08%)</title><rect x="16.1048%" y="341" width="0.0809%" height="15" fill="rgb(207,181,38)" fg:x="8159" fg:w="41"/><text x="16.3548%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (64 samples, 0.13%)</title><rect x="16.0613%" y="421" width="0.1263%" height="15" fill="rgb(211,8,23)" fg:x="8137" fg:w="64"/><text x="16.3113%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (64 samples, 0.13%)</title><rect x="16.0613%" y="405" width="0.1263%" height="15" fill="rgb(235,11,44)" fg:x="8137" fg:w="64"/><text x="16.3113%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (9 samples, 0.02%)</title><rect x="16.1936%" y="341" width="0.0178%" height="15" fill="rgb(248,18,52)" fg:x="8204" fg:w="9"/><text x="16.4436%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (9 samples, 0.02%)</title><rect x="16.1936%" y="325" width="0.0178%" height="15" fill="rgb(208,4,7)" fg:x="8204" fg:w="9"/><text x="16.4436%" y="335.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (86 samples, 0.17%)</title><rect x="16.0456%" y="453" width="0.1698%" height="15" fill="rgb(240,17,39)" fg:x="8129" fg:w="86"/><text x="16.2956%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (86 samples, 0.17%)</title><rect x="16.0456%" y="437" width="0.1698%" height="15" fill="rgb(207,170,3)" fg:x="8129" fg:w="86"/><text x="16.2956%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (14 samples, 0.03%)</title><rect x="16.1877%" y="421" width="0.0276%" height="15" fill="rgb(236,100,52)" fg:x="8201" fg:w="14"/><text x="16.4377%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (11 samples, 0.02%)</title><rect x="16.1936%" y="405" width="0.0217%" height="15" fill="rgb(246,78,51)" fg:x="8204" fg:w="11"/><text x="16.4436%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (11 samples, 0.02%)</title><rect x="16.1936%" y="389" width="0.0217%" height="15" fill="rgb(211,17,15)" fg:x="8204" fg:w="11"/><text x="16.4436%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (11 samples, 0.02%)</title><rect x="16.1936%" y="373" width="0.0217%" height="15" fill="rgb(209,59,46)" fg:x="8204" fg:w="11"/><text x="16.4436%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (11 samples, 0.02%)</title><rect x="16.1936%" y="357" width="0.0217%" height="15" fill="rgb(210,92,25)" fg:x="8204" fg:w="11"/><text x="16.4436%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (115 samples, 0.23%)</title><rect x="15.9923%" y="533" width="0.2270%" height="15" fill="rgb(238,174,52)" fg:x="8102" fg:w="115"/><text x="16.2423%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (115 samples, 0.23%)</title><rect x="15.9923%" y="517" width="0.2270%" height="15" fill="rgb(230,73,7)" fg:x="8102" fg:w="115"/><text x="16.2423%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (115 samples, 0.23%)</title><rect x="15.9923%" y="501" width="0.2270%" height="15" fill="rgb(243,124,40)" fg:x="8102" fg:w="115"/><text x="16.2423%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (115 samples, 0.23%)</title><rect x="15.9923%" y="485" width="0.2270%" height="15" fill="rgb(244,170,11)" fg:x="8102" fg:w="115"/><text x="16.2423%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (115 samples, 0.23%)</title><rect x="15.9923%" y="469" width="0.2270%" height="15" fill="rgb(207,114,54)" fg:x="8102" fg:w="115"/><text x="16.2423%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (11 samples, 0.02%)</title><rect x="16.2232%" y="533" width="0.0217%" height="15" fill="rgb(205,42,20)" fg:x="8219" fg:w="11"/><text x="16.4732%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (11 samples, 0.02%)</title><rect x="16.2232%" y="517" width="0.0217%" height="15" fill="rgb(230,30,28)" fg:x="8219" fg:w="11"/><text x="16.4732%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.02%)</title><rect x="16.2232%" y="501" width="0.0217%" height="15" fill="rgb(205,73,54)" fg:x="8219" fg:w="11"/><text x="16.4732%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.02%)</title><rect x="16.2232%" y="485" width="0.0217%" height="15" fill="rgb(254,227,23)" fg:x="8219" fg:w="11"/><text x="16.4732%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (7 samples, 0.01%)</title><rect x="16.2311%" y="469" width="0.0138%" height="15" fill="rgb(228,202,34)" fg:x="8223" fg:w="7"/><text x="16.4811%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (383 samples, 0.76%)</title><rect x="15.4968%" y="549" width="0.7560%" height="15" fill="rgb(222,225,37)" fg:x="7851" fg:w="383"/><text x="15.7468%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (6 samples, 0.01%)</title><rect x="16.2568%" y="549" width="0.0118%" height="15" fill="rgb(221,14,54)" fg:x="8236" fg:w="6"/><text x="16.5068%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (6 samples, 0.01%)</title><rect x="16.2568%" y="533" width="0.0118%" height="15" fill="rgb(254,102,2)" fg:x="8236" fg:w="6"/><text x="16.5068%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (6 samples, 0.01%)</title><rect x="16.2568%" y="517" width="0.0118%" height="15" fill="rgb(232,104,17)" fg:x="8236" fg:w="6"/><text x="16.5068%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="16.2568%" y="501" width="0.0118%" height="15" fill="rgb(250,220,14)" fg:x="8236" fg:w="6"/><text x="16.5068%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (423 samples, 0.83%)</title><rect x="15.4356%" y="581" width="0.8349%" height="15" fill="rgb(241,158,9)" fg:x="7820" fg:w="423"/><text x="15.6856%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (406 samples, 0.80%)</title><rect x="15.4692%" y="565" width="0.8014%" height="15" fill="rgb(246,9,43)" fg:x="7837" fg:w="406"/><text x="15.7192%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (427 samples, 0.84%)</title><rect x="15.4356%" y="613" width="0.8428%" height="15" fill="rgb(206,73,33)" fg:x="7820" fg:w="427"/><text x="15.6856%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (427 samples, 0.84%)</title><rect x="15.4356%" y="597" width="0.8428%" height="15" fill="rgb(222,79,8)" fg:x="7820" fg:w="427"/><text x="15.6856%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (431 samples, 0.85%)</title><rect x="15.4337%" y="629" width="0.8507%" height="15" fill="rgb(234,8,54)" fg:x="7819" fg:w="431"/><text x="15.6837%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (502 samples, 0.99%)</title><rect x="15.2955%" y="709" width="0.9909%" height="15" fill="rgb(209,134,38)" fg:x="7749" fg:w="502"/><text x="15.5455%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (501 samples, 0.99%)</title><rect x="15.2975%" y="693" width="0.9889%" height="15" fill="rgb(230,127,29)" fg:x="7750" fg:w="501"/><text x="15.5475%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (501 samples, 0.99%)</title><rect x="15.2975%" y="677" width="0.9889%" height="15" fill="rgb(242,44,41)" fg:x="7750" fg:w="501"/><text x="15.5475%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (499 samples, 0.98%)</title><rect x="15.3014%" y="661" width="0.9850%" height="15" fill="rgb(222,56,43)" fg:x="7752" fg:w="499"/><text x="15.5514%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (499 samples, 0.98%)</title><rect x="15.3014%" y="645" width="0.9850%" height="15" fill="rgb(238,39,47)" fg:x="7752" fg:w="499"/><text x="15.5514%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (30 samples, 0.06%)</title><rect x="16.2883%" y="645" width="0.0592%" height="15" fill="rgb(226,79,43)" fg:x="8252" fg:w="30"/><text x="16.5383%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (30 samples, 0.06%)</title><rect x="16.2883%" y="629" width="0.0592%" height="15" fill="rgb(242,105,53)" fg:x="8252" fg:w="30"/><text x="16.5383%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (27 samples, 0.05%)</title><rect x="16.2943%" y="613" width="0.0533%" height="15" fill="rgb(251,132,46)" fg:x="8255" fg:w="27"/><text x="16.5443%" y="623.50"></text></g><g><title>syscall (24 samples, 0.05%)</title><rect x="16.3002%" y="597" width="0.0474%" height="15" fill="rgb(231,77,14)" fg:x="8258" fg:w="24"/><text x="16.5502%" y="607.50"></text></g><g><title>std::sync::condvar::Condvar::wait (32 samples, 0.06%)</title><rect x="16.2864%" y="677" width="0.0632%" height="15" fill="rgb(240,135,9)" fg:x="8251" fg:w="32"/><text x="16.5364%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (31 samples, 0.06%)</title><rect x="16.2883%" y="661" width="0.0612%" height="15" fill="rgb(248,109,14)" fg:x="8252" fg:w="31"/><text x="16.5383%" y="671.50"></text></g><g><title>__GI___clone (537 samples, 1.06%)</title><rect x="15.2915%" y="997" width="1.0600%" height="15" fill="rgb(227,146,52)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="1007.50"></text></g><g><title>start_thread (537 samples, 1.06%)</title><rect x="15.2915%" y="981" width="1.0600%" height="15" fill="rgb(232,54,3)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (537 samples, 1.06%)</title><rect x="15.2915%" y="965" width="1.0600%" height="15" fill="rgb(229,201,43)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (537 samples, 1.06%)</title><rect x="15.2915%" y="949" width="1.0600%" height="15" fill="rgb(252,161,33)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (537 samples, 1.06%)</title><rect x="15.2915%" y="933" width="1.0600%" height="15" fill="rgb(226,146,40)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (537 samples, 1.06%)</title><rect x="15.2915%" y="917" width="1.0600%" height="15" fill="rgb(219,47,25)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (537 samples, 1.06%)</title><rect x="15.2915%" y="901" width="1.0600%" height="15" fill="rgb(250,135,13)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="911.50"></text></g><g><title>std::panic::catch_unwind (537 samples, 1.06%)</title><rect x="15.2915%" y="885" width="1.0600%" height="15" fill="rgb(219,229,18)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="895.50"></text></g><g><title>std::panicking::try (537 samples, 1.06%)</title><rect x="15.2915%" y="869" width="1.0600%" height="15" fill="rgb(217,152,27)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="879.50"></text></g><g><title>std::panicking::try::do_call (537 samples, 1.06%)</title><rect x="15.2915%" y="853" width="1.0600%" height="15" fill="rgb(225,71,47)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (537 samples, 1.06%)</title><rect x="15.2915%" y="837" width="1.0600%" height="15" fill="rgb(220,139,14)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (537 samples, 1.06%)</title><rect x="15.2915%" y="821" width="1.0600%" height="15" fill="rgb(247,54,32)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (537 samples, 1.06%)</title><rect x="15.2915%" y="805" width="1.0600%" height="15" fill="rgb(252,131,39)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (537 samples, 1.06%)</title><rect x="15.2915%" y="789" width="1.0600%" height="15" fill="rgb(210,108,39)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="799.50"></text></g><g><title>futures_lite::future::block_on (537 samples, 1.06%)</title><rect x="15.2915%" y="773" width="1.0600%" height="15" fill="rgb(205,23,29)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (537 samples, 1.06%)</title><rect x="15.2915%" y="757" width="1.0600%" height="15" fill="rgb(246,139,46)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (537 samples, 1.06%)</title><rect x="15.2915%" y="741" width="1.0600%" height="15" fill="rgb(250,81,26)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (537 samples, 1.06%)</title><rect x="15.2915%" y="725" width="1.0600%" height="15" fill="rgb(214,104,7)" fg:x="7747" fg:w="537"/><text x="15.5415%" y="735.50"></text></g><g><title>parking::Parker::park (33 samples, 0.07%)</title><rect x="16.2864%" y="709" width="0.0651%" height="15" fill="rgb(233,189,8)" fg:x="8251" fg:w="33"/><text x="16.5364%" y="719.50"></text></g><g><title>parking::Inner::park (33 samples, 0.07%)</title><rect x="16.2864%" y="693" width="0.0651%" height="15" fill="rgb(228,141,17)" fg:x="8251" fg:w="33"/><text x="16.5364%" y="703.50"></text></g><g><title>TaskPool_(5) (651 samples, 1.28%)</title><rect x="15.0784%" y="1013" width="1.2850%" height="15" fill="rgb(247,157,1)" fg:x="7639" fg:w="651"/><text x="15.3284%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.02%)</title><rect x="16.3633%" y="981" width="0.0237%" height="15" fill="rgb(249,225,5)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.02%)</title><rect x="16.3633%" y="965" width="0.0237%" height="15" fill="rgb(242,55,13)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (12 samples, 0.02%)</title><rect x="16.3633%" y="949" width="0.0237%" height="15" fill="rgb(230,49,50)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (12 samples, 0.02%)</title><rect x="16.3633%" y="933" width="0.0237%" height="15" fill="rgb(241,111,38)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (12 samples, 0.02%)</title><rect x="16.3633%" y="917" width="0.0237%" height="15" fill="rgb(252,155,4)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.02%)</title><rect x="16.3633%" y="901" width="0.0237%" height="15" fill="rgb(212,69,32)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="16.3633%" y="885" width="0.0237%" height="15" fill="rgb(243,107,47)" fg:x="8290" fg:w="12"/><text x="16.6133%" y="895.50"></text></g><g><title>[[heap]] (26 samples, 0.05%)</title><rect x="16.3633%" y="997" width="0.0513%" height="15" fill="rgb(247,130,12)" fg:x="8290" fg:w="26"/><text x="16.6133%" y="1007.50"></text></g><g><title>[anon] (23 samples, 0.05%)</title><rect x="16.4147%" y="997" width="0.0454%" height="15" fill="rgb(233,74,16)" fg:x="8316" fg:w="23"/><text x="16.6647%" y="1007.50"></text></g><g><title>[unknown] (46 samples, 0.09%)</title><rect x="16.4601%" y="997" width="0.0908%" height="15" fill="rgb(208,58,18)" fg:x="8339" fg:w="46"/><text x="16.7101%" y="1007.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="16.5568%" y="661" width="0.0158%" height="15" fill="rgb(242,225,1)" fg:x="8388" fg:w="8"/><text x="16.8068%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (9 samples, 0.02%)</title><rect x="16.6042%" y="485" width="0.0178%" height="15" fill="rgb(249,39,40)" fg:x="8412" fg:w="9"/><text x="16.8542%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="16.6061%" y="469" width="0.0158%" height="15" fill="rgb(207,72,44)" fg:x="8413" fg:w="8"/><text x="16.8561%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="16.6061%" y="453" width="0.0158%" height="15" fill="rgb(215,193,12)" fg:x="8413" fg:w="8"/><text x="16.8561%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (20 samples, 0.04%)</title><rect x="16.5844%" y="501" width="0.0395%" height="15" fill="rgb(248,41,39)" fg:x="8402" fg:w="20"/><text x="16.8344%" y="511.50"></text></g><g><title>async_executor::steal (22 samples, 0.04%)</title><rect x="16.5844%" y="517" width="0.0434%" height="15" fill="rgb(253,85,4)" fg:x="8402" fg:w="22"/><text x="16.8344%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (11 samples, 0.02%)</title><rect x="16.6357%" y="485" width="0.0217%" height="15" fill="rgb(243,70,31)" fg:x="8428" fg:w="11"/><text x="16.8857%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.02%)</title><rect x="16.6377%" y="469" width="0.0197%" height="15" fill="rgb(253,195,26)" fg:x="8429" fg:w="10"/><text x="16.8877%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="16.6377%" y="453" width="0.0197%" height="15" fill="rgb(243,42,11)" fg:x="8429" fg:w="10"/><text x="16.8877%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="16.6377%" y="437" width="0.0197%" height="15" fill="rgb(239,66,17)" fg:x="8429" fg:w="10"/><text x="16.8877%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (15 samples, 0.03%)</title><rect x="16.6318%" y="501" width="0.0296%" height="15" fill="rgb(217,132,21)" fg:x="8426" fg:w="15"/><text x="16.8818%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (24 samples, 0.05%)</title><rect x="16.6278%" y="517" width="0.0474%" height="15" fill="rgb(252,202,21)" fg:x="8424" fg:w="24"/><text x="16.8778%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="16.6614%" y="501" width="0.0138%" height="15" fill="rgb(233,98,36)" fg:x="8441" fg:w="7"/><text x="16.9114%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (55 samples, 0.11%)</title><rect x="16.5785%" y="533" width="0.1086%" height="15" fill="rgb(216,153,54)" fg:x="8399" fg:w="55"/><text x="16.8285%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.13%)</title><rect x="16.5765%" y="597" width="0.1283%" height="15" fill="rgb(250,99,7)" fg:x="8398" fg:w="65"/><text x="16.8265%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (65 samples, 0.13%)</title><rect x="16.5765%" y="581" width="0.1283%" height="15" fill="rgb(207,56,50)" fg:x="8398" fg:w="65"/><text x="16.8265%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (65 samples, 0.13%)</title><rect x="16.5765%" y="565" width="0.1283%" height="15" fill="rgb(244,61,34)" fg:x="8398" fg:w="65"/><text x="16.8265%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (65 samples, 0.13%)</title><rect x="16.5765%" y="549" width="0.1283%" height="15" fill="rgb(241,50,38)" fg:x="8398" fg:w="65"/><text x="16.8265%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (68 samples, 0.13%)</title><rect x="16.5746%" y="629" width="0.1342%" height="15" fill="rgb(212,166,30)" fg:x="8397" fg:w="68"/><text x="16.8246%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (68 samples, 0.13%)</title><rect x="16.5746%" y="613" width="0.1342%" height="15" fill="rgb(249,127,32)" fg:x="8397" fg:w="68"/><text x="16.8246%" y="623.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="16.7127%" y="549" width="0.0118%" height="15" fill="rgb(209,103,0)" fg:x="8467" fg:w="6"/><text x="16.9627%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (18 samples, 0.04%)</title><rect x="16.7088%" y="565" width="0.0355%" height="15" fill="rgb(238,209,51)" fg:x="8465" fg:w="18"/><text x="16.9588%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (11 samples, 0.02%)</title><rect x="16.7483%" y="533" width="0.0217%" height="15" fill="rgb(237,56,23)" fg:x="8485" fg:w="11"/><text x="16.9983%" y="543.50"></text></g><g><title>event_listener::Event::notify (7 samples, 0.01%)</title><rect x="16.7561%" y="517" width="0.0138%" height="15" fill="rgb(215,153,46)" fg:x="8489" fg:w="7"/><text x="17.0061%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="16.7483%" y="549" width="0.0237%" height="15" fill="rgb(224,49,31)" fg:x="8485" fg:w="12"/><text x="16.9983%" y="559.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="16.7838%" y="453" width="0.0276%" height="15" fill="rgb(250,18,42)" fg:x="8503" fg:w="14"/><text x="17.0338%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="16.7838%" y="437" width="0.0276%" height="15" fill="rgb(215,176,39)" fg:x="8503" fg:w="14"/><text x="17.0338%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.03%)</title><rect x="16.7838%" y="421" width="0.0276%" height="15" fill="rgb(223,77,29)" fg:x="8503" fg:w="14"/><text x="17.0338%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.03%)</title><rect x="16.7838%" y="405" width="0.0276%" height="15" fill="rgb(234,94,52)" fg:x="8503" fg:w="14"/><text x="17.0338%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (20 samples, 0.04%)</title><rect x="16.7759%" y="533" width="0.0395%" height="15" fill="rgb(220,154,50)" fg:x="8499" fg:w="20"/><text x="17.0259%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (19 samples, 0.04%)</title><rect x="16.7779%" y="517" width="0.0375%" height="15" fill="rgb(212,11,10)" fg:x="8500" fg:w="19"/><text x="17.0279%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.04%)</title><rect x="16.7779%" y="501" width="0.0375%" height="15" fill="rgb(205,166,19)" fg:x="8500" fg:w="19"/><text x="17.0279%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.04%)</title><rect x="16.7779%" y="485" width="0.0375%" height="15" fill="rgb(244,198,16)" fg:x="8500" fg:w="19"/><text x="17.0279%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (19 samples, 0.04%)</title><rect x="16.7779%" y="469" width="0.0375%" height="15" fill="rgb(219,69,12)" fg:x="8500" fg:w="19"/><text x="17.0279%" y="479.50"></text></g><g><title>bevy_pbr::render::light::queue_shadow_view_bind_group (6 samples, 0.01%)</title><rect x="16.8173%" y="469" width="0.0118%" height="15" fill="rgb(245,30,7)" fg:x="8520" fg:w="6"/><text x="17.0673%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (11 samples, 0.02%)</title><rect x="16.8371%" y="437" width="0.0217%" height="15" fill="rgb(218,221,48)" fg:x="8530" fg:w="11"/><text x="17.0871%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="16.8391%" y="421" width="0.0197%" height="15" fill="rgb(216,66,15)" fg:x="8531" fg:w="10"/><text x="17.0891%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (21 samples, 0.04%)</title><rect x="16.8292%" y="469" width="0.0415%" height="15" fill="rgb(226,122,50)" fg:x="8526" fg:w="21"/><text x="17.0792%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (17 samples, 0.03%)</title><rect x="16.8371%" y="453" width="0.0336%" height="15" fill="rgb(239,156,16)" fg:x="8530" fg:w="17"/><text x="17.0871%" y="463.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (6 samples, 0.01%)</title><rect x="16.8588%" y="437" width="0.0118%" height="15" fill="rgb(224,27,38)" fg:x="8541" fg:w="6"/><text x="17.1088%" y="447.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (6 samples, 0.01%)</title><rect x="16.8588%" y="421" width="0.0118%" height="15" fill="rgb(224,39,27)" fg:x="8541" fg:w="6"/><text x="17.1088%" y="431.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (6 samples, 0.01%)</title><rect x="16.8588%" y="405" width="0.0118%" height="15" fill="rgb(215,92,29)" fg:x="8541" fg:w="6"/><text x="17.1088%" y="415.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (6 samples, 0.01%)</title><rect x="16.8588%" y="389" width="0.0118%" height="15" fill="rgb(207,159,16)" fg:x="8541" fg:w="6"/><text x="17.1088%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.02%)</title><rect x="16.8766%" y="421" width="0.0158%" height="15" fill="rgb(238,163,47)" fg:x="8550" fg:w="8"/><text x="17.1266%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.02%)</title><rect x="16.8766%" y="405" width="0.0158%" height="15" fill="rgb(219,91,49)" fg:x="8550" fg:w="8"/><text x="17.1266%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.02%)</title><rect x="16.8766%" y="389" width="0.0158%" height="15" fill="rgb(227,167,31)" fg:x="8550" fg:w="8"/><text x="17.1266%" y="399.50"></text></g><g><title>alloc::vec::from_elem (6 samples, 0.01%)</title><rect x="16.9022%" y="421" width="0.0118%" height="15" fill="rgb(234,80,54)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.01%)</title><rect x="16.9022%" y="405" width="0.0118%" height="15" fill="rgb(212,114,2)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (6 samples, 0.01%)</title><rect x="16.9022%" y="389" width="0.0118%" height="15" fill="rgb(234,50,24)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="16.9022%" y="373" width="0.0118%" height="15" fill="rgb(221,68,8)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (6 samples, 0.01%)</title><rect x="16.9022%" y="357" width="0.0118%" height="15" fill="rgb(254,180,31)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="16.9022%" y="341" width="0.0118%" height="15" fill="rgb(247,130,50)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.01%)</title><rect x="16.9022%" y="325" width="0.0118%" height="15" fill="rgb(211,109,4)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="16.9022%" y="309" width="0.0118%" height="15" fill="rgb(238,50,21)" fg:x="8563" fg:w="6"/><text x="17.1522%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (59 samples, 0.12%)</title><rect x="16.8726%" y="437" width="0.1165%" height="15" fill="rgb(225,57,45)" fg:x="8548" fg:w="59"/><text x="17.1226%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (37 samples, 0.07%)</title><rect x="16.9160%" y="421" width="0.0730%" height="15" fill="rgb(209,196,50)" fg:x="8570" fg:w="37"/><text x="17.1660%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.07%)</title><rect x="16.9160%" y="405" width="0.0730%" height="15" fill="rgb(242,140,13)" fg:x="8570" fg:w="37"/><text x="17.1660%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (31 samples, 0.06%)</title><rect x="16.9279%" y="389" width="0.0612%" height="15" fill="rgb(217,111,7)" fg:x="8576" fg:w="31"/><text x="17.1779%" y="399.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (12 samples, 0.02%)</title><rect x="17.0187%" y="357" width="0.0237%" height="15" fill="rgb(253,193,51)" fg:x="8622" fg:w="12"/><text x="17.2687%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.01%)</title><rect x="17.0285%" y="341" width="0.0138%" height="15" fill="rgb(252,70,29)" fg:x="8627" fg:w="7"/><text x="17.2785%" y="351.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (30 samples, 0.06%)</title><rect x="16.9891%" y="437" width="0.0592%" height="15" fill="rgb(232,127,12)" fg:x="8607" fg:w="30"/><text x="17.2391%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (29 samples, 0.06%)</title><rect x="16.9910%" y="421" width="0.0572%" height="15" fill="rgb(211,180,21)" fg:x="8608" fg:w="29"/><text x="17.2410%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (22 samples, 0.04%)</title><rect x="17.0049%" y="405" width="0.0434%" height="15" fill="rgb(229,72,13)" fg:x="8615" fg:w="22"/><text x="17.2549%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (22 samples, 0.04%)</title><rect x="17.0049%" y="389" width="0.0434%" height="15" fill="rgb(240,211,49)" fg:x="8615" fg:w="22"/><text x="17.2549%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (21 samples, 0.04%)</title><rect x="17.0068%" y="373" width="0.0415%" height="15" fill="rgb(219,149,40)" fg:x="8616" fg:w="21"/><text x="17.2568%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (91 samples, 0.18%)</title><rect x="16.8726%" y="453" width="0.1796%" height="15" fill="rgb(210,127,46)" fg:x="8548" fg:w="91"/><text x="17.1226%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (127 samples, 0.25%)</title><rect x="16.8154%" y="533" width="0.2507%" height="15" fill="rgb(220,106,7)" fg:x="8519" fg:w="127"/><text x="17.0654%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (126 samples, 0.25%)</title><rect x="16.8173%" y="517" width="0.2487%" height="15" fill="rgb(249,31,22)" fg:x="8520" fg:w="126"/><text x="17.0673%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (126 samples, 0.25%)</title><rect x="16.8173%" y="501" width="0.2487%" height="15" fill="rgb(253,1,49)" fg:x="8520" fg:w="126"/><text x="17.0673%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (126 samples, 0.25%)</title><rect x="16.8173%" y="485" width="0.2487%" height="15" fill="rgb(227,144,33)" fg:x="8520" fg:w="126"/><text x="17.0673%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (99 samples, 0.20%)</title><rect x="16.8706%" y="469" width="0.1954%" height="15" fill="rgb(249,163,44)" fg:x="8547" fg:w="99"/><text x="17.1206%" y="479.50"></text></g><g><title>bevy_pbr::render::mesh::queue_mesh_bind_group (6 samples, 0.01%)</title><rect x="17.0739%" y="469" width="0.0118%" height="15" fill="rgb(234,15,39)" fg:x="8650" fg:w="6"/><text x="17.3239%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (6 samples, 0.01%)</title><rect x="17.0739%" y="453" width="0.0118%" height="15" fill="rgb(207,66,16)" fg:x="8650" fg:w="6"/><text x="17.3239%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="17.0858%" y="421" width="0.0138%" height="15" fill="rgb(233,112,24)" fg:x="8656" fg:w="7"/><text x="17.3358%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="17.0858%" y="405" width="0.0138%" height="15" fill="rgb(230,90,22)" fg:x="8656" fg:w="7"/><text x="17.3358%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="17.0996%" y="373" width="0.0138%" height="15" fill="rgb(229,61,13)" fg:x="8663" fg:w="7"/><text x="17.3496%" y="383.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="17.0996%" y="357" width="0.0138%" height="15" fill="rgb(225,57,24)" fg:x="8663" fg:w="7"/><text x="17.3496%" y="367.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="17.1529%" y="325" width="0.0118%" height="15" fill="rgb(208,169,48)" fg:x="8690" fg:w="6"/><text x="17.4029%" y="335.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="17.1529%" y="309" width="0.0118%" height="15" fill="rgb(244,218,51)" fg:x="8690" fg:w="6"/><text x="17.4029%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (55 samples, 0.11%)</title><rect x="17.1647%" y="325" width="0.1086%" height="15" fill="rgb(214,148,10)" fg:x="8696" fg:w="55"/><text x="17.4147%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.11%)</title><rect x="17.1647%" y="309" width="0.1086%" height="15" fill="rgb(225,174,27)" fg:x="8696" fg:w="55"/><text x="17.4147%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (52 samples, 0.10%)</title><rect x="17.1707%" y="293" width="0.1026%" height="15" fill="rgb(230,96,26)" fg:x="8699" fg:w="52"/><text x="17.4207%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (90 samples, 0.18%)</title><rect x="17.0996%" y="389" width="0.1776%" height="15" fill="rgb(232,10,30)" fg:x="8663" fg:w="90"/><text x="17.3496%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (83 samples, 0.16%)</title><rect x="17.1134%" y="373" width="0.1638%" height="15" fill="rgb(222,8,50)" fg:x="8670" fg:w="83"/><text x="17.3634%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (79 samples, 0.16%)</title><rect x="17.1213%" y="357" width="0.1559%" height="15" fill="rgb(213,81,27)" fg:x="8674" fg:w="79"/><text x="17.3713%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (79 samples, 0.16%)</title><rect x="17.1213%" y="341" width="0.1559%" height="15" fill="rgb(245,50,10)" fg:x="8674" fg:w="79"/><text x="17.3713%" y="351.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (98 samples, 0.19%)</title><rect x="17.0858%" y="453" width="0.1934%" height="15" fill="rgb(216,100,18)" fg:x="8656" fg:w="98"/><text x="17.3358%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (98 samples, 0.19%)</title><rect x="17.0858%" y="437" width="0.1934%" height="15" fill="rgb(236,147,54)" fg:x="8656" fg:w="98"/><text x="17.3358%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (91 samples, 0.18%)</title><rect x="17.0996%" y="421" width="0.1796%" height="15" fill="rgb(205,143,26)" fg:x="8663" fg:w="91"/><text x="17.3496%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (91 samples, 0.18%)</title><rect x="17.0996%" y="405" width="0.1796%" height="15" fill="rgb(236,26,9)" fg:x="8663" fg:w="91"/><text x="17.3496%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="17.2832%" y="357" width="0.0118%" height="15" fill="rgb(221,165,53)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="17.2832%" y="341" width="0.0118%" height="15" fill="rgb(214,110,17)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="17.2832%" y="325" width="0.0118%" height="15" fill="rgb(237,197,12)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="17.2832%" y="309" width="0.0118%" height="15" fill="rgb(205,84,17)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="17.2832%" y="293" width="0.0118%" height="15" fill="rgb(237,18,45)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="17.2832%" y="277" width="0.0118%" height="15" fill="rgb(221,87,14)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="17.2832%" y="261" width="0.0118%" height="15" fill="rgb(238,186,15)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="271.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.01%)</title><rect x="17.2832%" y="245" width="0.0118%" height="15" fill="rgb(208,115,11)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="255.50"></text></g><g><title>__realloc (6 samples, 0.01%)</title><rect x="17.2832%" y="229" width="0.0118%" height="15" fill="rgb(254,175,0)" fg:x="8756" fg:w="6"/><text x="17.5332%" y="239.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (108 samples, 0.21%)</title><rect x="17.0858%" y="469" width="0.2132%" height="15" fill="rgb(227,24,42)" fg:x="8656" fg:w="108"/><text x="17.3358%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.02%)</title><rect x="17.2792%" y="453" width="0.0197%" height="15" fill="rgb(223,211,37)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="17.2792%" y="437" width="0.0197%" height="15" fill="rgb(235,49,27)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="17.2792%" y="421" width="0.0197%" height="15" fill="rgb(254,97,51)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="17.2792%" y="405" width="0.0197%" height="15" fill="rgb(249,51,40)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="17.2792%" y="389" width="0.0197%" height="15" fill="rgb(210,128,45)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10 samples, 0.02%)</title><rect x="17.2792%" y="373" width="0.0197%" height="15" fill="rgb(224,137,50)" fg:x="8754" fg:w="10"/><text x="17.5292%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (7 samples, 0.01%)</title><rect x="17.3009%" y="389" width="0.0138%" height="15" fill="rgb(242,15,9)" fg:x="8765" fg:w="7"/><text x="17.5509%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.01%)</title><rect x="17.3009%" y="373" width="0.0138%" height="15" fill="rgb(233,187,41)" fg:x="8765" fg:w="7"/><text x="17.5509%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="17.2990%" y="421" width="0.0257%" height="15" fill="rgb(227,2,29)" fg:x="8764" fg:w="13"/><text x="17.5490%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="17.2990%" y="405" width="0.0257%" height="15" fill="rgb(222,70,3)" fg:x="8764" fg:w="13"/><text x="17.5490%" y="415.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (14 samples, 0.03%)</title><rect x="17.2990%" y="453" width="0.0276%" height="15" fill="rgb(213,11,42)" fg:x="8764" fg:w="14"/><text x="17.5490%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (14 samples, 0.03%)</title><rect x="17.2990%" y="437" width="0.0276%" height="15" fill="rgb(225,150,9)" fg:x="8764" fg:w="14"/><text x="17.5490%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (133 samples, 0.26%)</title><rect x="17.0660%" y="533" width="0.2625%" height="15" fill="rgb(230,162,45)" fg:x="8646" fg:w="133"/><text x="17.3160%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (130 samples, 0.26%)</title><rect x="17.0720%" y="517" width="0.2566%" height="15" fill="rgb(222,14,52)" fg:x="8649" fg:w="130"/><text x="17.3220%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (130 samples, 0.26%)</title><rect x="17.0720%" y="501" width="0.2566%" height="15" fill="rgb(254,198,14)" fg:x="8649" fg:w="130"/><text x="17.3220%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (130 samples, 0.26%)</title><rect x="17.0720%" y="485" width="0.2566%" height="15" fill="rgb(220,217,30)" fg:x="8649" fg:w="130"/><text x="17.3220%" y="495.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (15 samples, 0.03%)</title><rect x="17.2990%" y="469" width="0.0296%" height="15" fill="rgb(215,146,41)" fg:x="8764" fg:w="15"/><text x="17.5490%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (14 samples, 0.03%)</title><rect x="17.3483%" y="453" width="0.0276%" height="15" fill="rgb(217,27,36)" fg:x="8789" fg:w="14"/><text x="17.5983%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (9 samples, 0.02%)</title><rect x="17.3582%" y="437" width="0.0178%" height="15" fill="rgb(219,218,39)" fg:x="8794" fg:w="9"/><text x="17.6082%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.02%)</title><rect x="17.3582%" y="421" width="0.0178%" height="15" fill="rgb(219,4,42)" fg:x="8794" fg:w="9"/><text x="17.6082%" y="431.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="17.3641%" y="405" width="0.0118%" height="15" fill="rgb(249,119,36)" fg:x="8797" fg:w="6"/><text x="17.6141%" y="415.50"></text></g><g><title>wgpu_core::device::queue::StagingData&lt;A&gt;::write (6 samples, 0.01%)</title><rect x="17.3898%" y="389" width="0.0118%" height="15" fill="rgb(209,23,33)" fg:x="8810" fg:w="6"/><text x="17.6398%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (16 samples, 0.03%)</title><rect x="17.3759%" y="421" width="0.0316%" height="15" fill="rgb(211,10,0)" fg:x="8803" fg:w="16"/><text x="17.6259%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (16 samples, 0.03%)</title><rect x="17.3759%" y="405" width="0.0316%" height="15" fill="rgb(208,99,37)" fg:x="8803" fg:w="16"/><text x="17.6259%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (11 samples, 0.02%)</title><rect x="17.4450%" y="357" width="0.0217%" height="15" fill="rgb(213,132,31)" fg:x="8838" fg:w="11"/><text x="17.6950%" y="367.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (54 samples, 0.11%)</title><rect x="17.4095%" y="389" width="0.1066%" height="15" fill="rgb(243,129,40)" fg:x="8820" fg:w="54"/><text x="17.6595%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (47 samples, 0.09%)</title><rect x="17.4233%" y="373" width="0.0928%" height="15" fill="rgb(210,66,33)" fg:x="8827" fg:w="47"/><text x="17.6733%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (25 samples, 0.05%)</title><rect x="17.4667%" y="357" width="0.0493%" height="15" fill="rgb(209,189,4)" fg:x="8849" fg:w="25"/><text x="17.7167%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (25 samples, 0.05%)</title><rect x="17.4667%" y="341" width="0.0493%" height="15" fill="rgb(214,107,37)" fg:x="8849" fg:w="25"/><text x="17.7167%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (21 samples, 0.04%)</title><rect x="17.4746%" y="325" width="0.0415%" height="15" fill="rgb(245,88,54)" fg:x="8853" fg:w="21"/><text x="17.7246%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.04%)</title><rect x="17.4746%" y="309" width="0.0415%" height="15" fill="rgb(205,146,20)" fg:x="8853" fg:w="21"/><text x="17.7246%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.04%)</title><rect x="17.4746%" y="293" width="0.0415%" height="15" fill="rgb(220,161,25)" fg:x="8853" fg:w="21"/><text x="17.7246%" y="303.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (58 samples, 0.11%)</title><rect x="17.4075%" y="421" width="0.1145%" height="15" fill="rgb(215,152,15)" fg:x="8819" fg:w="58"/><text x="17.6575%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (58 samples, 0.11%)</title><rect x="17.4075%" y="405" width="0.1145%" height="15" fill="rgb(233,192,44)" fg:x="8819" fg:w="58"/><text x="17.6575%" y="415.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (82 samples, 0.16%)</title><rect x="17.3759%" y="453" width="0.1619%" height="15" fill="rgb(240,170,46)" fg:x="8803" fg:w="82"/><text x="17.6259%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (82 samples, 0.16%)</title><rect x="17.3759%" y="437" width="0.1619%" height="15" fill="rgb(207,104,33)" fg:x="8803" fg:w="82"/><text x="17.6259%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (8 samples, 0.02%)</title><rect x="17.5220%" y="421" width="0.0158%" height="15" fill="rgb(219,21,39)" fg:x="8877" fg:w="8"/><text x="17.7720%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (108 samples, 0.21%)</title><rect x="17.3286%" y="533" width="0.2132%" height="15" fill="rgb(214,133,29)" fg:x="8779" fg:w="108"/><text x="17.5786%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (108 samples, 0.21%)</title><rect x="17.3286%" y="517" width="0.2132%" height="15" fill="rgb(226,93,6)" fg:x="8779" fg:w="108"/><text x="17.5786%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (108 samples, 0.21%)</title><rect x="17.3286%" y="501" width="0.2132%" height="15" fill="rgb(252,222,34)" fg:x="8779" fg:w="108"/><text x="17.5786%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (108 samples, 0.21%)</title><rect x="17.3286%" y="485" width="0.2132%" height="15" fill="rgb(252,92,48)" fg:x="8779" fg:w="108"/><text x="17.5786%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (108 samples, 0.21%)</title><rect x="17.3286%" y="469" width="0.2132%" height="15" fill="rgb(245,223,24)" fg:x="8779" fg:w="108"/><text x="17.5786%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (8 samples, 0.02%)</title><rect x="17.5516%" y="533" width="0.0158%" height="15" fill="rgb(205,176,3)" fg:x="8892" fg:w="8"/><text x="17.8016%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (8 samples, 0.02%)</title><rect x="17.5516%" y="517" width="0.0158%" height="15" fill="rgb(235,151,15)" fg:x="8892" fg:w="8"/><text x="17.8016%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="17.5516%" y="501" width="0.0158%" height="15" fill="rgb(237,209,11)" fg:x="8892" fg:w="8"/><text x="17.8016%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.02%)</title><rect x="17.5516%" y="485" width="0.0158%" height="15" fill="rgb(243,227,24)" fg:x="8892" fg:w="8"/><text x="17.8016%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (6 samples, 0.01%)</title><rect x="17.5556%" y="469" width="0.0118%" height="15" fill="rgb(239,193,16)" fg:x="8894" fg:w="6"/><text x="17.8056%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (406 samples, 0.80%)</title><rect x="16.7719%" y="549" width="0.8014%" height="15" fill="rgb(231,27,9)" fg:x="8497" fg:w="406"/><text x="17.0219%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.87%)</title><rect x="16.7088%" y="581" width="0.8744%" height="15" fill="rgb(219,169,10)" fg:x="8465" fg:w="443"/><text x="16.9588%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (425 samples, 0.84%)</title><rect x="16.7443%" y="565" width="0.8389%" height="15" fill="rgb(244,229,43)" fg:x="8483" fg:w="425"/><text x="16.9943%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (446 samples, 0.88%)</title><rect x="16.7088%" y="613" width="0.8803%" height="15" fill="rgb(254,38,20)" fg:x="8465" fg:w="446"/><text x="16.9588%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (446 samples, 0.88%)</title><rect x="16.7088%" y="597" width="0.8803%" height="15" fill="rgb(250,47,30)" fg:x="8465" fg:w="446"/><text x="16.9588%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (454 samples, 0.90%)</title><rect x="16.7088%" y="629" width="0.8961%" height="15" fill="rgb(224,124,36)" fg:x="8465" fg:w="454"/><text x="16.9588%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (537 samples, 1.06%)</title><rect x="16.5548%" y="709" width="1.0600%" height="15" fill="rgb(246,68,51)" fg:x="8387" fg:w="537"/><text x="16.8048%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (536 samples, 1.06%)</title><rect x="16.5568%" y="693" width="1.0580%" height="15" fill="rgb(253,43,49)" fg:x="8388" fg:w="536"/><text x="16.8068%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (536 samples, 1.06%)</title><rect x="16.5568%" y="677" width="1.0580%" height="15" fill="rgb(219,54,36)" fg:x="8388" fg:w="536"/><text x="16.8068%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (528 samples, 1.04%)</title><rect x="16.5726%" y="661" width="1.0422%" height="15" fill="rgb(227,133,34)" fg:x="8396" fg:w="528"/><text x="16.8226%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (528 samples, 1.04%)</title><rect x="16.5726%" y="645" width="1.0422%" height="15" fill="rgb(247,227,15)" fg:x="8396" fg:w="528"/><text x="16.8226%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (19 samples, 0.04%)</title><rect x="17.6207%" y="613" width="0.0375%" height="15" fill="rgb(229,96,14)" fg:x="8927" fg:w="19"/><text x="17.8707%" y="623.50"></text></g><g><title>syscall (15 samples, 0.03%)</title><rect x="17.6286%" y="597" width="0.0296%" height="15" fill="rgb(220,79,17)" fg:x="8931" fg:w="15"/><text x="17.8786%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (22 samples, 0.04%)</title><rect x="17.6168%" y="645" width="0.0434%" height="15" fill="rgb(205,131,53)" fg:x="8925" fg:w="22"/><text x="17.8668%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (22 samples, 0.04%)</title><rect x="17.6168%" y="629" width="0.0434%" height="15" fill="rgb(209,50,29)" fg:x="8925" fg:w="22"/><text x="17.8668%" y="639.50"></text></g><g><title>__GI___clone (563 samples, 1.11%)</title><rect x="16.5509%" y="997" width="1.1113%" height="15" fill="rgb(245,86,46)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="1007.50"></text></g><g><title>start_thread (563 samples, 1.11%)</title><rect x="16.5509%" y="981" width="1.1113%" height="15" fill="rgb(235,66,46)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (563 samples, 1.11%)</title><rect x="16.5509%" y="965" width="1.1113%" height="15" fill="rgb(232,148,31)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (563 samples, 1.11%)</title><rect x="16.5509%" y="949" width="1.1113%" height="15" fill="rgb(217,149,8)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (563 samples, 1.11%)</title><rect x="16.5509%" y="933" width="1.1113%" height="15" fill="rgb(209,183,11)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (563 samples, 1.11%)</title><rect x="16.5509%" y="917" width="1.1113%" height="15" fill="rgb(208,55,20)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (563 samples, 1.11%)</title><rect x="16.5509%" y="901" width="1.1113%" height="15" fill="rgb(218,39,14)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="911.50"></text></g><g><title>std::panic::catch_unwind (563 samples, 1.11%)</title><rect x="16.5509%" y="885" width="1.1113%" height="15" fill="rgb(216,169,33)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="895.50"></text></g><g><title>std::panicking::try (563 samples, 1.11%)</title><rect x="16.5509%" y="869" width="1.1113%" height="15" fill="rgb(233,80,24)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="879.50"></text></g><g><title>std::panicking::try::do_call (563 samples, 1.11%)</title><rect x="16.5509%" y="853" width="1.1113%" height="15" fill="rgb(213,179,31)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (563 samples, 1.11%)</title><rect x="16.5509%" y="837" width="1.1113%" height="15" fill="rgb(209,19,5)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (563 samples, 1.11%)</title><rect x="16.5509%" y="821" width="1.1113%" height="15" fill="rgb(219,18,35)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (563 samples, 1.11%)</title><rect x="16.5509%" y="805" width="1.1113%" height="15" fill="rgb(209,169,16)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (563 samples, 1.11%)</title><rect x="16.5509%" y="789" width="1.1113%" height="15" fill="rgb(245,90,51)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="799.50"></text></g><g><title>futures_lite::future::block_on (563 samples, 1.11%)</title><rect x="16.5509%" y="773" width="1.1113%" height="15" fill="rgb(220,99,45)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (563 samples, 1.11%)</title><rect x="16.5509%" y="757" width="1.1113%" height="15" fill="rgb(249,89,25)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (563 samples, 1.11%)</title><rect x="16.5509%" y="741" width="1.1113%" height="15" fill="rgb(239,193,0)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (563 samples, 1.11%)</title><rect x="16.5509%" y="725" width="1.1113%" height="15" fill="rgb(231,126,1)" fg:x="8385" fg:w="563"/><text x="16.8009%" y="735.50"></text></g><g><title>parking::Parker::park (24 samples, 0.05%)</title><rect x="17.6148%" y="709" width="0.0474%" height="15" fill="rgb(243,166,3)" fg:x="8924" fg:w="24"/><text x="17.8648%" y="719.50"></text></g><g><title>parking::Inner::park (24 samples, 0.05%)</title><rect x="17.6148%" y="693" width="0.0474%" height="15" fill="rgb(223,22,34)" fg:x="8924" fg:w="24"/><text x="17.8648%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (23 samples, 0.05%)</title><rect x="17.6168%" y="677" width="0.0454%" height="15" fill="rgb(251,52,51)" fg:x="8925" fg:w="23"/><text x="17.8668%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (23 samples, 0.05%)</title><rect x="17.6168%" y="661" width="0.0454%" height="15" fill="rgb(221,165,28)" fg:x="8925" fg:w="23"/><text x="17.8668%" y="671.50"></text></g><g><title>TaskPool_(6) (660 samples, 1.30%)</title><rect x="16.3633%" y="1013" width="1.3028%" height="15" fill="rgb(218,121,47)" fg:x="8290" fg:w="660"/><text x="16.6133%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="17.6661%" y="981" width="0.0217%" height="15" fill="rgb(209,120,9)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (11 samples, 0.02%)</title><rect x="17.6661%" y="965" width="0.0217%" height="15" fill="rgb(236,68,12)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (11 samples, 0.02%)</title><rect x="17.6661%" y="949" width="0.0217%" height="15" fill="rgb(225,194,26)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (11 samples, 0.02%)</title><rect x="17.6661%" y="933" width="0.0217%" height="15" fill="rgb(231,84,39)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (11 samples, 0.02%)</title><rect x="17.6661%" y="917" width="0.0217%" height="15" fill="rgb(210,11,45)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.02%)</title><rect x="17.6661%" y="901" width="0.0217%" height="15" fill="rgb(224,54,52)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="17.6661%" y="885" width="0.0217%" height="15" fill="rgb(238,102,14)" fg:x="8950" fg:w="11"/><text x="17.9161%" y="895.50"></text></g><g><title>[[heap]] (23 samples, 0.05%)</title><rect x="17.6661%" y="997" width="0.0454%" height="15" fill="rgb(243,160,52)" fg:x="8950" fg:w="23"/><text x="17.9161%" y="1007.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (6 samples, 0.01%)</title><rect x="17.7115%" y="981" width="0.0118%" height="15" fill="rgb(216,114,19)" fg:x="8973" fg:w="6"/><text x="17.9615%" y="991.50"></text></g><g><title>[anon] (32 samples, 0.06%)</title><rect x="17.7115%" y="997" width="0.0632%" height="15" fill="rgb(244,166,37)" fg:x="8973" fg:w="32"/><text x="17.9615%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.01%)</title><rect x="17.8674%" y="981" width="0.0138%" height="15" fill="rgb(246,29,44)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="965" width="0.0138%" height="15" fill="rgb(215,56,53)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="975.50"></text></g><g><title>futures_lite::future::block_on (7 samples, 0.01%)</title><rect x="17.8674%" y="949" width="0.0138%" height="15" fill="rgb(217,60,2)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="17.8674%" y="933" width="0.0138%" height="15" fill="rgb(207,26,24)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="17.8674%" y="917" width="0.0138%" height="15" fill="rgb(252,210,15)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="927.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="901" width="0.0138%" height="15" fill="rgb(253,209,26)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="17.8674%" y="885" width="0.0138%" height="15" fill="rgb(238,170,14)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="869" width="0.0138%" height="15" fill="rgb(216,178,15)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="17.8674%" y="853" width="0.0138%" height="15" fill="rgb(250,197,2)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="17.8674%" y="837" width="0.0138%" height="15" fill="rgb(212,70,42)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="821" width="0.0138%" height="15" fill="rgb(227,213,9)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 0.01%)</title><rect x="17.8674%" y="805" width="0.0138%" height="15" fill="rgb(245,99,25)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="17.8674%" y="789" width="0.0138%" height="15" fill="rgb(250,82,29)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="773" width="0.0138%" height="15" fill="rgb(241,226,54)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="17.8674%" y="757" width="0.0138%" height="15" fill="rgb(221,99,41)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (7 samples, 0.01%)</title><rect x="17.8674%" y="741" width="0.0138%" height="15" fill="rgb(213,90,21)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (7 samples, 0.01%)</title><rect x="17.8674%" y="725" width="0.0138%" height="15" fill="rgb(205,208,24)" fg:x="9052" fg:w="7"/><text x="18.1174%" y="735.50"></text></g><g><title>[unknown] (59 samples, 0.12%)</title><rect x="17.7747%" y="997" width="0.1165%" height="15" fill="rgb(246,31,12)" fg:x="9005" fg:w="59"/><text x="18.0247%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (14 samples, 0.03%)</title><rect x="17.9128%" y="501" width="0.0276%" height="15" fill="rgb(213,154,6)" fg:x="9075" fg:w="14"/><text x="18.1628%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (10 samples, 0.02%)</title><rect x="17.9207%" y="485" width="0.0197%" height="15" fill="rgb(222,163,29)" fg:x="9079" fg:w="10"/><text x="18.1707%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.02%)</title><rect x="17.9207%" y="469" width="0.0197%" height="15" fill="rgb(227,201,8)" fg:x="9079" fg:w="10"/><text x="18.1707%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="17.9207%" y="453" width="0.0197%" height="15" fill="rgb(233,9,32)" fg:x="9079" fg:w="10"/><text x="18.1707%" y="463.50"></text></g><g><title>async_executor::steal (17 samples, 0.03%)</title><rect x="17.9109%" y="517" width="0.0336%" height="15" fill="rgb(217,54,24)" fg:x="9074" fg:w="17"/><text x="18.1609%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (9 samples, 0.02%)</title><rect x="17.9503%" y="501" width="0.0178%" height="15" fill="rgb(235,192,0)" fg:x="9094" fg:w="9"/><text x="18.2003%" y="511.50"></text></g><g><title>concurrent_queue::full_fence (8 samples, 0.02%)</title><rect x="17.9523%" y="485" width="0.0158%" height="15" fill="rgb(235,45,9)" fg:x="9095" fg:w="8"/><text x="18.2023%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (8 samples, 0.02%)</title><rect x="17.9523%" y="469" width="0.0158%" height="15" fill="rgb(246,42,40)" fg:x="9095" fg:w="8"/><text x="18.2023%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.02%)</title><rect x="17.9523%" y="453" width="0.0158%" height="15" fill="rgb(248,111,24)" fg:x="9095" fg:w="8"/><text x="18.2023%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="17.9523%" y="437" width="0.0158%" height="15" fill="rgb(249,65,22)" fg:x="9095" fg:w="8"/><text x="18.2023%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (16 samples, 0.03%)</title><rect x="17.9444%" y="517" width="0.0316%" height="15" fill="rgb(238,111,51)" fg:x="9091" fg:w="16"/><text x="18.1944%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (40 samples, 0.08%)</title><rect x="17.9069%" y="533" width="0.0790%" height="15" fill="rgb(250,118,22)" fg:x="9072" fg:w="40"/><text x="18.1569%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.10%)</title><rect x="17.9069%" y="629" width="0.1007%" height="15" fill="rgb(234,84,26)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (51 samples, 0.10%)</title><rect x="17.9069%" y="613" width="0.1007%" height="15" fill="rgb(243,172,12)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.10%)</title><rect x="17.9069%" y="597" width="0.1007%" height="15" fill="rgb(236,150,49)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (51 samples, 0.10%)</title><rect x="17.9069%" y="581" width="0.1007%" height="15" fill="rgb(225,197,26)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (51 samples, 0.10%)</title><rect x="17.9069%" y="565" width="0.1007%" height="15" fill="rgb(214,17,42)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (51 samples, 0.10%)</title><rect x="17.9069%" y="549" width="0.1007%" height="15" fill="rgb(224,165,40)" fg:x="9072" fg:w="51"/><text x="18.1569%" y="559.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="18.0155%" y="517" width="0.0118%" height="15" fill="rgb(246,100,4)" fg:x="9127" fg:w="6"/><text x="18.2655%" y="527.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (6 samples, 0.01%)</title><rect x="18.0155%" y="501" width="0.0118%" height="15" fill="rgb(222,103,0)" fg:x="9127" fg:w="6"/><text x="18.2655%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="18.0135%" y="549" width="0.0158%" height="15" fill="rgb(227,189,26)" fg:x="9126" fg:w="8"/><text x="18.2635%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (8 samples, 0.02%)</title><rect x="18.0135%" y="533" width="0.0158%" height="15" fill="rgb(214,202,17)" fg:x="9126" fg:w="8"/><text x="18.2635%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (16 samples, 0.03%)</title><rect x="18.0096%" y="565" width="0.0316%" height="15" fill="rgb(229,111,3)" fg:x="9124" fg:w="16"/><text x="18.2596%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (8 samples, 0.02%)</title><rect x="18.0471%" y="533" width="0.0158%" height="15" fill="rgb(229,172,15)" fg:x="9143" fg:w="8"/><text x="18.2971%" y="543.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="18.0471%" y="549" width="0.0178%" height="15" fill="rgb(230,224,35)" fg:x="9143" fg:w="9"/><text x="18.2971%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (12 samples, 0.02%)</title><rect x="18.0688%" y="533" width="0.0237%" height="15" fill="rgb(251,141,6)" fg:x="9154" fg:w="12"/><text x="18.3188%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (12 samples, 0.02%)</title><rect x="18.0688%" y="517" width="0.0237%" height="15" fill="rgb(225,208,6)" fg:x="9154" fg:w="12"/><text x="18.3188%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="18.0688%" y="501" width="0.0237%" height="15" fill="rgb(246,181,16)" fg:x="9154" fg:w="12"/><text x="18.3188%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12 samples, 0.02%)</title><rect x="18.0688%" y="485" width="0.0237%" height="15" fill="rgb(227,129,36)" fg:x="9154" fg:w="12"/><text x="18.3188%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (12 samples, 0.02%)</title><rect x="18.0688%" y="469" width="0.0237%" height="15" fill="rgb(248,117,24)" fg:x="9154" fg:w="12"/><text x="18.3188%" y="479.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (10 samples, 0.02%)</title><rect x="18.1023%" y="469" width="0.0197%" height="15" fill="rgb(214,185,35)" fg:x="9171" fg:w="10"/><text x="18.3523%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (9 samples, 0.02%)</title><rect x="18.1043%" y="453" width="0.0178%" height="15" fill="rgb(236,150,34)" fg:x="9172" fg:w="9"/><text x="18.3543%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="18.1438%" y="421" width="0.0138%" height="15" fill="rgb(243,228,27)" fg:x="9192" fg:w="7"/><text x="18.3938%" y="431.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="18.1438%" y="405" width="0.0138%" height="15" fill="rgb(245,77,44)" fg:x="9192" fg:w="7"/><text x="18.3938%" y="415.50"></text></g><g><title>alloc::vec::from_elem (7 samples, 0.01%)</title><rect x="18.1576%" y="421" width="0.0138%" height="15" fill="rgb(235,214,42)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 0.01%)</title><rect x="18.1576%" y="405" width="0.0138%" height="15" fill="rgb(221,74,3)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7 samples, 0.01%)</title><rect x="18.1576%" y="389" width="0.0138%" height="15" fill="rgb(206,121,29)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="18.1576%" y="373" width="0.0138%" height="15" fill="rgb(249,131,53)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7 samples, 0.01%)</title><rect x="18.1576%" y="357" width="0.0138%" height="15" fill="rgb(236,170,29)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="18.1576%" y="341" width="0.0138%" height="15" fill="rgb(247,96,15)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.01%)</title><rect x="18.1576%" y="325" width="0.0138%" height="15" fill="rgb(211,210,7)" fg:x="9199" fg:w="7"/><text x="18.4076%" y="335.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (59 samples, 0.12%)</title><rect x="18.1221%" y="437" width="0.1165%" height="15" fill="rgb(240,88,50)" fg:x="9181" fg:w="59"/><text x="18.3721%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (34 samples, 0.07%)</title><rect x="18.1714%" y="421" width="0.0671%" height="15" fill="rgb(209,229,26)" fg:x="9206" fg:w="34"/><text x="18.4214%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.07%)</title><rect x="18.1714%" y="405" width="0.0671%" height="15" fill="rgb(210,68,23)" fg:x="9206" fg:w="34"/><text x="18.4214%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.06%)</title><rect x="18.1793%" y="389" width="0.0592%" height="15" fill="rgb(229,180,13)" fg:x="9210" fg:w="30"/><text x="18.4293%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.02%)</title><rect x="18.2484%" y="405" width="0.0158%" height="15" fill="rgb(236,53,44)" fg:x="9245" fg:w="8"/><text x="18.4984%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="18.2484%" y="389" width="0.0158%" height="15" fill="rgb(244,214,29)" fg:x="9245" fg:w="8"/><text x="18.4984%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="18.2484%" y="373" width="0.0158%" height="15" fill="rgb(220,75,29)" fg:x="9245" fg:w="8"/><text x="18.4984%" y="383.50"></text></g><g><title>core::intrinsics::write_bytes (6 samples, 0.01%)</title><rect x="18.2681%" y="357" width="0.0118%" height="15" fill="rgb(214,183,37)" fg:x="9255" fg:w="6"/><text x="18.5181%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="18.2681%" y="341" width="0.0118%" height="15" fill="rgb(239,117,29)" fg:x="9255" fg:w="6"/><text x="18.5181%" y="351.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (87 samples, 0.17%)</title><rect x="18.1221%" y="453" width="0.1717%" height="15" fill="rgb(237,171,35)" fg:x="9181" fg:w="87"/><text x="18.3721%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (28 samples, 0.06%)</title><rect x="18.2385%" y="437" width="0.0553%" height="15" fill="rgb(229,178,53)" fg:x="9240" fg:w="28"/><text x="18.4885%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (27 samples, 0.05%)</title><rect x="18.2405%" y="421" width="0.0533%" height="15" fill="rgb(210,102,19)" fg:x="9241" fg:w="27"/><text x="18.4905%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (14 samples, 0.03%)</title><rect x="18.2662%" y="405" width="0.0276%" height="15" fill="rgb(235,127,22)" fg:x="9254" fg:w="14"/><text x="18.5162%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (14 samples, 0.03%)</title><rect x="18.2662%" y="389" width="0.0276%" height="15" fill="rgb(244,31,31)" fg:x="9254" fg:w="14"/><text x="18.5162%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (13 samples, 0.03%)</title><rect x="18.2681%" y="373" width="0.0257%" height="15" fill="rgb(231,43,21)" fg:x="9255" fg:w="13"/><text x="18.5181%" y="383.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (94 samples, 0.19%)</title><rect x="18.1221%" y="469" width="0.1855%" height="15" fill="rgb(217,131,35)" fg:x="9181" fg:w="94"/><text x="18.3721%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_render::mesh::mesh::GpuMesh&gt;&gt; (6 samples, 0.01%)</title><rect x="18.2958%" y="453" width="0.0118%" height="15" fill="rgb(221,149,4)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::mesh::mesh::GpuMesh&gt; (6 samples, 0.01%)</title><rect x="18.2958%" y="437" width="0.0118%" height="15" fill="rgb(232,170,28)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (6 samples, 0.01%)</title><rect x="18.2958%" y="421" width="0.0118%" height="15" fill="rgb(238,56,10)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (6 samples, 0.01%)</title><rect x="18.2958%" y="405" width="0.0118%" height="15" fill="rgb(235,196,14)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="18.2958%" y="389" width="0.0118%" height="15" fill="rgb(216,45,48)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="18.2958%" y="373" width="0.0118%" height="15" fill="rgb(238,213,17)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (6 samples, 0.01%)</title><rect x="18.2958%" y="357" width="0.0118%" height="15" fill="rgb(212,13,2)" fg:x="9269" fg:w="6"/><text x="18.5458%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (110 samples, 0.22%)</title><rect x="18.0925%" y="533" width="0.2171%" height="15" fill="rgb(240,114,20)" fg:x="9166" fg:w="110"/><text x="18.3425%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (109 samples, 0.22%)</title><rect x="18.0944%" y="517" width="0.2152%" height="15" fill="rgb(228,41,40)" fg:x="9167" fg:w="109"/><text x="18.3444%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (109 samples, 0.22%)</title><rect x="18.0944%" y="501" width="0.2152%" height="15" fill="rgb(244,132,35)" fg:x="9167" fg:w="109"/><text x="18.3444%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (109 samples, 0.22%)</title><rect x="18.0944%" y="485" width="0.2152%" height="15" fill="rgb(253,189,4)" fg:x="9167" fg:w="109"/><text x="18.3444%" y="495.50"></text></g><g><title>wgpu_core::device::queue::StagingData&lt;A&gt;::write (6 samples, 0.01%)</title><rect x="18.3254%" y="389" width="0.0118%" height="15" fill="rgb(224,37,19)" fg:x="9284" fg:w="6"/><text x="18.5754%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="18.3254%" y="373" width="0.0118%" height="15" fill="rgb(235,223,18)" fg:x="9284" fg:w="6"/><text x="18.5754%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="18.3254%" y="357" width="0.0118%" height="15" fill="rgb(235,163,25)" fg:x="9284" fg:w="6"/><text x="18.5754%" y="367.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="18.3195%" y="421" width="0.0197%" height="15" fill="rgb(217,145,28)" fg:x="9281" fg:w="10"/><text x="18.5695%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="18.3195%" y="405" width="0.0197%" height="15" fill="rgb(223,223,32)" fg:x="9281" fg:w="10"/><text x="18.5695%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.01%)</title><rect x="18.3392%" y="373" width="0.0118%" height="15" fill="rgb(227,189,39)" fg:x="9291" fg:w="6"/><text x="18.5892%" y="383.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.01%)</title><rect x="18.3392%" y="357" width="0.0118%" height="15" fill="rgb(248,10,22)" fg:x="9291" fg:w="6"/><text x="18.5892%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (41 samples, 0.08%)</title><rect x="18.4221%" y="325" width="0.0809%" height="15" fill="rgb(248,46,39)" fg:x="9333" fg:w="41"/><text x="18.6721%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.08%)</title><rect x="18.4221%" y="309" width="0.0809%" height="15" fill="rgb(248,113,48)" fg:x="9333" fg:w="41"/><text x="18.6721%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (39 samples, 0.08%)</title><rect x="18.4260%" y="293" width="0.0770%" height="15" fill="rgb(245,16,25)" fg:x="9335" fg:w="39"/><text x="18.6760%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (98 samples, 0.19%)</title><rect x="18.3195%" y="453" width="0.1934%" height="15" fill="rgb(249,152,16)" fg:x="9281" fg:w="98"/><text x="18.5695%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (98 samples, 0.19%)</title><rect x="18.3195%" y="437" width="0.1934%" height="15" fill="rgb(250,16,1)" fg:x="9281" fg:w="98"/><text x="18.5695%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (88 samples, 0.17%)</title><rect x="18.3392%" y="421" width="0.1737%" height="15" fill="rgb(249,138,3)" fg:x="9291" fg:w="88"/><text x="18.5892%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (88 samples, 0.17%)</title><rect x="18.3392%" y="405" width="0.1737%" height="15" fill="rgb(227,71,41)" fg:x="9291" fg:w="88"/><text x="18.5892%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (88 samples, 0.17%)</title><rect x="18.3392%" y="389" width="0.1737%" height="15" fill="rgb(209,184,23)" fg:x="9291" fg:w="88"/><text x="18.5892%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (82 samples, 0.16%)</title><rect x="18.3510%" y="373" width="0.1619%" height="15" fill="rgb(223,215,31)" fg:x="9297" fg:w="82"/><text x="18.6010%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (73 samples, 0.14%)</title><rect x="18.3688%" y="357" width="0.1441%" height="15" fill="rgb(210,146,28)" fg:x="9306" fg:w="73"/><text x="18.6188%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (73 samples, 0.14%)</title><rect x="18.3688%" y="341" width="0.1441%" height="15" fill="rgb(209,183,41)" fg:x="9306" fg:w="73"/><text x="18.6188%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (106 samples, 0.21%)</title><rect x="18.3195%" y="469" width="0.2092%" height="15" fill="rgb(209,224,45)" fg:x="9281" fg:w="106"/><text x="18.5695%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.02%)</title><rect x="18.5129%" y="453" width="0.0158%" height="15" fill="rgb(224,209,51)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="18.5129%" y="437" width="0.0158%" height="15" fill="rgb(223,17,39)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="18.5129%" y="421" width="0.0158%" height="15" fill="rgb(234,204,37)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="18.5129%" y="405" width="0.0158%" height="15" fill="rgb(236,120,5)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="18.5129%" y="389" width="0.0158%" height="15" fill="rgb(248,97,27)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.02%)</title><rect x="18.5129%" y="373" width="0.0158%" height="15" fill="rgb(240,66,17)" fg:x="9379" fg:w="8"/><text x="18.7629%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (6 samples, 0.01%)</title><rect x="18.5287%" y="389" width="0.0118%" height="15" fill="rgb(210,79,3)" fg:x="9387" fg:w="6"/><text x="18.7787%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.01%)</title><rect x="18.5287%" y="373" width="0.0118%" height="15" fill="rgb(214,176,27)" fg:x="9387" fg:w="6"/><text x="18.7787%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (11 samples, 0.02%)</title><rect x="18.5287%" y="421" width="0.0217%" height="15" fill="rgb(235,185,3)" fg:x="9387" fg:w="11"/><text x="18.7787%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (11 samples, 0.02%)</title><rect x="18.5287%" y="405" width="0.0217%" height="15" fill="rgb(227,24,12)" fg:x="9387" fg:w="11"/><text x="18.7787%" y="415.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (12 samples, 0.02%)</title><rect x="18.5287%" y="469" width="0.0237%" height="15" fill="rgb(252,169,48)" fg:x="9387" fg:w="12"/><text x="18.7787%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (12 samples, 0.02%)</title><rect x="18.5287%" y="453" width="0.0237%" height="15" fill="rgb(212,65,1)" fg:x="9387" fg:w="12"/><text x="18.7787%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (12 samples, 0.02%)</title><rect x="18.5287%" y="437" width="0.0237%" height="15" fill="rgb(242,39,24)" fg:x="9387" fg:w="12"/><text x="18.7787%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (125 samples, 0.25%)</title><rect x="18.3096%" y="533" width="0.2467%" height="15" fill="rgb(249,32,23)" fg:x="9276" fg:w="125"/><text x="18.5596%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (124 samples, 0.24%)</title><rect x="18.3116%" y="517" width="0.2448%" height="15" fill="rgb(251,195,23)" fg:x="9277" fg:w="124"/><text x="18.5616%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (124 samples, 0.24%)</title><rect x="18.3116%" y="501" width="0.2448%" height="15" fill="rgb(236,174,8)" fg:x="9277" fg:w="124"/><text x="18.5616%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (124 samples, 0.24%)</title><rect x="18.3116%" y="485" width="0.2448%" height="15" fill="rgb(220,197,8)" fg:x="9277" fg:w="124"/><text x="18.5616%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (13 samples, 0.03%)</title><rect x="18.5820%" y="453" width="0.0257%" height="15" fill="rgb(240,108,37)" fg:x="9414" fg:w="13"/><text x="18.8320%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (6 samples, 0.01%)</title><rect x="18.5958%" y="437" width="0.0118%" height="15" fill="rgb(232,176,24)" fg:x="9421" fg:w="6"/><text x="18.8458%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="18.5958%" y="421" width="0.0118%" height="15" fill="rgb(243,35,29)" fg:x="9421" fg:w="6"/><text x="18.8458%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="18.6076%" y="421" width="0.0158%" height="15" fill="rgb(210,37,18)" fg:x="9427" fg:w="8"/><text x="18.8576%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="18.6076%" y="405" width="0.0158%" height="15" fill="rgb(224,184,40)" fg:x="9427" fg:w="8"/><text x="18.8576%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (11 samples, 0.02%)</title><rect x="18.6392%" y="357" width="0.0217%" height="15" fill="rgb(236,39,29)" fg:x="9443" fg:w="11"/><text x="18.8892%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (35 samples, 0.07%)</title><rect x="18.6688%" y="325" width="0.0691%" height="15" fill="rgb(232,48,39)" fg:x="9458" fg:w="35"/><text x="18.9188%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.07%)</title><rect x="18.6688%" y="309" width="0.0691%" height="15" fill="rgb(236,34,42)" fg:x="9458" fg:w="35"/><text x="18.9188%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.07%)</title><rect x="18.6688%" y="293" width="0.0691%" height="15" fill="rgb(243,106,37)" fg:x="9458" fg:w="35"/><text x="18.9188%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (58 samples, 0.11%)</title><rect x="18.6274%" y="389" width="0.1145%" height="15" fill="rgb(218,96,6)" fg:x="9437" fg:w="58"/><text x="18.8774%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (56 samples, 0.11%)</title><rect x="18.6313%" y="373" width="0.1105%" height="15" fill="rgb(235,130,12)" fg:x="9439" fg:w="56"/><text x="18.8813%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (41 samples, 0.08%)</title><rect x="18.6609%" y="357" width="0.0809%" height="15" fill="rgb(231,95,0)" fg:x="9454" fg:w="41"/><text x="18.9109%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (41 samples, 0.08%)</title><rect x="18.6609%" y="341" width="0.0809%" height="15" fill="rgb(228,12,23)" fg:x="9454" fg:w="41"/><text x="18.9109%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (62 samples, 0.12%)</title><rect x="18.6234%" y="421" width="0.1224%" height="15" fill="rgb(216,12,1)" fg:x="9435" fg:w="62"/><text x="18.8734%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (62 samples, 0.12%)</title><rect x="18.6234%" y="405" width="0.1224%" height="15" fill="rgb(219,59,3)" fg:x="9435" fg:w="62"/><text x="18.8734%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 0.01%)</title><rect x="18.7458%" y="405" width="0.0138%" height="15" fill="rgb(215,208,46)" fg:x="9497" fg:w="7"/><text x="18.9958%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 0.01%)</title><rect x="18.7458%" y="389" width="0.0138%" height="15" fill="rgb(254,224,29)" fg:x="9497" fg:w="7"/><text x="18.9958%" y="399.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (83 samples, 0.16%)</title><rect x="18.6076%" y="453" width="0.1638%" height="15" fill="rgb(232,14,29)" fg:x="9427" fg:w="83"/><text x="18.8576%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (83 samples, 0.16%)</title><rect x="18.6076%" y="437" width="0.1638%" height="15" fill="rgb(208,45,52)" fg:x="9427" fg:w="83"/><text x="18.8576%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (13 samples, 0.03%)</title><rect x="18.7458%" y="421" width="0.0257%" height="15" fill="rgb(234,191,28)" fg:x="9497" fg:w="13"/><text x="18.9958%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (6 samples, 0.01%)</title><rect x="18.7596%" y="405" width="0.0118%" height="15" fill="rgb(244,67,43)" fg:x="9504" fg:w="6"/><text x="19.0096%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (6 samples, 0.01%)</title><rect x="18.7596%" y="389" width="0.0118%" height="15" fill="rgb(236,189,24)" fg:x="9504" fg:w="6"/><text x="19.0096%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="18.7596%" y="373" width="0.0118%" height="15" fill="rgb(239,214,33)" fg:x="9504" fg:w="6"/><text x="19.0096%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (6 samples, 0.01%)</title><rect x="18.7596%" y="357" width="0.0118%" height="15" fill="rgb(226,176,41)" fg:x="9504" fg:w="6"/><text x="19.0096%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (111 samples, 0.22%)</title><rect x="18.5563%" y="533" width="0.2191%" height="15" fill="rgb(248,47,8)" fg:x="9401" fg:w="111"/><text x="18.8063%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (111 samples, 0.22%)</title><rect x="18.5563%" y="517" width="0.2191%" height="15" fill="rgb(218,81,44)" fg:x="9401" fg:w="111"/><text x="18.8063%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (111 samples, 0.22%)</title><rect x="18.5563%" y="501" width="0.2191%" height="15" fill="rgb(213,98,6)" fg:x="9401" fg:w="111"/><text x="18.8063%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (111 samples, 0.22%)</title><rect x="18.5563%" y="485" width="0.2191%" height="15" fill="rgb(222,85,22)" fg:x="9401" fg:w="111"/><text x="18.8063%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (111 samples, 0.22%)</title><rect x="18.5563%" y="469" width="0.2191%" height="15" fill="rgb(239,46,39)" fg:x="9401" fg:w="111"/><text x="18.8063%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (7 samples, 0.01%)</title><rect x="18.7794%" y="533" width="0.0138%" height="15" fill="rgb(237,12,29)" fg:x="9514" fg:w="7"/><text x="19.0294%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="18.7794%" y="517" width="0.0138%" height="15" fill="rgb(214,77,8)" fg:x="9514" fg:w="7"/><text x="19.0294%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="18.7794%" y="501" width="0.0138%" height="15" fill="rgb(217,168,37)" fg:x="9514" fg:w="7"/><text x="19.0294%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="18.7794%" y="485" width="0.0138%" height="15" fill="rgb(221,217,23)" fg:x="9514" fg:w="7"/><text x="19.0294%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (376 samples, 0.74%)</title><rect x="18.0648%" y="549" width="0.7422%" height="15" fill="rgb(243,229,36)" fg:x="9152" fg:w="376"/><text x="18.3148%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (408 samples, 0.81%)</title><rect x="18.0096%" y="581" width="0.8053%" height="15" fill="rgb(251,163,40)" fg:x="9124" fg:w="408"/><text x="18.2596%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (392 samples, 0.77%)</title><rect x="18.0411%" y="565" width="0.7738%" height="15" fill="rgb(237,222,12)" fg:x="9140" fg:w="392"/><text x="18.2911%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (414 samples, 0.82%)</title><rect x="18.0076%" y="613" width="0.8172%" height="15" fill="rgb(248,132,6)" fg:x="9123" fg:w="414"/><text x="18.2576%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (414 samples, 0.82%)</title><rect x="18.0076%" y="597" width="0.8172%" height="15" fill="rgb(227,167,50)" fg:x="9123" fg:w="414"/><text x="18.2576%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (418 samples, 0.83%)</title><rect x="18.0076%" y="629" width="0.8251%" height="15" fill="rgb(242,84,37)" fg:x="9123" fg:w="418"/><text x="18.2576%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (477 samples, 0.94%)</title><rect x="17.8931%" y="709" width="0.9415%" height="15" fill="rgb(212,4,50)" fg:x="9065" fg:w="477"/><text x="18.1431%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (477 samples, 0.94%)</title><rect x="17.8931%" y="693" width="0.9415%" height="15" fill="rgb(230,228,32)" fg:x="9065" fg:w="477"/><text x="18.1431%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (475 samples, 0.94%)</title><rect x="17.8970%" y="677" width="0.9376%" height="15" fill="rgb(248,217,23)" fg:x="9067" fg:w="475"/><text x="18.1470%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (470 samples, 0.93%)</title><rect x="17.9069%" y="661" width="0.9277%" height="15" fill="rgb(238,197,32)" fg:x="9072" fg:w="470"/><text x="18.1569%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (470 samples, 0.93%)</title><rect x="17.9069%" y="645" width="0.9277%" height="15" fill="rgb(236,106,1)" fg:x="9072" fg:w="470"/><text x="18.1569%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (20 samples, 0.04%)</title><rect x="18.8366%" y="613" width="0.0395%" height="15" fill="rgb(219,228,13)" fg:x="9543" fg:w="20"/><text x="19.0866%" y="623.50"></text></g><g><title>syscall (19 samples, 0.04%)</title><rect x="18.8386%" y="597" width="0.0375%" height="15" fill="rgb(238,30,35)" fg:x="9544" fg:w="19"/><text x="19.0886%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (23 samples, 0.05%)</title><rect x="18.8366%" y="645" width="0.0454%" height="15" fill="rgb(236,70,23)" fg:x="9543" fg:w="23"/><text x="19.0866%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (23 samples, 0.05%)</title><rect x="18.8366%" y="629" width="0.0454%" height="15" fill="rgb(249,104,48)" fg:x="9543" fg:w="23"/><text x="19.0866%" y="639.50"></text></g><g><title>__GI___clone (503 samples, 0.99%)</title><rect x="17.8911%" y="997" width="0.9929%" height="15" fill="rgb(254,117,50)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="1007.50"></text></g><g><title>start_thread (503 samples, 0.99%)</title><rect x="17.8911%" y="981" width="0.9929%" height="15" fill="rgb(223,152,4)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (503 samples, 0.99%)</title><rect x="17.8911%" y="965" width="0.9929%" height="15" fill="rgb(245,6,2)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (503 samples, 0.99%)</title><rect x="17.8911%" y="949" width="0.9929%" height="15" fill="rgb(249,150,24)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (503 samples, 0.99%)</title><rect x="17.8911%" y="933" width="0.9929%" height="15" fill="rgb(228,185,42)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (503 samples, 0.99%)</title><rect x="17.8911%" y="917" width="0.9929%" height="15" fill="rgb(226,39,33)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (503 samples, 0.99%)</title><rect x="17.8911%" y="901" width="0.9929%" height="15" fill="rgb(221,166,19)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="911.50"></text></g><g><title>std::panic::catch_unwind (503 samples, 0.99%)</title><rect x="17.8911%" y="885" width="0.9929%" height="15" fill="rgb(209,109,2)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="895.50"></text></g><g><title>std::panicking::try (503 samples, 0.99%)</title><rect x="17.8911%" y="869" width="0.9929%" height="15" fill="rgb(252,216,26)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="879.50"></text></g><g><title>std::panicking::try::do_call (503 samples, 0.99%)</title><rect x="17.8911%" y="853" width="0.9929%" height="15" fill="rgb(227,173,36)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (503 samples, 0.99%)</title><rect x="17.8911%" y="837" width="0.9929%" height="15" fill="rgb(209,90,7)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (503 samples, 0.99%)</title><rect x="17.8911%" y="821" width="0.9929%" height="15" fill="rgb(250,194,11)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (503 samples, 0.99%)</title><rect x="17.8911%" y="805" width="0.9929%" height="15" fill="rgb(220,72,50)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (503 samples, 0.99%)</title><rect x="17.8911%" y="789" width="0.9929%" height="15" fill="rgb(222,106,48)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="799.50"></text></g><g><title>futures_lite::future::block_on (503 samples, 0.99%)</title><rect x="17.8911%" y="773" width="0.9929%" height="15" fill="rgb(216,220,45)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (503 samples, 0.99%)</title><rect x="17.8911%" y="757" width="0.9929%" height="15" fill="rgb(234,112,18)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (503 samples, 0.99%)</title><rect x="17.8911%" y="741" width="0.9929%" height="15" fill="rgb(206,179,9)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (503 samples, 0.99%)</title><rect x="17.8911%" y="725" width="0.9929%" height="15" fill="rgb(215,115,40)" fg:x="9064" fg:w="503"/><text x="18.1411%" y="735.50"></text></g><g><title>parking::Parker::park (25 samples, 0.05%)</title><rect x="18.8346%" y="709" width="0.0493%" height="15" fill="rgb(222,69,34)" fg:x="9542" fg:w="25"/><text x="19.0846%" y="719.50"></text></g><g><title>parking::Inner::park (25 samples, 0.05%)</title><rect x="18.8346%" y="693" width="0.0493%" height="15" fill="rgb(209,161,10)" fg:x="9542" fg:w="25"/><text x="19.0846%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (24 samples, 0.05%)</title><rect x="18.8366%" y="677" width="0.0474%" height="15" fill="rgb(217,6,38)" fg:x="9543" fg:w="24"/><text x="19.0866%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (24 samples, 0.05%)</title><rect x="18.8366%" y="661" width="0.0474%" height="15" fill="rgb(229,229,48)" fg:x="9543" fg:w="24"/><text x="19.0866%" y="671.50"></text></g><g><title>TaskPool_(7) (622 samples, 1.23%)</title><rect x="17.6661%" y="1013" width="1.2277%" height="15" fill="rgb(225,21,28)" fg:x="8950" fg:w="622"/><text x="17.9161%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (13 samples, 0.03%)</title><rect x="18.8958%" y="981" width="0.0257%" height="15" fill="rgb(206,33,13)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (13 samples, 0.03%)</title><rect x="18.8958%" y="965" width="0.0257%" height="15" fill="rgb(242,178,17)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (13 samples, 0.03%)</title><rect x="18.8958%" y="949" width="0.0257%" height="15" fill="rgb(220,162,5)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (13 samples, 0.03%)</title><rect x="18.8958%" y="933" width="0.0257%" height="15" fill="rgb(210,33,43)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (13 samples, 0.03%)</title><rect x="18.8958%" y="917" width="0.0257%" height="15" fill="rgb(216,116,54)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.03%)</title><rect x="18.8958%" y="901" width="0.0257%" height="15" fill="rgb(249,92,24)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="18.8958%" y="885" width="0.0257%" height="15" fill="rgb(231,189,14)" fg:x="9573" fg:w="13"/><text x="19.1458%" y="895.50"></text></g><g><title>[[heap]] (32 samples, 0.06%)</title><rect x="18.8958%" y="997" width="0.0632%" height="15" fill="rgb(230,8,41)" fg:x="9573" fg:w="32"/><text x="19.1458%" y="1007.50"></text></g><g><title>[anon] (29 samples, 0.06%)</title><rect x="18.9590%" y="997" width="0.0572%" height="15" fill="rgb(249,7,27)" fg:x="9605" fg:w="29"/><text x="19.2090%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6 samples, 0.01%)</title><rect x="19.0202%" y="981" width="0.0118%" height="15" fill="rgb(232,86,5)" fg:x="9636" fg:w="6"/><text x="19.2702%" y="991.50"></text></g><g><title>[unknown] (45 samples, 0.09%)</title><rect x="19.0162%" y="997" width="0.0888%" height="15" fill="rgb(224,175,18)" fg:x="9634" fg:w="45"/><text x="19.2662%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (26 samples, 0.05%)</title><rect x="19.1149%" y="501" width="0.0513%" height="15" fill="rgb(220,129,12)" fg:x="9684" fg:w="26"/><text x="19.3649%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (19 samples, 0.04%)</title><rect x="19.1287%" y="485" width="0.0375%" height="15" fill="rgb(210,19,36)" fg:x="9691" fg:w="19"/><text x="19.3787%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.04%)</title><rect x="19.1307%" y="469" width="0.0355%" height="15" fill="rgb(219,96,14)" fg:x="9692" fg:w="18"/><text x="19.3807%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.04%)</title><rect x="19.1307%" y="453" width="0.0355%" height="15" fill="rgb(249,106,1)" fg:x="9692" fg:w="18"/><text x="19.3807%" y="463.50"></text></g><g><title>async_executor::steal (27 samples, 0.05%)</title><rect x="19.1149%" y="517" width="0.0533%" height="15" fill="rgb(249,155,20)" fg:x="9684" fg:w="27"/><text x="19.3649%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="19.1722%" y="501" width="0.0118%" height="15" fill="rgb(244,168,9)" fg:x="9713" fg:w="6"/><text x="19.4222%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.03%)</title><rect x="19.1682%" y="517" width="0.0296%" height="15" fill="rgb(216,23,50)" fg:x="9711" fg:w="15"/><text x="19.4182%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="19.1840%" y="501" width="0.0138%" height="15" fill="rgb(224,219,20)" fg:x="9719" fg:w="7"/><text x="19.4340%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (48 samples, 0.09%)</title><rect x="19.1129%" y="533" width="0.0947%" height="15" fill="rgb(222,156,15)" fg:x="9683" fg:w="48"/><text x="19.3629%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.11%)</title><rect x="19.1110%" y="597" width="0.1125%" height="15" fill="rgb(231,97,17)" fg:x="9682" fg:w="57"/><text x="19.3610%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (57 samples, 0.11%)</title><rect x="19.1110%" y="581" width="0.1125%" height="15" fill="rgb(218,70,48)" fg:x="9682" fg:w="57"/><text x="19.3610%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (57 samples, 0.11%)</title><rect x="19.1110%" y="565" width="0.1125%" height="15" fill="rgb(212,196,52)" fg:x="9682" fg:w="57"/><text x="19.3610%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (57 samples, 0.11%)</title><rect x="19.1110%" y="549" width="0.1125%" height="15" fill="rgb(243,203,18)" fg:x="9682" fg:w="57"/><text x="19.3610%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.11%)</title><rect x="19.1110%" y="629" width="0.1145%" height="15" fill="rgb(252,125,41)" fg:x="9682" fg:w="58"/><text x="19.3610%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (58 samples, 0.11%)</title><rect x="19.1110%" y="613" width="0.1145%" height="15" fill="rgb(223,180,33)" fg:x="9682" fg:w="58"/><text x="19.3610%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="19.2393%" y="517" width="0.0138%" height="15" fill="rgb(254,159,46)" fg:x="9747" fg:w="7"/><text x="19.4893%" y="527.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (7 samples, 0.01%)</title><rect x="19.2393%" y="501" width="0.0138%" height="15" fill="rgb(254,38,10)" fg:x="9747" fg:w="7"/><text x="19.4893%" y="511.50"></text></g><g><title>event_listener::Event::notify (6 samples, 0.01%)</title><rect x="19.2412%" y="485" width="0.0118%" height="15" fill="rgb(208,217,32)" fg:x="9748" fg:w="6"/><text x="19.4912%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="19.2373%" y="549" width="0.0197%" height="15" fill="rgb(221,120,13)" fg:x="9746" fg:w="10"/><text x="19.4873%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (10 samples, 0.02%)</title><rect x="19.2373%" y="533" width="0.0197%" height="15" fill="rgb(246,54,52)" fg:x="9746" fg:w="10"/><text x="19.4873%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (19 samples, 0.04%)</title><rect x="19.2274%" y="565" width="0.0375%" height="15" fill="rgb(242,34,25)" fg:x="9741" fg:w="19"/><text x="19.4774%" y="575.50"></text></g><g><title>event_listener::List::notify (7 samples, 0.01%)</title><rect x="19.2827%" y="501" width="0.0138%" height="15" fill="rgb(247,209,9)" fg:x="9769" fg:w="7"/><text x="19.5327%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (7 samples, 0.01%)</title><rect x="19.2827%" y="485" width="0.0138%" height="15" fill="rgb(228,71,26)" fg:x="9769" fg:w="7"/><text x="19.5327%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (7 samples, 0.01%)</title><rect x="19.2827%" y="469" width="0.0138%" height="15" fill="rgb(222,145,49)" fg:x="9769" fg:w="7"/><text x="19.5327%" y="479.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="19.2728%" y="549" width="0.0257%" height="15" fill="rgb(218,121,17)" fg:x="9764" fg:w="13"/><text x="19.5228%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (12 samples, 0.02%)</title><rect x="19.2748%" y="533" width="0.0237%" height="15" fill="rgb(244,50,7)" fg:x="9765" fg:w="12"/><text x="19.5248%" y="543.50"></text></g><g><title>event_listener::Event::notify (9 samples, 0.02%)</title><rect x="19.2807%" y="517" width="0.0178%" height="15" fill="rgb(246,229,37)" fg:x="9768" fg:w="9"/><text x="19.5307%" y="527.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="19.3024%" y="453" width="0.0296%" height="15" fill="rgb(225,18,5)" fg:x="9779" fg:w="15"/><text x="19.5524%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="19.3044%" y="437" width="0.0276%" height="15" fill="rgb(213,204,8)" fg:x="9780" fg:w="14"/><text x="19.5544%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.03%)</title><rect x="19.3044%" y="421" width="0.0276%" height="15" fill="rgb(238,103,6)" fg:x="9780" fg:w="14"/><text x="19.5544%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.03%)</title><rect x="19.3044%" y="405" width="0.0276%" height="15" fill="rgb(222,25,35)" fg:x="9780" fg:w="14"/><text x="19.5544%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (22 samples, 0.04%)</title><rect x="19.3005%" y="533" width="0.0434%" height="15" fill="rgb(213,203,35)" fg:x="9778" fg:w="22"/><text x="19.5505%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (22 samples, 0.04%)</title><rect x="19.3005%" y="517" width="0.0434%" height="15" fill="rgb(221,79,53)" fg:x="9778" fg:w="22"/><text x="19.5505%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.04%)</title><rect x="19.3005%" y="501" width="0.0434%" height="15" fill="rgb(243,200,35)" fg:x="9778" fg:w="22"/><text x="19.5505%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.04%)</title><rect x="19.3005%" y="485" width="0.0434%" height="15" fill="rgb(248,60,25)" fg:x="9778" fg:w="22"/><text x="19.5505%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (22 samples, 0.04%)</title><rect x="19.3005%" y="469" width="0.0434%" height="15" fill="rgb(227,53,46)" fg:x="9778" fg:w="22"/><text x="19.5505%" y="479.50"></text></g><g><title>bevy_pbr::render::light::queue_shadow_view_bind_group (7 samples, 0.01%)</title><rect x="19.3478%" y="469" width="0.0138%" height="15" fill="rgb(216,120,32)" fg:x="9802" fg:w="7"/><text x="19.5978%" y="479.50"></text></g><g><title>wgpu_core::device::queue::StagingData&lt;A&gt;::write (6 samples, 0.01%)</title><rect x="19.3774%" y="405" width="0.0118%" height="15" fill="rgb(220,134,1)" fg:x="9817" fg:w="6"/><text x="19.6274%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="19.3695%" y="437" width="0.0257%" height="15" fill="rgb(237,168,5)" fg:x="9813" fg:w="13"/><text x="19.6195%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="19.3695%" y="421" width="0.0257%" height="15" fill="rgb(231,100,33)" fg:x="9813" fg:w="13"/><text x="19.6195%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (26 samples, 0.05%)</title><rect x="19.3617%" y="469" width="0.0513%" height="15" fill="rgb(236,177,47)" fg:x="9809" fg:w="26"/><text x="19.6117%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (22 samples, 0.04%)</title><rect x="19.3695%" y="453" width="0.0434%" height="15" fill="rgb(235,7,49)" fg:x="9813" fg:w="22"/><text x="19.6195%" y="463.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (9 samples, 0.02%)</title><rect x="19.3952%" y="437" width="0.0178%" height="15" fill="rgb(232,119,22)" fg:x="9826" fg:w="9"/><text x="19.6452%" y="447.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (9 samples, 0.02%)</title><rect x="19.3952%" y="421" width="0.0178%" height="15" fill="rgb(254,73,53)" fg:x="9826" fg:w="9"/><text x="19.6452%" y="431.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (8 samples, 0.02%)</title><rect x="19.3972%" y="405" width="0.0158%" height="15" fill="rgb(251,35,20)" fg:x="9827" fg:w="8"/><text x="19.6472%" y="415.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (8 samples, 0.02%)</title><rect x="19.3972%" y="389" width="0.0158%" height="15" fill="rgb(241,119,20)" fg:x="9827" fg:w="8"/><text x="19.6472%" y="399.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (56 samples, 0.11%)</title><rect x="19.4149%" y="437" width="0.1105%" height="15" fill="rgb(207,102,14)" fg:x="9836" fg:w="56"/><text x="19.6649%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (47 samples, 0.09%)</title><rect x="19.4327%" y="421" width="0.0928%" height="15" fill="rgb(248,201,50)" fg:x="9845" fg:w="47"/><text x="19.6827%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.09%)</title><rect x="19.4327%" y="405" width="0.0928%" height="15" fill="rgb(222,185,44)" fg:x="9845" fg:w="47"/><text x="19.6827%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.08%)</title><rect x="19.4406%" y="389" width="0.0849%" height="15" fill="rgb(218,107,18)" fg:x="9849" fg:w="43"/><text x="19.6906%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.02%)</title><rect x="19.5314%" y="405" width="0.0158%" height="15" fill="rgb(237,177,39)" fg:x="9895" fg:w="8"/><text x="19.7814%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="19.5314%" y="389" width="0.0158%" height="15" fill="rgb(246,69,6)" fg:x="9895" fg:w="8"/><text x="19.7814%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="19.5314%" y="373" width="0.0158%" height="15" fill="rgb(234,208,37)" fg:x="9895" fg:w="8"/><text x="19.7814%" y="383.50"></text></g><g><title>core::intrinsics::write_bytes (7 samples, 0.01%)</title><rect x="19.5492%" y="357" width="0.0138%" height="15" fill="rgb(225,4,6)" fg:x="9904" fg:w="7"/><text x="19.7992%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="19.5492%" y="341" width="0.0138%" height="15" fill="rgb(233,45,0)" fg:x="9904" fg:w="7"/><text x="19.7992%" y="351.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (6 samples, 0.01%)</title><rect x="19.5650%" y="357" width="0.0118%" height="15" fill="rgb(226,136,5)" fg:x="9912" fg:w="6"/><text x="19.8150%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.01%)</title><rect x="19.5650%" y="341" width="0.0118%" height="15" fill="rgb(211,91,47)" fg:x="9912" fg:w="6"/><text x="19.8150%" y="351.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (36 samples, 0.07%)</title><rect x="19.5255%" y="437" width="0.0711%" height="15" fill="rgb(242,88,51)" fg:x="9892" fg:w="36"/><text x="19.7755%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (36 samples, 0.07%)</title><rect x="19.5255%" y="421" width="0.0711%" height="15" fill="rgb(230,91,28)" fg:x="9892" fg:w="36"/><text x="19.7755%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (25 samples, 0.05%)</title><rect x="19.5472%" y="405" width="0.0493%" height="15" fill="rgb(254,186,29)" fg:x="9903" fg:w="25"/><text x="19.7972%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (24 samples, 0.05%)</title><rect x="19.5492%" y="389" width="0.0474%" height="15" fill="rgb(238,6,4)" fg:x="9904" fg:w="24"/><text x="19.7992%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (24 samples, 0.05%)</title><rect x="19.5492%" y="373" width="0.0474%" height="15" fill="rgb(221,151,16)" fg:x="9904" fg:w="24"/><text x="19.7992%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (94 samples, 0.19%)</title><rect x="19.4130%" y="453" width="0.1855%" height="15" fill="rgb(251,143,52)" fg:x="9835" fg:w="94"/><text x="19.6630%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (132 samples, 0.26%)</title><rect x="19.3439%" y="533" width="0.2606%" height="15" fill="rgb(206,90,15)" fg:x="9800" fg:w="132"/><text x="19.5939%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (130 samples, 0.26%)</title><rect x="19.3478%" y="517" width="0.2566%" height="15" fill="rgb(218,35,8)" fg:x="9802" fg:w="130"/><text x="19.5978%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (130 samples, 0.26%)</title><rect x="19.3478%" y="501" width="0.2566%" height="15" fill="rgb(239,215,6)" fg:x="9802" fg:w="130"/><text x="19.5978%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (130 samples, 0.26%)</title><rect x="19.3478%" y="485" width="0.2566%" height="15" fill="rgb(245,116,39)" fg:x="9802" fg:w="130"/><text x="19.5978%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (97 samples, 0.19%)</title><rect x="19.4130%" y="469" width="0.1915%" height="15" fill="rgb(242,65,28)" fg:x="9835" fg:w="97"/><text x="19.6630%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="19.6222%" y="421" width="0.0197%" height="15" fill="rgb(252,132,53)" fg:x="9941" fg:w="10"/><text x="19.8722%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (10 samples, 0.02%)</title><rect x="19.6222%" y="405" width="0.0197%" height="15" fill="rgb(224,159,50)" fg:x="9941" fg:w="10"/><text x="19.8722%" y="415.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="19.6992%" y="325" width="0.0118%" height="15" fill="rgb(224,93,4)" fg:x="9980" fg:w="6"/><text x="19.9492%" y="335.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="19.6992%" y="309" width="0.0118%" height="15" fill="rgb(208,81,34)" fg:x="9980" fg:w="6"/><text x="19.9492%" y="319.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="19.6992%" y="293" width="0.0118%" height="15" fill="rgb(233,92,54)" fg:x="9980" fg:w="6"/><text x="19.9492%" y="303.50"></text></g><g><title>core::mem::replace (13 samples, 0.03%)</title><rect x="19.7110%" y="325" width="0.0257%" height="15" fill="rgb(237,21,14)" fg:x="9986" fg:w="13"/><text x="19.9610%" y="335.50"></text></g><g><title>core::ptr::read (13 samples, 0.03%)</title><rect x="19.7110%" y="309" width="0.0257%" height="15" fill="rgb(249,128,51)" fg:x="9986" fg:w="13"/><text x="19.9610%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (46 samples, 0.09%)</title><rect x="19.7367%" y="325" width="0.0908%" height="15" fill="rgb(223,129,24)" fg:x="9999" fg:w="46"/><text x="19.9867%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.09%)</title><rect x="19.7367%" y="309" width="0.0908%" height="15" fill="rgb(231,168,25)" fg:x="9999" fg:w="46"/><text x="19.9867%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (41 samples, 0.08%)</title><rect x="19.7466%" y="293" width="0.0809%" height="15" fill="rgb(224,39,20)" fg:x="10004" fg:w="41"/><text x="19.9966%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (110 samples, 0.22%)</title><rect x="19.6222%" y="453" width="0.2171%" height="15" fill="rgb(225,152,53)" fg:x="9941" fg:w="110"/><text x="19.8722%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (110 samples, 0.22%)</title><rect x="19.6222%" y="437" width="0.2171%" height="15" fill="rgb(252,17,24)" fg:x="9941" fg:w="110"/><text x="19.8722%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (100 samples, 0.20%)</title><rect x="19.6419%" y="421" width="0.1974%" height="15" fill="rgb(250,114,30)" fg:x="9951" fg:w="100"/><text x="19.8919%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (100 samples, 0.20%)</title><rect x="19.6419%" y="405" width="0.1974%" height="15" fill="rgb(229,5,4)" fg:x="9951" fg:w="100"/><text x="19.8919%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (100 samples, 0.20%)</title><rect x="19.6419%" y="389" width="0.1974%" height="15" fill="rgb(225,176,49)" fg:x="9951" fg:w="100"/><text x="19.8919%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (97 samples, 0.19%)</title><rect x="19.6479%" y="373" width="0.1915%" height="15" fill="rgb(224,221,49)" fg:x="9954" fg:w="97"/><text x="19.8979%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (88 samples, 0.17%)</title><rect x="19.6656%" y="357" width="0.1737%" height="15" fill="rgb(253,169,27)" fg:x="9963" fg:w="88"/><text x="19.9156%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (88 samples, 0.17%)</title><rect x="19.6656%" y="341" width="0.1737%" height="15" fill="rgb(211,206,16)" fg:x="9963" fg:w="88"/><text x="19.9156%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (6 samples, 0.01%)</title><rect x="19.8275%" y="325" width="0.0118%" height="15" fill="rgb(244,87,35)" fg:x="10045" fg:w="6"/><text x="20.0775%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (6 samples, 0.01%)</title><rect x="19.8275%" y="309" width="0.0118%" height="15" fill="rgb(246,28,10)" fg:x="10045" fg:w="6"/><text x="20.0775%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="19.8393%" y="389" width="0.0118%" height="15" fill="rgb(229,12,44)" fg:x="10051" fg:w="6"/><text x="20.0893%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.01%)</title><rect x="19.8393%" y="373" width="0.0118%" height="15" fill="rgb(210,145,37)" fg:x="10051" fg:w="6"/><text x="20.0893%" y="383.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (118 samples, 0.23%)</title><rect x="19.6222%" y="469" width="0.2329%" height="15" fill="rgb(227,112,52)" fg:x="9941" fg:w="118"/><text x="19.8722%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.02%)</title><rect x="19.8393%" y="453" width="0.0158%" height="15" fill="rgb(238,155,34)" fg:x="10051" fg:w="8"/><text x="20.0893%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="19.8393%" y="437" width="0.0158%" height="15" fill="rgb(239,226,36)" fg:x="10051" fg:w="8"/><text x="20.0893%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="19.8393%" y="421" width="0.0158%" height="15" fill="rgb(230,16,23)" fg:x="10051" fg:w="8"/><text x="20.0893%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="19.8393%" y="405" width="0.0158%" height="15" fill="rgb(236,171,36)" fg:x="10051" fg:w="8"/><text x="20.0893%" y="415.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (8 samples, 0.02%)</title><rect x="19.8610%" y="389" width="0.0158%" height="15" fill="rgb(221,22,14)" fg:x="10062" fg:w="8"/><text x="20.1110%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (8 samples, 0.02%)</title><rect x="19.8610%" y="373" width="0.0158%" height="15" fill="rgb(242,43,11)" fg:x="10062" fg:w="8"/><text x="20.1110%" y="383.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (6 samples, 0.01%)</title><rect x="19.8788%" y="389" width="0.0118%" height="15" fill="rgb(232,69,23)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="399.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (6 samples, 0.01%)</title><rect x="19.8788%" y="373" width="0.0118%" height="15" fill="rgb(216,180,54)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (6 samples, 0.01%)</title><rect x="19.8788%" y="357" width="0.0118%" height="15" fill="rgb(216,5,24)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="367.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (6 samples, 0.01%)</title><rect x="19.8788%" y="341" width="0.0118%" height="15" fill="rgb(225,89,9)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="351.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (6 samples, 0.01%)</title><rect x="19.8788%" y="325" width="0.0118%" height="15" fill="rgb(243,75,33)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.01%)</title><rect x="19.8788%" y="309" width="0.0118%" height="15" fill="rgb(247,141,45)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="319.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.01%)</title><rect x="19.8788%" y="293" width="0.0118%" height="15" fill="rgb(232,177,36)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="19.8788%" y="277" width="0.0118%" height="15" fill="rgb(219,125,36)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="287.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="19.8788%" y="261" width="0.0118%" height="15" fill="rgb(227,94,9)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="271.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="19.8788%" y="245" width="0.0118%" height="15" fill="rgb(240,34,52)" fg:x="10071" fg:w="6"/><text x="20.1288%" y="255.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (20 samples, 0.04%)</title><rect x="19.8551%" y="453" width="0.0395%" height="15" fill="rgb(216,45,12)" fg:x="10059" fg:w="20"/><text x="20.1051%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (20 samples, 0.04%)</title><rect x="19.8551%" y="437" width="0.0395%" height="15" fill="rgb(246,21,19)" fg:x="10059" fg:w="20"/><text x="20.1051%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (20 samples, 0.04%)</title><rect x="19.8551%" y="421" width="0.0395%" height="15" fill="rgb(213,98,42)" fg:x="10059" fg:w="20"/><text x="20.1051%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (20 samples, 0.04%)</title><rect x="19.8551%" y="405" width="0.0395%" height="15" fill="rgb(250,136,47)" fg:x="10059" fg:w="20"/><text x="20.1051%" y="415.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (21 samples, 0.04%)</title><rect x="19.8551%" y="469" width="0.0415%" height="15" fill="rgb(251,124,27)" fg:x="10059" fg:w="21"/><text x="20.1051%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (151 samples, 0.30%)</title><rect x="19.6044%" y="533" width="0.2981%" height="15" fill="rgb(229,180,14)" fg:x="9932" fg:w="151"/><text x="19.8544%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (148 samples, 0.29%)</title><rect x="19.6104%" y="517" width="0.2921%" height="15" fill="rgb(245,216,25)" fg:x="9935" fg:w="148"/><text x="19.8604%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (148 samples, 0.29%)</title><rect x="19.6104%" y="501" width="0.2921%" height="15" fill="rgb(251,43,5)" fg:x="9935" fg:w="148"/><text x="19.8604%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (148 samples, 0.29%)</title><rect x="19.6104%" y="485" width="0.2921%" height="15" fill="rgb(250,128,24)" fg:x="9935" fg:w="148"/><text x="19.8604%" y="495.50"></text></g><g><title>bevy_pbr::light::VisiblePointLights::len (6 samples, 0.01%)</title><rect x="19.9203%" y="453" width="0.0118%" height="15" fill="rgb(217,117,27)" fg:x="10092" fg:w="6"/><text x="20.1703%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.01%)</title><rect x="19.9439%" y="357" width="0.0138%" height="15" fill="rgb(245,147,4)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.01%)</title><rect x="19.9439%" y="341" width="0.0138%" height="15" fill="rgb(242,201,35)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="351.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.01%)</title><rect x="19.9439%" y="325" width="0.0138%" height="15" fill="rgb(218,181,1)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="335.50"></text></g><g><title>__realloc (7 samples, 0.01%)</title><rect x="19.9439%" y="309" width="0.0138%" height="15" fill="rgb(222,6,29)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="319.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="19.9439%" y="293" width="0.0138%" height="15" fill="rgb(208,186,3)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="303.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="19.9439%" y="277" width="0.0138%" height="15" fill="rgb(216,36,26)" fg:x="10104" fg:w="7"/><text x="20.1939%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.02%)</title><rect x="19.9420%" y="405" width="0.0178%" height="15" fill="rgb(248,201,23)" fg:x="10103" fg:w="9"/><text x="20.1920%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.02%)</title><rect x="19.9420%" y="389" width="0.0178%" height="15" fill="rgb(251,170,31)" fg:x="10103" fg:w="9"/><text x="20.1920%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="19.9439%" y="373" width="0.0158%" height="15" fill="rgb(207,110,25)" fg:x="10104" fg:w="8"/><text x="20.1939%" y="383.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (21 samples, 0.04%)</title><rect x="19.9321%" y="453" width="0.0415%" height="15" fill="rgb(250,54,15)" fg:x="10098" fg:w="21"/><text x="20.1821%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (17 samples, 0.03%)</title><rect x="19.9400%" y="437" width="0.0336%" height="15" fill="rgb(227,68,33)" fg:x="10102" fg:w="17"/><text x="20.1900%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.03%)</title><rect x="19.9400%" y="421" width="0.0336%" height="15" fill="rgb(238,34,41)" fg:x="10102" fg:w="17"/><text x="20.1900%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="19.9775%" y="421" width="0.0257%" height="15" fill="rgb(220,11,15)" fg:x="10121" fg:w="13"/><text x="20.2275%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.03%)</title><rect x="19.9775%" y="405" width="0.0257%" height="15" fill="rgb(246,111,35)" fg:x="10121" fg:w="13"/><text x="20.2275%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (11 samples, 0.02%)</title><rect x="20.0347%" y="357" width="0.0217%" height="15" fill="rgb(209,88,53)" fg:x="10150" fg:w="11"/><text x="20.2847%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (29 samples, 0.06%)</title><rect x="20.0683%" y="325" width="0.0572%" height="15" fill="rgb(231,185,47)" fg:x="10167" fg:w="29"/><text x="20.3183%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.06%)</title><rect x="20.0683%" y="309" width="0.0572%" height="15" fill="rgb(233,154,1)" fg:x="10167" fg:w="29"/><text x="20.3183%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.06%)</title><rect x="20.0683%" y="293" width="0.0572%" height="15" fill="rgb(225,15,46)" fg:x="10167" fg:w="29"/><text x="20.3183%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (63 samples, 0.12%)</title><rect x="20.0071%" y="389" width="0.1244%" height="15" fill="rgb(211,135,41)" fg:x="10136" fg:w="63"/><text x="20.2571%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (59 samples, 0.12%)</title><rect x="20.0150%" y="373" width="0.1165%" height="15" fill="rgb(208,54,0)" fg:x="10140" fg:w="59"/><text x="20.2650%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (38 samples, 0.08%)</title><rect x="20.0565%" y="357" width="0.0750%" height="15" fill="rgb(244,136,14)" fg:x="10161" fg:w="38"/><text x="20.3065%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (38 samples, 0.08%)</title><rect x="20.0565%" y="341" width="0.0750%" height="15" fill="rgb(241,56,14)" fg:x="10161" fg:w="38"/><text x="20.3065%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (66 samples, 0.13%)</title><rect x="20.0032%" y="421" width="0.1303%" height="15" fill="rgb(205,80,24)" fg:x="10134" fg:w="66"/><text x="20.2532%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (66 samples, 0.13%)</title><rect x="20.0032%" y="405" width="0.1303%" height="15" fill="rgb(220,57,4)" fg:x="10134" fg:w="66"/><text x="20.2532%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (130 samples, 0.26%)</title><rect x="19.9025%" y="533" width="0.2566%" height="15" fill="rgb(226,193,50)" fg:x="10083" fg:w="130"/><text x="20.1525%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (130 samples, 0.26%)</title><rect x="19.9025%" y="517" width="0.2566%" height="15" fill="rgb(231,168,22)" fg:x="10083" fg:w="130"/><text x="20.1525%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (130 samples, 0.26%)</title><rect x="19.9025%" y="501" width="0.2566%" height="15" fill="rgb(254,215,14)" fg:x="10083" fg:w="130"/><text x="20.1525%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (130 samples, 0.26%)</title><rect x="19.9025%" y="485" width="0.2566%" height="15" fill="rgb(211,115,16)" fg:x="10083" fg:w="130"/><text x="20.1525%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (130 samples, 0.26%)</title><rect x="19.9025%" y="469" width="0.2566%" height="15" fill="rgb(236,210,16)" fg:x="10083" fg:w="130"/><text x="20.1525%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (94 samples, 0.19%)</title><rect x="19.9736%" y="453" width="0.1855%" height="15" fill="rgb(221,94,12)" fg:x="10119" fg:w="94"/><text x="20.2236%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (94 samples, 0.19%)</title><rect x="19.9736%" y="437" width="0.1855%" height="15" fill="rgb(235,218,49)" fg:x="10119" fg:w="94"/><text x="20.2236%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (13 samples, 0.03%)</title><rect x="20.1334%" y="421" width="0.0257%" height="15" fill="rgb(217,114,14)" fg:x="10200" fg:w="13"/><text x="20.3834%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (9 samples, 0.02%)</title><rect x="20.1413%" y="405" width="0.0178%" height="15" fill="rgb(216,145,22)" fg:x="10204" fg:w="9"/><text x="20.3913%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (7 samples, 0.01%)</title><rect x="20.1453%" y="389" width="0.0138%" height="15" fill="rgb(217,112,39)" fg:x="10206" fg:w="7"/><text x="20.3953%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (7 samples, 0.01%)</title><rect x="20.1453%" y="373" width="0.0138%" height="15" fill="rgb(225,85,32)" fg:x="10206" fg:w="7"/><text x="20.3953%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (7 samples, 0.01%)</title><rect x="20.1453%" y="357" width="0.0138%" height="15" fill="rgb(245,209,47)" fg:x="10206" fg:w="7"/><text x="20.3953%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (10 samples, 0.02%)</title><rect x="20.1630%" y="533" width="0.0197%" height="15" fill="rgb(218,220,15)" fg:x="10215" fg:w="10"/><text x="20.4130%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (10 samples, 0.02%)</title><rect x="20.1630%" y="517" width="0.0197%" height="15" fill="rgb(222,202,31)" fg:x="10215" fg:w="10"/><text x="20.4130%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="20.1630%" y="501" width="0.0197%" height="15" fill="rgb(243,203,4)" fg:x="10215" fg:w="10"/><text x="20.4130%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.02%)</title><rect x="20.1630%" y="485" width="0.0197%" height="15" fill="rgb(237,92,17)" fg:x="10215" fg:w="10"/><text x="20.4130%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (8 samples, 0.02%)</title><rect x="20.1670%" y="469" width="0.0158%" height="15" fill="rgb(231,119,7)" fg:x="10217" fg:w="8"/><text x="20.4170%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (451 samples, 0.89%)</title><rect x="19.2985%" y="549" width="0.8902%" height="15" fill="rgb(237,82,41)" fg:x="9777" fg:w="451"/><text x="19.5485%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (493 samples, 0.97%)</title><rect x="19.2274%" y="581" width="0.9731%" height="15" fill="rgb(226,81,48)" fg:x="9741" fg:w="493"/><text x="19.4774%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (472 samples, 0.93%)</title><rect x="19.2689%" y="565" width="0.9317%" height="15" fill="rgb(234,70,51)" fg:x="9762" fg:w="472"/><text x="19.5189%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (500 samples, 0.99%)</title><rect x="19.2274%" y="613" width="0.9869%" height="15" fill="rgb(251,86,4)" fg:x="9741" fg:w="500"/><text x="19.4774%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (500 samples, 0.99%)</title><rect x="19.2274%" y="597" width="0.9869%" height="15" fill="rgb(244,144,28)" fg:x="9741" fg:w="500"/><text x="19.4774%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (7 samples, 0.01%)</title><rect x="20.2005%" y="581" width="0.0138%" height="15" fill="rgb(232,161,39)" fg:x="10234" fg:w="7"/><text x="20.4505%" y="591.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="20.2005%" y="565" width="0.0138%" height="15" fill="rgb(247,34,51)" fg:x="10234" fg:w="7"/><text x="20.4505%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (7 samples, 0.01%)</title><rect x="20.2005%" y="549" width="0.0138%" height="15" fill="rgb(225,132,2)" fg:x="10234" fg:w="7"/><text x="20.4505%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (504 samples, 0.99%)</title><rect x="19.2255%" y="629" width="0.9948%" height="15" fill="rgb(209,159,44)" fg:x="9740" fg:w="504"/><text x="19.4755%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (566 samples, 1.12%)</title><rect x="19.1050%" y="709" width="1.1172%" height="15" fill="rgb(251,214,1)" fg:x="9679" fg:w="566"/><text x="19.3550%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (566 samples, 1.12%)</title><rect x="19.1050%" y="693" width="1.1172%" height="15" fill="rgb(247,84,47)" fg:x="9679" fg:w="566"/><text x="19.3550%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (566 samples, 1.12%)</title><rect x="19.1050%" y="677" width="1.1172%" height="15" fill="rgb(240,111,43)" fg:x="9679" fg:w="566"/><text x="19.3550%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (564 samples, 1.11%)</title><rect x="19.1090%" y="661" width="1.1133%" height="15" fill="rgb(215,214,35)" fg:x="9681" fg:w="564"/><text x="19.3590%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (564 samples, 1.11%)</title><rect x="19.1090%" y="645" width="1.1133%" height="15" fill="rgb(248,207,23)" fg:x="9681" fg:w="564"/><text x="19.3590%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (22 samples, 0.04%)</title><rect x="20.2341%" y="613" width="0.0434%" height="15" fill="rgb(214,186,4)" fg:x="10251" fg:w="22"/><text x="20.4841%" y="623.50"></text></g><g><title>syscall (20 samples, 0.04%)</title><rect x="20.2380%" y="597" width="0.0395%" height="15" fill="rgb(220,133,22)" fg:x="10253" fg:w="20"/><text x="20.4880%" y="607.50"></text></g><g><title>__GI___clone (595 samples, 1.17%)</title><rect x="19.1050%" y="997" width="1.1745%" height="15" fill="rgb(239,134,19)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="1007.50"></text></g><g><title>start_thread (595 samples, 1.17%)</title><rect x="19.1050%" y="981" width="1.1745%" height="15" fill="rgb(250,140,9)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (595 samples, 1.17%)</title><rect x="19.1050%" y="965" width="1.1745%" height="15" fill="rgb(225,59,14)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (595 samples, 1.17%)</title><rect x="19.1050%" y="949" width="1.1745%" height="15" fill="rgb(214,152,51)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (595 samples, 1.17%)</title><rect x="19.1050%" y="933" width="1.1745%" height="15" fill="rgb(251,227,43)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (595 samples, 1.17%)</title><rect x="19.1050%" y="917" width="1.1745%" height="15" fill="rgb(241,96,17)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (595 samples, 1.17%)</title><rect x="19.1050%" y="901" width="1.1745%" height="15" fill="rgb(234,198,43)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="911.50"></text></g><g><title>std::panic::catch_unwind (595 samples, 1.17%)</title><rect x="19.1050%" y="885" width="1.1745%" height="15" fill="rgb(220,108,29)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="895.50"></text></g><g><title>std::panicking::try (595 samples, 1.17%)</title><rect x="19.1050%" y="869" width="1.1745%" height="15" fill="rgb(226,163,33)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="879.50"></text></g><g><title>std::panicking::try::do_call (595 samples, 1.17%)</title><rect x="19.1050%" y="853" width="1.1745%" height="15" fill="rgb(205,194,45)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (595 samples, 1.17%)</title><rect x="19.1050%" y="837" width="1.1745%" height="15" fill="rgb(206,143,44)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (595 samples, 1.17%)</title><rect x="19.1050%" y="821" width="1.1745%" height="15" fill="rgb(236,136,36)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (595 samples, 1.17%)</title><rect x="19.1050%" y="805" width="1.1745%" height="15" fill="rgb(249,172,42)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (595 samples, 1.17%)</title><rect x="19.1050%" y="789" width="1.1745%" height="15" fill="rgb(216,139,23)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="799.50"></text></g><g><title>futures_lite::future::block_on (595 samples, 1.17%)</title><rect x="19.1050%" y="773" width="1.1745%" height="15" fill="rgb(207,166,20)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (595 samples, 1.17%)</title><rect x="19.1050%" y="757" width="1.1745%" height="15" fill="rgb(210,209,22)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (595 samples, 1.17%)</title><rect x="19.1050%" y="741" width="1.1745%" height="15" fill="rgb(232,118,20)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (595 samples, 1.17%)</title><rect x="19.1050%" y="725" width="1.1745%" height="15" fill="rgb(238,113,42)" fg:x="9679" fg:w="595"/><text x="19.3550%" y="735.50"></text></g><g><title>parking::Parker::park (29 samples, 0.06%)</title><rect x="20.2223%" y="709" width="0.0572%" height="15" fill="rgb(231,42,5)" fg:x="10245" fg:w="29"/><text x="20.4723%" y="719.50"></text></g><g><title>parking::Inner::park (29 samples, 0.06%)</title><rect x="20.2223%" y="693" width="0.0572%" height="15" fill="rgb(243,166,24)" fg:x="10245" fg:w="29"/><text x="20.4723%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (26 samples, 0.05%)</title><rect x="20.2282%" y="677" width="0.0513%" height="15" fill="rgb(237,226,12)" fg:x="10248" fg:w="26"/><text x="20.4782%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (26 samples, 0.05%)</title><rect x="20.2282%" y="661" width="0.0513%" height="15" fill="rgb(229,133,24)" fg:x="10248" fg:w="26"/><text x="20.4782%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (26 samples, 0.05%)</title><rect x="20.2282%" y="645" width="0.0513%" height="15" fill="rgb(238,33,43)" fg:x="10248" fg:w="26"/><text x="20.4782%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (26 samples, 0.05%)</title><rect x="20.2282%" y="629" width="0.0513%" height="15" fill="rgb(227,59,38)" fg:x="10248" fg:w="26"/><text x="20.4782%" y="639.50"></text></g><g><title>TaskPool_(8) (707 samples, 1.40%)</title><rect x="18.8938%" y="1013" width="1.3955%" height="15" fill="rgb(230,97,0)" fg:x="9572" fg:w="707"/><text x="19.1438%" y="1023.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (9 samples, 0.02%)</title><rect x="20.2933%" y="981" width="0.0178%" height="15" fill="rgb(250,173,50)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (9 samples, 0.02%)</title><rect x="20.2933%" y="965" width="0.0178%" height="15" fill="rgb(240,15,50)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (9 samples, 0.02%)</title><rect x="20.2933%" y="949" width="0.0178%" height="15" fill="rgb(221,93,22)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (9 samples, 0.02%)</title><rect x="20.2933%" y="933" width="0.0178%" height="15" fill="rgb(245,180,53)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (9 samples, 0.02%)</title><rect x="20.2933%" y="917" width="0.0178%" height="15" fill="rgb(231,88,51)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.02%)</title><rect x="20.2933%" y="901" width="0.0178%" height="15" fill="rgb(240,58,21)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="20.2933%" y="885" width="0.0178%" height="15" fill="rgb(237,21,10)" fg:x="10281" fg:w="9"/><text x="20.5433%" y="895.50"></text></g><g><title>[[heap]] (27 samples, 0.05%)</title><rect x="20.2933%" y="997" width="0.0533%" height="15" fill="rgb(218,43,11)" fg:x="10281" fg:w="27"/><text x="20.5433%" y="1007.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (8 samples, 0.02%)</title><rect x="20.3486%" y="981" width="0.0158%" height="15" fill="rgb(218,221,29)" fg:x="10309" fg:w="8"/><text x="20.5986%" y="991.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (6 samples, 0.01%)</title><rect x="20.3742%" y="981" width="0.0118%" height="15" fill="rgb(214,118,42)" fg:x="10322" fg:w="6"/><text x="20.6242%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="20.3742%" y="965" width="0.0118%" height="15" fill="rgb(251,200,26)" fg:x="10322" fg:w="6"/><text x="20.6242%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="20.3742%" y="949" width="0.0118%" height="15" fill="rgb(237,101,39)" fg:x="10322" fg:w="6"/><text x="20.6242%" y="959.50"></text></g><g><title>[anon] (27 samples, 0.05%)</title><rect x="20.3466%" y="997" width="0.0533%" height="15" fill="rgb(251,117,11)" fg:x="10308" fg:w="27"/><text x="20.5966%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.01%)</title><rect x="20.4670%" y="981" width="0.0118%" height="15" fill="rgb(216,223,23)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="965" width="0.0118%" height="15" fill="rgb(251,54,12)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="975.50"></text></g><g><title>futures_lite::future::block_on (6 samples, 0.01%)</title><rect x="20.4670%" y="949" width="0.0118%" height="15" fill="rgb(254,176,54)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="20.4670%" y="933" width="0.0118%" height="15" fill="rgb(210,32,8)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="20.4670%" y="917" width="0.0118%" height="15" fill="rgb(235,52,38)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="927.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="901" width="0.0118%" height="15" fill="rgb(231,4,44)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.4670%" y="885" width="0.0118%" height="15" fill="rgb(249,2,32)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="869" width="0.0118%" height="15" fill="rgb(224,65,26)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.4670%" y="853" width="0.0118%" height="15" fill="rgb(250,73,40)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.4670%" y="837" width="0.0118%" height="15" fill="rgb(253,177,16)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="821" width="0.0118%" height="15" fill="rgb(217,32,34)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6 samples, 0.01%)</title><rect x="20.4670%" y="805" width="0.0118%" height="15" fill="rgb(212,7,10)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.4670%" y="789" width="0.0118%" height="15" fill="rgb(245,89,8)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="773" width="0.0118%" height="15" fill="rgb(237,16,53)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.4670%" y="757" width="0.0118%" height="15" fill="rgb(250,204,30)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (6 samples, 0.01%)</title><rect x="20.4670%" y="741" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6 samples, 0.01%)</title><rect x="20.4670%" y="725" width="0.0118%" height="15" fill="rgb(250,204,28)" fg:x="10369" fg:w="6"/><text x="20.7170%" y="735.50"></text></g><g><title>[unknown] (43 samples, 0.08%)</title><rect x="20.3999%" y="997" width="0.0849%" height="15" fill="rgb(244,63,21)" fg:x="10335" fg:w="43"/><text x="20.6499%" y="1007.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="20.4927%" y="661" width="0.0138%" height="15" fill="rgb(236,85,44)" fg:x="10382" fg:w="7"/><text x="20.7427%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (14 samples, 0.03%)</title><rect x="20.5223%" y="501" width="0.0276%" height="15" fill="rgb(215,98,4)" fg:x="10397" fg:w="14"/><text x="20.7723%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (7 samples, 0.01%)</title><rect x="20.5361%" y="485" width="0.0138%" height="15" fill="rgb(235,38,11)" fg:x="10404" fg:w="7"/><text x="20.7861%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="20.5381%" y="469" width="0.0118%" height="15" fill="rgb(254,186,25)" fg:x="10405" fg:w="6"/><text x="20.7881%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="20.5381%" y="453" width="0.0118%" height="15" fill="rgb(225,55,31)" fg:x="10405" fg:w="6"/><text x="20.7881%" y="463.50"></text></g><g><title>async_executor::steal (18 samples, 0.04%)</title><rect x="20.5223%" y="517" width="0.0355%" height="15" fill="rgb(211,15,21)" fg:x="10397" fg:w="18"/><text x="20.7723%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (6 samples, 0.01%)</title><rect x="20.5697%" y="485" width="0.0118%" height="15" fill="rgb(215,187,41)" fg:x="10421" fg:w="6"/><text x="20.8197%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.01%)</title><rect x="20.5697%" y="469" width="0.0118%" height="15" fill="rgb(248,69,32)" fg:x="10421" fg:w="6"/><text x="20.8197%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.01%)</title><rect x="20.5697%" y="453" width="0.0118%" height="15" fill="rgb(252,102,52)" fg:x="10421" fg:w="6"/><text x="20.8197%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="20.5697%" y="437" width="0.0118%" height="15" fill="rgb(253,140,32)" fg:x="10421" fg:w="6"/><text x="20.8197%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (12 samples, 0.02%)</title><rect x="20.5657%" y="501" width="0.0237%" height="15" fill="rgb(216,56,42)" fg:x="10419" fg:w="12"/><text x="20.8157%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (22 samples, 0.04%)</title><rect x="20.5578%" y="517" width="0.0434%" height="15" fill="rgb(216,184,14)" fg:x="10415" fg:w="22"/><text x="20.8078%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="20.5894%" y="501" width="0.0118%" height="15" fill="rgb(237,187,27)" fg:x="10431" fg:w="6"/><text x="20.8394%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (46 samples, 0.09%)</title><rect x="20.5164%" y="533" width="0.0908%" height="15" fill="rgb(219,65,3)" fg:x="10394" fg:w="46"/><text x="20.7664%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.12%)</title><rect x="20.5085%" y="597" width="0.1224%" height="15" fill="rgb(245,83,25)" fg:x="10390" fg:w="62"/><text x="20.7585%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (61 samples, 0.12%)</title><rect x="20.5104%" y="581" width="0.1204%" height="15" fill="rgb(214,205,45)" fg:x="10391" fg:w="61"/><text x="20.7604%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (60 samples, 0.12%)</title><rect x="20.5124%" y="565" width="0.1184%" height="15" fill="rgb(241,20,18)" fg:x="10392" fg:w="60"/><text x="20.7624%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (60 samples, 0.12%)</title><rect x="20.5124%" y="549" width="0.1184%" height="15" fill="rgb(232,163,23)" fg:x="10392" fg:w="60"/><text x="20.7624%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.13%)</title><rect x="20.5065%" y="629" width="0.1263%" height="15" fill="rgb(214,5,46)" fg:x="10389" fg:w="64"/><text x="20.7565%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (64 samples, 0.13%)</title><rect x="20.5065%" y="613" width="0.1263%" height="15" fill="rgb(229,78,17)" fg:x="10389" fg:w="64"/><text x="20.7565%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="20.6348%" y="565" width="0.0237%" height="15" fill="rgb(248,89,10)" fg:x="10454" fg:w="12"/><text x="20.8848%" y="575.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="20.6664%" y="549" width="0.0118%" height="15" fill="rgb(248,54,15)" fg:x="10470" fg:w="6"/><text x="20.9164%" y="559.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="20.6782%" y="549" width="0.0158%" height="15" fill="rgb(223,116,6)" fg:x="10476" fg:w="8"/><text x="20.9282%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (8 samples, 0.02%)</title><rect x="20.6782%" y="533" width="0.0158%" height="15" fill="rgb(205,125,38)" fg:x="10476" fg:w="8"/><text x="20.9282%" y="543.50"></text></g><g><title>event_listener::Event::notify (6 samples, 0.01%)</title><rect x="20.6822%" y="517" width="0.0118%" height="15" fill="rgb(251,78,38)" fg:x="10478" fg:w="6"/><text x="20.9322%" y="527.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="20.6999%" y="453" width="0.0138%" height="15" fill="rgb(253,78,28)" fg:x="10487" fg:w="7"/><text x="20.9499%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="20.6999%" y="437" width="0.0138%" height="15" fill="rgb(209,120,3)" fg:x="10487" fg:w="7"/><text x="20.9499%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="20.6999%" y="421" width="0.0138%" height="15" fill="rgb(238,229,9)" fg:x="10487" fg:w="7"/><text x="20.9499%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="20.6999%" y="405" width="0.0138%" height="15" fill="rgb(253,159,18)" fg:x="10487" fg:w="7"/><text x="20.9499%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (13 samples, 0.03%)</title><rect x="20.6940%" y="533" width="0.0257%" height="15" fill="rgb(244,42,34)" fg:x="10484" fg:w="13"/><text x="20.9440%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (13 samples, 0.03%)</title><rect x="20.6940%" y="517" width="0.0257%" height="15" fill="rgb(224,8,7)" fg:x="10484" fg:w="13"/><text x="20.9440%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.03%)</title><rect x="20.6940%" y="501" width="0.0257%" height="15" fill="rgb(210,201,45)" fg:x="10484" fg:w="13"/><text x="20.9440%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.03%)</title><rect x="20.6940%" y="485" width="0.0257%" height="15" fill="rgb(252,185,21)" fg:x="10484" fg:w="13"/><text x="20.9440%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (12 samples, 0.02%)</title><rect x="20.6960%" y="469" width="0.0237%" height="15" fill="rgb(223,131,1)" fg:x="10485" fg:w="12"/><text x="20.9460%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="20.7335%" y="437" width="0.0178%" height="15" fill="rgb(245,141,16)" fg:x="10504" fg:w="9"/><text x="20.9835%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="20.7335%" y="421" width="0.0178%" height="15" fill="rgb(229,55,45)" fg:x="10504" fg:w="9"/><text x="20.9835%" y="431.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (7 samples, 0.01%)</title><rect x="20.7513%" y="437" width="0.0138%" height="15" fill="rgb(208,92,15)" fg:x="10513" fg:w="7"/><text x="21.0013%" y="447.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (7 samples, 0.01%)</title><rect x="20.7513%" y="421" width="0.0138%" height="15" fill="rgb(234,185,47)" fg:x="10513" fg:w="7"/><text x="21.0013%" y="431.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (7 samples, 0.01%)</title><rect x="20.7513%" y="405" width="0.0138%" height="15" fill="rgb(253,104,50)" fg:x="10513" fg:w="7"/><text x="21.0013%" y="415.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (19 samples, 0.04%)</title><rect x="20.7295%" y="469" width="0.0375%" height="15" fill="rgb(205,70,7)" fg:x="10502" fg:w="19"/><text x="20.9795%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (17 samples, 0.03%)</title><rect x="20.7335%" y="453" width="0.0336%" height="15" fill="rgb(240,178,43)" fg:x="10504" fg:w="17"/><text x="20.9835%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="20.7848%" y="421" width="0.0138%" height="15" fill="rgb(214,112,2)" fg:x="10530" fg:w="7"/><text x="21.0348%" y="431.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="20.7848%" y="405" width="0.0138%" height="15" fill="rgb(206,46,17)" fg:x="10530" fg:w="7"/><text x="21.0348%" y="415.50"></text></g><g><title>alloc::vec::from_elem (8 samples, 0.02%)</title><rect x="20.7986%" y="421" width="0.0158%" height="15" fill="rgb(225,220,16)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (8 samples, 0.02%)</title><rect x="20.7986%" y="405" width="0.0158%" height="15" fill="rgb(238,65,40)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (8 samples, 0.02%)</title><rect x="20.7986%" y="389" width="0.0158%" height="15" fill="rgb(230,151,21)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="20.7986%" y="373" width="0.0158%" height="15" fill="rgb(218,58,49)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (8 samples, 0.02%)</title><rect x="20.7986%" y="357" width="0.0158%" height="15" fill="rgb(219,179,14)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="20.7986%" y="341" width="0.0158%" height="15" fill="rgb(223,72,1)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (8 samples, 0.02%)</title><rect x="20.7986%" y="325" width="0.0158%" height="15" fill="rgb(238,126,10)" fg:x="10537" fg:w="8"/><text x="21.0486%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="20.8026%" y="309" width="0.0118%" height="15" fill="rgb(224,206,38)" fg:x="10539" fg:w="6"/><text x="21.0526%" y="319.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (59 samples, 0.12%)</title><rect x="20.7710%" y="437" width="0.1165%" height="15" fill="rgb(212,201,54)" fg:x="10523" fg:w="59"/><text x="21.0210%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (37 samples, 0.07%)</title><rect x="20.8144%" y="421" width="0.0730%" height="15" fill="rgb(218,154,48)" fg:x="10545" fg:w="37"/><text x="21.0644%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.07%)</title><rect x="20.8144%" y="405" width="0.0730%" height="15" fill="rgb(232,93,24)" fg:x="10545" fg:w="37"/><text x="21.0644%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.07%)</title><rect x="20.8223%" y="389" width="0.0651%" height="15" fill="rgb(245,30,21)" fg:x="10549" fg:w="33"/><text x="21.0723%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (10 samples, 0.02%)</title><rect x="20.9013%" y="357" width="0.0197%" height="15" fill="rgb(242,148,29)" fg:x="10589" fg:w="10"/><text x="21.1513%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="20.9013%" y="341" width="0.0197%" height="15" fill="rgb(244,153,54)" fg:x="10589" fg:w="10"/><text x="21.1513%" y="351.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (8 samples, 0.02%)</title><rect x="20.9210%" y="357" width="0.0158%" height="15" fill="rgb(252,87,22)" fg:x="10599" fg:w="8"/><text x="21.1710%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (8 samples, 0.02%)</title><rect x="20.9210%" y="341" width="0.0158%" height="15" fill="rgb(210,51,29)" fg:x="10599" fg:w="8"/><text x="21.1710%" y="351.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (6 samples, 0.01%)</title><rect x="20.9447%" y="357" width="0.0118%" height="15" fill="rgb(242,136,47)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="367.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.01%)</title><rect x="20.9447%" y="341" width="0.0118%" height="15" fill="rgb(238,68,4)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.01%)</title><rect x="20.9447%" y="325" width="0.0118%" height="15" fill="rgb(242,161,30)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="335.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (6 samples, 0.01%)</title><rect x="20.9447%" y="309" width="0.0118%" height="15" fill="rgb(218,58,44)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="319.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (6 samples, 0.01%)</title><rect x="20.9447%" y="293" width="0.0118%" height="15" fill="rgb(252,125,32)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.01%)</title><rect x="20.9447%" y="277" width="0.0118%" height="15" fill="rgb(219,178,0)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="287.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.01%)</title><rect x="20.9447%" y="261" width="0.0118%" height="15" fill="rgb(213,152,7)" fg:x="10611" fg:w="6"/><text x="21.1947%" y="271.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (37 samples, 0.07%)</title><rect x="20.8875%" y="437" width="0.0730%" height="15" fill="rgb(249,109,34)" fg:x="10582" fg:w="37"/><text x="21.1375%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (36 samples, 0.07%)</title><rect x="20.8894%" y="421" width="0.0711%" height="15" fill="rgb(232,96,21)" fg:x="10583" fg:w="36"/><text x="21.1394%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (31 samples, 0.06%)</title><rect x="20.8993%" y="405" width="0.0612%" height="15" fill="rgb(228,27,39)" fg:x="10588" fg:w="31"/><text x="21.1493%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (31 samples, 0.06%)</title><rect x="20.8993%" y="389" width="0.0612%" height="15" fill="rgb(211,182,52)" fg:x="10588" fg:w="31"/><text x="21.1493%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (31 samples, 0.06%)</title><rect x="20.8993%" y="373" width="0.0612%" height="15" fill="rgb(234,178,38)" fg:x="10588" fg:w="31"/><text x="21.1493%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (105 samples, 0.21%)</title><rect x="20.7670%" y="453" width="0.2073%" height="15" fill="rgb(221,111,3)" fg:x="10521" fg:w="105"/><text x="21.0170%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::mesh::mesh::Mesh&gt; (6 samples, 0.01%)</title><rect x="20.9625%" y="437" width="0.0118%" height="15" fill="rgb(228,175,21)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bevy_render::mesh::mesh::MeshVertexAttributeId,bevy_render::mesh::mesh::MeshAttributeData&gt;&gt; (6 samples, 0.01%)</title><rect x="20.9625%" y="421" width="0.0118%" height="15" fill="rgb(228,174,43)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="20.9625%" y="405" width="0.0118%" height="15" fill="rgb(211,191,0)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="415.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="20.9625%" y="389" width="0.0118%" height="15" fill="rgb(253,117,3)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;bevy_render::mesh::mesh::MeshVertexAttributeId,bevy_render::mesh::mesh::MeshAttributeData&gt;&gt; (6 samples, 0.01%)</title><rect x="20.9625%" y="373" width="0.0118%" height="15" fill="rgb(241,127,19)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="20.9625%" y="357" width="0.0118%" height="15" fill="rgb(218,103,12)" fg:x="10620" fg:w="6"/><text x="21.2125%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (135 samples, 0.27%)</title><rect x="20.7197%" y="533" width="0.2665%" height="15" fill="rgb(236,214,43)" fg:x="10497" fg:w="135"/><text x="20.9697%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (133 samples, 0.26%)</title><rect x="20.7236%" y="517" width="0.2625%" height="15" fill="rgb(244,144,19)" fg:x="10499" fg:w="133"/><text x="20.9736%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (133 samples, 0.26%)</title><rect x="20.7236%" y="501" width="0.2625%" height="15" fill="rgb(246,188,10)" fg:x="10499" fg:w="133"/><text x="20.9736%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (133 samples, 0.26%)</title><rect x="20.7236%" y="485" width="0.2625%" height="15" fill="rgb(212,193,33)" fg:x="10499" fg:w="133"/><text x="20.9736%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (111 samples, 0.22%)</title><rect x="20.7670%" y="469" width="0.2191%" height="15" fill="rgb(241,51,29)" fg:x="10521" fg:w="111"/><text x="21.0170%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="21.0019%" y="421" width="0.0158%" height="15" fill="rgb(211,58,19)" fg:x="10640" fg:w="8"/><text x="21.2519%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.02%)</title><rect x="21.0019%" y="405" width="0.0158%" height="15" fill="rgb(229,111,26)" fg:x="10640" fg:w="8"/><text x="21.2519%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="21.0197%" y="373" width="0.0138%" height="15" fill="rgb(213,115,40)" fg:x="10649" fg:w="7"/><text x="21.2697%" y="383.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (7 samples, 0.01%)</title><rect x="21.0197%" y="357" width="0.0138%" height="15" fill="rgb(209,56,44)" fg:x="10649" fg:w="7"/><text x="21.2697%" y="367.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="21.0651%" y="325" width="0.0118%" height="15" fill="rgb(230,108,32)" fg:x="10672" fg:w="6"/><text x="21.3151%" y="335.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="21.0651%" y="309" width="0.0118%" height="15" fill="rgb(216,165,31)" fg:x="10672" fg:w="6"/><text x="21.3151%" y="319.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="21.0651%" y="293" width="0.0118%" height="15" fill="rgb(218,122,21)" fg:x="10672" fg:w="6"/><text x="21.3151%" y="303.50"></text></g><g><title>core::mem::replace (9 samples, 0.02%)</title><rect x="21.0769%" y="325" width="0.0178%" height="15" fill="rgb(223,224,47)" fg:x="10678" fg:w="9"/><text x="21.3269%" y="335.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="21.0769%" y="309" width="0.0178%" height="15" fill="rgb(238,102,44)" fg:x="10678" fg:w="9"/><text x="21.3269%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (49 samples, 0.10%)</title><rect x="21.0947%" y="325" width="0.0967%" height="15" fill="rgb(236,46,40)" fg:x="10687" fg:w="49"/><text x="21.3447%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.10%)</title><rect x="21.0947%" y="309" width="0.0967%" height="15" fill="rgb(247,202,50)" fg:x="10687" fg:w="49"/><text x="21.3447%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (47 samples, 0.09%)</title><rect x="21.0987%" y="293" width="0.0928%" height="15" fill="rgb(209,99,20)" fg:x="10689" fg:w="47"/><text x="21.3487%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (106 samples, 0.21%)</title><rect x="21.0019%" y="453" width="0.2092%" height="15" fill="rgb(252,27,34)" fg:x="10640" fg:w="106"/><text x="21.2519%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (106 samples, 0.21%)</title><rect x="21.0019%" y="437" width="0.2092%" height="15" fill="rgb(215,206,23)" fg:x="10640" fg:w="106"/><text x="21.2519%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (98 samples, 0.19%)</title><rect x="21.0177%" y="421" width="0.1934%" height="15" fill="rgb(212,135,36)" fg:x="10648" fg:w="98"/><text x="21.2677%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (98 samples, 0.19%)</title><rect x="21.0177%" y="405" width="0.1934%" height="15" fill="rgb(240,189,1)" fg:x="10648" fg:w="98"/><text x="21.2677%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (98 samples, 0.19%)</title><rect x="21.0177%" y="389" width="0.1934%" height="15" fill="rgb(242,56,20)" fg:x="10648" fg:w="98"/><text x="21.2677%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (90 samples, 0.18%)</title><rect x="21.0335%" y="373" width="0.1776%" height="15" fill="rgb(247,132,33)" fg:x="10656" fg:w="90"/><text x="21.2835%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (82 samples, 0.16%)</title><rect x="21.0493%" y="357" width="0.1619%" height="15" fill="rgb(208,149,11)" fg:x="10664" fg:w="82"/><text x="21.2993%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (82 samples, 0.16%)</title><rect x="21.0493%" y="341" width="0.1619%" height="15" fill="rgb(211,33,11)" fg:x="10664" fg:w="82"/><text x="21.2993%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (10 samples, 0.02%)</title><rect x="21.1914%" y="325" width="0.0197%" height="15" fill="rgb(221,29,38)" fg:x="10736" fg:w="10"/><text x="21.4414%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (10 samples, 0.02%)</title><rect x="21.1914%" y="309" width="0.0197%" height="15" fill="rgb(206,182,49)" fg:x="10736" fg:w="10"/><text x="21.4414%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.02%)</title><rect x="21.1934%" y="293" width="0.0178%" height="15" fill="rgb(216,140,1)" fg:x="10737" fg:w="9"/><text x="21.4434%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.02%)</title><rect x="21.1934%" y="277" width="0.0178%" height="15" fill="rgb(232,57,40)" fg:x="10737" fg:w="9"/><text x="21.4434%" y="287.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (112 samples, 0.22%)</title><rect x="21.0019%" y="469" width="0.2211%" height="15" fill="rgb(224,186,18)" fg:x="10640" fg:w="112"/><text x="21.2519%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="21.2112%" y="453" width="0.0118%" height="15" fill="rgb(215,121,11)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="21.2112%" y="437" width="0.0118%" height="15" fill="rgb(245,147,10)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="21.2112%" y="421" width="0.0118%" height="15" fill="rgb(238,153,13)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="21.2112%" y="405" width="0.0118%" height="15" fill="rgb(233,108,0)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="21.2112%" y="389" width="0.0118%" height="15" fill="rgb(212,157,17)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.01%)</title><rect x="21.2112%" y="373" width="0.0118%" height="15" fill="rgb(225,213,38)" fg:x="10746" fg:w="6"/><text x="21.4612%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (6 samples, 0.01%)</title><rect x="21.2250%" y="421" width="0.0118%" height="15" fill="rgb(248,16,11)" fg:x="10753" fg:w="6"/><text x="21.4750%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (6 samples, 0.01%)</title><rect x="21.2250%" y="405" width="0.0118%" height="15" fill="rgb(241,33,4)" fg:x="10753" fg:w="6"/><text x="21.4750%" y="415.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (7 samples, 0.01%)</title><rect x="21.2250%" y="453" width="0.0138%" height="15" fill="rgb(222,26,43)" fg:x="10753" fg:w="7"/><text x="21.4750%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (7 samples, 0.01%)</title><rect x="21.2250%" y="437" width="0.0138%" height="15" fill="rgb(243,29,36)" fg:x="10753" fg:w="7"/><text x="21.4750%" y="447.50"></text></g><g><title>bevy_render::view::prepare_view_uniforms (9 samples, 0.02%)</title><rect x="21.2230%" y="469" width="0.0178%" height="15" fill="rgb(241,9,27)" fg:x="10752" fg:w="9"/><text x="21.4730%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (134 samples, 0.26%)</title><rect x="20.9861%" y="533" width="0.2645%" height="15" fill="rgb(205,117,26)" fg:x="10632" fg:w="134"/><text x="21.2361%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (134 samples, 0.26%)</title><rect x="20.9861%" y="517" width="0.2645%" height="15" fill="rgb(209,80,39)" fg:x="10632" fg:w="134"/><text x="21.2361%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (134 samples, 0.26%)</title><rect x="20.9861%" y="501" width="0.2645%" height="15" fill="rgb(239,155,6)" fg:x="10632" fg:w="134"/><text x="21.2361%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (134 samples, 0.26%)</title><rect x="20.9861%" y="485" width="0.2645%" height="15" fill="rgb(212,104,12)" fg:x="10632" fg:w="134"/><text x="21.2361%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (11 samples, 0.02%)</title><rect x="21.2783%" y="453" width="0.0217%" height="15" fill="rgb(234,204,3)" fg:x="10780" fg:w="11"/><text x="21.5283%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (7 samples, 0.01%)</title><rect x="21.2862%" y="437" width="0.0138%" height="15" fill="rgb(251,218,7)" fg:x="10784" fg:w="7"/><text x="21.5362%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="21.2862%" y="421" width="0.0138%" height="15" fill="rgb(221,81,32)" fg:x="10784" fg:w="7"/><text x="21.5362%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (12 samples, 0.02%)</title><rect x="21.3000%" y="421" width="0.0237%" height="15" fill="rgb(214,152,26)" fg:x="10791" fg:w="12"/><text x="21.5500%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (12 samples, 0.02%)</title><rect x="21.3000%" y="405" width="0.0237%" height="15" fill="rgb(223,22,3)" fg:x="10791" fg:w="12"/><text x="21.5500%" y="415.50"></text></g><g><title>bevy_crevice::internal::align_offset (16 samples, 0.03%)</title><rect x="21.3375%" y="357" width="0.0316%" height="15" fill="rgb(207,174,7)" fg:x="10810" fg:w="16"/><text x="21.5875%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (38 samples, 0.08%)</title><rect x="21.3770%" y="325" width="0.0750%" height="15" fill="rgb(224,19,52)" fg:x="10830" fg:w="38"/><text x="21.6270%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.08%)</title><rect x="21.3770%" y="309" width="0.0750%" height="15" fill="rgb(228,24,14)" fg:x="10830" fg:w="38"/><text x="21.6270%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.08%)</title><rect x="21.3770%" y="293" width="0.0750%" height="15" fill="rgb(230,153,43)" fg:x="10830" fg:w="38"/><text x="21.6270%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (67 samples, 0.13%)</title><rect x="21.3256%" y="389" width="0.1322%" height="15" fill="rgb(231,106,12)" fg:x="10804" fg:w="67"/><text x="21.5756%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (64 samples, 0.13%)</title><rect x="21.3316%" y="373" width="0.1263%" height="15" fill="rgb(215,92,2)" fg:x="10807" fg:w="64"/><text x="21.5816%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (44 samples, 0.09%)</title><rect x="21.3710%" y="357" width="0.0869%" height="15" fill="rgb(249,143,25)" fg:x="10827" fg:w="44"/><text x="21.6210%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (44 samples, 0.09%)</title><rect x="21.3710%" y="341" width="0.0869%" height="15" fill="rgb(252,7,35)" fg:x="10827" fg:w="44"/><text x="21.6210%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (72 samples, 0.14%)</title><rect x="21.3237%" y="421" width="0.1421%" height="15" fill="rgb(216,69,40)" fg:x="10803" fg:w="72"/><text x="21.5737%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (72 samples, 0.14%)</title><rect x="21.3237%" y="405" width="0.1421%" height="15" fill="rgb(240,36,33)" fg:x="10803" fg:w="72"/><text x="21.5737%" y="415.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (94 samples, 0.19%)</title><rect x="21.3000%" y="453" width="0.1855%" height="15" fill="rgb(231,128,14)" fg:x="10791" fg:w="94"/><text x="21.5500%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (94 samples, 0.19%)</title><rect x="21.3000%" y="437" width="0.1855%" height="15" fill="rgb(245,143,14)" fg:x="10791" fg:w="94"/><text x="21.5500%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (10 samples, 0.02%)</title><rect x="21.4658%" y="421" width="0.0197%" height="15" fill="rgb(222,130,28)" fg:x="10875" fg:w="10"/><text x="21.7158%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (7 samples, 0.01%)</title><rect x="21.4717%" y="405" width="0.0138%" height="15" fill="rgb(212,10,48)" fg:x="10878" fg:w="7"/><text x="21.7217%" y="415.50"></text></g><g><title>wgpu::Device::create_buffer (7 samples, 0.01%)</title><rect x="21.4717%" y="389" width="0.0138%" height="15" fill="rgb(254,118,45)" fg:x="10878" fg:w="7"/><text x="21.7217%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (7 samples, 0.01%)</title><rect x="21.4717%" y="373" width="0.0138%" height="15" fill="rgb(228,6,45)" fg:x="10878" fg:w="7"/><text x="21.7217%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (7 samples, 0.01%)</title><rect x="21.4717%" y="357" width="0.0138%" height="15" fill="rgb(241,18,35)" fg:x="10878" fg:w="7"/><text x="21.7217%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (120 samples, 0.24%)</title><rect x="21.2506%" y="533" width="0.2369%" height="15" fill="rgb(227,214,53)" fg:x="10766" fg:w="120"/><text x="21.5006%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (120 samples, 0.24%)</title><rect x="21.2506%" y="517" width="0.2369%" height="15" fill="rgb(224,107,51)" fg:x="10766" fg:w="120"/><text x="21.5006%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (120 samples, 0.24%)</title><rect x="21.2506%" y="501" width="0.2369%" height="15" fill="rgb(248,60,28)" fg:x="10766" fg:w="120"/><text x="21.5006%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (120 samples, 0.24%)</title><rect x="21.2506%" y="485" width="0.2369%" height="15" fill="rgb(249,101,23)" fg:x="10766" fg:w="120"/><text x="21.5006%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (120 samples, 0.24%)</title><rect x="21.2506%" y="469" width="0.2369%" height="15" fill="rgb(228,51,19)" fg:x="10766" fg:w="120"/><text x="21.5006%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="21.4895%" y="533" width="0.0178%" height="15" fill="rgb(213,20,6)" fg:x="10887" fg:w="9"/><text x="21.7395%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (9 samples, 0.02%)</title><rect x="21.4895%" y="517" width="0.0178%" height="15" fill="rgb(212,124,10)" fg:x="10887" fg:w="9"/><text x="21.7395%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.02%)</title><rect x="21.4895%" y="501" width="0.0178%" height="15" fill="rgb(248,3,40)" fg:x="10887" fg:w="9"/><text x="21.7395%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (9 samples, 0.02%)</title><rect x="21.4895%" y="485" width="0.0178%" height="15" fill="rgb(223,178,23)" fg:x="10887" fg:w="9"/><text x="21.7395%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (7 samples, 0.01%)</title><rect x="21.4934%" y="469" width="0.0138%" height="15" fill="rgb(240,132,45)" fg:x="10889" fg:w="7"/><text x="21.7434%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (415 samples, 0.82%)</title><rect x="20.6940%" y="549" width="0.8192%" height="15" fill="rgb(245,164,36)" fg:x="10484" fg:w="415"/><text x="20.9440%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (451 samples, 0.89%)</title><rect x="20.6348%" y="581" width="0.8902%" height="15" fill="rgb(231,188,53)" fg:x="10454" fg:w="451"/><text x="20.8848%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (438 samples, 0.86%)</title><rect x="20.6605%" y="565" width="0.8646%" height="15" fill="rgb(237,198,39)" fg:x="10467" fg:w="438"/><text x="20.9105%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (454 samples, 0.90%)</title><rect x="20.6348%" y="613" width="0.8961%" height="15" fill="rgb(223,120,35)" fg:x="10454" fg:w="454"/><text x="20.8848%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (454 samples, 0.90%)</title><rect x="20.6348%" y="597" width="0.8961%" height="15" fill="rgb(253,107,49)" fg:x="10454" fg:w="454"/><text x="20.8848%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (458 samples, 0.90%)</title><rect x="20.6328%" y="629" width="0.9040%" height="15" fill="rgb(216,44,31)" fg:x="10453" fg:w="458"/><text x="20.8828%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (532 samples, 1.05%)</title><rect x="20.4887%" y="709" width="1.0501%" height="15" fill="rgb(253,87,21)" fg:x="10380" fg:w="532"/><text x="20.7387%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (532 samples, 1.05%)</title><rect x="20.4887%" y="693" width="1.0501%" height="15" fill="rgb(226,18,2)" fg:x="10380" fg:w="532"/><text x="20.7387%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (530 samples, 1.05%)</title><rect x="20.4927%" y="677" width="1.0461%" height="15" fill="rgb(216,8,46)" fg:x="10382" fg:w="530"/><text x="20.7427%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (523 samples, 1.03%)</title><rect x="20.5065%" y="661" width="1.0323%" height="15" fill="rgb(226,140,39)" fg:x="10389" fg:w="523"/><text x="20.7565%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (523 samples, 1.03%)</title><rect x="20.5065%" y="645" width="1.0323%" height="15" fill="rgb(221,194,54)" fg:x="10389" fg:w="523"/><text x="20.7565%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (44 samples, 0.09%)</title><rect x="21.5487%" y="613" width="0.0869%" height="15" fill="rgb(213,92,11)" fg:x="10917" fg:w="44"/><text x="21.7987%" y="623.50"></text></g><g><title>syscall (42 samples, 0.08%)</title><rect x="21.5526%" y="597" width="0.0829%" height="15" fill="rgb(229,162,46)" fg:x="10919" fg:w="42"/><text x="21.8026%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (47 samples, 0.09%)</title><rect x="21.5447%" y="645" width="0.0928%" height="15" fill="rgb(214,111,36)" fg:x="10915" fg:w="47"/><text x="21.7947%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (47 samples, 0.09%)</title><rect x="21.5447%" y="629" width="0.0928%" height="15" fill="rgb(207,6,21)" fg:x="10915" fg:w="47"/><text x="21.7947%" y="639.50"></text></g><g><title>__GI___clone (586 samples, 1.16%)</title><rect x="20.4848%" y="997" width="1.1567%" height="15" fill="rgb(213,127,38)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="1007.50"></text></g><g><title>start_thread (586 samples, 1.16%)</title><rect x="20.4848%" y="981" width="1.1567%" height="15" fill="rgb(238,118,32)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (586 samples, 1.16%)</title><rect x="20.4848%" y="965" width="1.1567%" height="15" fill="rgb(240,139,39)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (586 samples, 1.16%)</title><rect x="20.4848%" y="949" width="1.1567%" height="15" fill="rgb(235,10,37)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (586 samples, 1.16%)</title><rect x="20.4848%" y="933" width="1.1567%" height="15" fill="rgb(249,171,38)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (586 samples, 1.16%)</title><rect x="20.4848%" y="917" width="1.1567%" height="15" fill="rgb(242,144,32)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (586 samples, 1.16%)</title><rect x="20.4848%" y="901" width="1.1567%" height="15" fill="rgb(217,117,21)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="911.50"></text></g><g><title>std::panic::catch_unwind (586 samples, 1.16%)</title><rect x="20.4848%" y="885" width="1.1567%" height="15" fill="rgb(249,87,1)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="895.50"></text></g><g><title>std::panicking::try (586 samples, 1.16%)</title><rect x="20.4848%" y="869" width="1.1567%" height="15" fill="rgb(248,196,48)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="879.50"></text></g><g><title>std::panicking::try::do_call (586 samples, 1.16%)</title><rect x="20.4848%" y="853" width="1.1567%" height="15" fill="rgb(251,206,33)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (586 samples, 1.16%)</title><rect x="20.4848%" y="837" width="1.1567%" height="15" fill="rgb(232,141,28)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (586 samples, 1.16%)</title><rect x="20.4848%" y="821" width="1.1567%" height="15" fill="rgb(209,167,14)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (586 samples, 1.16%)</title><rect x="20.4848%" y="805" width="1.1567%" height="15" fill="rgb(225,11,50)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (586 samples, 1.16%)</title><rect x="20.4848%" y="789" width="1.1567%" height="15" fill="rgb(209,50,20)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="799.50"></text></g><g><title>futures_lite::future::block_on (586 samples, 1.16%)</title><rect x="20.4848%" y="773" width="1.1567%" height="15" fill="rgb(212,17,46)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (586 samples, 1.16%)</title><rect x="20.4848%" y="757" width="1.1567%" height="15" fill="rgb(216,101,39)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (586 samples, 1.16%)</title><rect x="20.4848%" y="741" width="1.1567%" height="15" fill="rgb(212,228,48)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (586 samples, 1.16%)</title><rect x="20.4848%" y="725" width="1.1567%" height="15" fill="rgb(250,6,50)" fg:x="10378" fg:w="586"/><text x="20.7348%" y="735.50"></text></g><g><title>parking::Parker::park (52 samples, 0.10%)</title><rect x="21.5388%" y="709" width="0.1026%" height="15" fill="rgb(250,160,48)" fg:x="10912" fg:w="52"/><text x="21.7888%" y="719.50"></text></g><g><title>parking::Inner::park (52 samples, 0.10%)</title><rect x="21.5388%" y="693" width="0.1026%" height="15" fill="rgb(244,216,33)" fg:x="10912" fg:w="52"/><text x="21.7888%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (50 samples, 0.10%)</title><rect x="21.5428%" y="677" width="0.0987%" height="15" fill="rgb(207,157,5)" fg:x="10914" fg:w="50"/><text x="21.7928%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (49 samples, 0.10%)</title><rect x="21.5447%" y="661" width="0.0967%" height="15" fill="rgb(228,199,8)" fg:x="10915" fg:w="49"/><text x="21.7947%" y="671.50"></text></g><g><title>TaskPool_(9) (690 samples, 1.36%)</title><rect x="20.2894%" y="1013" width="1.3620%" height="15" fill="rgb(227,80,20)" fg:x="10279" fg:w="690"/><text x="20.5394%" y="1023.50"></text></g><g><title>__futex_abstimed_wait_common (40 samples, 0.08%)</title><rect x="21.6750%" y="901" width="0.0790%" height="15" fill="rgb(222,9,33)" fg:x="10981" fg:w="40"/><text x="21.9250%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (47 samples, 0.09%)</title><rect x="21.6671%" y="917" width="0.0928%" height="15" fill="rgb(239,44,28)" fg:x="10977" fg:w="47"/><text x="21.9171%" y="927.50"></text></g><g><title>_nv011glcore (55 samples, 0.11%)</title><rect x="21.6632%" y="933" width="0.1086%" height="15" fill="rgb(249,187,43)" fg:x="10975" fg:w="55"/><text x="21.9132%" y="943.50"></text></g><g><title>[vkrt]_Analysis (64 samples, 0.13%)</title><rect x="21.6513%" y="1013" width="0.1263%" height="15" fill="rgb(216,141,28)" fg:x="10969" fg:w="64"/><text x="21.9013%" y="1023.50"></text></g><g><title>__GI___clone (62 samples, 0.12%)</title><rect x="21.6553%" y="997" width="0.1224%" height="15" fill="rgb(230,154,53)" fg:x="10971" fg:w="62"/><text x="21.9053%" y="1007.50"></text></g><g><title>start_thread (62 samples, 0.12%)</title><rect x="21.6553%" y="981" width="0.1224%" height="15" fill="rgb(227,82,4)" fg:x="10971" fg:w="62"/><text x="21.9053%" y="991.50"></text></g><g><title>_nv011glcore (62 samples, 0.12%)</title><rect x="21.6553%" y="965" width="0.1224%" height="15" fill="rgb(220,107,16)" fg:x="10971" fg:w="62"/><text x="21.9053%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (62 samples, 0.12%)</title><rect x="21.6553%" y="949" width="0.1224%" height="15" fill="rgb(207,187,2)" fg:x="10971" fg:w="62"/><text x="21.9053%" y="959.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="21.7836%" y="981" width="0.0197%" height="15" fill="rgb(210,162,52)" fg:x="11036" fg:w="10"/><text x="22.0336%" y="991.50"></text></g><g><title>[[heap]] (18 samples, 0.04%)</title><rect x="21.7836%" y="997" width="0.0355%" height="15" fill="rgb(217,216,49)" fg:x="11036" fg:w="18"/><text x="22.0336%" y="1007.50"></text></g><g><title>[anon] (12 samples, 0.02%)</title><rect x="21.8191%" y="997" width="0.0237%" height="15" fill="rgb(218,146,49)" fg:x="11054" fg:w="12"/><text x="22.0691%" y="1007.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="21.8428%" y="981" width="0.0415%" height="15" fill="rgb(216,55,40)" fg:x="11066" fg:w="21"/><text x="22.0928%" y="991.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="21.8843%" y="981" width="0.0415%" height="15" fill="rgb(208,196,21)" fg:x="11087" fg:w="21"/><text x="22.1343%" y="991.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (9 samples, 0.02%)</title><rect x="21.9079%" y="965" width="0.0178%" height="15" fill="rgb(242,117,42)" fg:x="11099" fg:w="9"/><text x="22.1579%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="21.9079%" y="949" width="0.0178%" height="15" fill="rgb(210,11,23)" fg:x="11099" fg:w="9"/><text x="22.1579%" y="959.50"></text></g><g><title>[unknown] (49 samples, 0.10%)</title><rect x="21.8428%" y="997" width="0.0967%" height="15" fill="rgb(217,110,2)" fg:x="11066" fg:w="49"/><text x="22.0928%" y="1007.50"></text></g><g><title>pa_threaded_mainloop_lock (6 samples, 0.01%)</title><rect x="21.9593%" y="677" width="0.0118%" height="15" fill="rgb(229,77,54)" fg:x="11125" fg:w="6"/><text x="22.2093%" y="687.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (17 samples, 0.03%)</title><rect x="21.9435%" y="741" width="0.0336%" height="15" fill="rgb(218,53,16)" fg:x="11117" fg:w="17"/><text x="22.1935%" y="751.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (16 samples, 0.03%)</title><rect x="21.9454%" y="725" width="0.0316%" height="15" fill="rgb(215,38,13)" fg:x="11118" fg:w="16"/><text x="22.1954%" y="735.50"></text></g><g><title>snd_pcm_extplug_set_param_link (16 samples, 0.03%)</title><rect x="21.9454%" y="709" width="0.0316%" height="15" fill="rgb(235,42,18)" fg:x="11118" fg:w="16"/><text x="22.1954%" y="719.50"></text></g><g><title>pulse_check_connection (13 samples, 0.03%)</title><rect x="21.9514%" y="693" width="0.0257%" height="15" fill="rgb(219,66,54)" fg:x="11121" fg:w="13"/><text x="22.2014%" y="703.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (12 samples, 0.02%)</title><rect x="21.9869%" y="725" width="0.0237%" height="15" fill="rgb(222,205,4)" fg:x="11139" fg:w="12"/><text x="22.2369%" y="735.50"></text></g><g><title>snd_pcm_status (10 samples, 0.02%)</title><rect x="21.9908%" y="709" width="0.0197%" height="15" fill="rgb(227,213,46)" fg:x="11141" fg:w="10"/><text x="22.2408%" y="719.50"></text></g><g><title>snd_pcm_extplug_set_param_link (9 samples, 0.02%)</title><rect x="21.9928%" y="693" width="0.0178%" height="15" fill="rgb(250,145,42)" fg:x="11142" fg:w="9"/><text x="22.2428%" y="703.50"></text></g><g><title>alsa::pcm::PCM::status (13 samples, 0.03%)</title><rect x="21.9869%" y="741" width="0.0257%" height="15" fill="rgb(219,15,2)" fg:x="11139" fg:w="13"/><text x="22.2369%" y="751.50"></text></g><g><title>__GI___pthread_disable_asynccancel (6 samples, 0.01%)</title><rect x="22.0678%" y="709" width="0.0118%" height="15" fill="rgb(231,181,52)" fg:x="11180" fg:w="6"/><text x="22.3178%" y="719.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (71 samples, 0.14%)</title><rect x="21.9415%" y="757" width="0.1401%" height="15" fill="rgb(235,1,42)" fg:x="11116" fg:w="71"/><text x="22.1915%" y="767.50"></text></g><g><title>alsa::poll::poll (34 samples, 0.07%)</title><rect x="22.0145%" y="741" width="0.0671%" height="15" fill="rgb(249,88,27)" fg:x="11153" fg:w="34"/><text x="22.2645%" y="751.50"></text></g><g><title>__libc_poll (33 samples, 0.07%)</title><rect x="22.0165%" y="725" width="0.0651%" height="15" fill="rgb(235,145,16)" fg:x="11154" fg:w="33"/><text x="22.2665%" y="735.50"></text></g><g><title>pa_stream_write (11 samples, 0.02%)</title><rect x="22.0974%" y="661" width="0.0217%" height="15" fill="rgb(237,114,19)" fg:x="11195" fg:w="11"/><text x="22.3474%" y="671.50"></text></g><g><title>pa_stream_write_ext_free (11 samples, 0.02%)</title><rect x="22.0974%" y="645" width="0.0217%" height="15" fill="rgb(238,51,50)" fg:x="11195" fg:w="11"/><text x="22.3474%" y="655.50"></text></g><g><title>pulse_poll_deactivate (15 samples, 0.03%)</title><rect x="22.0915%" y="677" width="0.0296%" height="15" fill="rgb(205,194,25)" fg:x="11192" fg:w="15"/><text x="22.3415%" y="687.50"></text></g><g><title>snd_pcm_extplug_set_param_link (21 samples, 0.04%)</title><rect x="22.0836%" y="725" width="0.0415%" height="15" fill="rgb(215,203,17)" fg:x="11188" fg:w="21"/><text x="22.3336%" y="735.50"></text></g><g><title>snd_async_add_pcm_handler (20 samples, 0.04%)</title><rect x="22.0856%" y="709" width="0.0395%" height="15" fill="rgb(233,112,49)" fg:x="11189" fg:w="20"/><text x="22.3356%" y="719.50"></text></g><g><title>snd_pcm_extplug_set_param_link (17 samples, 0.03%)</title><rect x="22.0915%" y="693" width="0.0336%" height="15" fill="rgb(241,130,26)" fg:x="11192" fg:w="17"/><text x="22.3415%" y="703.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (24 samples, 0.05%)</title><rect x="22.0816%" y="741" width="0.0474%" height="15" fill="rgb(252,223,19)" fg:x="11187" fg:w="24"/><text x="22.3316%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (17 samples, 0.03%)</title><rect x="22.1586%" y="661" width="0.0336%" height="15" fill="rgb(211,95,25)" fg:x="11226" fg:w="17"/><text x="22.4086%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (10 samples, 0.02%)</title><rect x="22.2159%" y="645" width="0.0197%" height="15" fill="rgb(251,182,27)" fg:x="11255" fg:w="10"/><text x="22.4659%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.02%)</title><rect x="22.2178%" y="629" width="0.0178%" height="15" fill="rgb(238,24,4)" fg:x="11256" fg:w="9"/><text x="22.4678%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="22.2178%" y="613" width="0.0178%" height="15" fill="rgb(224,220,25)" fg:x="11256" fg:w="9"/><text x="22.4678%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.02%)</title><rect x="22.2178%" y="597" width="0.0178%" height="15" fill="rgb(239,133,26)" fg:x="11256" fg:w="9"/><text x="22.4678%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.02%)</title><rect x="22.2178%" y="581" width="0.0178%" height="15" fill="rgb(211,94,48)" fg:x="11256" fg:w="9"/><text x="22.4678%" y="591.50"></text></g><g><title>core::mem::swap (43 samples, 0.08%)</title><rect x="22.2356%" y="645" width="0.0849%" height="15" fill="rgb(239,87,6)" fg:x="11265" fg:w="43"/><text x="22.4856%" y="655.50"></text></g><g><title>core::mem::swap_simple (43 samples, 0.08%)</title><rect x="22.2356%" y="629" width="0.0849%" height="15" fill="rgb(227,62,0)" fg:x="11265" fg:w="43"/><text x="22.4856%" y="639.50"></text></g><g><title>core::ptr::read (11 samples, 0.02%)</title><rect x="22.2988%" y="613" width="0.0217%" height="15" fill="rgb(211,226,4)" fg:x="11297" fg:w="11"/><text x="22.5488%" y="623.50"></text></g><g><title>core::mem::replace (13 samples, 0.03%)</title><rect x="22.3303%" y="613" width="0.0257%" height="15" fill="rgb(253,38,52)" fg:x="11313" fg:w="13"/><text x="22.5803%" y="623.50"></text></g><g><title>core::ptr::write (11 samples, 0.02%)</title><rect x="22.3343%" y="597" width="0.0217%" height="15" fill="rgb(229,126,40)" fg:x="11315" fg:w="11"/><text x="22.5843%" y="607.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.23%)</title><rect x="22.1409%" y="677" width="0.2309%" height="15" fill="rgb(229,165,44)" fg:x="11217" fg:w="117"/><text x="22.3909%" y="687.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (89 samples, 0.18%)</title><rect x="22.1961%" y="661" width="0.1757%" height="15" fill="rgb(247,95,47)" fg:x="11245" fg:w="89"/><text x="22.4461%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (26 samples, 0.05%)</title><rect x="22.3205%" y="645" width="0.0513%" height="15" fill="rgb(216,140,30)" fg:x="11308" fg:w="26"/><text x="22.5705%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.05%)</title><rect x="22.3205%" y="629" width="0.0513%" height="15" fill="rgb(246,214,8)" fg:x="11308" fg:w="26"/><text x="22.5705%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;,alloc::alloc::Global&gt;&gt; (8 samples, 0.02%)</title><rect x="22.3560%" y="613" width="0.0158%" height="15" fill="rgb(227,224,15)" fg:x="11326" fg:w="8"/><text x="22.6060%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="22.3560%" y="597" width="0.0158%" height="15" fill="rgb(233,175,4)" fg:x="11326" fg:w="8"/><text x="22.6060%" y="607.50"></text></g><g><title>std::panic::catch_unwind (227 samples, 0.45%)</title><rect x="21.9395%" y="885" width="0.4481%" height="15" fill="rgb(221,66,45)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="895.50"></text></g><g><title>std::panicking::try (227 samples, 0.45%)</title><rect x="21.9395%" y="869" width="0.4481%" height="15" fill="rgb(221,178,18)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="879.50"></text></g><g><title>std::panicking::try::do_call (227 samples, 0.45%)</title><rect x="21.9395%" y="853" width="0.4481%" height="15" fill="rgb(213,81,29)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (227 samples, 0.45%)</title><rect x="21.9395%" y="837" width="0.4481%" height="15" fill="rgb(220,89,49)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (227 samples, 0.45%)</title><rect x="21.9395%" y="821" width="0.4481%" height="15" fill="rgb(227,60,33)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (227 samples, 0.45%)</title><rect x="21.9395%" y="805" width="0.4481%" height="15" fill="rgb(205,113,12)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="815.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (227 samples, 0.45%)</title><rect x="21.9395%" y="789" width="0.4481%" height="15" fill="rgb(211,32,1)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="799.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (227 samples, 0.45%)</title><rect x="21.9395%" y="773" width="0.4481%" height="15" fill="rgb(246,2,12)" fg:x="11115" fg:w="227"/><text x="22.1895%" y="783.50"></text></g><g><title>cpal::host::alsa::process_output (155 samples, 0.31%)</title><rect x="22.0816%" y="757" width="0.3059%" height="15" fill="rgb(243,37,27)" fg:x="11187" fg:w="155"/><text x="22.3316%" y="767.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (131 samples, 0.26%)</title><rect x="22.1290%" y="741" width="0.2586%" height="15" fill="rgb(248,211,31)" fg:x="11211" fg:w="131"/><text x="22.3790%" y="751.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (131 samples, 0.26%)</title><rect x="22.1290%" y="725" width="0.2586%" height="15" fill="rgb(242,146,47)" fg:x="11211" fg:w="131"/><text x="22.3790%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (131 samples, 0.26%)</title><rect x="22.1290%" y="709" width="0.2586%" height="15" fill="rgb(206,70,20)" fg:x="11211" fg:w="131"/><text x="22.3790%" y="719.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (131 samples, 0.26%)</title><rect x="22.1290%" y="693" width="0.2586%" height="15" fill="rgb(215,10,51)" fg:x="11211" fg:w="131"/><text x="22.3790%" y="703.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (8 samples, 0.02%)</title><rect x="22.3718%" y="677" width="0.0158%" height="15" fill="rgb(243,178,53)" fg:x="11334" fg:w="8"/><text x="22.6218%" y="687.50"></text></g><g><title>__GI___clone (228 samples, 0.45%)</title><rect x="21.9395%" y="997" width="0.4500%" height="15" fill="rgb(233,221,20)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="1007.50"></text></g><g><title>start_thread (228 samples, 0.45%)</title><rect x="21.9395%" y="981" width="0.4500%" height="15" fill="rgb(218,95,35)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (228 samples, 0.45%)</title><rect x="21.9395%" y="965" width="0.4500%" height="15" fill="rgb(229,13,5)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (228 samples, 0.45%)</title><rect x="21.9395%" y="949" width="0.4500%" height="15" fill="rgb(252,164,30)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (228 samples, 0.45%)</title><rect x="21.9395%" y="933" width="0.4500%" height="15" fill="rgb(232,68,36)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (228 samples, 0.45%)</title><rect x="21.9395%" y="917" width="0.4500%" height="15" fill="rgb(219,59,54)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (228 samples, 0.45%)</title><rect x="21.9395%" y="901" width="0.4500%" height="15" fill="rgb(250,92,33)" fg:x="11115" fg:w="228"/><text x="22.1895%" y="911.50"></text></g><g><title>cpal_alsa_out (319 samples, 0.63%)</title><rect x="21.7777%" y="1013" width="0.6297%" height="15" fill="rgb(229,162,54)" fg:x="11033" fg:w="319"/><text x="22.0277%" y="1023.50"></text></g><g><title>anon.8d5bf812eca2031b7295d95fba35586a.12.llvm.1566435033797345566 (9 samples, 0.02%)</title><rect x="22.3896%" y="997" width="0.0178%" height="15" fill="rgb(244,114,52)" fg:x="11343" fg:w="9"/><text x="22.6396%" y="1007.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="22.3896%" y="981" width="0.0178%" height="15" fill="rgb(212,211,43)" fg:x="11343" fg:w="9"/><text x="22.6396%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.04%)</title><rect x="22.4231%" y="997" width="0.0355%" height="15" fill="rgb(226,147,8)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (18 samples, 0.04%)</title><rect x="22.4231%" y="981" width="0.0355%" height="15" fill="rgb(226,23,13)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="991.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (18 samples, 0.04%)</title><rect x="22.4231%" y="965" width="0.0355%" height="15" fill="rgb(240,63,4)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (18 samples, 0.04%)</title><rect x="22.4231%" y="949" width="0.0355%" height="15" fill="rgb(221,1,32)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="959.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (18 samples, 0.04%)</title><rect x="22.4231%" y="933" width="0.0355%" height="15" fill="rgb(242,117,10)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="943.50"></text></g><g><title>core::num::dec2flt::dec2flt (18 samples, 0.04%)</title><rect x="22.4231%" y="917" width="0.0355%" height="15" fill="rgb(249,172,44)" fg:x="11360" fg:w="18"/><text x="22.6731%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::fmt::Debug&gt;::fmt (8 samples, 0.02%)</title><rect x="22.4586%" y="997" width="0.0158%" height="15" fill="rgb(244,46,45)" fg:x="11378" fg:w="8"/><text x="22.7086%" y="1007.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="22.4784%" y="997" width="0.0118%" height="15" fill="rgb(206,43,17)" fg:x="11388" fg:w="6"/><text x="22.7284%" y="1007.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (11 samples, 0.02%)</title><rect x="22.4981%" y="981" width="0.0217%" height="15" fill="rgb(239,218,39)" fg:x="11398" fg:w="11"/><text x="22.7481%" y="991.50"></text></g><g><title>&lt;T as bevy_utils::label::DynHash&gt;::dyn_hash (7 samples, 0.01%)</title><rect x="22.5376%" y="981" width="0.0138%" height="15" fill="rgb(208,169,54)" fg:x="11418" fg:w="7"/><text x="22.7876%" y="991.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (47 samples, 0.09%)</title><rect x="22.5514%" y="981" width="0.0928%" height="15" fill="rgb(247,25,42)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="991.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (47 samples, 0.09%)</title><rect x="22.5514%" y="965" width="0.0928%" height="15" fill="rgb(226,23,31)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="975.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (47 samples, 0.09%)</title><rect x="22.5514%" y="949" width="0.0928%" height="15" fill="rgb(247,16,28)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (47 samples, 0.09%)</title><rect x="22.5514%" y="933" width="0.0928%" height="15" fill="rgb(231,147,38)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (47 samples, 0.09%)</title><rect x="22.5514%" y="917" width="0.0928%" height="15" fill="rgb(253,81,48)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (47 samples, 0.09%)</title><rect x="22.5514%" y="901" width="0.0928%" height="15" fill="rgb(249,222,43)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.09%)</title><rect x="22.5514%" y="885" width="0.0928%" height="15" fill="rgb(221,3,27)" fg:x="11425" fg:w="47"/><text x="22.8014%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="22.6521%" y="981" width="0.0237%" height="15" fill="rgb(228,180,5)" fg:x="11476" fg:w="12"/><text x="22.9021%" y="991.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="22.6975%" y="981" width="0.0217%" height="15" fill="rgb(227,131,42)" fg:x="11499" fg:w="11"/><text x="22.9475%" y="991.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="22.7271%" y="981" width="0.0118%" height="15" fill="rgb(212,3,39)" fg:x="11514" fg:w="6"/><text x="22.9771%" y="991.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (23 samples, 0.05%)</title><rect x="22.7389%" y="981" width="0.0454%" height="15" fill="rgb(226,45,5)" fg:x="11520" fg:w="23"/><text x="22.9889%" y="991.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (12 samples, 0.02%)</title><rect x="22.7843%" y="981" width="0.0237%" height="15" fill="rgb(215,167,45)" fg:x="11543" fg:w="12"/><text x="23.0343%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (7 samples, 0.01%)</title><rect x="22.8080%" y="981" width="0.0138%" height="15" fill="rgb(250,218,53)" fg:x="11555" fg:w="7"/><text x="23.0580%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (9 samples, 0.02%)</title><rect x="22.8455%" y="981" width="0.0178%" height="15" fill="rgb(207,140,0)" fg:x="11574" fg:w="9"/><text x="23.0955%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="22.8830%" y="981" width="0.0237%" height="15" fill="rgb(238,133,51)" fg:x="11593" fg:w="12"/><text x="23.1330%" y="991.50"></text></g><g><title>__free (6 samples, 0.01%)</title><rect x="22.9837%" y="981" width="0.0118%" height="15" fill="rgb(218,203,53)" fg:x="11644" fg:w="6"/><text x="23.2337%" y="991.50"></text></g><g><title>_nv011glcore (626 samples, 1.24%)</title><rect x="23.0291%" y="981" width="1.2356%" height="15" fill="rgb(226,184,25)" fg:x="11667" fg:w="626"/><text x="23.2791%" y="991.50"></text></g><g><title>_nv041glcore (15 samples, 0.03%)</title><rect x="24.2726%" y="981" width="0.0296%" height="15" fill="rgb(231,121,21)" fg:x="12297" fg:w="15"/><text x="24.5226%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (6 samples, 0.01%)</title><rect x="24.3417%" y="981" width="0.0118%" height="15" fill="rgb(251,14,34)" fg:x="12332" fg:w="6"/><text x="24.5917%" y="991.50"></text></g><g><title>bevy_ecs::archetype::Archetype::allocate (8 samples, 0.02%)</title><rect x="24.3851%" y="981" width="0.0158%" height="15" fill="rgb(249,193,11)" fg:x="12354" fg:w="8"/><text x="24.6351%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::add_bundle_to_archetype (14 samples, 0.03%)</title><rect x="24.4049%" y="981" width="0.0276%" height="15" fill="rgb(220,172,37)" fg:x="12364" fg:w="14"/><text x="24.6549%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (6 samples, 0.01%)</title><rect x="24.4444%" y="981" width="0.0118%" height="15" fill="rgb(231,229,43)" fg:x="12384" fg:w="6"/><text x="24.6944%" y="991.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (13 samples, 0.03%)</title><rect x="24.4601%" y="981" width="0.0257%" height="15" fill="rgb(250,161,5)" fg:x="12392" fg:w="13"/><text x="24.7101%" y="991.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (7 samples, 0.01%)</title><rect x="24.4977%" y="981" width="0.0138%" height="15" fill="rgb(218,225,18)" fg:x="12411" fg:w="7"/><text x="24.7477%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (19 samples, 0.04%)</title><rect x="24.5194%" y="981" width="0.0375%" height="15" fill="rgb(245,45,42)" fg:x="12422" fg:w="19"/><text x="24.7694%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (14 samples, 0.03%)</title><rect x="24.5569%" y="981" width="0.0276%" height="15" fill="rgb(211,115,1)" fg:x="12441" fg:w="14"/><text x="24.8069%" y="991.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (12 samples, 0.02%)</title><rect x="24.5924%" y="981" width="0.0237%" height="15" fill="rgb(248,133,52)" fg:x="12459" fg:w="12"/><text x="24.8424%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (33 samples, 0.07%)</title><rect x="24.6733%" y="981" width="0.0651%" height="15" fill="rgb(238,100,21)" fg:x="12500" fg:w="33"/><text x="24.9233%" y="991.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (6 samples, 0.01%)</title><rect x="24.7779%" y="981" width="0.0118%" height="15" fill="rgb(247,144,11)" fg:x="12553" fg:w="6"/><text x="25.0279%" y="991.50"></text></g><g><title>csv_core::reader::Reader::read_record (6 samples, 0.01%)</title><rect x="24.7898%" y="981" width="0.0118%" height="15" fill="rgb(206,164,16)" fg:x="12559" fg:w="6"/><text x="25.0398%" y="991.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (16 samples, 0.03%)</title><rect x="24.8154%" y="981" width="0.0316%" height="15" fill="rgb(222,34,3)" fg:x="12572" fg:w="16"/><text x="25.0654%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (79 samples, 0.16%)</title><rect x="24.9339%" y="981" width="0.1559%" height="15" fill="rgb(248,82,4)" fg:x="12632" fg:w="79"/><text x="25.1839%" y="991.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (15 samples, 0.03%)</title><rect x="25.0898%" y="981" width="0.0296%" height="15" fill="rgb(228,81,46)" fg:x="12711" fg:w="15"/><text x="25.3398%" y="991.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (11 samples, 0.02%)</title><rect x="25.1411%" y="981" width="0.0217%" height="15" fill="rgb(227,67,47)" fg:x="12737" fg:w="11"/><text x="25.3911%" y="991.50"></text></g><g><title>[[heap]] (1,406 samples, 2.78%)</title><rect x="22.4981%" y="997" width="2.7753%" height="15" fill="rgb(215,93,53)" fg:x="11398" fg:w="1406"/><text x="22.7481%" y="1007.50">[[..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (28 samples, 0.06%)</title><rect x="25.2734%" y="981" width="0.0553%" height="15" fill="rgb(248,194,39)" fg:x="12804" fg:w="28"/><text x="25.5234%" y="991.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="25.3069%" y="965" width="0.0217%" height="15" fill="rgb(215,5,19)" fg:x="12821" fg:w="11"/><text x="25.5569%" y="975.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (11 samples, 0.02%)</title><rect x="25.3069%" y="949" width="0.0217%" height="15" fill="rgb(226,215,51)" fg:x="12821" fg:w="11"/><text x="25.5569%" y="959.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (6 samples, 0.01%)</title><rect x="25.3326%" y="981" width="0.0118%" height="15" fill="rgb(225,56,26)" fg:x="12834" fg:w="6"/><text x="25.5826%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertResource&lt;R&gt; as bevy_ecs::system::commands::Command&gt;::write (10 samples, 0.02%)</title><rect x="25.3800%" y="981" width="0.0197%" height="15" fill="rgb(222,75,29)" fg:x="12858" fg:w="10"/><text x="25.6300%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.02%)</title><rect x="25.4214%" y="981" width="0.0178%" height="15" fill="rgb(236,139,6)" fg:x="12879" fg:w="9"/><text x="25.6714%" y="991.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (8 samples, 0.02%)</title><rect x="25.4392%" y="981" width="0.0158%" height="15" fill="rgb(223,137,36)" fg:x="12888" fg:w="8"/><text x="25.6892%" y="991.50"></text></g><g><title>_dl_update_slotinfo (134 samples, 0.26%)</title><rect x="25.5241%" y="981" width="0.2645%" height="15" fill="rgb(226,99,2)" fg:x="12931" fg:w="134"/><text x="25.7741%" y="991.50"></text></g><g><title>_nv011glcore (8 samples, 0.02%)</title><rect x="25.8004%" y="981" width="0.0158%" height="15" fill="rgb(206,133,23)" fg:x="13071" fg:w="8"/><text x="26.0504%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="25.8991%" y="933" width="0.0296%" height="15" fill="rgb(243,173,15)" fg:x="13121" fg:w="15"/><text x="26.1491%" y="943.50"></text></g><g><title>async_task::header::Header::register (50 samples, 0.10%)</title><rect x="25.8478%" y="981" width="0.0987%" height="15" fill="rgb(228,69,28)" fg:x="13095" fg:w="50"/><text x="26.0978%" y="991.50"></text></g><g><title>async_task::utils::abort_on_panic (24 samples, 0.05%)</title><rect x="25.8991%" y="965" width="0.0474%" height="15" fill="rgb(212,51,22)" fg:x="13121" fg:w="24"/><text x="26.1491%" y="975.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (24 samples, 0.05%)</title><rect x="25.8991%" y="949" width="0.0474%" height="15" fill="rgb(227,113,0)" fg:x="13121" fg:w="24"/><text x="26.1491%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (9 samples, 0.02%)</title><rect x="25.9287%" y="933" width="0.0178%" height="15" fill="rgb(252,84,27)" fg:x="13136" fg:w="9"/><text x="26.1787%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (9 samples, 0.02%)</title><rect x="25.9287%" y="917" width="0.0178%" height="15" fill="rgb(223,145,39)" fg:x="13136" fg:w="9"/><text x="26.1787%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="25.9287%" y="901" width="0.0178%" height="15" fill="rgb(239,219,30)" fg:x="13136" fg:w="9"/><text x="26.1787%" y="911.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (8 samples, 0.02%)</title><rect x="25.9563%" y="981" width="0.0158%" height="15" fill="rgb(224,196,39)" fg:x="13150" fg:w="8"/><text x="26.2063%" y="991.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (15 samples, 0.03%)</title><rect x="26.0017%" y="981" width="0.0296%" height="15" fill="rgb(205,35,43)" fg:x="13173" fg:w="15"/><text x="26.2517%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (20 samples, 0.04%)</title><rect x="26.0392%" y="981" width="0.0395%" height="15" fill="rgb(228,201,21)" fg:x="13192" fg:w="20"/><text x="26.2892%" y="991.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (12 samples, 0.02%)</title><rect x="26.0866%" y="981" width="0.0237%" height="15" fill="rgb(237,118,16)" fg:x="13216" fg:w="12"/><text x="26.3366%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.02%)</title><rect x="26.0866%" y="965" width="0.0237%" height="15" fill="rgb(241,17,19)" fg:x="13216" fg:w="12"/><text x="26.3366%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="26.0866%" y="949" width="0.0237%" height="15" fill="rgb(214,10,25)" fg:x="13216" fg:w="12"/><text x="26.3366%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (9 samples, 0.02%)</title><rect x="26.1340%" y="981" width="0.0178%" height="15" fill="rgb(238,37,29)" fg:x="13240" fg:w="9"/><text x="26.3840%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="26.1715%" y="981" width="0.0178%" height="15" fill="rgb(253,83,25)" fg:x="13259" fg:w="9"/><text x="26.4215%" y="991.50"></text></g><g><title>csv::deserializer::deserialize_string_record (8 samples, 0.02%)</title><rect x="26.2090%" y="981" width="0.0158%" height="15" fill="rgb(234,192,12)" fg:x="13278" fg:w="8"/><text x="26.4590%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.06%)</title><rect x="26.2820%" y="981" width="0.0632%" height="15" fill="rgb(241,216,45)" fg:x="13315" fg:w="32"/><text x="26.5320%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.03%)</title><rect x="26.3156%" y="965" width="0.0296%" height="15" fill="rgb(242,22,33)" fg:x="13332" fg:w="15"/><text x="26.5656%" y="975.50"></text></g><g><title>update_get_addr (44 samples, 0.09%)</title><rect x="26.3472%" y="981" width="0.0869%" height="15" fill="rgb(231,105,49)" fg:x="13348" fg:w="44"/><text x="26.5972%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (22 samples, 0.04%)</title><rect x="26.4380%" y="981" width="0.0434%" height="15" fill="rgb(218,204,15)" fg:x="13394" fg:w="22"/><text x="26.6880%" y="991.50"></text></g><g><title>[[stack]] (677 samples, 1.34%)</title><rect x="25.2734%" y="997" width="1.3363%" height="15" fill="rgb(235,138,41)" fg:x="12804" fg:w="677"/><text x="25.5234%" y="1007.50"></text></g><g><title>xcb_wait_for_special_event (7 samples, 0.01%)</title><rect x="26.5959%" y="981" width="0.0138%" height="15" fill="rgb(246,0,9)" fg:x="13474" fg:w="7"/><text x="26.8459%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.04%)</title><rect x="26.6413%" y="981" width="0.0355%" height="15" fill="rgb(210,74,4)" fg:x="13497" fg:w="18"/><text x="26.8913%" y="991.50"></text></g><g><title>_nv011glcore (9 samples, 0.02%)</title><rect x="26.7044%" y="981" width="0.0178%" height="15" fill="rgb(250,60,41)" fg:x="13529" fg:w="9"/><text x="26.9544%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (79 samples, 0.16%)</title><rect x="26.7380%" y="981" width="0.1559%" height="15" fill="rgb(220,115,12)" fg:x="13546" fg:w="79"/><text x="26.9880%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (22 samples, 0.04%)</title><rect x="26.8505%" y="965" width="0.0434%" height="15" fill="rgb(237,100,13)" fg:x="13603" fg:w="22"/><text x="27.1005%" y="975.50"></text></g><g><title>async_task::header::Header::register (18 samples, 0.04%)</title><rect x="26.8979%" y="981" width="0.0355%" height="15" fill="rgb(213,55,26)" fg:x="13627" fg:w="18"/><text x="27.1479%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (7 samples, 0.01%)</title><rect x="26.9334%" y="981" width="0.0138%" height="15" fill="rgb(216,17,4)" fg:x="13645" fg:w="7"/><text x="27.1834%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15 samples, 0.03%)</title><rect x="26.9472%" y="981" width="0.0296%" height="15" fill="rgb(220,153,47)" fg:x="13652" fg:w="15"/><text x="27.1972%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (7 samples, 0.01%)</title><rect x="26.9788%" y="981" width="0.0138%" height="15" fill="rgb(215,131,9)" fg:x="13668" fg:w="7"/><text x="27.2288%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (36 samples, 0.07%)</title><rect x="27.0301%" y="981" width="0.0711%" height="15" fill="rgb(233,46,42)" fg:x="13694" fg:w="36"/><text x="27.2801%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="27.1130%" y="981" width="0.0178%" height="15" fill="rgb(226,86,7)" fg:x="13736" fg:w="9"/><text x="27.3630%" y="991.50"></text></g><g><title>update_get_addr (33 samples, 0.07%)</title><rect x="27.1308%" y="981" width="0.0651%" height="15" fill="rgb(239,226,21)" fg:x="13745" fg:w="33"/><text x="27.3808%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="27.1959%" y="981" width="0.0158%" height="15" fill="rgb(244,137,22)" fg:x="13778" fg:w="8"/><text x="27.4459%" y="991.50"></text></g><g><title>[anon] (315 samples, 0.62%)</title><rect x="26.6097%" y="997" width="0.6218%" height="15" fill="rgb(211,139,35)" fg:x="13481" fg:w="315"/><text x="26.8597%" y="1007.50"></text></g><g><title>_nv011glcore (183 samples, 0.36%)</title><rect x="27.2354%" y="981" width="0.3612%" height="15" fill="rgb(214,62,50)" fg:x="13798" fg:w="183"/><text x="27.4854%" y="991.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (191 samples, 0.38%)</title><rect x="27.2315%" y="997" width="0.3770%" height="15" fill="rgb(212,113,44)" fg:x="13796" fg:w="191"/><text x="27.4815%" y="1007.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (6 samples, 0.01%)</title><rect x="27.5966%" y="981" width="0.0118%" height="15" fill="rgb(226,150,43)" fg:x="13981" fg:w="6"/><text x="27.8466%" y="991.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (6 samples, 0.01%)</title><rect x="27.5966%" y="965" width="0.0118%" height="15" fill="rgb(250,71,37)" fg:x="13981" fg:w="6"/><text x="27.8466%" y="975.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="27.6144%" y="981" width="0.0533%" height="15" fill="rgb(219,76,19)" fg:x="13990" fg:w="27"/><text x="27.8644%" y="991.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (6 samples, 0.01%)</title><rect x="27.6677%" y="981" width="0.0118%" height="15" fill="rgb(250,39,11)" fg:x="14017" fg:w="6"/><text x="27.9177%" y="991.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (29 samples, 0.06%)</title><rect x="27.6894%" y="981" width="0.0572%" height="15" fill="rgb(230,64,31)" fg:x="14028" fg:w="29"/><text x="27.9394%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (9 samples, 0.02%)</title><rect x="27.7289%" y="965" width="0.0178%" height="15" fill="rgb(208,222,23)" fg:x="14048" fg:w="9"/><text x="27.9789%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (55 samples, 0.11%)</title><rect x="27.8039%" y="981" width="0.1086%" height="15" fill="rgb(227,125,18)" fg:x="14086" fg:w="55"/><text x="28.0539%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (14 samples, 0.03%)</title><rect x="27.8848%" y="965" width="0.0276%" height="15" fill="rgb(234,210,9)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.03%)</title><rect x="27.8848%" y="949" width="0.0276%" height="15" fill="rgb(217,127,24)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.03%)</title><rect x="27.8848%" y="933" width="0.0276%" height="15" fill="rgb(239,141,48)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="943.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (14 samples, 0.03%)</title><rect x="27.8848%" y="917" width="0.0276%" height="15" fill="rgb(227,109,8)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="927.50"></text></g><g><title>async_executor::Executor::try_tick (14 samples, 0.03%)</title><rect x="27.8848%" y="901" width="0.0276%" height="15" fill="rgb(235,184,23)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14 samples, 0.03%)</title><rect x="27.8848%" y="885" width="0.0276%" height="15" fill="rgb(227,226,48)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="27.8848%" y="869" width="0.0276%" height="15" fill="rgb(206,150,11)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (14 samples, 0.03%)</title><rect x="27.8848%" y="853" width="0.0276%" height="15" fill="rgb(254,2,33)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="27.8848%" y="837" width="0.0276%" height="15" fill="rgb(243,160,20)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (14 samples, 0.03%)</title><rect x="27.8848%" y="821" width="0.0276%" height="15" fill="rgb(218,208,30)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (14 samples, 0.03%)</title><rect x="27.8848%" y="805" width="0.0276%" height="15" fill="rgb(224,120,49)" fg:x="14127" fg:w="14"/><text x="28.1348%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="27.8947%" y="789" width="0.0178%" height="15" fill="rgb(246,12,2)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (9 samples, 0.02%)</title><rect x="27.8947%" y="773" width="0.0178%" height="15" fill="rgb(236,117,3)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.02%)</title><rect x="27.8947%" y="757" width="0.0178%" height="15" fill="rgb(216,128,52)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (9 samples, 0.02%)</title><rect x="27.8947%" y="741" width="0.0178%" height="15" fill="rgb(246,145,19)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="751.50"></text></g><g><title>bevy_pbr::render::mesh::queue_mesh_view_bind_groups (9 samples, 0.02%)</title><rect x="27.8947%" y="725" width="0.0178%" height="15" fill="rgb(222,11,46)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="735.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (9 samples, 0.02%)</title><rect x="27.8947%" y="709" width="0.0178%" height="15" fill="rgb(245,82,36)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="719.50"></text></g><g><title>wgpu::Device::create_bind_group (9 samples, 0.02%)</title><rect x="27.8947%" y="693" width="0.0178%" height="15" fill="rgb(250,73,51)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="703.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (9 samples, 0.02%)</title><rect x="27.8947%" y="677" width="0.0178%" height="15" fill="rgb(221,189,23)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="687.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (9 samples, 0.02%)</title><rect x="27.8947%" y="661" width="0.0178%" height="15" fill="rgb(210,33,7)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="671.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (9 samples, 0.02%)</title><rect x="27.8947%" y="645" width="0.0178%" height="15" fill="rgb(210,107,22)" fg:x="14132" fg:w="9"/><text x="28.1447%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (6 samples, 0.01%)</title><rect x="27.9282%" y="773" width="0.0118%" height="15" fill="rgb(222,116,37)" fg:x="14149" fg:w="6"/><text x="28.1782%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (6 samples, 0.01%)</title><rect x="27.9282%" y="757" width="0.0118%" height="15" fill="rgb(254,17,48)" fg:x="14149" fg:w="6"/><text x="28.1782%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="27.9282%" y="741" width="0.0118%" height="15" fill="rgb(224,36,32)" fg:x="14149" fg:w="6"/><text x="28.1782%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (6 samples, 0.01%)</title><rect x="27.9282%" y="725" width="0.0118%" height="15" fill="rgb(232,90,46)" fg:x="14149" fg:w="6"/><text x="28.1782%" y="735.50"></text></g><g><title>bevy_pbr::render::mesh::queue_mesh_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="709" width="0.0178%" height="15" fill="rgb(241,66,40)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="719.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="693" width="0.0178%" height="15" fill="rgb(249,184,29)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="703.50"></text></g><g><title>wgpu::Device::create_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="677" width="0.0178%" height="15" fill="rgb(231,181,1)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="661" width="0.0178%" height="15" fill="rgb(224,94,2)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="645" width="0.0178%" height="15" fill="rgb(229,170,15)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="655.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (9 samples, 0.02%)</title><rect x="27.9401%" y="629" width="0.0178%" height="15" fill="rgb(240,127,35)" fg:x="14155" fg:w="9"/><text x="28.1901%" y="639.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (9 samples, 0.02%)</title><rect x="27.9756%" y="613" width="0.0178%" height="15" fill="rgb(248,196,34)" fg:x="14173" fg:w="9"/><text x="28.2256%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (31 samples, 0.06%)</title><rect x="27.9401%" y="773" width="0.0612%" height="15" fill="rgb(236,137,7)" fg:x="14155" fg:w="31"/><text x="28.1901%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (31 samples, 0.06%)</title><rect x="27.9401%" y="757" width="0.0612%" height="15" fill="rgb(235,127,16)" fg:x="14155" fg:w="31"/><text x="28.1901%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.06%)</title><rect x="27.9401%" y="741" width="0.0612%" height="15" fill="rgb(250,192,54)" fg:x="14155" fg:w="31"/><text x="28.1901%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (31 samples, 0.06%)</title><rect x="27.9401%" y="725" width="0.0612%" height="15" fill="rgb(218,98,20)" fg:x="14155" fg:w="31"/><text x="28.1901%" y="735.50"></text></g><g><title>bevy_sprite::mesh2d::mesh::queue_mesh2d_view_bind_groups (22 samples, 0.04%)</title><rect x="27.9578%" y="709" width="0.0434%" height="15" fill="rgb(230,176,47)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="719.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (22 samples, 0.04%)</title><rect x="27.9578%" y="693" width="0.0434%" height="15" fill="rgb(244,2,33)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="703.50"></text></g><g><title>wgpu::Device::create_bind_group (22 samples, 0.04%)</title><rect x="27.9578%" y="677" width="0.0434%" height="15" fill="rgb(231,100,17)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (22 samples, 0.04%)</title><rect x="27.9578%" y="661" width="0.0434%" height="15" fill="rgb(245,23,12)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (22 samples, 0.04%)</title><rect x="27.9578%" y="645" width="0.0434%" height="15" fill="rgb(249,55,22)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="655.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (22 samples, 0.04%)</title><rect x="27.9578%" y="629" width="0.0434%" height="15" fill="rgb(207,134,9)" fg:x="14164" fg:w="22"/><text x="28.2078%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (46 samples, 0.09%)</title><rect x="27.9263%" y="965" width="0.0908%" height="15" fill="rgb(218,134,0)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (46 samples, 0.09%)</title><rect x="27.9263%" y="949" width="0.0908%" height="15" fill="rgb(213,212,33)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (46 samples, 0.09%)</title><rect x="27.9263%" y="933" width="0.0908%" height="15" fill="rgb(252,106,18)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.09%)</title><rect x="27.9263%" y="917" width="0.0908%" height="15" fill="rgb(208,126,42)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (46 samples, 0.09%)</title><rect x="27.9263%" y="901" width="0.0908%" height="15" fill="rgb(246,175,29)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="911.50"></text></g><g><title>async_executor::Executor::try_tick (46 samples, 0.09%)</title><rect x="27.9263%" y="885" width="0.0908%" height="15" fill="rgb(215,13,50)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (46 samples, 0.09%)</title><rect x="27.9263%" y="869" width="0.0908%" height="15" fill="rgb(216,172,15)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.09%)</title><rect x="27.9263%" y="853" width="0.0908%" height="15" fill="rgb(212,103,13)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="863.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (46 samples, 0.09%)</title><rect x="27.9263%" y="837" width="0.0908%" height="15" fill="rgb(231,171,36)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.09%)</title><rect x="27.9263%" y="821" width="0.0908%" height="15" fill="rgb(250,123,20)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (46 samples, 0.09%)</title><rect x="27.9263%" y="805" width="0.0908%" height="15" fill="rgb(212,53,50)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (46 samples, 0.09%)</title><rect x="27.9263%" y="789" width="0.0908%" height="15" fill="rgb(243,54,12)" fg:x="14148" fg:w="46"/><text x="28.1763%" y="799.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (39 samples, 0.08%)</title><rect x="28.0210%" y="853" width="0.0770%" height="15" fill="rgb(234,101,34)" fg:x="14196" fg:w="39"/><text x="28.2710%" y="863.50"></text></g><g><title>ash::device::Device::queue_submit (39 samples, 0.08%)</title><rect x="28.0210%" y="837" width="0.0770%" height="15" fill="rgb(254,67,22)" fg:x="14196" fg:w="39"/><text x="28.2710%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (39 samples, 0.08%)</title><rect x="28.0210%" y="821" width="0.0770%" height="15" fill="rgb(250,35,47)" fg:x="14196" fg:w="39"/><text x="28.2710%" y="831.50"></text></g><g><title>__glx_Main (39 samples, 0.08%)</title><rect x="28.0210%" y="805" width="0.0770%" height="15" fill="rgb(226,126,38)" fg:x="14196" fg:w="39"/><text x="28.2710%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (39 samples, 0.08%)</title><rect x="28.0210%" y="789" width="0.0770%" height="15" fill="rgb(216,138,53)" fg:x="14196" fg:w="39"/><text x="28.2710%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (35 samples, 0.07%)</title><rect x="28.0289%" y="773" width="0.0691%" height="15" fill="rgb(246,199,43)" fg:x="14200" fg:w="35"/><text x="28.2789%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="28.0585%" y="757" width="0.0395%" height="15" fill="rgb(232,125,11)" fg:x="14215" fg:w="20"/><text x="28.3085%" y="767.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (6 samples, 0.01%)</title><rect x="28.1256%" y="821" width="0.0118%" height="15" fill="rgb(218,219,45)" fg:x="14249" fg:w="6"/><text x="28.3756%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="28.1256%" y="805" width="0.0118%" height="15" fill="rgb(216,102,54)" fg:x="14249" fg:w="6"/><text x="28.3756%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="28.1256%" y="789" width="0.0118%" height="15" fill="rgb(250,228,7)" fg:x="14249" fg:w="6"/><text x="28.3756%" y="799.50"></text></g><g><title>_nv011glcore (18 samples, 0.04%)</title><rect x="28.2776%" y="725" width="0.0355%" height="15" fill="rgb(226,125,25)" fg:x="14326" fg:w="18"/><text x="28.5276%" y="735.50"></text></g><g><title>__free (18 samples, 0.04%)</title><rect x="28.2776%" y="709" width="0.0355%" height="15" fill="rgb(224,165,27)" fg:x="14326" fg:w="18"/><text x="28.5276%" y="719.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="28.2954%" y="693" width="0.0178%" height="15" fill="rgb(233,86,3)" fg:x="14335" fg:w="9"/><text x="28.5454%" y="703.50"></text></g><g><title>_nv012glcore (6 samples, 0.01%)</title><rect x="28.5046%" y="677" width="0.0118%" height="15" fill="rgb(228,116,20)" fg:x="14441" fg:w="6"/><text x="28.7546%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (215 samples, 0.42%)</title><rect x="28.1059%" y="837" width="0.4244%" height="15" fill="rgb(209,192,17)" fg:x="14239" fg:w="215"/><text x="28.3559%" y="847.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (199 samples, 0.39%)</title><rect x="28.1375%" y="821" width="0.3928%" height="15" fill="rgb(224,88,34)" fg:x="14255" fg:w="199"/><text x="28.3875%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (198 samples, 0.39%)</title><rect x="28.1394%" y="805" width="0.3908%" height="15" fill="rgb(233,38,6)" fg:x="14256" fg:w="198"/><text x="28.3894%" y="815.50"></text></g><g><title>ash::device::Device::reset_command_pool (196 samples, 0.39%)</title><rect x="28.1434%" y="789" width="0.3869%" height="15" fill="rgb(212,59,30)" fg:x="14258" fg:w="196"/><text x="28.3934%" y="799.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_pool (196 samples, 0.39%)</title><rect x="28.1434%" y="773" width="0.3869%" height="15" fill="rgb(213,80,3)" fg:x="14258" fg:w="196"/><text x="28.3934%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (196 samples, 0.39%)</title><rect x="28.1434%" y="757" width="0.3869%" height="15" fill="rgb(251,178,7)" fg:x="14258" fg:w="196"/><text x="28.3934%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (173 samples, 0.34%)</title><rect x="28.1888%" y="741" width="0.3415%" height="15" fill="rgb(213,154,26)" fg:x="14281" fg:w="173"/><text x="28.4388%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (110 samples, 0.22%)</title><rect x="28.3131%" y="725" width="0.2171%" height="15" fill="rgb(238,165,49)" fg:x="14344" fg:w="110"/><text x="28.5631%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (33 samples, 0.07%)</title><rect x="28.4651%" y="709" width="0.0651%" height="15" fill="rgb(248,91,46)" fg:x="14421" fg:w="33"/><text x="28.7151%" y="719.50"></text></g><g><title>_nv012glcore (16 samples, 0.03%)</title><rect x="28.4987%" y="693" width="0.0316%" height="15" fill="rgb(244,21,52)" fg:x="14438" fg:w="16"/><text x="28.7487%" y="703.50"></text></g><g><title>_nv013glcore (7 samples, 0.01%)</title><rect x="28.5164%" y="677" width="0.0138%" height="15" fill="rgb(247,122,20)" fg:x="14447" fg:w="7"/><text x="28.7664%" y="687.50"></text></g><g><title>_nv013glcore (6 samples, 0.01%)</title><rect x="28.5184%" y="661" width="0.0118%" height="15" fill="rgb(218,27,9)" fg:x="14448" fg:w="6"/><text x="28.7684%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="28.5855%" y="805" width="0.0158%" height="15" fill="rgb(246,7,6)" fg:x="14482" fg:w="8"/><text x="28.8355%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="28.5855%" y="789" width="0.0158%" height="15" fill="rgb(227,135,54)" fg:x="14482" fg:w="8"/><text x="28.8355%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="28.5855%" y="773" width="0.0158%" height="15" fill="rgb(247,14,11)" fg:x="14482" fg:w="8"/><text x="28.8355%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;)&gt;&gt; (8 samples, 0.02%)</title><rect x="28.5855%" y="757" width="0.0158%" height="15" fill="rgb(206,149,34)" fg:x="14482" fg:w="8"/><text x="28.8355%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="28.5855%" y="741" width="0.0158%" height="15" fill="rgb(227,228,4)" fg:x="14482" fg:w="8"/><text x="28.8355%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (6 samples, 0.01%)</title><rect x="28.5895%" y="725" width="0.0118%" height="15" fill="rgb(238,218,28)" fg:x="14484" fg:w="6"/><text x="28.8395%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.01%)</title><rect x="28.5895%" y="709" width="0.0118%" height="15" fill="rgb(252,86,40)" fg:x="14484" fg:w="6"/><text x="28.8395%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="28.5895%" y="693" width="0.0118%" height="15" fill="rgb(251,225,11)" fg:x="14484" fg:w="6"/><text x="28.8395%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="28.5895%" y="677" width="0.0118%" height="15" fill="rgb(206,46,49)" fg:x="14484" fg:w="6"/><text x="28.8395%" y="687.50"></text></g><g><title>__free (6 samples, 0.01%)</title><rect x="28.5895%" y="661" width="0.0118%" height="15" fill="rgb(245,128,24)" fg:x="14484" fg:w="6"/><text x="28.8395%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (15 samples, 0.03%)</title><rect x="28.5737%" y="821" width="0.0296%" height="15" fill="rgb(219,177,34)" fg:x="14476" fg:w="15"/><text x="28.8237%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.02%)</title><rect x="28.6072%" y="805" width="0.0237%" height="15" fill="rgb(218,60,48)" fg:x="14493" fg:w="12"/><text x="28.8572%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="28.6092%" y="789" width="0.0217%" height="15" fill="rgb(221,11,5)" fg:x="14494" fg:w="11"/><text x="28.8592%" y="799.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::add_trackers (17 samples, 0.03%)</title><rect x="28.6072%" y="821" width="0.0336%" height="15" fill="rgb(220,148,13)" fg:x="14493" fg:w="17"/><text x="28.8572%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="28.6408%" y="805" width="0.0138%" height="15" fill="rgb(210,16,3)" fg:x="14510" fg:w="7"/><text x="28.8908%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (7 samples, 0.01%)</title><rect x="28.6408%" y="789" width="0.0138%" height="15" fill="rgb(236,80,2)" fg:x="14510" fg:w="7"/><text x="28.8908%" y="799.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (289 samples, 0.57%)</title><rect x="28.1039%" y="853" width="0.5704%" height="15" fill="rgb(239,129,19)" fg:x="14238" fg:w="289"/><text x="28.3539%" y="863.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (73 samples, 0.14%)</title><rect x="28.5303%" y="837" width="0.1441%" height="15" fill="rgb(220,106,35)" fg:x="14454" fg:w="73"/><text x="28.7803%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (17 samples, 0.03%)</title><rect x="28.6408%" y="821" width="0.0336%" height="15" fill="rgb(252,139,45)" fg:x="14510" fg:w="17"/><text x="28.8908%" y="831.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (341 samples, 0.67%)</title><rect x="28.0171%" y="917" width="0.6731%" height="15" fill="rgb(229,8,36)" fg:x="14194" fg:w="341"/><text x="28.2671%" y="927.50"></text></g><g><title>wgpu::Queue::submit (339 samples, 0.67%)</title><rect x="28.0210%" y="901" width="0.6691%" height="15" fill="rgb(230,126,33)" fg:x="14196" fg:w="339"/><text x="28.2710%" y="911.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (339 samples, 0.67%)</title><rect x="28.0210%" y="885" width="0.6691%" height="15" fill="rgb(239,140,21)" fg:x="14196" fg:w="339"/><text x="28.2710%" y="895.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (339 samples, 0.67%)</title><rect x="28.0210%" y="869" width="0.6691%" height="15" fill="rgb(254,104,9)" fg:x="14196" fg:w="339"/><text x="28.2710%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (7 samples, 0.01%)</title><rect x="28.6763%" y="853" width="0.0138%" height="15" fill="rgb(239,52,14)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (7 samples, 0.01%)</title><rect x="28.6763%" y="837" width="0.0138%" height="15" fill="rgb(208,227,44)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (7 samples, 0.01%)</title><rect x="28.6763%" y="821" width="0.0138%" height="15" fill="rgb(246,18,19)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="28.6763%" y="805" width="0.0138%" height="15" fill="rgb(235,228,25)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="28.6763%" y="789" width="0.0138%" height="15" fill="rgb(240,156,20)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="28.6763%" y="773" width="0.0138%" height="15" fill="rgb(224,8,20)" fg:x="14528" fg:w="7"/><text x="28.9263%" y="783.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (118 samples, 0.23%)</title><rect x="35.5335%" y="677" width="0.2329%" height="15" fill="rgb(214,12,52)" fg:x="18002" fg:w="118"/><text x="35.7835%" y="687.50"></text></g><g><title>__GI___sched_yield (4,623 samples, 9.13%)</title><rect x="35.9421%" y="661" width="9.1252%" height="15" fill="rgb(211,220,47)" fg:x="18209" fg:w="4623"/><text x="36.1921%" y="671.50">__GI___sched_..</text></g><g><title>_nv011glcore (538 samples, 1.06%)</title><rect x="45.0673%" y="661" width="1.0619%" height="15" fill="rgb(250,173,5)" fg:x="22832" fg:w="538"/><text x="45.3173%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (8,936 samples, 17.64%)</title><rect x="28.6901%" y="709" width="17.6385%" height="15" fill="rgb(250,125,52)" fg:x="14535" fg:w="8936"/><text x="28.9401%" y="719.50">[libGLX_nvidia.so.510.60.02]</text></g><g><title>_nv011glcore (8,936 samples, 17.64%)</title><rect x="28.6901%" y="693" width="17.6385%" height="15" fill="rgb(209,133,18)" fg:x="14535" fg:w="8936"/><text x="28.9401%" y="703.50">_nv011glcore</text></g><g><title>_nv011glcore (5,351 samples, 10.56%)</title><rect x="35.7665%" y="677" width="10.5622%" height="15" fill="rgb(216,173,22)" fg:x="18120" fg:w="5351"/><text x="36.0165%" y="687.50">_nv011glcore</text></g><g><title>sched_yield@plt (101 samples, 0.20%)</title><rect x="46.1292%" y="661" width="0.1994%" height="15" fill="rgb(205,3,22)" fg:x="23370" fg:w="101"/><text x="46.3792%" y="671.50"></text></g><g><title>_nv009glcore (33 samples, 0.07%)</title><rect x="46.3641%" y="629" width="0.0651%" height="15" fill="rgb(248,22,20)" fg:x="23489" fg:w="33"/><text x="46.6141%" y="639.50"></text></g><g><title>_nv009glcore (37 samples, 0.07%)</title><rect x="46.3582%" y="645" width="0.0730%" height="15" fill="rgb(233,6,29)" fg:x="23486" fg:w="37"/><text x="46.6082%" y="655.50"></text></g><g><title>_nv009glcore (38 samples, 0.08%)</title><rect x="46.3582%" y="661" width="0.0750%" height="15" fill="rgb(240,22,54)" fg:x="23486" fg:w="38"/><text x="46.6082%" y="671.50"></text></g><g><title>_nv009glcore (6 samples, 0.01%)</title><rect x="46.5043%" y="613" width="0.0118%" height="15" fill="rgb(231,133,32)" fg:x="23560" fg:w="6"/><text x="46.7543%" y="623.50"></text></g><g><title>_nv011glcore (105 samples, 0.21%)</title><rect x="46.3286%" y="709" width="0.2073%" height="15" fill="rgb(248,193,4)" fg:x="23471" fg:w="105"/><text x="46.5786%" y="719.50"></text></g><g><title>_nv041glcore (105 samples, 0.21%)</title><rect x="46.3286%" y="693" width="0.2073%" height="15" fill="rgb(211,178,46)" fg:x="23471" fg:w="105"/><text x="46.5786%" y="703.50"></text></g><g><title>_nv041glcore (101 samples, 0.20%)</title><rect x="46.3365%" y="677" width="0.1994%" height="15" fill="rgb(224,5,42)" fg:x="23475" fg:w="101"/><text x="46.5865%" y="687.50"></text></g><g><title>_nv041glcore (52 samples, 0.10%)</title><rect x="46.4332%" y="661" width="0.1026%" height="15" fill="rgb(239,176,25)" fg:x="23524" fg:w="52"/><text x="46.6832%" y="671.50"></text></g><g><title>_nv041glcore (37 samples, 0.07%)</title><rect x="46.4628%" y="645" width="0.0730%" height="15" fill="rgb(245,187,50)" fg:x="23539" fg:w="37"/><text x="46.7128%" y="655.50"></text></g><g><title>_nv041glcore (25 samples, 0.05%)</title><rect x="46.4865%" y="629" width="0.0493%" height="15" fill="rgb(248,24,15)" fg:x="23551" fg:w="25"/><text x="46.7365%" y="639.50"></text></g><g><title>_nv041glcore (10 samples, 0.02%)</title><rect x="46.5161%" y="613" width="0.0197%" height="15" fill="rgb(205,166,13)" fg:x="23566" fg:w="10"/><text x="46.7661%" y="623.50"></text></g><g><title>_nv009glcore (9,044 samples, 17.85%)</title><rect x="28.6901%" y="741" width="17.8516%" height="15" fill="rgb(208,114,23)" fg:x="14535" fg:w="9044"/><text x="28.9401%" y="751.50">_nv009glcore</text></g><g><title>_nv041glcore (9,044 samples, 17.85%)</title><rect x="28.6901%" y="725" width="17.8516%" height="15" fill="rgb(239,127,18)" fg:x="14535" fg:w="9044"/><text x="28.9401%" y="735.50">_nv041glcore</text></g><g><title>_nv011glcore (18 samples, 0.04%)</title><rect x="46.5418%" y="661" width="0.0355%" height="15" fill="rgb(219,154,28)" fg:x="23579" fg:w="18"/><text x="46.7918%" y="671.50"></text></g><g><title>_nv041glcore (18 samples, 0.04%)</title><rect x="46.5418%" y="645" width="0.0355%" height="15" fill="rgb(225,157,23)" fg:x="23579" fg:w="18"/><text x="46.7918%" y="655.50"></text></g><g><title>_nv041glcore (18 samples, 0.04%)</title><rect x="46.5418%" y="629" width="0.0355%" height="15" fill="rgb(219,8,6)" fg:x="23579" fg:w="18"/><text x="46.7918%" y="639.50"></text></g><g><title>_nv041glcore (17 samples, 0.03%)</title><rect x="46.5438%" y="613" width="0.0336%" height="15" fill="rgb(212,47,6)" fg:x="23580" fg:w="17"/><text x="46.7938%" y="623.50"></text></g><g><title>_nv041glcore (12 samples, 0.02%)</title><rect x="46.5536%" y="597" width="0.0237%" height="15" fill="rgb(224,190,4)" fg:x="23585" fg:w="12"/><text x="46.8036%" y="607.50"></text></g><g><title>_nv041glcore (9 samples, 0.02%)</title><rect x="46.5596%" y="581" width="0.0178%" height="15" fill="rgb(239,183,29)" fg:x="23588" fg:w="9"/><text x="46.8096%" y="591.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (9,458 samples, 18.67%)</title><rect x="27.9124%" y="981" width="18.6688%" height="15" fill="rgb(213,57,7)" fg:x="14141" fg:w="9458"/><text x="28.1624%" y="991.50">&lt;bevy_ecs::schedule::stage::S..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (9,405 samples, 18.56%)</title><rect x="28.0171%" y="965" width="18.5642%" height="15" fill="rgb(216,148,1)" fg:x="14194" fg:w="9405"/><text x="28.2671%" y="975.50">&lt;bevy_ecs::system::exclusive_..</text></g><g><title>core::ops::function::FnMut::call_mut (9,405 samples, 18.56%)</title><rect x="28.0171%" y="949" width="18.5642%" height="15" fill="rgb(236,182,29)" fg:x="14194" fg:w="9405"/><text x="28.2671%" y="959.50">core::ops::function::FnMut::c..</text></g><g><title>bevy_render::renderer::render_system (9,405 samples, 18.56%)</title><rect x="28.0171%" y="933" width="18.5642%" height="15" fill="rgb(244,120,48)" fg:x="14194" fg:w="9405"/><text x="28.2671%" y="943.50">bevy_render::renderer::render..</text></g><g><title>wgpu::SurfaceTexture::present (9,064 samples, 17.89%)</title><rect x="28.6901%" y="917" width="17.8911%" height="15" fill="rgb(206,71,34)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="927.50">wgpu::SurfaceTexture::present</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (9,064 samples, 17.89%)</title><rect x="28.6901%" y="901" width="17.8911%" height="15" fill="rgb(242,32,6)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="911.50">&lt;wgpu::backend::direct::Cont..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (9,064 samples, 17.89%)</title><rect x="28.6901%" y="885" width="17.8911%" height="15" fill="rgb(241,35,3)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="895.50">wgpu_core::present::&lt;impl wg..</text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (9,064 samples, 17.89%)</title><rect x="28.6901%" y="869" width="17.8911%" height="15" fill="rgb(222,62,19)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="879.50">&lt;wgpu_hal::vulkan::Queue as ..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (9,064 samples, 17.89%)</title><rect x="28.6901%" y="853" width="17.8911%" height="15" fill="rgb(223,110,41)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="863.50">ash::extensions::khr::swapch..</text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (9,064 samples, 17.89%)</title><rect x="28.6901%" y="837" width="17.8911%" height="15" fill="rgb(208,224,4)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="847.50">ash::vk::extensions::KhrSwap..</text></g><g><title>__glx_Main (9,064 samples, 17.89%)</title><rect x="28.6901%" y="821" width="17.8911%" height="15" fill="rgb(241,137,19)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="831.50">__glx_Main</text></g><g><title>vk_optimusGetDeviceProcAddr (9,064 samples, 17.89%)</title><rect x="28.6901%" y="805" width="17.8911%" height="15" fill="rgb(244,24,17)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="815.50">vk_optimusGetDeviceProcAddr</text></g><g><title>vk_optimusGetDeviceProcAddr (9,064 samples, 17.89%)</title><rect x="28.6901%" y="789" width="17.8911%" height="15" fill="rgb(245,178,49)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="799.50">vk_optimusGetDeviceProcAddr</text></g><g><title>vk_optimusGetDeviceProcAddr (9,064 samples, 17.89%)</title><rect x="28.6901%" y="773" width="17.8911%" height="15" fill="rgb(219,160,38)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="783.50">vk_optimusGetDeviceProcAddr</text></g><g><title>vk_optimusGetDeviceProcAddr (9,064 samples, 17.89%)</title><rect x="28.6901%" y="757" width="17.8911%" height="15" fill="rgb(228,137,14)" fg:x="14535" fg:w="9064"/><text x="28.9401%" y="767.50">vk_optimusGetDeviceProcAddr</text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="46.5418%" y="741" width="0.0395%" height="15" fill="rgb(237,134,11)" fg:x="23579" fg:w="20"/><text x="46.7918%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="46.5418%" y="725" width="0.0395%" height="15" fill="rgb(211,126,44)" fg:x="23579" fg:w="20"/><text x="46.7918%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="46.5418%" y="709" width="0.0395%" height="15" fill="rgb(226,171,33)" fg:x="23579" fg:w="20"/><text x="46.7918%" y="719.50"></text></g><g><title>_nv009glcore (20 samples, 0.04%)</title><rect x="46.5418%" y="693" width="0.0395%" height="15" fill="rgb(253,99,13)" fg:x="23579" fg:w="20"/><text x="46.7918%" y="703.50"></text></g><g><title>_nv041glcore (20 samples, 0.04%)</title><rect x="46.5418%" y="677" width="0.0395%" height="15" fill="rgb(244,48,7)" fg:x="23579" fg:w="20"/><text x="46.7918%" y="687.50"></text></g><g><title>_nv009glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="757" width="0.0257%" height="15" fill="rgb(244,217,54)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="767.50"></text></g><g><title>_nv041glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="741" width="0.0257%" height="15" fill="rgb(224,15,18)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="751.50"></text></g><g><title>_nv011glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="725" width="0.0257%" height="15" fill="rgb(244,99,12)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="735.50"></text></g><g><title>_nv041glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="709" width="0.0257%" height="15" fill="rgb(233,226,8)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="719.50"></text></g><g><title>_nv041glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="693" width="0.0257%" height="15" fill="rgb(229,211,3)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="703.50"></text></g><g><title>_nv009glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="677" width="0.0257%" height="15" fill="rgb(216,140,21)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="687.50"></text></g><g><title>_nv009glcore (13 samples, 0.03%)</title><rect x="46.6010%" y="661" width="0.0257%" height="15" fill="rgb(234,122,30)" fg:x="23609" fg:w="13"/><text x="46.8510%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (43 samples, 0.08%)</title><rect x="46.5892%" y="981" width="0.0849%" height="15" fill="rgb(236,25,46)" fg:x="23603" fg:w="43"/><text x="46.8392%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 0.08%)</title><rect x="46.5971%" y="965" width="0.0770%" height="15" fill="rgb(217,52,54)" fg:x="23607" fg:w="39"/><text x="46.8471%" y="975.50"></text></g><g><title>bevy_render::renderer::render_system (39 samples, 0.08%)</title><rect x="46.5971%" y="949" width="0.0770%" height="15" fill="rgb(222,29,26)" fg:x="23607" fg:w="39"/><text x="46.8471%" y="959.50"></text></g><g><title>wgpu::SurfaceTexture::present (37 samples, 0.07%)</title><rect x="46.6010%" y="933" width="0.0730%" height="15" fill="rgb(216,177,29)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (37 samples, 0.07%)</title><rect x="46.6010%" y="917" width="0.0730%" height="15" fill="rgb(247,136,51)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="927.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (37 samples, 0.07%)</title><rect x="46.6010%" y="901" width="0.0730%" height="15" fill="rgb(231,47,47)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="911.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (37 samples, 0.07%)</title><rect x="46.6010%" y="885" width="0.0730%" height="15" fill="rgb(211,192,36)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="895.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (37 samples, 0.07%)</title><rect x="46.6010%" y="869" width="0.0730%" height="15" fill="rgb(229,156,32)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="879.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (37 samples, 0.07%)</title><rect x="46.6010%" y="853" width="0.0730%" height="15" fill="rgb(248,213,20)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="863.50"></text></g><g><title>__glx_Main (37 samples, 0.07%)</title><rect x="46.6010%" y="837" width="0.0730%" height="15" fill="rgb(217,64,7)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (37 samples, 0.07%)</title><rect x="46.6010%" y="821" width="0.0730%" height="15" fill="rgb(232,142,8)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (37 samples, 0.07%)</title><rect x="46.6010%" y="805" width="0.0730%" height="15" fill="rgb(224,92,44)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (37 samples, 0.07%)</title><rect x="46.6010%" y="789" width="0.0730%" height="15" fill="rgb(214,169,17)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (37 samples, 0.07%)</title><rect x="46.6010%" y="773" width="0.0730%" height="15" fill="rgb(210,59,37)" fg:x="23609" fg:w="37"/><text x="46.8510%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.05%)</title><rect x="46.6267%" y="757" width="0.0474%" height="15" fill="rgb(214,116,48)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.05%)</title><rect x="46.6267%" y="741" width="0.0474%" height="15" fill="rgb(244,191,6)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.05%)</title><rect x="46.6267%" y="725" width="0.0474%" height="15" fill="rgb(241,50,52)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="735.50"></text></g><g><title>_nv009glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="709" width="0.0474%" height="15" fill="rgb(236,75,39)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="719.50"></text></g><g><title>_nv041glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="693" width="0.0474%" height="15" fill="rgb(236,99,0)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="703.50"></text></g><g><title>_nv011glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="677" width="0.0474%" height="15" fill="rgb(207,202,15)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="687.50"></text></g><g><title>_nv041glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="661" width="0.0474%" height="15" fill="rgb(233,207,14)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="671.50"></text></g><g><title>_nv041glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="645" width="0.0474%" height="15" fill="rgb(226,27,51)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="655.50"></text></g><g><title>_nv041glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="629" width="0.0474%" height="15" fill="rgb(206,104,42)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="639.50"></text></g><g><title>_nv041glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="613" width="0.0474%" height="15" fill="rgb(212,225,4)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="623.50"></text></g><g><title>_nv009glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="597" width="0.0474%" height="15" fill="rgb(233,96,42)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="607.50"></text></g><g><title>_nv009glcore (24 samples, 0.05%)</title><rect x="46.6267%" y="581" width="0.0474%" height="15" fill="rgb(229,21,32)" fg:x="23622" fg:w="24"/><text x="46.8767%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (6 samples, 0.01%)</title><rect x="46.6740%" y="981" width="0.0118%" height="15" fill="rgb(226,216,24)" fg:x="23646" fg:w="6"/><text x="46.9240%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (45 samples, 0.09%)</title><rect x="46.6859%" y="981" width="0.0888%" height="15" fill="rgb(221,163,17)" fg:x="23652" fg:w="45"/><text x="46.9359%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14),()&gt;&gt;::run (7 samples, 0.01%)</title><rect x="46.7609%" y="965" width="0.0138%" height="15" fill="rgb(216,216,42)" fg:x="23690" fg:w="7"/><text x="47.0109%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="46.7609%" y="949" width="0.0138%" height="15" fill="rgb(240,118,7)" fg:x="23690" fg:w="7"/><text x="47.0109%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="46.7609%" y="933" width="0.0138%" height="15" fill="rgb(221,67,37)" fg:x="23690" fg:w="7"/><text x="47.0109%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="46.7609%" y="917" width="0.0138%" height="15" fill="rgb(241,32,44)" fg:x="23690" fg:w="7"/><text x="47.0109%" y="927.50"></text></g><g><title>bevy_sprite::render::queue_sprites (6 samples, 0.01%)</title><rect x="46.7629%" y="901" width="0.0118%" height="15" fill="rgb(235,204,43)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="911.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="885" width="0.0118%" height="15" fill="rgb(213,116,10)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="895.50"></text></g><g><title>wgpu::Device::create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="869" width="0.0118%" height="15" fill="rgb(239,15,48)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="879.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="853" width="0.0118%" height="15" fill="rgb(207,123,36)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="863.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="837" width="0.0118%" height="15" fill="rgb(209,103,30)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="847.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="821" width="0.0118%" height="15" fill="rgb(238,100,19)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (6 samples, 0.01%)</title><rect x="46.7629%" y="805" width="0.0118%" height="15" fill="rgb(244,30,14)" fg:x="23691" fg:w="6"/><text x="47.0129%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (44 samples, 0.09%)</title><rect x="46.7747%" y="981" width="0.0869%" height="15" fill="rgb(249,174,6)" fg:x="23697" fg:w="44"/><text x="47.0247%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (28 samples, 0.06%)</title><rect x="46.8063%" y="965" width="0.0553%" height="15" fill="rgb(235,213,41)" fg:x="23713" fg:w="28"/><text x="47.0563%" y="975.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (9 samples, 0.02%)</title><rect x="46.8675%" y="901" width="0.0178%" height="15" fill="rgb(213,118,6)" fg:x="23744" fg:w="9"/><text x="47.1175%" y="911.50"></text></g><g><title>wgpu::Queue::submit (9 samples, 0.02%)</title><rect x="46.8675%" y="885" width="0.0178%" height="15" fill="rgb(235,44,51)" fg:x="23744" fg:w="9"/><text x="47.1175%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (9 samples, 0.02%)</title><rect x="46.8675%" y="869" width="0.0178%" height="15" fill="rgb(217,9,53)" fg:x="23744" fg:w="9"/><text x="47.1175%" y="879.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (9 samples, 0.02%)</title><rect x="46.8675%" y="853" width="0.0178%" height="15" fill="rgb(237,172,34)" fg:x="23744" fg:w="9"/><text x="47.1175%" y="863.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (14 samples, 0.03%)</title><rect x="46.8675%" y="981" width="0.0276%" height="15" fill="rgb(206,206,11)" fg:x="23744" fg:w="14"/><text x="47.1175%" y="991.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (14 samples, 0.03%)</title><rect x="46.8675%" y="965" width="0.0276%" height="15" fill="rgb(214,149,29)" fg:x="23744" fg:w="14"/><text x="47.1175%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (14 samples, 0.03%)</title><rect x="46.8675%" y="949" width="0.0276%" height="15" fill="rgb(208,123,3)" fg:x="23744" fg:w="14"/><text x="47.1175%" y="959.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.03%)</title><rect x="46.8675%" y="933" width="0.0276%" height="15" fill="rgb(229,126,4)" fg:x="23744" fg:w="14"/><text x="47.1175%" y="943.50"></text></g><g><title>bevy_render::renderer::render_system (14 samples, 0.03%)</title><rect x="46.8675%" y="917" width="0.0276%" height="15" fill="rgb(222,92,36)" fg:x="23744" fg:w="14"/><text x="47.1175%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="46.9010%" y="981" width="0.0197%" height="15" fill="rgb(216,39,41)" fg:x="23761" fg:w="10"/><text x="47.1510%" y="991.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (8 samples, 0.02%)</title><rect x="46.9050%" y="965" width="0.0158%" height="15" fill="rgb(253,127,28)" fg:x="23763" fg:w="8"/><text x="47.1550%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (8 samples, 0.02%)</title><rect x="46.9050%" y="949" width="0.0158%" height="15" fill="rgb(249,152,51)" fg:x="23763" fg:w="8"/><text x="47.1550%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.04%)</title><rect x="46.9306%" y="981" width="0.0395%" height="15" fill="rgb(209,123,42)" fg:x="23776" fg:w="20"/><text x="47.1806%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (7 samples, 0.01%)</title><rect x="46.9563%" y="965" width="0.0138%" height="15" fill="rgb(241,118,22)" fg:x="23789" fg:w="7"/><text x="47.2063%" y="975.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (7 samples, 0.01%)</title><rect x="46.9563%" y="949" width="0.0138%" height="15" fill="rgb(208,25,7)" fg:x="23789" fg:w="7"/><text x="47.2063%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (7 samples, 0.01%)</title><rect x="46.9563%" y="933" width="0.0138%" height="15" fill="rgb(243,144,39)" fg:x="23789" fg:w="7"/><text x="47.2063%" y="943.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (7 samples, 0.01%)</title><rect x="46.9563%" y="917" width="0.0138%" height="15" fill="rgb(250,50,5)" fg:x="23789" fg:w="7"/><text x="47.2063%" y="927.50"></text></g><g><title>core::num::dec2flt::dec2flt (7 samples, 0.01%)</title><rect x="46.9563%" y="901" width="0.0138%" height="15" fill="rgb(207,67,11)" fg:x="23789" fg:w="7"/><text x="47.2063%" y="911.50"></text></g><g><title>&lt;f32 as core::num::dec2flt::float::RawFloat&gt;::from_u64_bits (17 samples, 0.03%)</title><rect x="46.9839%" y="981" width="0.0336%" height="15" fill="rgb(245,204,40)" fg:x="23803" fg:w="17"/><text x="47.2339%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (21 samples, 0.04%)</title><rect x="47.0313%" y="981" width="0.0415%" height="15" fill="rgb(238,228,24)" fg:x="23827" fg:w="21"/><text x="47.2813%" y="991.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (10 samples, 0.02%)</title><rect x="47.1497%" y="933" width="0.0197%" height="15" fill="rgb(217,116,22)" fg:x="23887" fg:w="10"/><text x="47.3997%" y="943.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (10 samples, 0.02%)</title><rect x="47.1497%" y="917" width="0.0197%" height="15" fill="rgb(234,98,12)" fg:x="23887" fg:w="10"/><text x="47.3997%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="47.1497%" y="901" width="0.0197%" height="15" fill="rgb(242,170,50)" fg:x="23887" fg:w="10"/><text x="47.3997%" y="911.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (52 samples, 0.10%)</title><rect x="47.0728%" y="981" width="0.1026%" height="15" fill="rgb(235,7,5)" fg:x="23848" fg:w="52"/><text x="47.3228%" y="991.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (13 samples, 0.03%)</title><rect x="47.1497%" y="965" width="0.0257%" height="15" fill="rgb(241,114,28)" fg:x="23887" fg:w="13"/><text x="47.3997%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (13 samples, 0.03%)</title><rect x="47.1497%" y="949" width="0.0257%" height="15" fill="rgb(246,112,42)" fg:x="23887" fg:w="13"/><text x="47.3997%" y="959.50"></text></g><g><title>_nv011glcore (11 samples, 0.02%)</title><rect x="47.1971%" y="693" width="0.0217%" height="15" fill="rgb(248,228,14)" fg:x="23911" fg:w="11"/><text x="47.4471%" y="703.50"></text></g><g><title>__calloc (11 samples, 0.02%)</title><rect x="47.1971%" y="677" width="0.0217%" height="15" fill="rgb(208,133,18)" fg:x="23911" fg:w="11"/><text x="47.4471%" y="687.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="47.2030%" y="661" width="0.0158%" height="15" fill="rgb(207,35,49)" fg:x="23914" fg:w="8"/><text x="47.4530%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (12 samples, 0.02%)</title><rect x="47.1971%" y="981" width="0.0237%" height="15" fill="rgb(205,68,36)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (12 samples, 0.02%)</title><rect x="47.1971%" y="965" width="0.0237%" height="15" fill="rgb(245,62,40)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="975.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (12 samples, 0.02%)</title><rect x="47.1971%" y="949" width="0.0237%" height="15" fill="rgb(228,27,24)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (12 samples, 0.02%)</title><rect x="47.1971%" y="933" width="0.0237%" height="15" fill="rgb(253,19,12)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="943.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (12 samples, 0.02%)</title><rect x="47.1971%" y="917" width="0.0237%" height="15" fill="rgb(232,28,20)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="927.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::allocate (12 samples, 0.02%)</title><rect x="47.1971%" y="901" width="0.0237%" height="15" fill="rgb(218,35,51)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::alloc_descriptor_sets (12 samples, 0.02%)</title><rect x="47.1971%" y="885" width="0.0237%" height="15" fill="rgb(212,90,40)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (12 samples, 0.02%)</title><rect x="47.1971%" y="869" width="0.0237%" height="15" fill="rgb(220,172,12)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="879.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (12 samples, 0.02%)</title><rect x="47.1971%" y="853" width="0.0237%" height="15" fill="rgb(226,159,20)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="863.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (12 samples, 0.02%)</title><rect x="47.1971%" y="837" width="0.0237%" height="15" fill="rgb(234,205,16)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="847.50"></text></g><g><title>inplace_it::fixed_array::indirect (12 samples, 0.02%)</title><rect x="47.1971%" y="821" width="0.0237%" height="15" fill="rgb(207,9,39)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="831.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (12 samples, 0.02%)</title><rect x="47.1971%" y="805" width="0.0237%" height="15" fill="rgb(249,143,15)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="815.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (12 samples, 0.02%)</title><rect x="47.1971%" y="789" width="0.0237%" height="15" fill="rgb(253,133,29)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::alloc_descriptor_sets::{{closure}} (12 samples, 0.02%)</title><rect x="47.1971%" y="773" width="0.0237%" height="15" fill="rgb(221,187,0)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="783.50"></text></g><g><title>ash::device::Device::allocate_descriptor_sets (12 samples, 0.02%)</title><rect x="47.1971%" y="757" width="0.0237%" height="15" fill="rgb(205,204,26)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="767.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::allocate_descriptor_sets (12 samples, 0.02%)</title><rect x="47.1971%" y="741" width="0.0237%" height="15" fill="rgb(224,68,54)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.02%)</title><rect x="47.1971%" y="725" width="0.0237%" height="15" fill="rgb(209,67,4)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.02%)</title><rect x="47.1971%" y="709" width="0.0237%" height="15" fill="rgb(228,229,18)" fg:x="23911" fg:w="12"/><text x="47.4471%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_render_pipeline (6 samples, 0.01%)</title><rect x="47.2208%" y="981" width="0.0118%" height="15" fill="rgb(231,89,13)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (6 samples, 0.01%)</title><rect x="47.2208%" y="965" width="0.0118%" height="15" fill="rgb(210,182,18)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="975.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_render_pipeline (6 samples, 0.01%)</title><rect x="47.2208%" y="949" width="0.0118%" height="15" fill="rgb(240,105,2)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_render_pipeline (6 samples, 0.01%)</title><rect x="47.2208%" y="933" width="0.0118%" height="15" fill="rgb(207,170,50)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="943.50"></text></g><g><title>ash::device::Device::create_graphics_pipelines (6 samples, 0.01%)</title><rect x="47.2208%" y="917" width="0.0118%" height="15" fill="rgb(232,133,24)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="927.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_graphics_pipelines (6 samples, 0.01%)</title><rect x="47.2208%" y="901" width="0.0118%" height="15" fill="rgb(235,166,27)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="885" width="0.0118%" height="15" fill="rgb(209,19,13)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="869" width="0.0118%" height="15" fill="rgb(226,79,39)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="853" width="0.0118%" height="15" fill="rgb(222,163,10)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="837" width="0.0118%" height="15" fill="rgb(214,44,19)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="821" width="0.0118%" height="15" fill="rgb(210,217,13)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="805" width="0.0118%" height="15" fill="rgb(237,61,54)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="789" width="0.0118%" height="15" fill="rgb(226,184,24)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="47.2208%" y="773" width="0.0118%" height="15" fill="rgb(223,226,4)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="783.50"></text></g><g><title>_nv023glcore (6 samples, 0.01%)</title><rect x="47.2208%" y="757" width="0.0118%" height="15" fill="rgb(210,26,41)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="767.50"></text></g><g><title>_nv023glcore (6 samples, 0.01%)</title><rect x="47.2208%" y="741" width="0.0118%" height="15" fill="rgb(220,221,6)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="751.50"></text></g><g><title>_nv023glcore (6 samples, 0.01%)</title><rect x="47.2208%" y="725" width="0.0118%" height="15" fill="rgb(225,89,49)" fg:x="23923" fg:w="6"/><text x="47.4708%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (20 samples, 0.04%)</title><rect x="47.2326%" y="981" width="0.0395%" height="15" fill="rgb(218,70,45)" fg:x="23929" fg:w="20"/><text x="47.4826%" y="991.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (19 samples, 0.04%)</title><rect x="47.2346%" y="965" width="0.0375%" height="15" fill="rgb(238,166,21)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="975.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (19 samples, 0.04%)</title><rect x="47.2346%" y="949" width="0.0375%" height="15" fill="rgb(224,141,44)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="959.50"></text></g><g><title>ash::device::Device::queue_submit (19 samples, 0.04%)</title><rect x="47.2346%" y="933" width="0.0375%" height="15" fill="rgb(230,12,49)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (19 samples, 0.04%)</title><rect x="47.2346%" y="917" width="0.0375%" height="15" fill="rgb(212,174,12)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="927.50"></text></g><g><title>__glx_Main (19 samples, 0.04%)</title><rect x="47.2346%" y="901" width="0.0375%" height="15" fill="rgb(246,67,9)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="47.2346%" y="885" width="0.0375%" height="15" fill="rgb(239,35,23)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="47.2346%" y="869" width="0.0375%" height="15" fill="rgb(211,167,0)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="47.2346%" y="853" width="0.0375%" height="15" fill="rgb(225,119,45)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="47.2346%" y="837" width="0.0375%" height="15" fill="rgb(210,162,6)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="847.50"></text></g><g><title>_nv009glcore (19 samples, 0.04%)</title><rect x="47.2346%" y="821" width="0.0375%" height="15" fill="rgb(208,118,35)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="831.50"></text></g><g><title>_nv041glcore (19 samples, 0.04%)</title><rect x="47.2346%" y="805" width="0.0375%" height="15" fill="rgb(239,4,53)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="815.50"></text></g><g><title>_nv041glcore (19 samples, 0.04%)</title><rect x="47.2346%" y="789" width="0.0375%" height="15" fill="rgb(213,130,21)" fg:x="23930" fg:w="19"/><text x="47.4846%" y="799.50"></text></g><g><title>_nv041glcore (14 samples, 0.03%)</title><rect x="47.2445%" y="773" width="0.0276%" height="15" fill="rgb(235,148,0)" fg:x="23935" fg:w="14"/><text x="47.4945%" y="783.50"></text></g><g><title>_nv041glcore (11 samples, 0.02%)</title><rect x="47.2504%" y="757" width="0.0217%" height="15" fill="rgb(244,224,18)" fg:x="23938" fg:w="11"/><text x="47.5004%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (7 samples, 0.01%)</title><rect x="47.2721%" y="981" width="0.0138%" height="15" fill="rgb(211,214,4)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="991.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (7 samples, 0.01%)</title><rect x="47.2721%" y="965" width="0.0138%" height="15" fill="rgb(206,119,25)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="975.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (7 samples, 0.01%)</title><rect x="47.2721%" y="949" width="0.0138%" height="15" fill="rgb(243,93,47)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="959.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (7 samples, 0.01%)</title><rect x="47.2721%" y="933" width="0.0138%" height="15" fill="rgb(224,194,6)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="943.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (7 samples, 0.01%)</title><rect x="47.2721%" y="917" width="0.0138%" height="15" fill="rgb(243,229,6)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="927.50"></text></g><g><title>__glx_Main (7 samples, 0.01%)</title><rect x="47.2721%" y="901" width="0.0138%" height="15" fill="rgb(207,23,50)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="47.2721%" y="885" width="0.0138%" height="15" fill="rgb(253,192,32)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="47.2721%" y="869" width="0.0138%" height="15" fill="rgb(213,21,6)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="47.2721%" y="853" width="0.0138%" height="15" fill="rgb(243,151,13)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="47.2721%" y="837" width="0.0138%" height="15" fill="rgb(233,165,41)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="847.50"></text></g><g><title>_nv009glcore (7 samples, 0.01%)</title><rect x="47.2721%" y="821" width="0.0138%" height="15" fill="rgb(246,176,45)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="831.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="47.2721%" y="805" width="0.0138%" height="15" fill="rgb(217,170,52)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="815.50"></text></g><g><title>_nv011glcore (7 samples, 0.01%)</title><rect x="47.2721%" y="789" width="0.0138%" height="15" fill="rgb(214,203,54)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="799.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="47.2721%" y="773" width="0.0138%" height="15" fill="rgb(248,215,49)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="783.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="47.2721%" y="757" width="0.0138%" height="15" fill="rgb(208,46,10)" fg:x="23949" fg:w="7"/><text x="47.5221%" y="767.50"></text></g><g><title>__GI___sched_yield (217 samples, 0.43%)</title><rect x="47.3136%" y="981" width="0.4283%" height="15" fill="rgb(254,5,31)" fg:x="23970" fg:w="217"/><text x="47.5636%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="47.7439%" y="981" width="0.0296%" height="15" fill="rgb(222,104,33)" fg:x="24188" fg:w="15"/><text x="47.9939%" y="991.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="47.7735%" y="965" width="0.0138%" height="15" fill="rgb(248,49,16)" fg:x="24203" fg:w="7"/><text x="48.0235%" y="975.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (7 samples, 0.01%)</title><rect x="47.7735%" y="949" width="0.0138%" height="15" fill="rgb(232,198,41)" fg:x="24203" fg:w="7"/><text x="48.0235%" y="959.50"></text></g><g><title>csv::string_record::StringRecord::read (6 samples, 0.01%)</title><rect x="47.7755%" y="933" width="0.0118%" height="15" fill="rgb(214,125,3)" fg:x="24204" fg:w="6"/><text x="48.0255%" y="943.50"></text></g><g><title>core::fmt::write (11 samples, 0.02%)</title><rect x="47.7873%" y="965" width="0.0217%" height="15" fill="rgb(229,220,28)" fg:x="24210" fg:w="11"/><text x="48.0373%" y="975.50"></text></g><g><title>hex::decode_to_slice (8 samples, 0.02%)</title><rect x="47.8090%" y="965" width="0.0158%" height="15" fill="rgb(222,64,37)" fg:x="24221" fg:w="8"/><text x="48.0590%" y="975.50"></text></g><g><title>__memmove_chk_avx_unaligned_erms (27 samples, 0.05%)</title><rect x="47.7735%" y="981" width="0.0533%" height="15" fill="rgb(249,184,13)" fg:x="24203" fg:w="27"/><text x="48.0235%" y="991.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="47.8465%" y="981" width="0.0118%" height="15" fill="rgb(252,176,6)" fg:x="24240" fg:w="6"/><text x="48.0965%" y="991.50"></text></g><g><title>__rust_probestack (6 samples, 0.01%)</title><rect x="47.8682%" y="981" width="0.0118%" height="15" fill="rgb(228,153,7)" fg:x="24251" fg:w="6"/><text x="48.1182%" y="991.50"></text></g><g><title>__tls_get_addr (47 samples, 0.09%)</title><rect x="47.8801%" y="981" width="0.0928%" height="15" fill="rgb(242,193,5)" fg:x="24257" fg:w="47"/><text x="48.1301%" y="991.50"></text></g><g><title>_nv011glcore (155 samples, 0.31%)</title><rect x="47.9827%" y="981" width="0.3059%" height="15" fill="rgb(232,140,9)" fg:x="24309" fg:w="155"/><text x="48.2327%" y="991.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="48.2985%" y="981" width="0.0138%" height="15" fill="rgb(213,222,16)" fg:x="24469" fg:w="7"/><text x="48.5485%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="48.3163%" y="981" width="0.0118%" height="15" fill="rgb(222,75,50)" fg:x="24478" fg:w="6"/><text x="48.5663%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="48.3281%" y="981" width="0.0237%" height="15" fill="rgb(205,180,2)" fg:x="24484" fg:w="12"/><text x="48.5781%" y="991.50"></text></g><g><title>async_executor::Executor::spawn (10 samples, 0.02%)</title><rect x="48.3775%" y="981" width="0.0197%" height="15" fill="rgb(216,34,7)" fg:x="24509" fg:w="10"/><text x="48.6275%" y="991.50"></text></g><g><title>async_executor::State::notify (8 samples, 0.02%)</title><rect x="48.4031%" y="981" width="0.0158%" height="15" fill="rgb(253,16,32)" fg:x="24522" fg:w="8"/><text x="48.6531%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16 samples, 0.03%)</title><rect x="48.4229%" y="981" width="0.0316%" height="15" fill="rgb(208,97,28)" fg:x="24532" fg:w="16"/><text x="48.6729%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="48.4328%" y="965" width="0.0217%" height="15" fill="rgb(225,92,11)" fg:x="24537" fg:w="11"/><text x="48.6828%" y="975.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (11 samples, 0.02%)</title><rect x="48.4328%" y="949" width="0.0217%" height="15" fill="rgb(243,38,12)" fg:x="24537" fg:w="11"/><text x="48.6828%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="48.4328%" y="933" width="0.0217%" height="15" fill="rgb(208,139,16)" fg:x="24537" fg:w="11"/><text x="48.6828%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (11 samples, 0.02%)</title><rect x="48.4328%" y="917" width="0.0217%" height="15" fill="rgb(227,24,9)" fg:x="24537" fg:w="11"/><text x="48.6828%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (11 samples, 0.02%)</title><rect x="48.4328%" y="901" width="0.0217%" height="15" fill="rgb(206,62,11)" fg:x="24537" fg:w="11"/><text x="48.6828%" y="911.50"></text></g><g><title>bevy_app::app::App::update (11 samples, 0.02%)</title><rect x="48.4624%" y="981" width="0.0217%" height="15" fill="rgb(228,134,27)" fg:x="24552" fg:w="11"/><text x="48.7124%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (11 samples, 0.02%)</title><rect x="48.4624%" y="965" width="0.0217%" height="15" fill="rgb(205,55,33)" fg:x="24552" fg:w="11"/><text x="48.7124%" y="975.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (7 samples, 0.01%)</title><rect x="48.4703%" y="949" width="0.0138%" height="15" fill="rgb(243,75,43)" fg:x="24556" fg:w="7"/><text x="48.7203%" y="959.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (7 samples, 0.01%)</title><rect x="48.4703%" y="933" width="0.0138%" height="15" fill="rgb(223,27,42)" fg:x="24556" fg:w="7"/><text x="48.7203%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (7 samples, 0.01%)</title><rect x="48.4703%" y="917" width="0.0138%" height="15" fill="rgb(232,189,33)" fg:x="24556" fg:w="7"/><text x="48.7203%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="48.4703%" y="901" width="0.0138%" height="15" fill="rgb(210,9,39)" fg:x="24556" fg:w="7"/><text x="48.7203%" y="911.50"></text></g><g><title>bevy_render::renderer::render_system (7 samples, 0.01%)</title><rect x="48.4703%" y="885" width="0.0138%" height="15" fill="rgb(242,85,26)" fg:x="24556" fg:w="7"/><text x="48.7203%" y="895.50"></text></g><g><title>bevy_ecs::archetype::Archetype::allocate (9 samples, 0.02%)</title><rect x="48.5038%" y="981" width="0.0178%" height="15" fill="rgb(248,44,4)" fg:x="24573" fg:w="9"/><text x="48.7538%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (7 samples, 0.01%)</title><rect x="48.5235%" y="981" width="0.0138%" height="15" fill="rgb(250,96,46)" fg:x="24583" fg:w="7"/><text x="48.7735%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (8 samples, 0.02%)</title><rect x="48.5433%" y="981" width="0.0158%" height="15" fill="rgb(229,116,26)" fg:x="24593" fg:w="8"/><text x="48.7933%" y="991.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (17 samples, 0.03%)</title><rect x="48.5650%" y="981" width="0.0336%" height="15" fill="rgb(246,94,34)" fg:x="24604" fg:w="17"/><text x="48.8150%" y="991.50"></text></g><g><title>bevy_ecs::component::ComponentDescriptor::drop_ptr (13 samples, 0.03%)</title><rect x="48.6025%" y="981" width="0.0257%" height="15" fill="rgb(251,73,21)" fg:x="24623" fg:w="13"/><text x="48.8525%" y="991.50"></text></g><g><title>bevy_ecs::entity::Entities::alloc_at_without_replacement (11 samples, 0.02%)</title><rect x="48.6282%" y="981" width="0.0217%" height="15" fill="rgb(254,121,25)" fg:x="24636" fg:w="11"/><text x="48.8782%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (19 samples, 0.04%)</title><rect x="48.6538%" y="981" width="0.0375%" height="15" fill="rgb(215,161,49)" fg:x="24649" fg:w="19"/><text x="48.9038%" y="991.50"></text></g><g><title>bevy_ecs::schedule::Schedule::get_stage_mut (10 samples, 0.02%)</title><rect x="48.6972%" y="981" width="0.0197%" height="15" fill="rgb(221,43,13)" fg:x="24671" fg:w="10"/><text x="48.9472%" y="991.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::clone::Clone&gt;::clone (25 samples, 0.05%)</title><rect x="48.7505%" y="341" width="0.0493%" height="15" fill="rgb(249,5,37)" fg:x="24698" fg:w="25"/><text x="49.0005%" y="351.50"></text></g><g><title>__memmove_sse2_unaligned_erms (15 samples, 0.03%)</title><rect x="48.7703%" y="325" width="0.0296%" height="15" fill="rgb(226,25,44)" fg:x="24708" fg:w="15"/><text x="49.0203%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="48.8216%" y="261" width="0.0158%" height="15" fill="rgb(238,189,16)" fg:x="24734" fg:w="8"/><text x="49.0716%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8 samples, 0.02%)</title><rect x="48.8216%" y="245" width="0.0158%" height="15" fill="rgb(251,186,8)" fg:x="24734" fg:w="8"/><text x="49.0716%" y="255.50"></text></g><g><title>core::cmp::PartialOrd::ge (31 samples, 0.06%)</title><rect x="48.8058%" y="341" width="0.0612%" height="15" fill="rgb(254,34,31)" fg:x="24726" fg:w="31"/><text x="49.0558%" y="351.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::PartialOrd&gt;::partial_cmp (31 samples, 0.06%)</title><rect x="48.8058%" y="325" width="0.0612%" height="15" fill="rgb(225,215,27)" fg:x="24726" fg:w="31"/><text x="49.0558%" y="335.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::Ord&gt;::cmp (31 samples, 0.06%)</title><rect x="48.8058%" y="309" width="0.0612%" height="15" fill="rgb(221,192,48)" fg:x="24726" fg:w="31"/><text x="49.0558%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (27 samples, 0.05%)</title><rect x="48.8137%" y="293" width="0.0533%" height="15" fill="rgb(219,137,20)" fg:x="24730" fg:w="27"/><text x="49.0637%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (27 samples, 0.05%)</title><rect x="48.8137%" y="277" width="0.0533%" height="15" fill="rgb(219,84,11)" fg:x="24730" fg:w="27"/><text x="49.0637%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::{{closure}} (15 samples, 0.03%)</title><rect x="48.8374%" y="261" width="0.0296%" height="15" fill="rgb(224,10,23)" fg:x="24742" fg:w="15"/><text x="49.0874%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (15 samples, 0.03%)</title><rect x="48.8374%" y="245" width="0.0296%" height="15" fill="rgb(248,22,39)" fg:x="24742" fg:w="15"/><text x="49.0874%" y="255.50"></text></g><g><title>core::num::bignum::Big32x40::mul_pow2 (14 samples, 0.03%)</title><rect x="48.8848%" y="341" width="0.0276%" height="15" fill="rgb(212,154,20)" fg:x="24766" fg:w="14"/><text x="49.1348%" y="351.50"></text></g><g><title>core::num::bignum::Big32x40::mul_small (13 samples, 0.03%)</title><rect x="48.9124%" y="341" width="0.0257%" height="15" fill="rgb(236,199,50)" fg:x="24780" fg:w="13"/><text x="49.1624%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="48.9558%" y="325" width="0.0138%" height="15" fill="rgb(211,9,17)" fg:x="24802" fg:w="7"/><text x="49.2058%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.01%)</title><rect x="48.9558%" y="309" width="0.0138%" height="15" fill="rgb(243,216,36)" fg:x="24802" fg:w="7"/><text x="49.2058%" y="319.50"></text></g><g><title>core::num::bignum::Big32x40::sub (19 samples, 0.04%)</title><rect x="48.9381%" y="341" width="0.0375%" height="15" fill="rgb(250,2,10)" fg:x="24793" fg:w="19"/><text x="49.1881%" y="351.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::div_2pow10 (15 samples, 0.03%)</title><rect x="48.9815%" y="341" width="0.0296%" height="15" fill="rgb(226,50,48)" fg:x="24815" fg:w="15"/><text x="49.2315%" y="351.50"></text></g><g><title>core::num::bignum::Big32x40::div_rem_small (13 samples, 0.03%)</title><rect x="48.9854%" y="325" width="0.0257%" height="15" fill="rgb(243,81,16)" fg:x="24817" fg:w="13"/><text x="49.2354%" y="335.50"></text></g><g><title>&lt;u32 as core::num::bignum::FullOps&gt;::full_div_rem (11 samples, 0.02%)</title><rect x="48.9894%" y="309" width="0.0217%" height="15" fill="rgb(250,14,2)" fg:x="24819" fg:w="11"/><text x="49.2394%" y="319.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (152 samples, 0.30%)</title><rect x="48.7209%" y="965" width="0.3000%" height="15" fill="rgb(233,135,29)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (152 samples, 0.30%)</title><rect x="48.7209%" y="949" width="0.3000%" height="15" fill="rgb(224,64,43)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (152 samples, 0.30%)</title><rect x="48.7209%" y="933" width="0.3000%" height="15" fill="rgb(238,84,13)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (152 samples, 0.30%)</title><rect x="48.7209%" y="917" width="0.3000%" height="15" fill="rgb(253,48,26)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (152 samples, 0.30%)</title><rect x="48.7209%" y="901" width="0.3000%" height="15" fill="rgb(205,223,31)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (152 samples, 0.30%)</title><rect x="48.7209%" y="885" width="0.3000%" height="15" fill="rgb(221,41,32)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="895.50"></text></g><g><title>async_executor::Executor::try_tick (152 samples, 0.30%)</title><rect x="48.7209%" y="869" width="0.3000%" height="15" fill="rgb(213,158,31)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (152 samples, 0.30%)</title><rect x="48.7209%" y="853" width="0.3000%" height="15" fill="rgb(245,126,43)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (152 samples, 0.30%)</title><rect x="48.7209%" y="837" width="0.3000%" height="15" fill="rgb(227,7,22)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="847.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (152 samples, 0.30%)</title><rect x="48.7209%" y="821" width="0.3000%" height="15" fill="rgb(252,90,44)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (152 samples, 0.30%)</title><rect x="48.7209%" y="805" width="0.3000%" height="15" fill="rgb(253,91,0)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (152 samples, 0.30%)</title><rect x="48.7209%" y="789" width="0.3000%" height="15" fill="rgb(252,175,49)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (152 samples, 0.30%)</title><rect x="48.7209%" y="773" width="0.3000%" height="15" fill="rgb(246,150,1)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (152 samples, 0.30%)</title><rect x="48.7209%" y="757" width="0.3000%" height="15" fill="rgb(241,192,25)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="767.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (152 samples, 0.30%)</title><rect x="48.7209%" y="741" width="0.3000%" height="15" fill="rgb(239,187,11)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (152 samples, 0.30%)</title><rect x="48.7209%" y="725" width="0.3000%" height="15" fill="rgb(218,202,51)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (152 samples, 0.30%)</title><rect x="48.7209%" y="709" width="0.3000%" height="15" fill="rgb(225,176,8)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="719.50"></text></g><g><title>stellar_coordinates_test::setup (152 samples, 0.30%)</title><rect x="48.7209%" y="693" width="0.3000%" height="15" fill="rgb(219,122,41)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="703.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (152 samples, 0.30%)</title><rect x="48.7209%" y="677" width="0.3000%" height="15" fill="rgb(248,140,20)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="687.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (152 samples, 0.30%)</title><rect x="48.7209%" y="661" width="0.3000%" height="15" fill="rgb(245,41,37)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="671.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (152 samples, 0.30%)</title><rect x="48.7209%" y="645" width="0.3000%" height="15" fill="rgb(235,82,39)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="655.50"></text></g><g><title>std::sync::once::Once::call_once (152 samples, 0.30%)</title><rect x="48.7209%" y="629" width="0.3000%" height="15" fill="rgb(230,108,42)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="639.50"></text></g><g><title>std::sync::once::Once::call_inner (152 samples, 0.30%)</title><rect x="48.7209%" y="613" width="0.3000%" height="15" fill="rgb(215,150,50)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="623.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (152 samples, 0.30%)</title><rect x="48.7209%" y="597" width="0.3000%" height="15" fill="rgb(233,212,5)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="607.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (152 samples, 0.30%)</title><rect x="48.7209%" y="581" width="0.3000%" height="15" fill="rgb(245,80,22)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (152 samples, 0.30%)</title><rect x="48.7209%" y="565" width="0.3000%" height="15" fill="rgb(238,129,16)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="575.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (152 samples, 0.30%)</title><rect x="48.7209%" y="549" width="0.3000%" height="15" fill="rgb(240,19,0)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="559.50"></text></g><g><title>std::io::stdio::_print (152 samples, 0.30%)</title><rect x="48.7209%" y="533" width="0.3000%" height="15" fill="rgb(232,42,35)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="543.50"></text></g><g><title>std::io::stdio::print_to (152 samples, 0.30%)</title><rect x="48.7209%" y="517" width="0.3000%" height="15" fill="rgb(223,130,24)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="527.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (152 samples, 0.30%)</title><rect x="48.7209%" y="501" width="0.3000%" height="15" fill="rgb(237,16,22)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="511.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (152 samples, 0.30%)</title><rect x="48.7209%" y="485" width="0.3000%" height="15" fill="rgb(248,192,20)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (152 samples, 0.30%)</title><rect x="48.7209%" y="469" width="0.3000%" height="15" fill="rgb(233,167,2)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="479.50"></text></g><g><title>core::fmt::write (152 samples, 0.30%)</title><rect x="48.7209%" y="453" width="0.3000%" height="15" fill="rgb(252,71,44)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="463.50"></text></g><g><title>core::fmt::run (152 samples, 0.30%)</title><rect x="48.7209%" y="437" width="0.3000%" height="15" fill="rgb(238,37,47)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="447.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (152 samples, 0.30%)</title><rect x="48.7209%" y="421" width="0.3000%" height="15" fill="rgb(214,202,54)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="431.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (152 samples, 0.30%)</title><rect x="48.7209%" y="405" width="0.3000%" height="15" fill="rgb(254,165,40)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (152 samples, 0.30%)</title><rect x="48.7209%" y="389" width="0.3000%" height="15" fill="rgb(246,173,38)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="399.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (152 samples, 0.30%)</title><rect x="48.7209%" y="373" width="0.3000%" height="15" fill="rgb(215,3,27)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="383.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (152 samples, 0.30%)</title><rect x="48.7209%" y="357" width="0.3000%" height="15" fill="rgb(239,169,51)" fg:x="24683" fg:w="152"/><text x="48.9709%" y="367.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (159 samples, 0.31%)</title><rect x="48.7170%" y="981" width="0.3138%" height="15" fill="rgb(212,5,25)" fg:x="24681" fg:w="159"/><text x="48.9670%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (24 samples, 0.05%)</title><rect x="49.0486%" y="981" width="0.0474%" height="15" fill="rgb(243,45,17)" fg:x="24849" fg:w="24"/><text x="49.2986%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (10 samples, 0.02%)</title><rect x="49.1473%" y="965" width="0.0197%" height="15" fill="rgb(242,97,9)" fg:x="24899" fg:w="10"/><text x="49.3973%" y="975.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (10 samples, 0.02%)</title><rect x="49.1473%" y="949" width="0.0197%" height="15" fill="rgb(228,71,31)" fg:x="24899" fg:w="10"/><text x="49.3973%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="49.1473%" y="933" width="0.0197%" height="15" fill="rgb(252,184,16)" fg:x="24899" fg:w="10"/><text x="49.3973%" y="943.50"></text></g><g><title>core::intrinsics::copy (12 samples, 0.02%)</title><rect x="49.1670%" y="933" width="0.0237%" height="15" fill="rgb(236,169,46)" fg:x="24909" fg:w="12"/><text x="49.4170%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (51 samples, 0.10%)</title><rect x="49.1039%" y="981" width="0.1007%" height="15" fill="rgb(207,17,47)" fg:x="24877" fg:w="51"/><text x="49.3539%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (19 samples, 0.04%)</title><rect x="49.1670%" y="965" width="0.0375%" height="15" fill="rgb(206,201,28)" fg:x="24909" fg:w="19"/><text x="49.4170%" y="975.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (19 samples, 0.04%)</title><rect x="49.1670%" y="949" width="0.0375%" height="15" fill="rgb(224,184,23)" fg:x="24909" fg:w="19"/><text x="49.4170%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="49.1907%" y="933" width="0.0138%" height="15" fill="rgb(208,139,48)" fg:x="24921" fg:w="7"/><text x="49.4407%" y="943.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (6 samples, 0.01%)</title><rect x="49.2085%" y="981" width="0.0118%" height="15" fill="rgb(208,130,10)" fg:x="24930" fg:w="6"/><text x="49.4585%" y="991.50"></text></g><g><title>bevy_ecs::system::system::System::run (6 samples, 0.01%)</title><rect x="49.2282%" y="981" width="0.0118%" height="15" fill="rgb(211,213,45)" fg:x="24940" fg:w="6"/><text x="49.4782%" y="991.50"></text></g><g><title>bevy_ecs::world::World::clear_entities (10 samples, 0.02%)</title><rect x="49.2401%" y="981" width="0.0197%" height="15" fill="rgb(235,100,30)" fg:x="24946" fg:w="10"/><text x="49.4901%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Tables::clear (10 samples, 0.02%)</title><rect x="49.2401%" y="965" width="0.0197%" height="15" fill="rgb(206,144,31)" fg:x="24946" fg:w="10"/><text x="49.4901%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::clear (10 samples, 0.02%)</title><rect x="49.2401%" y="949" width="0.0197%" height="15" fill="rgb(224,200,26)" fg:x="24946" fg:w="10"/><text x="49.4901%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::clear (10 samples, 0.02%)</title><rect x="49.2401%" y="933" width="0.0197%" height="15" fill="rgb(247,104,53)" fg:x="24946" fg:w="10"/><text x="49.4901%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (10 samples, 0.02%)</title><rect x="49.2401%" y="917" width="0.0197%" height="15" fill="rgb(220,14,17)" fg:x="24946" fg:w="10"/><text x="49.4901%" y="927.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (6 samples, 0.01%)</title><rect x="49.2973%" y="949" width="0.0118%" height="15" fill="rgb(230,140,40)" fg:x="24975" fg:w="6"/><text x="49.5473%" y="959.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (28 samples, 0.06%)</title><rect x="49.2716%" y="981" width="0.0553%" height="15" fill="rgb(229,2,41)" fg:x="24962" fg:w="28"/><text x="49.5216%" y="991.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (19 samples, 0.04%)</title><rect x="49.2894%" y="965" width="0.0375%" height="15" fill="rgb(232,89,16)" fg:x="24971" fg:w="19"/><text x="49.5394%" y="975.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (9 samples, 0.02%)</title><rect x="49.3091%" y="949" width="0.0178%" height="15" fill="rgb(247,59,52)" fg:x="24981" fg:w="9"/><text x="49.5591%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="49.3605%" y="965" width="0.0158%" height="15" fill="rgb(226,110,21)" fg:x="25007" fg:w="8"/><text x="49.6105%" y="975.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_table (7 samples, 0.01%)</title><rect x="49.3624%" y="949" width="0.0138%" height="15" fill="rgb(224,176,43)" fg:x="25008" fg:w="7"/><text x="49.6124%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (7 samples, 0.01%)</title><rect x="49.3624%" y="933" width="0.0138%" height="15" fill="rgb(221,73,6)" fg:x="25008" fg:w="7"/><text x="49.6124%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (7 samples, 0.01%)</title><rect x="49.3624%" y="917" width="0.0138%" height="15" fill="rgb(232,78,19)" fg:x="25008" fg:w="7"/><text x="49.6124%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (7 samples, 0.01%)</title><rect x="49.3624%" y="901" width="0.0138%" height="15" fill="rgb(233,112,48)" fg:x="25008" fg:w="7"/><text x="49.6124%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (7 samples, 0.01%)</title><rect x="49.3624%" y="885" width="0.0138%" height="15" fill="rgb(243,131,47)" fg:x="25008" fg:w="7"/><text x="49.6124%" y="895.50"></text></g><g><title>glXCreateGLXPbufferSGIX (8 samples, 0.02%)</title><rect x="49.4059%" y="821" width="0.0158%" height="15" fill="rgb(226,51,1)" fg:x="25030" fg:w="8"/><text x="49.6559%" y="831.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (11 samples, 0.02%)</title><rect x="49.4019%" y="869" width="0.0217%" height="15" fill="rgb(247,58,7)" fg:x="25028" fg:w="11"/><text x="49.6519%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (11 samples, 0.02%)</title><rect x="49.4019%" y="853" width="0.0217%" height="15" fill="rgb(209,7,32)" fg:x="25028" fg:w="11"/><text x="49.6519%" y="863.50"></text></g><g><title>__glx_Main (11 samples, 0.02%)</title><rect x="49.4019%" y="837" width="0.0217%" height="15" fill="rgb(209,39,41)" fg:x="25028" fg:w="11"/><text x="49.6519%" y="847.50"></text></g><g><title>ash::device::Device::create_buffer (6 samples, 0.01%)</title><rect x="49.4236%" y="869" width="0.0118%" height="15" fill="rgb(226,182,46)" fg:x="25039" fg:w="6"/><text x="49.6736%" y="879.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (27 samples, 0.05%)</title><rect x="49.3980%" y="901" width="0.0533%" height="15" fill="rgb(230,219,10)" fg:x="25026" fg:w="27"/><text x="49.6480%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (27 samples, 0.05%)</title><rect x="49.3980%" y="885" width="0.0533%" height="15" fill="rgb(227,175,30)" fg:x="25026" fg:w="27"/><text x="49.6480%" y="895.50"></text></g><g><title>ash::device::Device::begin_command_buffer (38 samples, 0.08%)</title><rect x="49.4592%" y="869" width="0.0750%" height="15" fill="rgb(217,2,50)" fg:x="25057" fg:w="38"/><text x="49.7092%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (38 samples, 0.08%)</title><rect x="49.4592%" y="853" width="0.0750%" height="15" fill="rgb(229,160,0)" fg:x="25057" fg:w="38"/><text x="49.7092%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (38 samples, 0.08%)</title><rect x="49.4592%" y="837" width="0.0750%" height="15" fill="rgb(207,78,37)" fg:x="25057" fg:w="38"/><text x="49.7092%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (31 samples, 0.06%)</title><rect x="49.4730%" y="821" width="0.0612%" height="15" fill="rgb(225,57,0)" fg:x="25064" fg:w="31"/><text x="49.7230%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.04%)</title><rect x="49.4927%" y="805" width="0.0415%" height="15" fill="rgb(232,154,2)" fg:x="25074" fg:w="21"/><text x="49.7427%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.02%)</title><rect x="49.5105%" y="789" width="0.0237%" height="15" fill="rgb(241,212,25)" fg:x="25083" fg:w="12"/><text x="49.7605%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="49.5184%" y="773" width="0.0158%" height="15" fill="rgb(226,69,20)" fg:x="25087" fg:w="8"/><text x="49.7684%" y="783.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (43 samples, 0.08%)</title><rect x="49.4513%" y="901" width="0.0849%" height="15" fill="rgb(247,184,54)" fg:x="25053" fg:w="43"/><text x="49.7013%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (43 samples, 0.08%)</title><rect x="49.4513%" y="885" width="0.0849%" height="15" fill="rgb(210,145,0)" fg:x="25053" fg:w="43"/><text x="49.7013%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (11 samples, 0.02%)</title><rect x="49.5480%" y="901" width="0.0217%" height="15" fill="rgb(253,82,12)" fg:x="25102" fg:w="11"/><text x="49.7980%" y="911.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (11 samples, 0.02%)</title><rect x="49.5480%" y="885" width="0.0217%" height="15" fill="rgb(245,42,11)" fg:x="25102" fg:w="11"/><text x="49.7980%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (11 samples, 0.02%)</title><rect x="49.5480%" y="869" width="0.0217%" height="15" fill="rgb(219,147,32)" fg:x="25102" fg:w="11"/><text x="49.7980%" y="879.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (11 samples, 0.02%)</title><rect x="49.5480%" y="853" width="0.0217%" height="15" fill="rgb(246,12,7)" fg:x="25102" fg:w="11"/><text x="49.7980%" y="863.50"></text></g><g><title>inplace_it::fixed_array::indirect (10 samples, 0.02%)</title><rect x="49.5500%" y="837" width="0.0197%" height="15" fill="rgb(243,50,9)" fg:x="25103" fg:w="10"/><text x="49.8000%" y="847.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (10 samples, 0.02%)</title><rect x="49.5500%" y="821" width="0.0197%" height="15" fill="rgb(219,149,6)" fg:x="25103" fg:w="10"/><text x="49.8000%" y="831.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (10 samples, 0.02%)</title><rect x="49.5500%" y="805" width="0.0197%" height="15" fill="rgb(241,51,42)" fg:x="25103" fg:w="10"/><text x="49.8000%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (10 samples, 0.02%)</title><rect x="49.5500%" y="789" width="0.0197%" height="15" fill="rgb(226,128,27)" fg:x="25103" fg:w="10"/><text x="49.8000%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="49.5559%" y="773" width="0.0138%" height="15" fill="rgb(244,144,4)" fg:x="25106" fg:w="7"/><text x="49.8059%" y="783.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (18 samples, 0.04%)</title><rect x="49.5776%" y="885" width="0.0355%" height="15" fill="rgb(221,4,13)" fg:x="25117" fg:w="18"/><text x="49.8276%" y="895.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (18 samples, 0.04%)</title><rect x="49.5776%" y="869" width="0.0355%" height="15" fill="rgb(208,170,28)" fg:x="25117" fg:w="18"/><text x="49.8276%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.04%)</title><rect x="49.5776%" y="853" width="0.0355%" height="15" fill="rgb(226,131,13)" fg:x="25117" fg:w="18"/><text x="49.8276%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.03%)</title><rect x="49.5796%" y="837" width="0.0336%" height="15" fill="rgb(215,72,41)" fg:x="25118" fg:w="17"/><text x="49.8296%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="49.5855%" y="821" width="0.0276%" height="15" fill="rgb(243,108,20)" fg:x="25121" fg:w="14"/><text x="49.8355%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="49.5914%" y="805" width="0.0217%" height="15" fill="rgb(230,189,17)" fg:x="25124" fg:w="11"/><text x="49.8414%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="49.5954%" y="789" width="0.0178%" height="15" fill="rgb(220,50,17)" fg:x="25126" fg:w="9"/><text x="49.8454%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="49.5993%" y="773" width="0.0138%" height="15" fill="rgb(248,152,48)" fg:x="25128" fg:w="7"/><text x="49.8493%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (115 samples, 0.23%)</title><rect x="49.3901%" y="933" width="0.2270%" height="15" fill="rgb(244,91,11)" fg:x="25022" fg:w="115"/><text x="49.6401%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (114 samples, 0.23%)</title><rect x="49.3920%" y="917" width="0.2250%" height="15" fill="rgb(220,157,5)" fg:x="25023" fg:w="114"/><text x="49.6420%" y="927.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (24 samples, 0.05%)</title><rect x="49.5697%" y="901" width="0.0474%" height="15" fill="rgb(253,137,8)" fg:x="25113" fg:w="24"/><text x="49.8197%" y="911.50"></text></g><g><title>bevy_pbr::render::light::GpuPointLights::write_buffer (119 samples, 0.23%)</title><rect x="49.3881%" y="965" width="0.2349%" height="15" fill="rgb(217,137,51)" fg:x="25021" fg:w="119"/><text x="49.6381%" y="975.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (119 samples, 0.23%)</title><rect x="49.3881%" y="949" width="0.2349%" height="15" fill="rgb(218,209,53)" fg:x="25021" fg:w="119"/><text x="49.6381%" y="959.50"></text></g><g><title>_nv023glcore (22 samples, 0.04%)</title><rect x="49.7138%" y="789" width="0.0434%" height="15" fill="rgb(249,137,25)" fg:x="25186" fg:w="22"/><text x="49.9638%" y="799.50"></text></g><g><title>_nv023glcore (11 samples, 0.02%)</title><rect x="49.7355%" y="773" width="0.0217%" height="15" fill="rgb(239,155,26)" fg:x="25197" fg:w="11"/><text x="49.9855%" y="783.50"></text></g><g><title>ash::device::Device::create_image_view (62 samples, 0.12%)</title><rect x="49.6743%" y="869" width="0.1224%" height="15" fill="rgb(227,85,46)" fg:x="25166" fg:w="62"/><text x="49.9243%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_image_view (62 samples, 0.12%)</title><rect x="49.6743%" y="853" width="0.1224%" height="15" fill="rgb(251,107,43)" fg:x="25166" fg:w="62"/><text x="49.9243%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (62 samples, 0.12%)</title><rect x="49.6743%" y="837" width="0.1224%" height="15" fill="rgb(234,170,33)" fg:x="25166" fg:w="62"/><text x="49.9243%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (58 samples, 0.11%)</title><rect x="49.6822%" y="821" width="0.1145%" height="15" fill="rgb(206,29,35)" fg:x="25170" fg:w="58"/><text x="49.9322%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (53 samples, 0.10%)</title><rect x="49.6921%" y="805" width="0.1046%" height="15" fill="rgb(227,138,25)" fg:x="25175" fg:w="53"/><text x="49.9421%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="49.7572%" y="789" width="0.0395%" height="15" fill="rgb(249,131,35)" fg:x="25208" fg:w="20"/><text x="50.0072%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.03%)</title><rect x="49.7651%" y="773" width="0.0316%" height="15" fill="rgb(239,6,40)" fg:x="25212" fg:w="16"/><text x="50.0151%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="49.7691%" y="757" width="0.0276%" height="15" fill="rgb(246,136,47)" fg:x="25214" fg:w="14"/><text x="50.0191%" y="767.50"></text></g><g><title>_nv041glcore (11 samples, 0.02%)</title><rect x="49.7750%" y="741" width="0.0217%" height="15" fill="rgb(253,58,26)" fg:x="25217" fg:w="11"/><text x="50.0250%" y="751.50"></text></g><g><title>_nv041glcore (9 samples, 0.02%)</title><rect x="49.7789%" y="725" width="0.0178%" height="15" fill="rgb(237,141,10)" fg:x="25219" fg:w="9"/><text x="50.0289%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (71 samples, 0.14%)</title><rect x="49.6704%" y="885" width="0.1401%" height="15" fill="rgb(234,156,12)" fg:x="25164" fg:w="71"/><text x="49.9204%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (84 samples, 0.17%)</title><rect x="49.6526%" y="901" width="0.1658%" height="15" fill="rgb(243,224,36)" fg:x="25155" fg:w="84"/><text x="49.9026%" y="911.50"></text></g><g><title>bevy_render::render_resource::texture::Texture::create_view (106 samples, 0.21%)</title><rect x="49.6289%" y="965" width="0.2092%" height="15" fill="rgb(205,229,51)" fg:x="25143" fg:w="106"/><text x="49.8789%" y="975.50"></text></g><g><title>wgpu::Texture::create_view (102 samples, 0.20%)</title><rect x="49.6368%" y="949" width="0.2013%" height="15" fill="rgb(223,189,4)" fg:x="25147" fg:w="102"/><text x="49.8868%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (100 samples, 0.20%)</title><rect x="49.6408%" y="933" width="0.1974%" height="15" fill="rgb(249,167,54)" fg:x="25149" fg:w="100"/><text x="49.8908%" y="943.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (99 samples, 0.20%)</title><rect x="49.6427%" y="917" width="0.1954%" height="15" fill="rgb(218,34,28)" fg:x="25150" fg:w="99"/><text x="49.8927%" y="927.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (7 samples, 0.01%)</title><rect x="49.8500%" y="901" width="0.0138%" height="15" fill="rgb(232,109,42)" fg:x="25255" fg:w="7"/><text x="50.1000%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.01%)</title><rect x="49.8520%" y="885" width="0.0118%" height="15" fill="rgb(248,214,46)" fg:x="25256" fg:w="6"/><text x="50.1020%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (23 samples, 0.05%)</title><rect x="49.8421%" y="933" width="0.0454%" height="15" fill="rgb(244,216,40)" fg:x="25251" fg:w="23"/><text x="50.0921%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (23 samples, 0.05%)</title><rect x="49.8421%" y="917" width="0.0454%" height="15" fill="rgb(231,226,31)" fg:x="25251" fg:w="23"/><text x="50.0921%" y="927.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (7 samples, 0.01%)</title><rect x="49.8737%" y="901" width="0.0138%" height="15" fill="rgb(238,38,43)" fg:x="25267" fg:w="7"/><text x="50.1237%" y="911.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (35 samples, 0.07%)</title><rect x="49.8381%" y="965" width="0.0691%" height="15" fill="rgb(208,88,43)" fg:x="25249" fg:w="35"/><text x="50.0881%" y="975.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (35 samples, 0.07%)</title><rect x="49.8381%" y="949" width="0.0691%" height="15" fill="rgb(205,136,37)" fg:x="25249" fg:w="35"/><text x="50.0881%" y="959.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (10 samples, 0.02%)</title><rect x="49.8875%" y="933" width="0.0197%" height="15" fill="rgb(237,34,14)" fg:x="25274" fg:w="10"/><text x="50.1375%" y="943.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (10 samples, 0.02%)</title><rect x="49.8875%" y="917" width="0.0197%" height="15" fill="rgb(236,193,44)" fg:x="25274" fg:w="10"/><text x="50.1375%" y="927.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (10 samples, 0.02%)</title><rect x="49.8875%" y="901" width="0.0197%" height="15" fill="rgb(231,48,10)" fg:x="25274" fg:w="10"/><text x="50.1375%" y="911.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (8 samples, 0.02%)</title><rect x="49.8914%" y="885" width="0.0158%" height="15" fill="rgb(213,141,34)" fg:x="25276" fg:w="8"/><text x="50.1414%" y="895.50"></text></g><g><title>bevy_crevice::internal::align_offset (6 samples, 0.01%)</title><rect x="49.8954%" y="869" width="0.0118%" height="15" fill="rgb(249,130,34)" fg:x="25278" fg:w="6"/><text x="50.1454%" y="879.50"></text></g><g><title>bevy_render::texture::texture_cache::TextureCache::get (10 samples, 0.02%)</title><rect x="49.9151%" y="965" width="0.0197%" height="15" fill="rgb(219,42,41)" fg:x="25288" fg:w="10"/><text x="50.1651%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (8 samples, 0.02%)</title><rect x="49.9191%" y="949" width="0.0158%" height="15" fill="rgb(224,100,54)" fg:x="25290" fg:w="8"/><text x="50.1691%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.01%)</title><rect x="49.9349%" y="965" width="0.0138%" height="15" fill="rgb(229,200,27)" fg:x="25298" fg:w="7"/><text x="50.1849%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="49.9349%" y="949" width="0.0138%" height="15" fill="rgb(217,118,10)" fg:x="25298" fg:w="7"/><text x="50.1849%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="49.9349%" y="933" width="0.0138%" height="15" fill="rgb(206,22,3)" fg:x="25298" fg:w="7"/><text x="50.1849%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="49.9349%" y="917" width="0.0138%" height="15" fill="rgb(232,163,46)" fg:x="25298" fg:w="7"/><text x="50.1849%" y="927.50"></text></g><g><title>bevy_pbr::render::light::prepare_lights (305 samples, 0.60%)</title><rect x="49.3506%" y="981" width="0.6020%" height="15" fill="rgb(206,95,13)" fg:x="25002" fg:w="305"/><text x="49.6006%" y="991.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (24 samples, 0.05%)</title><rect x="49.9625%" y="981" width="0.0474%" height="15" fill="rgb(253,154,18)" fg:x="25312" fg:w="24"/><text x="50.2125%" y="991.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (54 samples, 0.11%)</title><rect x="50.0099%" y="981" width="0.1066%" height="15" fill="rgb(219,32,23)" fg:x="25336" fg:w="54"/><text x="50.2599%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (79 samples, 0.16%)</title><rect x="50.1184%" y="981" width="0.1559%" height="15" fill="rgb(230,191,45)" fg:x="25391" fg:w="79"/><text x="50.3684%" y="991.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (29 samples, 0.06%)</title><rect x="50.2171%" y="965" width="0.0572%" height="15" fill="rgb(229,64,36)" fg:x="25441" fg:w="29"/><text x="50.4671%" y="975.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (29 samples, 0.06%)</title><rect x="50.2171%" y="949" width="0.0572%" height="15" fill="rgb(205,129,25)" fg:x="25441" fg:w="29"/><text x="50.4671%" y="959.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (17 samples, 0.03%)</title><rect x="50.2941%" y="981" width="0.0336%" height="15" fill="rgb(254,112,7)" fg:x="25480" fg:w="17"/><text x="50.5441%" y="991.50"></text></g><g><title>_nv041glcore (12 samples, 0.02%)</title><rect x="50.3494%" y="805" width="0.0237%" height="15" fill="rgb(226,53,48)" fg:x="25508" fg:w="12"/><text x="50.5994%" y="815.50"></text></g><g><title>_nv041glcore (10 samples, 0.02%)</title><rect x="50.3533%" y="789" width="0.0197%" height="15" fill="rgb(214,153,38)" fg:x="25510" fg:w="10"/><text x="50.6033%" y="799.50"></text></g><g><title>_nv009glcore (13 samples, 0.03%)</title><rect x="50.3494%" y="837" width="0.0257%" height="15" fill="rgb(243,101,7)" fg:x="25508" fg:w="13"/><text x="50.5994%" y="847.50"></text></g><g><title>_nv041glcore (13 samples, 0.03%)</title><rect x="50.3494%" y="821" width="0.0257%" height="15" fill="rgb(240,140,22)" fg:x="25508" fg:w="13"/><text x="50.5994%" y="831.50"></text></g><g><title>_nv041glcore (8 samples, 0.02%)</title><rect x="50.3770%" y="757" width="0.0158%" height="15" fill="rgb(235,114,2)" fg:x="25522" fg:w="8"/><text x="50.6270%" y="767.50"></text></g><g><title>_nv041glcore (6 samples, 0.01%)</title><rect x="50.3810%" y="741" width="0.0118%" height="15" fill="rgb(242,59,12)" fg:x="25524" fg:w="6"/><text x="50.6310%" y="751.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (32 samples, 0.06%)</title><rect x="50.3494%" y="917" width="0.0632%" height="15" fill="rgb(252,134,9)" fg:x="25508" fg:w="32"/><text x="50.5994%" y="927.50"></text></g><g><title>ash::device::Device::queue_submit (32 samples, 0.06%)</title><rect x="50.3494%" y="901" width="0.0632%" height="15" fill="rgb(236,4,44)" fg:x="25508" fg:w="32"/><text x="50.5994%" y="911.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (32 samples, 0.06%)</title><rect x="50.3494%" y="885" width="0.0632%" height="15" fill="rgb(254,172,41)" fg:x="25508" fg:w="32"/><text x="50.5994%" y="895.50"></text></g><g><title>__glx_Main (32 samples, 0.06%)</title><rect x="50.3494%" y="869" width="0.0632%" height="15" fill="rgb(244,63,20)" fg:x="25508" fg:w="32"/><text x="50.5994%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (32 samples, 0.06%)</title><rect x="50.3494%" y="853" width="0.0632%" height="15" fill="rgb(250,73,31)" fg:x="25508" fg:w="32"/><text x="50.5994%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="50.3750%" y="837" width="0.0375%" height="15" fill="rgb(241,38,36)" fg:x="25521" fg:w="19"/><text x="50.6250%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="50.3750%" y="821" width="0.0375%" height="15" fill="rgb(245,211,2)" fg:x="25521" fg:w="19"/><text x="50.6250%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="50.3750%" y="805" width="0.0375%" height="15" fill="rgb(206,120,28)" fg:x="25521" fg:w="19"/><text x="50.6250%" y="815.50"></text></g><g><title>_nv009glcore (19 samples, 0.04%)</title><rect x="50.3750%" y="789" width="0.0375%" height="15" fill="rgb(211,59,34)" fg:x="25521" fg:w="19"/><text x="50.6250%" y="799.50"></text></g><g><title>_nv041glcore (19 samples, 0.04%)</title><rect x="50.3750%" y="773" width="0.0375%" height="15" fill="rgb(233,168,5)" fg:x="25521" fg:w="19"/><text x="50.6250%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (10 samples, 0.02%)</title><rect x="50.3928%" y="757" width="0.0197%" height="15" fill="rgb(234,33,13)" fg:x="25530" fg:w="10"/><text x="50.6428%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="50.3987%" y="741" width="0.0138%" height="15" fill="rgb(231,150,26)" fg:x="25533" fg:w="7"/><text x="50.6487%" y="751.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (35 samples, 0.07%)</title><rect x="50.3494%" y="981" width="0.0691%" height="15" fill="rgb(217,191,4)" fg:x="25508" fg:w="35"/><text x="50.5994%" y="991.50"></text></g><g><title>wgpu::Queue::submit (35 samples, 0.07%)</title><rect x="50.3494%" y="965" width="0.0691%" height="15" fill="rgb(246,198,38)" fg:x="25508" fg:w="35"/><text x="50.5994%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (35 samples, 0.07%)</title><rect x="50.3494%" y="949" width="0.0691%" height="15" fill="rgb(245,64,37)" fg:x="25508" fg:w="35"/><text x="50.5994%" y="959.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (35 samples, 0.07%)</title><rect x="50.3494%" y="933" width="0.0691%" height="15" fill="rgb(250,30,36)" fg:x="25508" fg:w="35"/><text x="50.5994%" y="943.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (9 samples, 0.02%)</title><rect x="50.4244%" y="885" width="0.0178%" height="15" fill="rgb(217,86,53)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (9 samples, 0.02%)</title><rect x="50.4244%" y="869" width="0.0178%" height="15" fill="rgb(228,157,16)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="879.50"></text></g><g><title>ash::device::Device::begin_command_buffer (9 samples, 0.02%)</title><rect x="50.4244%" y="853" width="0.0178%" height="15" fill="rgb(217,59,31)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="863.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (9 samples, 0.02%)</title><rect x="50.4244%" y="837" width="0.0178%" height="15" fill="rgb(237,138,41)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="821" width="0.0178%" height="15" fill="rgb(227,91,49)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="805" width="0.0178%" height="15" fill="rgb(247,21,44)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="789" width="0.0178%" height="15" fill="rgb(219,210,51)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="773" width="0.0178%" height="15" fill="rgb(209,140,6)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="757" width="0.0178%" height="15" fill="rgb(221,188,24)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="50.4244%" y="741" width="0.0178%" height="15" fill="rgb(232,154,20)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="751.50"></text></g><g><title>_nv012glcore (9 samples, 0.02%)</title><rect x="50.4244%" y="725" width="0.0178%" height="15" fill="rgb(244,137,50)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="735.50"></text></g><g><title>_nv009glcore (9 samples, 0.02%)</title><rect x="50.4244%" y="709" width="0.0178%" height="15" fill="rgb(225,185,43)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="719.50"></text></g><g><title>_nv013glcore (9 samples, 0.02%)</title><rect x="50.4244%" y="693" width="0.0178%" height="15" fill="rgb(213,205,38)" fg:x="25546" fg:w="9"/><text x="50.6744%" y="703.50"></text></g><g><title>_nv013glcore (8 samples, 0.02%)</title><rect x="50.4264%" y="677" width="0.0158%" height="15" fill="rgb(236,73,12)" fg:x="25547" fg:w="8"/><text x="50.6764%" y="687.50"></text></g><g><title>_nv013glcore (6 samples, 0.01%)</title><rect x="50.4303%" y="661" width="0.0118%" height="15" fill="rgb(235,219,13)" fg:x="25549" fg:w="6"/><text x="50.6803%" y="671.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (10 samples, 0.02%)</title><rect x="50.4421%" y="885" width="0.0197%" height="15" fill="rgb(218,59,36)" fg:x="25555" fg:w="10"/><text x="50.6921%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (8 samples, 0.02%)</title><rect x="50.4461%" y="869" width="0.0158%" height="15" fill="rgb(205,110,39)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="853" width="0.0158%" height="15" fill="rgb(218,206,42)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="837" width="0.0158%" height="15" fill="rgb(248,125,24)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="821" width="0.0158%" height="15" fill="rgb(242,28,27)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="805" width="0.0158%" height="15" fill="rgb(216,228,15)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="789" width="0.0158%" height="15" fill="rgb(235,116,46)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.4461%" y="773" width="0.0158%" height="15" fill="rgb(224,18,32)" fg:x="25557" fg:w="8"/><text x="50.6961%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="50.4481%" y="757" width="0.0138%" height="15" fill="rgb(252,5,12)" fg:x="25558" fg:w="7"/><text x="50.6981%" y="767.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (6 samples, 0.01%)</title><rect x="50.4836%" y="869" width="0.0118%" height="15" fill="rgb(251,36,5)" fg:x="25576" fg:w="6"/><text x="50.7336%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (6 samples, 0.01%)</title><rect x="50.4836%" y="853" width="0.0118%" height="15" fill="rgb(217,53,14)" fg:x="25576" fg:w="6"/><text x="50.7336%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (6 samples, 0.01%)</title><rect x="50.4836%" y="837" width="0.0118%" height="15" fill="rgb(215,86,45)" fg:x="25576" fg:w="6"/><text x="50.7336%" y="847.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (40 samples, 0.08%)</title><rect x="50.4185%" y="965" width="0.0790%" height="15" fill="rgb(242,169,11)" fg:x="25543" fg:w="40"/><text x="50.6685%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (40 samples, 0.08%)</title><rect x="50.4185%" y="949" width="0.0790%" height="15" fill="rgb(211,213,45)" fg:x="25543" fg:w="40"/><text x="50.6685%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (40 samples, 0.08%)</title><rect x="50.4185%" y="933" width="0.0790%" height="15" fill="rgb(205,88,11)" fg:x="25543" fg:w="40"/><text x="50.6685%" y="943.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (40 samples, 0.08%)</title><rect x="50.4185%" y="917" width="0.0790%" height="15" fill="rgb(252,69,26)" fg:x="25543" fg:w="40"/><text x="50.6685%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (40 samples, 0.08%)</title><rect x="50.4185%" y="901" width="0.0790%" height="15" fill="rgb(246,123,37)" fg:x="25543" fg:w="40"/><text x="50.6685%" y="911.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (18 samples, 0.04%)</title><rect x="50.4619%" y="885" width="0.0355%" height="15" fill="rgb(212,205,5)" fg:x="25565" fg:w="18"/><text x="50.7119%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="50.5073%" y="821" width="0.0118%" height="15" fill="rgb(253,148,0)" fg:x="25588" fg:w="6"/><text x="50.7573%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="50.5073%" y="805" width="0.0118%" height="15" fill="rgb(239,22,4)" fg:x="25588" fg:w="6"/><text x="50.7573%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.01%)</title><rect x="50.5073%" y="789" width="0.0118%" height="15" fill="rgb(226,26,53)" fg:x="25588" fg:w="6"/><text x="50.7573%" y="799.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (10 samples, 0.02%)</title><rect x="50.5073%" y="837" width="0.0197%" height="15" fill="rgb(225,229,45)" fg:x="25588" fg:w="10"/><text x="50.7573%" y="847.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="50.5369%" y="581" width="0.0118%" height="15" fill="rgb(220,60,37)" fg:x="25603" fg:w="6"/><text x="50.7869%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.02%)</title><rect x="50.5290%" y="805" width="0.0217%" height="15" fill="rgb(217,180,35)" fg:x="25599" fg:w="11"/><text x="50.7790%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.02%)</title><rect x="50.5290%" y="789" width="0.0217%" height="15" fill="rgb(229,7,53)" fg:x="25599" fg:w="11"/><text x="50.7790%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="50.5290%" y="773" width="0.0217%" height="15" fill="rgb(254,137,3)" fg:x="25599" fg:w="11"/><text x="50.7790%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.02%)</title><rect x="50.5290%" y="757" width="0.0217%" height="15" fill="rgb(215,140,41)" fg:x="25599" fg:w="11"/><text x="50.7790%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (11 samples, 0.02%)</title><rect x="50.5290%" y="741" width="0.0217%" height="15" fill="rgb(250,80,15)" fg:x="25599" fg:w="11"/><text x="50.7790%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (8 samples, 0.02%)</title><rect x="50.5349%" y="725" width="0.0158%" height="15" fill="rgb(252,191,6)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (8 samples, 0.02%)</title><rect x="50.5349%" y="709" width="0.0158%" height="15" fill="rgb(246,217,18)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (8 samples, 0.02%)</title><rect x="50.5349%" y="693" width="0.0158%" height="15" fill="rgb(223,93,7)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="703.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.02%)</title><rect x="50.5349%" y="677" width="0.0158%" height="15" fill="rgb(225,55,52)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="50.5349%" y="661" width="0.0158%" height="15" fill="rgb(240,31,24)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="50.5349%" y="645" width="0.0158%" height="15" fill="rgb(205,56,52)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="655.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="50.5349%" y="629" width="0.0158%" height="15" fill="rgb(246,146,12)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="639.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="50.5349%" y="613" width="0.0158%" height="15" fill="rgb(239,84,36)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="623.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="50.5349%" y="597" width="0.0158%" height="15" fill="rgb(207,41,40)" fg:x="25602" fg:w="8"/><text x="50.7849%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.03%)</title><rect x="50.5290%" y="837" width="0.0296%" height="15" fill="rgb(241,179,25)" fg:x="25599" fg:w="15"/><text x="50.7790%" y="847.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.03%)</title><rect x="50.5290%" y="821" width="0.0296%" height="15" fill="rgb(210,0,34)" fg:x="25599" fg:w="15"/><text x="50.7790%" y="831.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (33 samples, 0.07%)</title><rect x="50.4974%" y="869" width="0.0651%" height="15" fill="rgb(225,217,29)" fg:x="25583" fg:w="33"/><text x="50.7474%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (33 samples, 0.07%)</title><rect x="50.4974%" y="853" width="0.0651%" height="15" fill="rgb(216,191,38)" fg:x="25583" fg:w="33"/><text x="50.7474%" y="863.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (8 samples, 0.02%)</title><rect x="50.5626%" y="869" width="0.0158%" height="15" fill="rgb(232,140,52)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (8 samples, 0.02%)</title><rect x="50.5626%" y="853" width="0.0158%" height="15" fill="rgb(223,158,51)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (8 samples, 0.02%)</title><rect x="50.5626%" y="837" width="0.0158%" height="15" fill="rgb(235,29,51)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (8 samples, 0.02%)</title><rect x="50.5626%" y="821" width="0.0158%" height="15" fill="rgb(215,181,18)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.5626%" y="805" width="0.0158%" height="15" fill="rgb(227,125,34)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.5626%" y="789" width="0.0158%" height="15" fill="rgb(230,197,49)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.5626%" y="773" width="0.0158%" height="15" fill="rgb(239,141,16)" fg:x="25616" fg:w="8"/><text x="50.8126%" y="783.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (7 samples, 0.01%)</title><rect x="50.5783%" y="869" width="0.0138%" height="15" fill="rgb(225,105,43)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (7 samples, 0.01%)</title><rect x="50.5783%" y="853" width="0.0138%" height="15" fill="rgb(214,131,14)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (7 samples, 0.01%)</title><rect x="50.5783%" y="837" width="0.0138%" height="15" fill="rgb(229,177,11)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (7 samples, 0.01%)</title><rect x="50.5783%" y="821" width="0.0138%" height="15" fill="rgb(231,180,14)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="50.5783%" y="805" width="0.0138%" height="15" fill="rgb(232,88,2)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="50.5783%" y="789" width="0.0138%" height="15" fill="rgb(205,220,8)" fg:x="25624" fg:w="7"/><text x="50.8283%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="50.5803%" y="773" width="0.0118%" height="15" fill="rgb(225,23,53)" fg:x="25625" fg:w="6"/><text x="50.8303%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (14 samples, 0.03%)</title><rect x="50.6020%" y="821" width="0.0276%" height="15" fill="rgb(213,62,29)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.03%)</title><rect x="50.6020%" y="805" width="0.0276%" height="15" fill="rgb(227,75,7)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (14 samples, 0.03%)</title><rect x="50.6020%" y="789" width="0.0276%" height="15" fill="rgb(207,105,14)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="50.6020%" y="773" width="0.0276%" height="15" fill="rgb(245,62,29)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="50.6020%" y="757" width="0.0276%" height="15" fill="rgb(236,202,4)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (14 samples, 0.03%)</title><rect x="50.6020%" y="741" width="0.0276%" height="15" fill="rgb(250,67,1)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (14 samples, 0.03%)</title><rect x="50.6020%" y="725" width="0.0276%" height="15" fill="rgb(253,115,44)" fg:x="25636" fg:w="14"/><text x="50.8520%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.02%)</title><rect x="50.6099%" y="709" width="0.0197%" height="15" fill="rgb(251,139,18)" fg:x="25640" fg:w="10"/><text x="50.8599%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.02%)</title><rect x="50.6099%" y="693" width="0.0197%" height="15" fill="rgb(218,22,32)" fg:x="25640" fg:w="10"/><text x="50.8599%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (9 samples, 0.02%)</title><rect x="50.6119%" y="677" width="0.0178%" height="15" fill="rgb(243,53,5)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.02%)</title><rect x="50.6119%" y="661" width="0.0178%" height="15" fill="rgb(227,56,16)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="50.6119%" y="645" width="0.0178%" height="15" fill="rgb(245,53,0)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="50.6119%" y="629" width="0.0178%" height="15" fill="rgb(216,170,35)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="639.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="50.6119%" y="613" width="0.0178%" height="15" fill="rgb(211,200,8)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="623.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="50.6119%" y="597" width="0.0178%" height="15" fill="rgb(228,204,44)" fg:x="25641" fg:w="9"/><text x="50.8619%" y="607.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="50.6158%" y="581" width="0.0138%" height="15" fill="rgb(214,121,17)" fg:x="25643" fg:w="7"/><text x="50.8658%" y="591.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (22 samples, 0.04%)</title><rect x="50.5922%" y="853" width="0.0434%" height="15" fill="rgb(233,64,38)" fg:x="25631" fg:w="22"/><text x="50.8422%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (19 samples, 0.04%)</title><rect x="50.5981%" y="837" width="0.0375%" height="15" fill="rgb(253,54,19)" fg:x="25634" fg:w="19"/><text x="50.8481%" y="847.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (80 samples, 0.16%)</title><rect x="50.5922%" y="869" width="0.1579%" height="15" fill="rgb(253,94,18)" fg:x="25631" fg:w="80"/><text x="50.8422%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (58 samples, 0.11%)</title><rect x="50.6356%" y="853" width="0.1145%" height="15" fill="rgb(227,57,52)" fg:x="25653" fg:w="58"/><text x="50.8856%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (58 samples, 0.11%)</title><rect x="50.6356%" y="837" width="0.1145%" height="15" fill="rgb(230,228,50)" fg:x="25653" fg:w="58"/><text x="50.8856%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (58 samples, 0.11%)</title><rect x="50.6356%" y="821" width="0.1145%" height="15" fill="rgb(217,205,27)" fg:x="25653" fg:w="58"/><text x="50.8856%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (55 samples, 0.11%)</title><rect x="50.6415%" y="805" width="0.1086%" height="15" fill="rgb(252,71,50)" fg:x="25656" fg:w="55"/><text x="50.8915%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (49 samples, 0.10%)</title><rect x="50.6533%" y="789" width="0.0967%" height="15" fill="rgb(209,86,4)" fg:x="25662" fg:w="49"/><text x="50.9033%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (43 samples, 0.08%)</title><rect x="50.6652%" y="773" width="0.0849%" height="15" fill="rgb(229,94,0)" fg:x="25668" fg:w="43"/><text x="50.9152%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (39 samples, 0.08%)</title><rect x="50.6731%" y="757" width="0.0770%" height="15" fill="rgb(252,223,21)" fg:x="25672" fg:w="39"/><text x="50.9231%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (27 samples, 0.05%)</title><rect x="50.6968%" y="741" width="0.0533%" height="15" fill="rgb(230,210,4)" fg:x="25684" fg:w="27"/><text x="50.9468%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.04%)</title><rect x="50.7086%" y="725" width="0.0415%" height="15" fill="rgb(240,149,38)" fg:x="25690" fg:w="21"/><text x="50.9586%" y="735.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (27 samples, 0.05%)</title><rect x="50.7501%" y="869" width="0.0533%" height="15" fill="rgb(254,105,20)" fg:x="25711" fg:w="27"/><text x="51.0001%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (10 samples, 0.02%)</title><rect x="50.7836%" y="853" width="0.0197%" height="15" fill="rgb(253,87,46)" fg:x="25728" fg:w="10"/><text x="51.0336%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (6 samples, 0.01%)</title><rect x="50.7915%" y="837" width="0.0118%" height="15" fill="rgb(253,116,33)" fg:x="25732" fg:w="6"/><text x="51.0415%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (6 samples, 0.01%)</title><rect x="50.7915%" y="821" width="0.0118%" height="15" fill="rgb(229,198,5)" fg:x="25732" fg:w="6"/><text x="51.0415%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.01%)</title><rect x="50.7915%" y="805" width="0.0118%" height="15" fill="rgb(242,38,37)" fg:x="25732" fg:w="6"/><text x="51.0415%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.01%)</title><rect x="50.7915%" y="789" width="0.0118%" height="15" fill="rgb(242,69,53)" fg:x="25732" fg:w="6"/><text x="51.0415%" y="799.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (171 samples, 0.34%)</title><rect x="50.4974%" y="965" width="0.3375%" height="15" fill="rgb(249,80,16)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (171 samples, 0.34%)</title><rect x="50.4974%" y="949" width="0.3375%" height="15" fill="rgb(206,128,11)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (171 samples, 0.34%)</title><rect x="50.4974%" y="933" width="0.3375%" height="15" fill="rgb(212,35,20)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (171 samples, 0.34%)</title><rect x="50.4974%" y="917" width="0.3375%" height="15" fill="rgb(236,79,13)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (171 samples, 0.34%)</title><rect x="50.4974%" y="901" width="0.3375%" height="15" fill="rgb(233,123,3)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (171 samples, 0.34%)</title><rect x="50.4974%" y="885" width="0.3375%" height="15" fill="rgb(214,93,52)" fg:x="25583" fg:w="171"/><text x="50.7474%" y="895.50"></text></g><g><title>wgpu_core::track::StatefulTrackerSubset::merge_extend (16 samples, 0.03%)</title><rect x="50.8034%" y="869" width="0.0316%" height="15" fill="rgb(251,37,40)" fg:x="25738" fg:w="16"/><text x="51.0534%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (16 samples, 0.03%)</title><rect x="50.8034%" y="853" width="0.0316%" height="15" fill="rgb(227,80,54)" fg:x="25738" fg:w="16"/><text x="51.0534%" y="863.50"></text></g><g><title>ash::device::Device::end_command_buffer (11 samples, 0.02%)</title><rect x="50.8646%" y="837" width="0.0217%" height="15" fill="rgb(254,48,11)" fg:x="25769" fg:w="11"/><text x="51.1146%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (11 samples, 0.02%)</title><rect x="50.8646%" y="821" width="0.0217%" height="15" fill="rgb(235,193,26)" fg:x="25769" fg:w="11"/><text x="51.1146%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="50.8646%" y="805" width="0.0217%" height="15" fill="rgb(229,99,21)" fg:x="25769" fg:w="11"/><text x="51.1146%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="50.8744%" y="789" width="0.0118%" height="15" fill="rgb(211,140,41)" fg:x="25774" fg:w="6"/><text x="51.1244%" y="799.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (15 samples, 0.03%)</title><rect x="50.8626%" y="869" width="0.0296%" height="15" fill="rgb(240,227,30)" fg:x="25768" fg:w="15"/><text x="51.1126%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (15 samples, 0.03%)</title><rect x="50.8626%" y="853" width="0.0296%" height="15" fill="rgb(215,224,45)" fg:x="25768" fg:w="15"/><text x="51.1126%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (14 samples, 0.03%)</title><rect x="50.8922%" y="837" width="0.0276%" height="15" fill="rgb(206,123,31)" fg:x="25783" fg:w="14"/><text x="51.1422%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (14 samples, 0.03%)</title><rect x="50.8922%" y="821" width="0.0276%" height="15" fill="rgb(210,138,16)" fg:x="25783" fg:w="14"/><text x="51.1422%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="50.8922%" y="805" width="0.0276%" height="15" fill="rgb(228,57,28)" fg:x="25783" fg:w="14"/><text x="51.1422%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.03%)</title><rect x="50.8942%" y="789" width="0.0257%" height="15" fill="rgb(242,170,10)" fg:x="25784" fg:w="13"/><text x="51.1442%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="50.9040%" y="773" width="0.0158%" height="15" fill="rgb(228,214,39)" fg:x="25789" fg:w="8"/><text x="51.1540%" y="783.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (15 samples, 0.03%)</title><rect x="50.8922%" y="869" width="0.0296%" height="15" fill="rgb(218,179,33)" fg:x="25783" fg:w="15"/><text x="51.1422%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (15 samples, 0.03%)</title><rect x="50.8922%" y="853" width="0.0296%" height="15" fill="rgb(235,193,39)" fg:x="25783" fg:w="15"/><text x="51.1422%" y="863.50"></text></g><g><title>_nv011glcore (12 samples, 0.02%)</title><rect x="50.9593%" y="725" width="0.0237%" height="15" fill="rgb(219,221,36)" fg:x="25817" fg:w="12"/><text x="51.2093%" y="735.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="50.9593%" y="709" width="0.0237%" height="15" fill="rgb(248,218,19)" fg:x="25817" fg:w="12"/><text x="51.2093%" y="719.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="50.9692%" y="693" width="0.0138%" height="15" fill="rgb(205,50,9)" fg:x="25822" fg:w="7"/><text x="51.2192%" y="703.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (54 samples, 0.11%)</title><rect x="50.9218%" y="869" width="0.1066%" height="15" fill="rgb(238,81,28)" fg:x="25798" fg:w="54"/><text x="51.1718%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (54 samples, 0.11%)</title><rect x="50.9218%" y="853" width="0.1066%" height="15" fill="rgb(235,110,19)" fg:x="25798" fg:w="54"/><text x="51.1718%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (54 samples, 0.11%)</title><rect x="50.9218%" y="837" width="0.1066%" height="15" fill="rgb(214,7,14)" fg:x="25798" fg:w="54"/><text x="51.1718%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (54 samples, 0.11%)</title><rect x="50.9218%" y="821" width="0.1066%" height="15" fill="rgb(211,77,3)" fg:x="25798" fg:w="54"/><text x="51.1718%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (54 samples, 0.11%)</title><rect x="50.9218%" y="805" width="0.1066%" height="15" fill="rgb(229,5,9)" fg:x="25798" fg:w="54"/><text x="51.1718%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (52 samples, 0.10%)</title><rect x="50.9257%" y="789" width="0.1026%" height="15" fill="rgb(225,90,11)" fg:x="25800" fg:w="52"/><text x="51.1757%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (49 samples, 0.10%)</title><rect x="50.9317%" y="773" width="0.0967%" height="15" fill="rgb(242,56,8)" fg:x="25803" fg:w="49"/><text x="51.1817%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (41 samples, 0.08%)</title><rect x="50.9475%" y="757" width="0.0809%" height="15" fill="rgb(249,212,39)" fg:x="25811" fg:w="41"/><text x="51.1975%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.07%)</title><rect x="50.9573%" y="741" width="0.0711%" height="15" fill="rgb(236,90,9)" fg:x="25816" fg:w="36"/><text x="51.2073%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.05%)</title><rect x="50.9830%" y="725" width="0.0454%" height="15" fill="rgb(206,88,35)" fg:x="25829" fg:w="23"/><text x="51.2330%" y="735.50"></text></g><g><title>_nv012glcore (17 samples, 0.03%)</title><rect x="50.9948%" y="709" width="0.0336%" height="15" fill="rgb(205,126,30)" fg:x="25835" fg:w="17"/><text x="51.2448%" y="719.50"></text></g><g><title>_nv012glcore (9 samples, 0.02%)</title><rect x="51.0106%" y="693" width="0.0178%" height="15" fill="rgb(230,176,12)" fg:x="25843" fg:w="9"/><text x="51.2606%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (31 samples, 0.06%)</title><rect x="51.0343%" y="869" width="0.0612%" height="15" fill="rgb(243,19,9)" fg:x="25855" fg:w="31"/><text x="51.2843%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (24 samples, 0.05%)</title><rect x="51.0481%" y="853" width="0.0474%" height="15" fill="rgb(245,171,17)" fg:x="25862" fg:w="24"/><text x="51.2981%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.05%)</title><rect x="51.0481%" y="837" width="0.0474%" height="15" fill="rgb(227,52,21)" fg:x="25862" fg:w="24"/><text x="51.2981%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.05%)</title><rect x="51.0501%" y="821" width="0.0454%" height="15" fill="rgb(238,69,14)" fg:x="25863" fg:w="23"/><text x="51.3001%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.05%)</title><rect x="51.0501%" y="805" width="0.0454%" height="15" fill="rgb(241,156,39)" fg:x="25863" fg:w="23"/><text x="51.3001%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.04%)</title><rect x="51.0540%" y="789" width="0.0415%" height="15" fill="rgb(212,227,28)" fg:x="25865" fg:w="21"/><text x="51.3040%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.04%)</title><rect x="51.0600%" y="773" width="0.0355%" height="15" fill="rgb(209,118,27)" fg:x="25868" fg:w="18"/><text x="51.3100%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.03%)</title><rect x="51.0639%" y="757" width="0.0316%" height="15" fill="rgb(226,102,5)" fg:x="25870" fg:w="16"/><text x="51.3139%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="51.0777%" y="741" width="0.0178%" height="15" fill="rgb(223,34,3)" fg:x="25877" fg:w="9"/><text x="51.3277%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="51.0797%" y="725" width="0.0158%" height="15" fill="rgb(221,81,38)" fg:x="25878" fg:w="8"/><text x="51.3297%" y="735.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (134 samples, 0.26%)</title><rect x="50.8369%" y="949" width="0.2645%" height="15" fill="rgb(236,219,28)" fg:x="25755" fg:w="134"/><text x="51.0869%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (134 samples, 0.26%)</title><rect x="50.8369%" y="933" width="0.2645%" height="15" fill="rgb(213,200,14)" fg:x="25755" fg:w="134"/><text x="51.0869%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (134 samples, 0.26%)</title><rect x="50.8369%" y="917" width="0.2645%" height="15" fill="rgb(240,33,19)" fg:x="25755" fg:w="134"/><text x="51.0869%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (134 samples, 0.26%)</title><rect x="50.8369%" y="901" width="0.2645%" height="15" fill="rgb(233,113,27)" fg:x="25755" fg:w="134"/><text x="51.0869%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (134 samples, 0.26%)</title><rect x="50.8369%" y="885" width="0.2645%" height="15" fill="rgb(220,221,18)" fg:x="25755" fg:w="134"/><text x="51.0869%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="51.2455%" y="853" width="0.0138%" height="15" fill="rgb(238,92,8)" fg:x="25962" fg:w="7"/><text x="51.4955%" y="863.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (10 samples, 0.02%)</title><rect x="51.2593%" y="853" width="0.0197%" height="15" fill="rgb(222,164,16)" fg:x="25969" fg:w="10"/><text x="51.5093%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (10 samples, 0.02%)</title><rect x="51.2593%" y="837" width="0.0197%" height="15" fill="rgb(241,119,3)" fg:x="25969" fg:w="10"/><text x="51.5093%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="51.2850%" y="805" width="0.0118%" height="15" fill="rgb(241,44,8)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="51.2850%" y="789" width="0.0118%" height="15" fill="rgb(230,36,40)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="51.2850%" y="773" width="0.0118%" height="15" fill="rgb(243,16,36)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="51.2850%" y="757" width="0.0118%" height="15" fill="rgb(231,4,26)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="51.2850%" y="741" width="0.0118%" height="15" fill="rgb(240,9,31)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="51.2850%" y="725" width="0.0118%" height="15" fill="rgb(207,173,15)" fg:x="25982" fg:w="6"/><text x="51.5350%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.02%)</title><rect x="51.2850%" y="853" width="0.0197%" height="15" fill="rgb(224,192,53)" fg:x="25982" fg:w="10"/><text x="51.5350%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="51.2850%" y="837" width="0.0197%" height="15" fill="rgb(223,67,28)" fg:x="25982" fg:w="10"/><text x="51.5350%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.02%)</title><rect x="51.2850%" y="821" width="0.0197%" height="15" fill="rgb(211,20,47)" fg:x="25982" fg:w="10"/><text x="51.5350%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::State&gt; (7 samples, 0.01%)</title><rect x="51.3205%" y="853" width="0.0138%" height="15" fill="rgb(240,228,2)" fg:x="26000" fg:w="7"/><text x="51.5705%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&gt; (7 samples, 0.01%)</title><rect x="51.3205%" y="837" width="0.0138%" height="15" fill="rgb(248,151,12)" fg:x="26000" fg:w="7"/><text x="51.5705%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::command::bind::EntryPayload: 8]&gt; (7 samples, 0.01%)</title><rect x="51.3205%" y="821" width="0.0138%" height="15" fill="rgb(244,8,39)" fg:x="26000" fg:w="7"/><text x="51.5705%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::EntryPayload&gt; (6 samples, 0.01%)</title><rect x="51.3225%" y="805" width="0.0118%" height="15" fill="rgb(222,26,8)" fg:x="26001" fg:w="6"/><text x="51.5725%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (20 samples, 0.04%)</title><rect x="51.3343%" y="757" width="0.0395%" height="15" fill="rgb(213,106,44)" fg:x="26007" fg:w="20"/><text x="51.5843%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (19 samples, 0.04%)</title><rect x="51.3363%" y="741" width="0.0375%" height="15" fill="rgb(214,129,20)" fg:x="26008" fg:w="19"/><text x="51.5863%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (19 samples, 0.04%)</title><rect x="51.3363%" y="725" width="0.0375%" height="15" fill="rgb(212,32,13)" fg:x="26008" fg:w="19"/><text x="51.5863%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;)&gt; (19 samples, 0.04%)</title><rect x="51.3363%" y="709" width="0.0375%" height="15" fill="rgb(208,168,33)" fg:x="26008" fg:w="19"/><text x="51.5863%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="51.3363%" y="693" width="0.0375%" height="15" fill="rgb(231,207,8)" fg:x="26008" fg:w="19"/><text x="51.5863%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (19 samples, 0.04%)</title><rect x="51.3363%" y="677" width="0.0375%" height="15" fill="rgb(235,219,23)" fg:x="26008" fg:w="19"/><text x="51.5863%" y="687.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="51.3383%" y="661" width="0.0355%" height="15" fill="rgb(226,216,26)" fg:x="26009" fg:w="18"/><text x="51.5883%" y="671.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (18 samples, 0.04%)</title><rect x="51.3383%" y="645" width="0.0355%" height="15" fill="rgb(239,137,16)" fg:x="26009" fg:w="18"/><text x="51.5883%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.04%)</title><rect x="51.3383%" y="629" width="0.0355%" height="15" fill="rgb(207,12,36)" fg:x="26009" fg:w="18"/><text x="51.5883%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.04%)</title><rect x="51.3383%" y="613" width="0.0355%" height="15" fill="rgb(210,214,24)" fg:x="26009" fg:w="18"/><text x="51.5883%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (21 samples, 0.04%)</title><rect x="51.3343%" y="837" width="0.0415%" height="15" fill="rgb(206,56,30)" fg:x="26007" fg:w="21"/><text x="51.5843%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (21 samples, 0.04%)</title><rect x="51.3343%" y="821" width="0.0415%" height="15" fill="rgb(228,143,26)" fg:x="26007" fg:w="21"/><text x="51.5843%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (21 samples, 0.04%)</title><rect x="51.3343%" y="805" width="0.0415%" height="15" fill="rgb(216,218,46)" fg:x="26007" fg:w="21"/><text x="51.5843%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;)&gt;&gt; (21 samples, 0.04%)</title><rect x="51.3343%" y="789" width="0.0415%" height="15" fill="rgb(206,6,19)" fg:x="26007" fg:w="21"/><text x="51.5843%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="51.3343%" y="773" width="0.0415%" height="15" fill="rgb(239,177,51)" fg:x="26007" fg:w="21"/><text x="51.5843%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::StatefulTrackerSubset&gt; (25 samples, 0.05%)</title><rect x="51.3343%" y="853" width="0.0493%" height="15" fill="rgb(216,55,25)" fg:x="26007" fg:w="25"/><text x="51.5843%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="51.3935%" y="853" width="0.0276%" height="15" fill="rgb(231,163,29)" fg:x="26037" fg:w="14"/><text x="51.6435%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="51.4054%" y="837" width="0.0158%" height="15" fill="rgb(232,149,50)" fg:x="26043" fg:w="8"/><text x="51.6554%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="51.4093%" y="821" width="0.0118%" height="15" fill="rgb(223,142,48)" fg:x="26045" fg:w="6"/><text x="51.6593%" y="831.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;A&gt;::validate_dynamic_bindings (24 samples, 0.05%)</title><rect x="51.4212%" y="853" width="0.0474%" height="15" fill="rgb(245,83,23)" fg:x="26051" fg:w="24"/><text x="51.6712%" y="863.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="51.4784%" y="805" width="0.0553%" height="15" fill="rgb(224,63,2)" fg:x="26080" fg:w="28"/><text x="51.7284%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.05%)</title><rect x="51.4804%" y="789" width="0.0533%" height="15" fill="rgb(218,65,53)" fg:x="26081" fg:w="27"/><text x="51.7304%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.05%)</title><rect x="51.4804%" y="773" width="0.0533%" height="15" fill="rgb(221,84,29)" fg:x="26081" fg:w="27"/><text x="51.7304%" y="783.50"></text></g><g><title>&lt;wgpu_core::track::Resource&lt;S&gt; as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="51.4745%" y="821" width="0.0612%" height="15" fill="rgb(234,0,32)" fg:x="26078" fg:w="31"/><text x="51.7245%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (7 samples, 0.01%)</title><rect x="51.5594%" y="709" width="0.0138%" height="15" fill="rgb(206,20,16)" fg:x="26121" fg:w="7"/><text x="51.8094%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (28 samples, 0.06%)</title><rect x="51.5357%" y="789" width="0.0553%" height="15" fill="rgb(244,172,18)" fg:x="26109" fg:w="28"/><text x="51.7857%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (28 samples, 0.06%)</title><rect x="51.5357%" y="773" width="0.0553%" height="15" fill="rgb(254,133,1)" fg:x="26109" fg:w="28"/><text x="51.7857%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.06%)</title><rect x="51.5357%" y="757" width="0.0553%" height="15" fill="rgb(222,206,41)" fg:x="26109" fg:w="28"/><text x="51.7857%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (28 samples, 0.06%)</title><rect x="51.5357%" y="741" width="0.0553%" height="15" fill="rgb(212,3,42)" fg:x="26109" fg:w="28"/><text x="51.7857%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (26 samples, 0.05%)</title><rect x="51.5396%" y="725" width="0.0513%" height="15" fill="rgb(241,11,4)" fg:x="26111" fg:w="26"/><text x="51.7896%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (9 samples, 0.02%)</title><rect x="51.5732%" y="709" width="0.0178%" height="15" fill="rgb(205,19,26)" fg:x="26128" fg:w="9"/><text x="51.8232%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (9 samples, 0.02%)</title><rect x="51.5732%" y="693" width="0.0178%" height="15" fill="rgb(210,179,32)" fg:x="26128" fg:w="9"/><text x="51.8232%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (8 samples, 0.02%)</title><rect x="51.5751%" y="677" width="0.0158%" height="15" fill="rgb(227,116,49)" fg:x="26129" fg:w="8"/><text x="51.8251%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (36 samples, 0.07%)</title><rect x="51.5357%" y="821" width="0.0711%" height="15" fill="rgb(211,146,6)" fg:x="26109" fg:w="36"/><text x="51.7857%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (36 samples, 0.07%)</title><rect x="51.5357%" y="805" width="0.0711%" height="15" fill="rgb(219,44,39)" fg:x="26109" fg:w="36"/><text x="51.7857%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="51.5909%" y="789" width="0.0158%" height="15" fill="rgb(234,128,11)" fg:x="26137" fg:w="8"/><text x="51.8409%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="51.5909%" y="773" width="0.0158%" height="15" fill="rgb(220,183,53)" fg:x="26137" fg:w="8"/><text x="51.8409%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (15 samples, 0.03%)</title><rect x="51.6186%" y="757" width="0.0296%" height="15" fill="rgb(213,219,32)" fg:x="26151" fg:w="15"/><text x="51.8686%" y="767.50"></text></g><g><title>core::ptr::write (15 samples, 0.03%)</title><rect x="51.6186%" y="741" width="0.0296%" height="15" fill="rgb(232,156,16)" fg:x="26151" fg:w="15"/><text x="51.8686%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.03%)</title><rect x="51.6186%" y="773" width="0.0336%" height="15" fill="rgb(246,135,34)" fg:x="26151" fg:w="17"/><text x="51.8686%" y="783.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (29 samples, 0.06%)</title><rect x="51.6067%" y="805" width="0.0572%" height="15" fill="rgb(241,99,0)" fg:x="26145" fg:w="29"/><text x="51.8567%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (26 samples, 0.05%)</title><rect x="51.6126%" y="789" width="0.0513%" height="15" fill="rgb(222,103,45)" fg:x="26148" fg:w="26"/><text x="51.8626%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.01%)</title><rect x="51.6521%" y="773" width="0.0118%" height="15" fill="rgb(212,57,4)" fg:x="26168" fg:w="6"/><text x="51.9021%" y="783.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (99 samples, 0.20%)</title><rect x="51.4705%" y="853" width="0.1954%" height="15" fill="rgb(215,68,47)" fg:x="26076" fg:w="99"/><text x="51.7205%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (98 samples, 0.19%)</title><rect x="51.4725%" y="837" width="0.1934%" height="15" fill="rgb(230,84,2)" fg:x="26077" fg:w="98"/><text x="51.7225%" y="847.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (30 samples, 0.06%)</title><rect x="51.6067%" y="821" width="0.0592%" height="15" fill="rgb(220,102,14)" fg:x="26145" fg:w="30"/><text x="51.8567%" y="831.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (15 samples, 0.03%)</title><rect x="51.6659%" y="853" width="0.0296%" height="15" fill="rgb(240,10,32)" fg:x="26175" fg:w="15"/><text x="51.9159%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (12 samples, 0.02%)</title><rect x="51.6719%" y="837" width="0.0237%" height="15" fill="rgb(215,47,27)" fg:x="26178" fg:w="12"/><text x="51.9219%" y="847.50"></text></g><g><title>ash::device::Device::end_command_buffer (12 samples, 0.02%)</title><rect x="51.6719%" y="821" width="0.0237%" height="15" fill="rgb(233,188,43)" fg:x="26178" fg:w="12"/><text x="51.9219%" y="831.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (12 samples, 0.02%)</title><rect x="51.6719%" y="805" width="0.0237%" height="15" fill="rgb(253,190,1)" fg:x="26178" fg:w="12"/><text x="51.9219%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.02%)</title><rect x="51.6719%" y="789" width="0.0237%" height="15" fill="rgb(206,114,52)" fg:x="26178" fg:w="12"/><text x="51.9219%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="51.6798%" y="773" width="0.0158%" height="15" fill="rgb(233,120,37)" fg:x="26182" fg:w="8"/><text x="51.9298%" y="783.50"></text></g><g><title>ash::device::Device::begin_command_buffer (20 samples, 0.04%)</title><rect x="51.6956%" y="821" width="0.0395%" height="15" fill="rgb(214,52,39)" fg:x="26190" fg:w="20"/><text x="51.9456%" y="831.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (19 samples, 0.04%)</title><rect x="51.6975%" y="805" width="0.0375%" height="15" fill="rgb(223,80,29)" fg:x="26191" fg:w="19"/><text x="51.9475%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="51.6975%" y="789" width="0.0375%" height="15" fill="rgb(230,101,40)" fg:x="26191" fg:w="19"/><text x="51.9475%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.03%)</title><rect x="51.7094%" y="773" width="0.0257%" height="15" fill="rgb(219,211,8)" fg:x="26197" fg:w="13"/><text x="51.9594%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="51.7212%" y="757" width="0.0138%" height="15" fill="rgb(252,126,28)" fg:x="26203" fg:w="7"/><text x="51.9712%" y="767.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (21 samples, 0.04%)</title><rect x="51.6956%" y="853" width="0.0415%" height="15" fill="rgb(215,56,38)" fg:x="26190" fg:w="21"/><text x="51.9456%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (21 samples, 0.04%)</title><rect x="51.6956%" y="837" width="0.0415%" height="15" fill="rgb(249,55,44)" fg:x="26190" fg:w="21"/><text x="51.9456%" y="847.50"></text></g><g><title>ash::device::Device::begin_command_buffer (20 samples, 0.04%)</title><rect x="51.7370%" y="821" width="0.0395%" height="15" fill="rgb(220,221,32)" fg:x="26211" fg:w="20"/><text x="51.9870%" y="831.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (20 samples, 0.04%)</title><rect x="51.7370%" y="805" width="0.0395%" height="15" fill="rgb(212,216,41)" fg:x="26211" fg:w="20"/><text x="51.9870%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="51.7370%" y="789" width="0.0395%" height="15" fill="rgb(228,213,43)" fg:x="26211" fg:w="20"/><text x="51.9870%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="51.7488%" y="773" width="0.0276%" height="15" fill="rgb(211,31,26)" fg:x="26217" fg:w="14"/><text x="51.9988%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="51.7607%" y="757" width="0.0158%" height="15" fill="rgb(229,202,19)" fg:x="26223" fg:w="8"/><text x="52.0107%" y="767.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (22 samples, 0.04%)</title><rect x="51.7370%" y="853" width="0.0434%" height="15" fill="rgb(229,105,46)" fg:x="26211" fg:w="22"/><text x="51.9870%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (22 samples, 0.04%)</title><rect x="51.7370%" y="837" width="0.0434%" height="15" fill="rgb(235,108,1)" fg:x="26211" fg:w="22"/><text x="51.9870%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="51.8120%" y="725" width="0.0118%" height="15" fill="rgb(245,111,35)" fg:x="26249" fg:w="6"/><text x="52.0620%" y="735.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="51.8120%" y="709" width="0.0118%" height="15" fill="rgb(219,185,31)" fg:x="26249" fg:w="6"/><text x="52.0620%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="51.8120%" y="789" width="0.0138%" height="15" fill="rgb(214,4,43)" fg:x="26249" fg:w="7"/><text x="52.0620%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="51.8120%" y="773" width="0.0138%" height="15" fill="rgb(235,227,40)" fg:x="26249" fg:w="7"/><text x="52.0620%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="51.8120%" y="757" width="0.0138%" height="15" fill="rgb(230,88,30)" fg:x="26249" fg:w="7"/><text x="52.0620%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.01%)</title><rect x="51.8120%" y="741" width="0.0138%" height="15" fill="rgb(216,217,1)" fg:x="26249" fg:w="7"/><text x="52.0620%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.03%)</title><rect x="51.8061%" y="821" width="0.0276%" height="15" fill="rgb(248,139,50)" fg:x="26246" fg:w="14"/><text x="52.0561%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.03%)</title><rect x="51.8061%" y="805" width="0.0276%" height="15" fill="rgb(233,1,21)" fg:x="26246" fg:w="14"/><text x="52.0561%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.03%)</title><rect x="51.8061%" y="837" width="0.0296%" height="15" fill="rgb(215,183,12)" fg:x="26246" fg:w="15"/><text x="52.0561%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (23 samples, 0.05%)</title><rect x="51.8456%" y="837" width="0.0454%" height="15" fill="rgb(229,104,42)" fg:x="26266" fg:w="23"/><text x="52.0956%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (21 samples, 0.04%)</title><rect x="51.8495%" y="821" width="0.0415%" height="15" fill="rgb(243,34,48)" fg:x="26268" fg:w="21"/><text x="52.0995%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (21 samples, 0.04%)</title><rect x="51.8495%" y="805" width="0.0415%" height="15" fill="rgb(239,11,44)" fg:x="26268" fg:w="21"/><text x="52.0995%" y="815.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="51.8515%" y="789" width="0.0395%" height="15" fill="rgb(231,98,35)" fg:x="26269" fg:w="20"/><text x="52.1015%" y="799.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (20 samples, 0.04%)</title><rect x="51.8515%" y="773" width="0.0395%" height="15" fill="rgb(233,28,25)" fg:x="26269" fg:w="20"/><text x="52.1015%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.04%)</title><rect x="51.8535%" y="757" width="0.0375%" height="15" fill="rgb(234,123,11)" fg:x="26270" fg:w="19"/><text x="52.1035%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.04%)</title><rect x="51.8535%" y="741" width="0.0375%" height="15" fill="rgb(220,69,3)" fg:x="26270" fg:w="19"/><text x="52.1035%" y="751.50"></text></g><g><title>log::__private_api_log (34 samples, 0.07%)</title><rect x="51.8910%" y="837" width="0.0671%" height="15" fill="rgb(214,64,36)" fg:x="26289" fg:w="34"/><text x="52.1410%" y="847.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (19 samples, 0.04%)</title><rect x="51.9581%" y="837" width="0.0375%" height="15" fill="rgb(211,138,32)" fg:x="26323" fg:w="19"/><text x="52.2081%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="51.9581%" y="821" width="0.0375%" height="15" fill="rgb(213,118,47)" fg:x="26323" fg:w="19"/><text x="52.2081%" y="831.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="51.9581%" y="805" width="0.0375%" height="15" fill="rgb(243,124,49)" fg:x="26323" fg:w="19"/><text x="52.2081%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.03%)</title><rect x="51.9660%" y="789" width="0.0296%" height="15" fill="rgb(221,30,28)" fg:x="26327" fg:w="15"/><text x="52.2160%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.03%)</title><rect x="51.9660%" y="773" width="0.0296%" height="15" fill="rgb(246,37,13)" fg:x="26327" fg:w="15"/><text x="52.2160%" y="783.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (115 samples, 0.23%)</title><rect x="51.7804%" y="853" width="0.2270%" height="15" fill="rgb(249,66,14)" fg:x="26233" fg:w="115"/><text x="52.0304%" y="863.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (9 samples, 0.02%)</title><rect x="52.0232%" y="853" width="0.0178%" height="15" fill="rgb(213,166,5)" fg:x="26356" fg:w="9"/><text x="52.2732%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (6 samples, 0.01%)</title><rect x="52.0291%" y="837" width="0.0118%" height="15" fill="rgb(221,66,24)" fg:x="26359" fg:w="6"/><text x="52.2791%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.01%)</title><rect x="52.0548%" y="837" width="0.0118%" height="15" fill="rgb(210,132,17)" fg:x="26372" fg:w="6"/><text x="52.3048%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="52.0548%" y="821" width="0.0118%" height="15" fill="rgb(243,202,5)" fg:x="26372" fg:w="6"/><text x="52.3048%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="52.0548%" y="805" width="0.0118%" height="15" fill="rgb(233,70,48)" fg:x="26372" fg:w="6"/><text x="52.3048%" y="815.50"></text></g><g><title>wgpu_core::command::bind::Binder::check_late_buffer_bindings (11 samples, 0.02%)</title><rect x="52.0666%" y="837" width="0.0217%" height="15" fill="rgb(238,41,26)" fg:x="26378" fg:w="11"/><text x="52.3166%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="52.0745%" y="821" width="0.0138%" height="15" fill="rgb(241,19,31)" fg:x="26382" fg:w="7"/><text x="52.3245%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.01%)</title><rect x="52.0745%" y="805" width="0.0138%" height="15" fill="rgb(214,76,10)" fg:x="26382" fg:w="7"/><text x="52.3245%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.01%)</title><rect x="52.0745%" y="789" width="0.0138%" height="15" fill="rgb(254,202,22)" fg:x="26382" fg:w="7"/><text x="52.3245%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.01%)</title><rect x="52.0745%" y="773" width="0.0138%" height="15" fill="rgb(214,72,24)" fg:x="26382" fg:w="7"/><text x="52.3245%" y="783.50"></text></g><g><title>wgpu_core::command::render::State::is_ready (28 samples, 0.06%)</title><rect x="52.0410%" y="853" width="0.0553%" height="15" fill="rgb(221,92,46)" fg:x="26365" fg:w="28"/><text x="52.2910%" y="863.50"></text></g><g><title>wgpu_core::command::render::VertexState::update_limits (18 samples, 0.04%)</title><rect x="52.0962%" y="853" width="0.0355%" height="15" fill="rgb(246,13,50)" fg:x="26393" fg:w="18"/><text x="52.3462%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.03%)</title><rect x="52.1456%" y="837" width="0.0276%" height="15" fill="rgb(240,165,38)" fg:x="26418" fg:w="14"/><text x="52.3956%" y="847.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (26 samples, 0.05%)</title><rect x="52.1831%" y="837" width="0.0513%" height="15" fill="rgb(241,24,51)" fg:x="26437" fg:w="26"/><text x="52.4331%" y="847.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (124 samples, 0.24%)</title><rect x="52.2838%" y="805" width="0.2448%" height="15" fill="rgb(227,51,44)" fg:x="26488" fg:w="124"/><text x="52.5338%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (123 samples, 0.24%)</title><rect x="52.2857%" y="789" width="0.2428%" height="15" fill="rgb(231,121,3)" fg:x="26489" fg:w="123"/><text x="52.5357%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (123 samples, 0.24%)</title><rect x="52.2857%" y="773" width="0.2428%" height="15" fill="rgb(245,3,41)" fg:x="26489" fg:w="123"/><text x="52.5357%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.02%)</title><rect x="52.5719%" y="661" width="0.0178%" height="15" fill="rgb(214,13,26)" fg:x="26634" fg:w="9"/><text x="52.8219%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.02%)</title><rect x="52.5719%" y="645" width="0.0178%" height="15" fill="rgb(252,75,11)" fg:x="26634" fg:w="9"/><text x="52.8219%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="52.5719%" y="629" width="0.0178%" height="15" fill="rgb(218,226,17)" fg:x="26634" fg:w="9"/><text x="52.8219%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (19 samples, 0.04%)</title><rect x="52.5542%" y="677" width="0.0375%" height="15" fill="rgb(248,89,38)" fg:x="26625" fg:w="19"/><text x="52.8042%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (21 samples, 0.04%)</title><rect x="52.5542%" y="693" width="0.0415%" height="15" fill="rgb(237,73,46)" fg:x="26625" fg:w="21"/><text x="52.8042%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.02%)</title><rect x="52.5976%" y="661" width="0.0237%" height="15" fill="rgb(242,78,33)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="671.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (12 samples, 0.02%)</title><rect x="52.5976%" y="645" width="0.0237%" height="15" fill="rgb(235,60,3)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="52.5976%" y="629" width="0.0237%" height="15" fill="rgb(216,172,19)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="52.5976%" y="613" width="0.0237%" height="15" fill="rgb(227,6,42)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="623.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="52.5976%" y="597" width="0.0237%" height="15" fill="rgb(223,207,42)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="607.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="52.5976%" y="581" width="0.0237%" height="15" fill="rgb(246,138,30)" fg:x="26647" fg:w="12"/><text x="52.8476%" y="591.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="52.6016%" y="565" width="0.0197%" height="15" fill="rgb(251,199,47)" fg:x="26649" fg:w="10"/><text x="52.8516%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (46 samples, 0.09%)</title><rect x="52.5325%" y="773" width="0.0908%" height="15" fill="rgb(228,218,44)" fg:x="26614" fg:w="46"/><text x="52.7825%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (46 samples, 0.09%)</title><rect x="52.5325%" y="757" width="0.0908%" height="15" fill="rgb(220,68,6)" fg:x="26614" fg:w="46"/><text x="52.7825%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (46 samples, 0.09%)</title><rect x="52.5325%" y="741" width="0.0908%" height="15" fill="rgb(240,60,26)" fg:x="26614" fg:w="46"/><text x="52.7825%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (46 samples, 0.09%)</title><rect x="52.5325%" y="725" width="0.0908%" height="15" fill="rgb(211,200,19)" fg:x="26614" fg:w="46"/><text x="52.7825%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (46 samples, 0.09%)</title><rect x="52.5325%" y="709" width="0.0908%" height="15" fill="rgb(242,145,30)" fg:x="26614" fg:w="46"/><text x="52.7825%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (14 samples, 0.03%)</title><rect x="52.5956%" y="693" width="0.0276%" height="15" fill="rgb(225,64,13)" fg:x="26646" fg:w="14"/><text x="52.8456%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (14 samples, 0.03%)</title><rect x="52.5956%" y="677" width="0.0276%" height="15" fill="rgb(218,103,35)" fg:x="26646" fg:w="14"/><text x="52.8456%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (66 samples, 0.13%)</title><rect x="52.5325%" y="805" width="0.1303%" height="15" fill="rgb(216,93,46)" fg:x="26614" fg:w="66"/><text x="52.7825%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (66 samples, 0.13%)</title><rect x="52.5325%" y="789" width="0.1303%" height="15" fill="rgb(225,159,27)" fg:x="26614" fg:w="66"/><text x="52.7825%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.03%)</title><rect x="52.6312%" y="773" width="0.0316%" height="15" fill="rgb(225,204,11)" fg:x="26664" fg:w="16"/><text x="52.8812%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.03%)</title><rect x="52.6312%" y="757" width="0.0316%" height="15" fill="rgb(205,56,4)" fg:x="26664" fg:w="16"/><text x="52.8812%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (14 samples, 0.03%)</title><rect x="52.6766%" y="757" width="0.0276%" height="15" fill="rgb(206,6,35)" fg:x="26687" fg:w="14"/><text x="52.9266%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (14 samples, 0.03%)</title><rect x="52.6766%" y="741" width="0.0276%" height="15" fill="rgb(247,73,52)" fg:x="26687" fg:w="14"/><text x="52.9266%" y="751.50"></text></g><g><title>core::ptr::write (14 samples, 0.03%)</title><rect x="52.6766%" y="725" width="0.0276%" height="15" fill="rgb(246,97,4)" fg:x="26687" fg:w="14"/><text x="52.9266%" y="735.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (26 samples, 0.05%)</title><rect x="52.6627%" y="805" width="0.0513%" height="15" fill="rgb(212,37,15)" fg:x="26680" fg:w="26"/><text x="52.9127%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (26 samples, 0.05%)</title><rect x="52.6627%" y="789" width="0.0513%" height="15" fill="rgb(208,130,40)" fg:x="26680" fg:w="26"/><text x="52.9127%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (22 samples, 0.04%)</title><rect x="52.6706%" y="773" width="0.0434%" height="15" fill="rgb(236,55,29)" fg:x="26684" fg:w="22"/><text x="52.9206%" y="783.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (245 samples, 0.48%)</title><rect x="52.2364%" y="821" width="0.4836%" height="15" fill="rgb(209,156,45)" fg:x="26464" fg:w="245"/><text x="52.4864%" y="831.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (295 samples, 0.58%)</title><rect x="52.1456%" y="853" width="0.5823%" height="15" fill="rgb(249,107,4)" fg:x="26418" fg:w="295"/><text x="52.3956%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (250 samples, 0.49%)</title><rect x="52.2344%" y="837" width="0.4935%" height="15" fill="rgb(227,7,13)" fg:x="26463" fg:w="250"/><text x="52.4844%" y="847.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::zip (6 samples, 0.01%)</title><rect x="52.7476%" y="821" width="0.0118%" height="15" fill="rgb(250,129,14)" fg:x="26723" fg:w="6"/><text x="52.9976%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.02%)</title><rect x="52.7772%" y="757" width="0.0158%" height="15" fill="rgb(229,92,13)" fg:x="26738" fg:w="8"/><text x="53.0272%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (7 samples, 0.01%)</title><rect x="52.7792%" y="741" width="0.0138%" height="15" fill="rgb(245,98,39)" fg:x="26739" fg:w="7"/><text x="53.0292%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="52.7792%" y="725" width="0.0138%" height="15" fill="rgb(234,135,48)" fg:x="26739" fg:w="7"/><text x="53.0292%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (24 samples, 0.05%)</title><rect x="52.7595%" y="821" width="0.0474%" height="15" fill="rgb(230,98,28)" fg:x="26729" fg:w="24"/><text x="53.0095%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.05%)</title><rect x="52.7595%" y="805" width="0.0474%" height="15" fill="rgb(223,121,0)" fg:x="26729" fg:w="24"/><text x="53.0095%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.04%)</title><rect x="52.7713%" y="789" width="0.0355%" height="15" fill="rgb(234,173,33)" fg:x="26735" fg:w="18"/><text x="53.0213%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.04%)</title><rect x="52.7713%" y="773" width="0.0355%" height="15" fill="rgb(245,47,8)" fg:x="26735" fg:w="18"/><text x="53.0213%" y="783.50"></text></g><g><title>wgpu_core::track::StatefulTrackerSubset::merge_extend (47 samples, 0.09%)</title><rect x="52.7279%" y="853" width="0.0928%" height="15" fill="rgb(205,17,20)" fg:x="26713" fg:w="47"/><text x="52.9779%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (42 samples, 0.08%)</title><rect x="52.7378%" y="837" width="0.0829%" height="15" fill="rgb(232,151,16)" fg:x="26718" fg:w="42"/><text x="52.9878%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::draw_indexed (83 samples, 0.16%)</title><rect x="52.8226%" y="853" width="0.1638%" height="15" fill="rgb(208,30,32)" fg:x="26761" fg:w="83"/><text x="53.0726%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (74 samples, 0.15%)</title><rect x="52.8404%" y="837" width="0.1461%" height="15" fill="rgb(254,26,3)" fg:x="26770" fg:w="74"/><text x="53.0904%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (43 samples, 0.08%)</title><rect x="52.9016%" y="821" width="0.0849%" height="15" fill="rgb(240,177,30)" fg:x="26801" fg:w="43"/><text x="53.1516%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (59 samples, 0.12%)</title><rect x="52.9865%" y="853" width="0.1165%" height="15" fill="rgb(248,76,44)" fg:x="26844" fg:w="59"/><text x="53.2365%" y="863.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (57 samples, 0.11%)</title><rect x="52.9904%" y="837" width="0.1125%" height="15" fill="rgb(241,186,54)" fg:x="26846" fg:w="57"/><text x="53.2404%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (57 samples, 0.11%)</title><rect x="52.9904%" y="821" width="0.1125%" height="15" fill="rgb(249,171,29)" fg:x="26846" fg:w="57"/><text x="53.2404%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (57 samples, 0.11%)</title><rect x="52.9904%" y="805" width="0.1125%" height="15" fill="rgb(237,151,44)" fg:x="26846" fg:w="57"/><text x="53.2404%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.06%)</title><rect x="53.0476%" y="789" width="0.0553%" height="15" fill="rgb(228,174,30)" fg:x="26875" fg:w="28"/><text x="53.2976%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (1,508 samples, 2.98%)</title><rect x="50.4185%" y="981" width="2.9766%" height="15" fill="rgb(252,14,37)" fg:x="25543" fg:w="1508"/><text x="50.6685%" y="991.50">bev..</text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (1,296 samples, 2.56%)</title><rect x="50.8369%" y="965" width="2.5581%" height="15" fill="rgb(207,111,40)" fg:x="25755" fg:w="1296"/><text x="51.0869%" y="975.50">be..</text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (1,162 samples, 2.29%)</title><rect x="51.1014%" y="949" width="2.2936%" height="15" fill="rgb(248,171,54)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="959.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (1,162 samples, 2.29%)</title><rect x="51.1014%" y="933" width="2.2936%" height="15" fill="rgb(211,127,2)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (1,162 samples, 2.29%)</title><rect x="51.1014%" y="917" width="2.2936%" height="15" fill="rgb(236,87,47)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="927.50">c..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1,162 samples, 2.29%)</title><rect x="51.1014%" y="901" width="2.2936%" height="15" fill="rgb(223,190,45)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="911.50">&lt;..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (1,162 samples, 2.29%)</title><rect x="51.1014%" y="885" width="2.2936%" height="15" fill="rgb(215,5,16)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="895.50">w..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,162 samples, 2.29%)</title><rect x="51.1014%" y="869" width="2.2936%" height="15" fill="rgb(252,82,33)" fg:x="25889" fg:w="1162"/><text x="51.3514%" y="879.50">w..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (145 samples, 0.29%)</title><rect x="53.1088%" y="853" width="0.2862%" height="15" fill="rgb(247,213,44)" fg:x="26906" fg:w="145"/><text x="53.3588%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (138 samples, 0.27%)</title><rect x="53.1227%" y="837" width="0.2724%" height="15" fill="rgb(205,196,44)" fg:x="26913" fg:w="138"/><text x="53.3727%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (138 samples, 0.27%)</title><rect x="53.1227%" y="821" width="0.2724%" height="15" fill="rgb(237,96,54)" fg:x="26913" fg:w="138"/><text x="53.3727%" y="831.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (6 samples, 0.01%)</title><rect x="53.3970%" y="901" width="0.0118%" height="15" fill="rgb(230,113,34)" fg:x="27052" fg:w="6"/><text x="53.6470%" y="911.50"></text></g><g><title>ash::device::Device::queue_submit (6 samples, 0.01%)</title><rect x="53.3970%" y="885" width="0.0118%" height="15" fill="rgb(221,224,12)" fg:x="27052" fg:w="6"/><text x="53.6470%" y="895.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (6 samples, 0.01%)</title><rect x="53.3970%" y="869" width="0.0118%" height="15" fill="rgb(219,112,44)" fg:x="27052" fg:w="6"/><text x="53.6470%" y="879.50"></text></g><g><title>__glx_Main (6 samples, 0.01%)</title><rect x="53.3970%" y="853" width="0.0118%" height="15" fill="rgb(210,31,13)" fg:x="27052" fg:w="6"/><text x="53.6470%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="53.3970%" y="837" width="0.0118%" height="15" fill="rgb(230,25,16)" fg:x="27052" fg:w="6"/><text x="53.6470%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (22 samples, 0.04%)</title><rect x="53.3970%" y="965" width="0.0434%" height="15" fill="rgb(246,108,53)" fg:x="27052" fg:w="22"/><text x="53.6470%" y="975.50"></text></g><g><title>wgpu::Queue::submit (22 samples, 0.04%)</title><rect x="53.3970%" y="949" width="0.0434%" height="15" fill="rgb(241,172,50)" fg:x="27052" fg:w="22"/><text x="53.6470%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (22 samples, 0.04%)</title><rect x="53.3970%" y="933" width="0.0434%" height="15" fill="rgb(235,141,10)" fg:x="27052" fg:w="22"/><text x="53.6470%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (22 samples, 0.04%)</title><rect x="53.3970%" y="917" width="0.0434%" height="15" fill="rgb(220,174,43)" fg:x="27052" fg:w="22"/><text x="53.6470%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (16 samples, 0.03%)</title><rect x="53.4089%" y="901" width="0.0316%" height="15" fill="rgb(215,181,40)" fg:x="27058" fg:w="16"/><text x="53.6589%" y="911.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (16 samples, 0.03%)</title><rect x="53.4089%" y="885" width="0.0316%" height="15" fill="rgb(230,97,2)" fg:x="27058" fg:w="16"/><text x="53.6589%" y="895.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (11 samples, 0.02%)</title><rect x="53.4187%" y="869" width="0.0217%" height="15" fill="rgb(211,25,27)" fg:x="27063" fg:w="11"/><text x="53.6687%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (6 samples, 0.01%)</title><rect x="53.4286%" y="853" width="0.0118%" height="15" fill="rgb(230,87,26)" fg:x="27068" fg:w="6"/><text x="53.6786%" y="863.50"></text></g><g><title>_nv009glcore (168 samples, 0.33%)</title><rect x="53.4582%" y="677" width="0.3316%" height="15" fill="rgb(227,160,17)" fg:x="27083" fg:w="168"/><text x="53.7082%" y="687.50"></text></g><g><title>_nv009glcore (177 samples, 0.35%)</title><rect x="53.4503%" y="693" width="0.3494%" height="15" fill="rgb(244,85,34)" fg:x="27079" fg:w="177"/><text x="53.7003%" y="703.50"></text></g><g><title>_nv041glcore (12 samples, 0.02%)</title><rect x="53.7997%" y="677" width="0.0237%" height="15" fill="rgb(207,70,0)" fg:x="27256" fg:w="12"/><text x="54.0497%" y="687.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="53.8096%" y="661" width="0.0138%" height="15" fill="rgb(223,129,7)" fg:x="27261" fg:w="7"/><text x="54.0596%" y="671.50"></text></g><g><title>_nv009glcore (203 samples, 0.40%)</title><rect x="53.4404%" y="709" width="0.4007%" height="15" fill="rgb(246,105,7)" fg:x="27074" fg:w="203"/><text x="53.6904%" y="719.50"></text></g><g><title>_nv041glcore (21 samples, 0.04%)</title><rect x="53.7997%" y="693" width="0.0415%" height="15" fill="rgb(215,154,42)" fg:x="27256" fg:w="21"/><text x="54.0497%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="53.8234%" y="677" width="0.0178%" height="15" fill="rgb(220,215,30)" fg:x="27268" fg:w="9"/><text x="54.0734%" y="687.50"></text></g><g><title>_nv009glcore (17 samples, 0.03%)</title><rect x="53.8411%" y="677" width="0.0336%" height="15" fill="rgb(228,81,51)" fg:x="27277" fg:w="17"/><text x="54.0911%" y="687.50"></text></g><g><title>_nv009glcore (17 samples, 0.03%)</title><rect x="53.8411%" y="661" width="0.0336%" height="15" fill="rgb(247,71,54)" fg:x="27277" fg:w="17"/><text x="54.0911%" y="671.50"></text></g><g><title>bevy_render::renderer::render_system (261 samples, 0.52%)</title><rect x="53.3950%" y="981" width="0.5152%" height="15" fill="rgb(234,176,34)" fg:x="27051" fg:w="261"/><text x="53.6450%" y="991.50"></text></g><g><title>wgpu::SurfaceTexture::present (238 samples, 0.47%)</title><rect x="53.4404%" y="965" width="0.4698%" height="15" fill="rgb(241,103,54)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (238 samples, 0.47%)</title><rect x="53.4404%" y="949" width="0.4698%" height="15" fill="rgb(228,22,34)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="959.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (238 samples, 0.47%)</title><rect x="53.4404%" y="933" width="0.4698%" height="15" fill="rgb(241,179,48)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="943.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (238 samples, 0.47%)</title><rect x="53.4404%" y="917" width="0.4698%" height="15" fill="rgb(235,167,37)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (238 samples, 0.47%)</title><rect x="53.4404%" y="901" width="0.4698%" height="15" fill="rgb(213,109,30)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (238 samples, 0.47%)</title><rect x="53.4404%" y="885" width="0.4698%" height="15" fill="rgb(222,172,16)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="895.50"></text></g><g><title>__glx_Main (238 samples, 0.47%)</title><rect x="53.4404%" y="869" width="0.4698%" height="15" fill="rgb(233,192,5)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (238 samples, 0.47%)</title><rect x="53.4404%" y="853" width="0.4698%" height="15" fill="rgb(247,189,41)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (238 samples, 0.47%)</title><rect x="53.4404%" y="837" width="0.4698%" height="15" fill="rgb(218,134,47)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (238 samples, 0.47%)</title><rect x="53.4404%" y="821" width="0.4698%" height="15" fill="rgb(216,29,3)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (238 samples, 0.47%)</title><rect x="53.4404%" y="805" width="0.4698%" height="15" fill="rgb(246,140,12)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="815.50"></text></g><g><title>_nv009glcore (238 samples, 0.47%)</title><rect x="53.4404%" y="789" width="0.4698%" height="15" fill="rgb(230,136,11)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="799.50"></text></g><g><title>_nv041glcore (238 samples, 0.47%)</title><rect x="53.4404%" y="773" width="0.4698%" height="15" fill="rgb(247,22,47)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="783.50"></text></g><g><title>_nv011glcore (238 samples, 0.47%)</title><rect x="53.4404%" y="757" width="0.4698%" height="15" fill="rgb(218,84,22)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="767.50"></text></g><g><title>_nv041glcore (238 samples, 0.47%)</title><rect x="53.4404%" y="741" width="0.4698%" height="15" fill="rgb(216,87,39)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="751.50"></text></g><g><title>_nv041glcore (238 samples, 0.47%)</title><rect x="53.4404%" y="725" width="0.4698%" height="15" fill="rgb(221,178,8)" fg:x="27074" fg:w="238"/><text x="53.6904%" y="735.50"></text></g><g><title>_nv041glcore (35 samples, 0.07%)</title><rect x="53.8411%" y="709" width="0.0691%" height="15" fill="rgb(230,42,11)" fg:x="27277" fg:w="35"/><text x="54.0911%" y="719.50"></text></g><g><title>_nv041glcore (35 samples, 0.07%)</title><rect x="53.8411%" y="693" width="0.0691%" height="15" fill="rgb(237,229,4)" fg:x="27277" fg:w="35"/><text x="54.0911%" y="703.50"></text></g><g><title>_nv041glcore (18 samples, 0.04%)</title><rect x="53.8747%" y="677" width="0.0355%" height="15" fill="rgb(222,31,33)" fg:x="27294" fg:w="18"/><text x="54.1247%" y="687.50"></text></g><g><title>_nv009glcore (18 samples, 0.04%)</title><rect x="53.8747%" y="661" width="0.0355%" height="15" fill="rgb(210,17,39)" fg:x="27294" fg:w="18"/><text x="54.1247%" y="671.50"></text></g><g><title>_nv009glcore (18 samples, 0.04%)</title><rect x="53.8747%" y="645" width="0.0355%" height="15" fill="rgb(244,93,20)" fg:x="27294" fg:w="18"/><text x="54.1247%" y="655.50"></text></g><g><title>bevy_sprite::mesh2d::mesh::queue_mesh2d_view_bind_groups (6 samples, 0.01%)</title><rect x="53.9201%" y="981" width="0.0118%" height="15" fill="rgb(210,40,47)" fg:x="27317" fg:w="6"/><text x="54.1701%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (10 samples, 0.02%)</title><rect x="53.9951%" y="805" width="0.0197%" height="15" fill="rgb(239,211,47)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (10 samples, 0.02%)</title><rect x="53.9951%" y="789" width="0.0197%" height="15" fill="rgb(251,223,49)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="53.9951%" y="773" width="0.0197%" height="15" fill="rgb(221,149,5)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.02%)</title><rect x="53.9951%" y="757" width="0.0197%" height="15" fill="rgb(219,224,51)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="767.50"></text></g><g><title>bevy_pbr::render::mesh::queue_mesh_view_bind_groups (10 samples, 0.02%)</title><rect x="53.9951%" y="741" width="0.0197%" height="15" fill="rgb(223,7,8)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="751.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (10 samples, 0.02%)</title><rect x="53.9951%" y="725" width="0.0197%" height="15" fill="rgb(241,217,22)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="735.50"></text></g><g><title>wgpu::Device::create_bind_group (10 samples, 0.02%)</title><rect x="53.9951%" y="709" width="0.0197%" height="15" fill="rgb(248,209,0)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (10 samples, 0.02%)</title><rect x="53.9951%" y="693" width="0.0197%" height="15" fill="rgb(217,205,4)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="703.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (10 samples, 0.02%)</title><rect x="53.9951%" y="677" width="0.0197%" height="15" fill="rgb(228,124,39)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="687.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (10 samples, 0.02%)</title><rect x="53.9951%" y="661" width="0.0197%" height="15" fill="rgb(250,116,42)" fg:x="27355" fg:w="10"/><text x="54.2451%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (6 samples, 0.01%)</title><rect x="54.0030%" y="645" width="0.0118%" height="15" fill="rgb(223,202,9)" fg:x="27359" fg:w="6"/><text x="54.2530%" y="655.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (40 samples, 0.08%)</title><rect x="53.9398%" y="981" width="0.0790%" height="15" fill="rgb(242,222,40)" fg:x="27327" fg:w="40"/><text x="54.1898%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.08%)</title><rect x="53.9418%" y="965" width="0.0770%" height="15" fill="rgb(229,99,46)" fg:x="27328" fg:w="39"/><text x="54.1918%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.08%)</title><rect x="53.9418%" y="949" width="0.0770%" height="15" fill="rgb(225,56,46)" fg:x="27328" fg:w="39"/><text x="54.1918%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (39 samples, 0.08%)</title><rect x="53.9418%" y="933" width="0.0770%" height="15" fill="rgb(227,94,5)" fg:x="27328" fg:w="39"/><text x="54.1918%" y="943.50"></text></g><g><title>async_executor::Executor::try_tick (17 samples, 0.03%)</title><rect x="53.9852%" y="917" width="0.0336%" height="15" fill="rgb(205,112,38)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17 samples, 0.03%)</title><rect x="53.9852%" y="901" width="0.0336%" height="15" fill="rgb(231,133,46)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="53.9852%" y="885" width="0.0336%" height="15" fill="rgb(217,16,9)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (17 samples, 0.03%)</title><rect x="53.9852%" y="869" width="0.0336%" height="15" fill="rgb(249,173,9)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="53.9852%" y="853" width="0.0336%" height="15" fill="rgb(205,163,53)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (17 samples, 0.03%)</title><rect x="53.9852%" y="837" width="0.0336%" height="15" fill="rgb(217,54,41)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (17 samples, 0.03%)</title><rect x="53.9852%" y="821" width="0.0336%" height="15" fill="rgb(228,216,12)" fg:x="27350" fg:w="17"/><text x="54.2352%" y="831.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="54.0405%" y="693" width="0.0296%" height="15" fill="rgb(244,228,15)" fg:x="27378" fg:w="15"/><text x="54.2905%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="54.0523%" y="677" width="0.0178%" height="15" fill="rgb(221,176,53)" fg:x="27384" fg:w="9"/><text x="54.3023%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="54.0523%" y="661" width="0.0178%" height="15" fill="rgb(205,94,34)" fg:x="27384" fg:w="9"/><text x="54.3023%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.04%)</title><rect x="54.0741%" y="613" width="0.0375%" height="15" fill="rgb(213,110,48)" fg:x="27395" fg:w="19"/><text x="54.3241%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.04%)</title><rect x="54.0741%" y="597" width="0.0375%" height="15" fill="rgb(236,142,28)" fg:x="27395" fg:w="19"/><text x="54.3241%" y="607.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.04%)</title><rect x="54.0741%" y="581" width="0.0375%" height="15" fill="rgb(225,135,29)" fg:x="27395" fg:w="19"/><text x="54.3241%" y="591.50"></text></g><g><title>__realloc (18 samples, 0.04%)</title><rect x="54.0760%" y="565" width="0.0355%" height="15" fill="rgb(252,45,31)" fg:x="27396" fg:w="18"/><text x="54.3260%" y="575.50"></text></g><g><title>_int_realloc (16 samples, 0.03%)</title><rect x="54.0800%" y="549" width="0.0316%" height="15" fill="rgb(211,187,50)" fg:x="27398" fg:w="16"/><text x="54.3300%" y="559.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="54.0879%" y="533" width="0.0237%" height="15" fill="rgb(229,109,7)" fg:x="27402" fg:w="12"/><text x="54.3379%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.04%)</title><rect x="54.0721%" y="677" width="0.0434%" height="15" fill="rgb(251,131,51)" fg:x="27394" fg:w="22"/><text x="54.3221%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.04%)</title><rect x="54.0721%" y="661" width="0.0434%" height="15" fill="rgb(251,180,35)" fg:x="27394" fg:w="22"/><text x="54.3221%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.04%)</title><rect x="54.0721%" y="645" width="0.0434%" height="15" fill="rgb(211,46,32)" fg:x="27394" fg:w="22"/><text x="54.3221%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.04%)</title><rect x="54.0741%" y="629" width="0.0415%" height="15" fill="rgb(248,123,17)" fg:x="27395" fg:w="21"/><text x="54.3241%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (8 samples, 0.02%)</title><rect x="54.1352%" y="661" width="0.0158%" height="15" fill="rgb(227,141,18)" fg:x="27426" fg:w="8"/><text x="54.3852%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.02%)</title><rect x="54.1352%" y="645" width="0.0158%" height="15" fill="rgb(216,102,9)" fg:x="27426" fg:w="8"/><text x="54.3852%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.02%)</title><rect x="54.1352%" y="629" width="0.0158%" height="15" fill="rgb(253,47,13)" fg:x="27426" fg:w="8"/><text x="54.3852%" y="639.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.02%)</title><rect x="54.1530%" y="629" width="0.0217%" height="15" fill="rgb(226,93,23)" fg:x="27435" fg:w="11"/><text x="54.4030%" y="639.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (26 samples, 0.05%)</title><rect x="54.1530%" y="645" width="0.0513%" height="15" fill="rgb(247,104,17)" fg:x="27435" fg:w="26"/><text x="54.4030%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (15 samples, 0.03%)</title><rect x="54.1747%" y="629" width="0.0296%" height="15" fill="rgb(233,203,26)" fg:x="27446" fg:w="15"/><text x="54.4247%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.03%)</title><rect x="54.1747%" y="613" width="0.0296%" height="15" fill="rgb(244,98,49)" fg:x="27446" fg:w="15"/><text x="54.4247%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.02%)</title><rect x="54.1885%" y="597" width="0.0158%" height="15" fill="rgb(235,134,22)" fg:x="27453" fg:w="8"/><text x="54.4385%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.02%)</title><rect x="54.1885%" y="581" width="0.0158%" height="15" fill="rgb(221,70,32)" fg:x="27453" fg:w="8"/><text x="54.4385%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (29 samples, 0.06%)</title><rect x="54.1530%" y="661" width="0.0572%" height="15" fill="rgb(238,15,50)" fg:x="27435" fg:w="29"/><text x="54.4030%" y="671.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.03%)</title><rect x="54.2201%" y="613" width="0.0276%" height="15" fill="rgb(215,221,48)" fg:x="27469" fg:w="14"/><text x="54.4701%" y="623.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="54.2280%" y="597" width="0.0197%" height="15" fill="rgb(236,73,3)" fg:x="27473" fg:w="10"/><text x="54.4780%" y="607.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.03%)</title><rect x="54.2201%" y="629" width="0.0296%" height="15" fill="rgb(250,107,11)" fg:x="27469" fg:w="15"/><text x="54.4701%" y="639.50"></text></g><g><title>async_task::runnable::spawn_unchecked (20 samples, 0.04%)</title><rect x="54.2142%" y="661" width="0.0395%" height="15" fill="rgb(242,39,14)" fg:x="27466" fg:w="20"/><text x="54.4642%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (18 samples, 0.04%)</title><rect x="54.2182%" y="645" width="0.0355%" height="15" fill="rgb(248,164,37)" fg:x="27468" fg:w="18"/><text x="54.4682%" y="655.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (98 samples, 0.19%)</title><rect x="54.0721%" y="693" width="0.1934%" height="15" fill="rgb(217,60,12)" fg:x="27394" fg:w="98"/><text x="54.3221%" y="703.50"></text></g><g><title>async_executor::Executor::spawn (76 samples, 0.15%)</title><rect x="54.1155%" y="677" width="0.1500%" height="15" fill="rgb(240,125,29)" fg:x="27416" fg:w="76"/><text x="54.3655%" y="687.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_local (8 samples, 0.02%)</title><rect x="54.2655%" y="693" width="0.0158%" height="15" fill="rgb(208,207,28)" fg:x="27492" fg:w="8"/><text x="54.5155%" y="703.50"></text></g><g><title>async_executor::LocalExecutor::spawn (6 samples, 0.01%)</title><rect x="54.2695%" y="677" width="0.0118%" height="15" fill="rgb(209,159,27)" fg:x="27494" fg:w="6"/><text x="54.5195%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (128 samples, 0.25%)</title><rect x="54.0366%" y="709" width="0.2527%" height="15" fill="rgb(251,176,53)" fg:x="27376" fg:w="128"/><text x="54.2866%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (142 samples, 0.28%)</title><rect x="54.0366%" y="725" width="0.2803%" height="15" fill="rgb(211,85,7)" fg:x="27376" fg:w="142"/><text x="54.2866%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (14 samples, 0.03%)</title><rect x="54.2892%" y="709" width="0.0276%" height="15" fill="rgb(216,64,54)" fg:x="27504" fg:w="14"/><text x="54.5392%" y="719.50"></text></g><g><title>async_executor::Executor::spawn (14 samples, 0.03%)</title><rect x="54.2892%" y="693" width="0.0276%" height="15" fill="rgb(217,54,24)" fg:x="27504" fg:w="14"/><text x="54.5392%" y="703.50"></text></g><g><title>async_executor::State::notify (18 samples, 0.04%)</title><rect x="54.3168%" y="709" width="0.0355%" height="15" fill="rgb(208,206,53)" fg:x="27518" fg:w="18"/><text x="54.5668%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (17 samples, 0.03%)</title><rect x="54.3188%" y="693" width="0.0336%" height="15" fill="rgb(251,74,39)" fg:x="27519" fg:w="17"/><text x="54.5688%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.03%)</title><rect x="54.3188%" y="677" width="0.0336%" height="15" fill="rgb(226,47,5)" fg:x="27519" fg:w="17"/><text x="54.5688%" y="687.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="54.3859%" y="613" width="0.0178%" height="15" fill="rgb(234,111,33)" fg:x="27553" fg:w="9"/><text x="54.6359%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (21 samples, 0.04%)</title><rect x="54.4057%" y="597" width="0.0415%" height="15" fill="rgb(251,14,10)" fg:x="27563" fg:w="21"/><text x="54.6557%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.04%)</title><rect x="54.4116%" y="581" width="0.0355%" height="15" fill="rgb(232,43,0)" fg:x="27566" fg:w="18"/><text x="54.6616%" y="591.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (24 samples, 0.05%)</title><rect x="54.4037%" y="613" width="0.0474%" height="15" fill="rgb(222,68,43)" fg:x="27562" fg:w="24"/><text x="54.6537%" y="623.50"></text></g><g><title>event_listener::Event::listen (6 samples, 0.01%)</title><rect x="54.4511%" y="613" width="0.0118%" height="15" fill="rgb(217,24,23)" fg:x="27586" fg:w="6"/><text x="54.7011%" y="623.50"></text></g><g><title>core::hint::spin_loop (49 samples, 0.10%)</title><rect x="54.4688%" y="501" width="0.0967%" height="15" fill="rgb(229,209,14)" fg:x="27595" fg:w="49"/><text x="54.7188%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (49 samples, 0.10%)</title><rect x="54.4688%" y="485" width="0.0967%" height="15" fill="rgb(250,149,48)" fg:x="27595" fg:w="49"/><text x="54.7188%" y="495.50"></text></g><g><title>event_listener::Inner::lock (53 samples, 0.10%)</title><rect x="54.4629%" y="597" width="0.1046%" height="15" fill="rgb(210,120,37)" fg:x="27592" fg:w="53"/><text x="54.7129%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (53 samples, 0.10%)</title><rect x="54.4629%" y="581" width="0.1046%" height="15" fill="rgb(210,21,8)" fg:x="27592" fg:w="53"/><text x="54.7129%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.10%)</title><rect x="54.4629%" y="565" width="0.1046%" height="15" fill="rgb(243,145,7)" fg:x="27592" fg:w="53"/><text x="54.7129%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (53 samples, 0.10%)</title><rect x="54.4629%" y="549" width="0.1046%" height="15" fill="rgb(238,178,32)" fg:x="27592" fg:w="53"/><text x="54.7129%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (53 samples, 0.10%)</title><rect x="54.4629%" y="533" width="0.1046%" height="15" fill="rgb(222,4,10)" fg:x="27592" fg:w="53"/><text x="54.7129%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (51 samples, 0.10%)</title><rect x="54.4669%" y="517" width="0.1007%" height="15" fill="rgb(239,7,37)" fg:x="27594" fg:w="51"/><text x="54.7169%" y="527.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.18%)</title><rect x="54.3859%" y="629" width="0.1836%" height="15" fill="rgb(215,31,37)" fg:x="27553" fg:w="93"/><text x="54.6359%" y="639.50"></text></g><g><title>event_listener::Event::notify (54 samples, 0.11%)</title><rect x="54.4629%" y="613" width="0.1066%" height="15" fill="rgb(224,83,33)" fg:x="27592" fg:w="54"/><text x="54.7129%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="54.5873%" y="565" width="0.0118%" height="15" fill="rgb(239,55,3)" fg:x="27655" fg:w="6"/><text x="54.8373%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (8 samples, 0.02%)</title><rect x="54.6208%" y="485" width="0.0158%" height="15" fill="rgb(247,92,11)" fg:x="27672" fg:w="8"/><text x="54.8708%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="54.6228%" y="469" width="0.0138%" height="15" fill="rgb(239,200,7)" fg:x="27673" fg:w="7"/><text x="54.8728%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="54.6228%" y="453" width="0.0138%" height="15" fill="rgb(227,115,8)" fg:x="27673" fg:w="7"/><text x="54.8728%" y="463.50"></text></g><g><title>event_listener::List::notify (20 samples, 0.04%)</title><rect x="54.6090%" y="549" width="0.0395%" height="15" fill="rgb(215,189,27)" fg:x="27666" fg:w="20"/><text x="54.8590%" y="559.50"></text></g><g><title>core::task::wake::Waker::wake (20 samples, 0.04%)</title><rect x="54.6090%" y="533" width="0.0395%" height="15" fill="rgb(251,216,39)" fg:x="27666" fg:w="20"/><text x="54.8590%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (20 samples, 0.04%)</title><rect x="54.6090%" y="517" width="0.0395%" height="15" fill="rgb(207,29,47)" fg:x="27666" fg:w="20"/><text x="54.8590%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (15 samples, 0.03%)</title><rect x="54.6188%" y="501" width="0.0296%" height="15" fill="rgb(210,71,34)" fg:x="27671" fg:w="15"/><text x="54.8688%" y="511.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.07%)</title><rect x="54.5873%" y="597" width="0.0691%" height="15" fill="rgb(253,217,51)" fg:x="27655" fg:w="35"/><text x="54.8373%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (35 samples, 0.07%)</title><rect x="54.5873%" y="581" width="0.0691%" height="15" fill="rgb(222,117,46)" fg:x="27655" fg:w="35"/><text x="54.8373%" y="591.50"></text></g><g><title>event_listener::Event::notify (29 samples, 0.06%)</title><rect x="54.5991%" y="565" width="0.0572%" height="15" fill="rgb(226,132,6)" fg:x="27661" fg:w="29"/><text x="54.8491%" y="575.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (6 samples, 0.01%)</title><rect x="54.6583%" y="597" width="0.0118%" height="15" fill="rgb(254,145,51)" fg:x="27691" fg:w="6"/><text x="54.9083%" y="607.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (6 samples, 0.01%)</title><rect x="54.6583%" y="581" width="0.0118%" height="15" fill="rgb(231,199,27)" fg:x="27691" fg:w="6"/><text x="54.9083%" y="591.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (7 samples, 0.01%)</title><rect x="54.6702%" y="581" width="0.0138%" height="15" fill="rgb(245,158,14)" fg:x="27697" fg:w="7"/><text x="54.9202%" y="591.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (7 samples, 0.01%)</title><rect x="54.6702%" y="565" width="0.0138%" height="15" fill="rgb(240,113,14)" fg:x="27697" fg:w="7"/><text x="54.9202%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.01%)</title><rect x="54.6721%" y="549" width="0.0118%" height="15" fill="rgb(210,20,13)" fg:x="27698" fg:w="6"/><text x="54.9221%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="54.6721%" y="533" width="0.0118%" height="15" fill="rgb(241,144,13)" fg:x="27698" fg:w="6"/><text x="54.9221%" y="543.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (11 samples, 0.02%)</title><rect x="54.6702%" y="597" width="0.0217%" height="15" fill="rgb(235,43,34)" fg:x="27697" fg:w="11"/><text x="54.9202%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.13%)</title><rect x="54.5695%" y="629" width="0.1283%" height="15" fill="rgb(208,36,20)" fg:x="27646" fg:w="65"/><text x="54.8195%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (62 samples, 0.12%)</title><rect x="54.5754%" y="613" width="0.1224%" height="15" fill="rgb(239,204,10)" fg:x="27649" fg:w="62"/><text x="54.8254%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (6 samples, 0.01%)</title><rect x="54.6978%" y="629" width="0.0118%" height="15" fill="rgb(217,84,43)" fg:x="27711" fg:w="6"/><text x="54.9478%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="54.6978%" y="613" width="0.0118%" height="15" fill="rgb(241,170,50)" fg:x="27711" fg:w="6"/><text x="54.9478%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="54.6978%" y="597" width="0.0118%" height="15" fill="rgb(226,205,29)" fg:x="27711" fg:w="6"/><text x="54.9478%" y="607.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (7 samples, 0.01%)</title><rect x="54.7156%" y="613" width="0.0138%" height="15" fill="rgb(233,113,1)" fg:x="27720" fg:w="7"/><text x="54.9656%" y="623.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (7 samples, 0.01%)</title><rect x="54.7156%" y="597" width="0.0138%" height="15" fill="rgb(253,98,13)" fg:x="27720" fg:w="7"/><text x="54.9656%" y="607.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="54.7175%" y="581" width="0.0118%" height="15" fill="rgb(211,115,12)" fg:x="27721" fg:w="6"/><text x="54.9675%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (12 samples, 0.02%)</title><rect x="54.7156%" y="629" width="0.0237%" height="15" fill="rgb(208,12,16)" fg:x="27720" fg:w="12"/><text x="54.9656%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (6 samples, 0.01%)</title><rect x="54.7412%" y="565" width="0.0118%" height="15" fill="rgb(237,193,54)" fg:x="27733" fg:w="6"/><text x="54.9912%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (6 samples, 0.01%)</title><rect x="54.7412%" y="549" width="0.0118%" height="15" fill="rgb(243,22,42)" fg:x="27733" fg:w="6"/><text x="54.9912%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="54.7412%" y="533" width="0.0118%" height="15" fill="rgb(233,151,36)" fg:x="27733" fg:w="6"/><text x="54.9912%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (8 samples, 0.02%)</title><rect x="54.7412%" y="629" width="0.0158%" height="15" fill="rgb(237,57,45)" fg:x="27733" fg:w="8"/><text x="54.9912%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (8 samples, 0.02%)</title><rect x="54.7412%" y="613" width="0.0158%" height="15" fill="rgb(221,88,17)" fg:x="27733" fg:w="8"/><text x="54.9912%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (8 samples, 0.02%)</title><rect x="54.7412%" y="597" width="0.0158%" height="15" fill="rgb(230,79,15)" fg:x="27733" fg:w="8"/><text x="54.9912%" y="607.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="54.7412%" y="581" width="0.0158%" height="15" fill="rgb(213,57,13)" fg:x="27733" fg:w="8"/><text x="54.9912%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (6 samples, 0.01%)</title><rect x="54.7570%" y="613" width="0.0118%" height="15" fill="rgb(222,116,39)" fg:x="27741" fg:w="6"/><text x="55.0070%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6 samples, 0.01%)</title><rect x="54.7570%" y="597" width="0.0118%" height="15" fill="rgb(245,107,2)" fg:x="27741" fg:w="6"/><text x="55.0070%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="54.7570%" y="581" width="0.0118%" height="15" fill="rgb(238,1,10)" fg:x="27741" fg:w="6"/><text x="55.0070%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.01%)</title><rect x="54.7570%" y="565" width="0.0118%" height="15" fill="rgb(249,4,48)" fg:x="27741" fg:w="6"/><text x="55.0070%" y="575.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (200 samples, 0.39%)</title><rect x="54.3800%" y="645" width="0.3948%" height="15" fill="rgb(223,151,18)" fg:x="27550" fg:w="200"/><text x="54.6300%" y="655.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (9 samples, 0.02%)</title><rect x="54.7570%" y="629" width="0.0178%" height="15" fill="rgb(227,65,43)" fg:x="27741" fg:w="9"/><text x="55.0070%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="54.7965%" y="597" width="0.0138%" height="15" fill="rgb(218,40,45)" fg:x="27761" fg:w="7"/><text x="55.0465%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (6 samples, 0.01%)</title><rect x="54.7985%" y="581" width="0.0118%" height="15" fill="rgb(252,121,31)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="54.7985%" y="565" width="0.0118%" height="15" fill="rgb(219,158,43)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (6 samples, 0.01%)</title><rect x="54.7985%" y="549" width="0.0118%" height="15" fill="rgb(231,162,42)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="54.7985%" y="533" width="0.0118%" height="15" fill="rgb(217,179,25)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.01%)</title><rect x="54.7985%" y="517" width="0.0118%" height="15" fill="rgb(206,212,31)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="54.7985%" y="501" width="0.0118%" height="15" fill="rgb(235,144,12)" fg:x="27762" fg:w="6"/><text x="55.0485%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="54.7847%" y="613" width="0.0336%" height="15" fill="rgb(213,51,10)" fg:x="27755" fg:w="17"/><text x="55.0347%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (11 samples, 0.02%)</title><rect x="54.8182%" y="613" width="0.0217%" height="15" fill="rgb(231,145,14)" fg:x="27772" fg:w="11"/><text x="55.0682%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (10 samples, 0.02%)</title><rect x="54.8202%" y="597" width="0.0197%" height="15" fill="rgb(235,15,28)" fg:x="27773" fg:w="10"/><text x="55.0702%" y="607.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (9 samples, 0.02%)</title><rect x="54.8222%" y="581" width="0.0178%" height="15" fill="rgb(237,206,10)" fg:x="27774" fg:w="9"/><text x="55.0722%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (9 samples, 0.02%)</title><rect x="54.8222%" y="565" width="0.0178%" height="15" fill="rgb(236,227,27)" fg:x="27774" fg:w="9"/><text x="55.0722%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (9 samples, 0.02%)</title><rect x="54.8222%" y="549" width="0.0178%" height="15" fill="rgb(246,83,35)" fg:x="27774" fg:w="9"/><text x="55.0722%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="54.8222%" y="533" width="0.0178%" height="15" fill="rgb(220,136,24)" fg:x="27774" fg:w="9"/><text x="55.0722%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.08%)</title><rect x="54.7847%" y="629" width="0.0849%" height="15" fill="rgb(217,3,25)" fg:x="27755" fg:w="43"/><text x="55.0347%" y="639.50"></text></g><g><title>event_listener::Event::listen (14 samples, 0.03%)</title><rect x="54.8419%" y="613" width="0.0276%" height="15" fill="rgb(239,24,14)" fg:x="27784" fg:w="14"/><text x="55.0919%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.03%)</title><rect x="54.8695%" y="597" width="0.0316%" height="15" fill="rgb(244,16,53)" fg:x="27798" fg:w="16"/><text x="55.1195%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.03%)</title><rect x="54.8735%" y="581" width="0.0276%" height="15" fill="rgb(208,175,44)" fg:x="27800" fg:w="14"/><text x="55.1235%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.01%)</title><rect x="54.9189%" y="517" width="0.0118%" height="15" fill="rgb(252,18,48)" fg:x="27823" fg:w="6"/><text x="55.1689%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="54.9189%" y="501" width="0.0118%" height="15" fill="rgb(234,199,32)" fg:x="27823" fg:w="6"/><text x="55.1689%" y="511.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.02%)</title><rect x="54.9149%" y="533" width="0.0217%" height="15" fill="rgb(225,77,54)" fg:x="27821" fg:w="11"/><text x="55.1649%" y="543.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (6 samples, 0.01%)</title><rect x="54.9386%" y="517" width="0.0118%" height="15" fill="rgb(225,42,25)" fg:x="27833" fg:w="6"/><text x="55.1886%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="54.9386%" y="501" width="0.0118%" height="15" fill="rgb(242,227,46)" fg:x="27833" fg:w="6"/><text x="55.1886%" y="511.50"></text></g><g><title>event_listener::List::notify (25 samples, 0.05%)</title><rect x="54.9110%" y="581" width="0.0493%" height="15" fill="rgb(246,197,35)" fg:x="27819" fg:w="25"/><text x="55.1610%" y="591.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.05%)</title><rect x="54.9149%" y="565" width="0.0454%" height="15" fill="rgb(215,159,26)" fg:x="27821" fg:w="23"/><text x="55.1649%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (23 samples, 0.05%)</title><rect x="54.9149%" y="549" width="0.0454%" height="15" fill="rgb(212,194,50)" fg:x="27821" fg:w="23"/><text x="55.1649%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (11 samples, 0.02%)</title><rect x="54.9386%" y="533" width="0.0217%" height="15" fill="rgb(246,132,1)" fg:x="27833" fg:w="11"/><text x="55.1886%" y="543.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (49 samples, 0.10%)</title><rect x="54.8695%" y="613" width="0.0967%" height="15" fill="rgb(217,71,7)" fg:x="27798" fg:w="49"/><text x="55.1195%" y="623.50"></text></g><g><title>event_listener::Event::notify (33 samples, 0.07%)</title><rect x="54.9011%" y="597" width="0.0651%" height="15" fill="rgb(252,59,32)" fg:x="27814" fg:w="33"/><text x="55.1511%" y="607.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.10%)</title><rect x="54.8695%" y="629" width="0.0987%" height="15" fill="rgb(253,204,25)" fg:x="27798" fg:w="50"/><text x="55.1195%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (8 samples, 0.02%)</title><rect x="54.9860%" y="485" width="0.0158%" height="15" fill="rgb(232,21,16)" fg:x="27857" fg:w="8"/><text x="55.2360%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::lt (8 samples, 0.02%)</title><rect x="54.9860%" y="469" width="0.0158%" height="15" fill="rgb(248,90,29)" fg:x="27857" fg:w="8"/><text x="55.2360%" y="479.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="54.9860%" y="453" width="0.0158%" height="15" fill="rgb(249,223,7)" fg:x="27857" fg:w="8"/><text x="55.2360%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="54.9860%" y="437" width="0.0158%" height="15" fill="rgb(231,119,42)" fg:x="27857" fg:w="8"/><text x="55.2360%" y="447.50"></text></g><g><title>bevy_render::render_phase::sort_phase_system (23 samples, 0.05%)</title><rect x="54.9682%" y="549" width="0.0454%" height="15" fill="rgb(215,41,35)" fg:x="27848" fg:w="23"/><text x="55.2182%" y="559.50"></text></g><g><title>bevy_render::render_phase::RenderPhase&lt;I&gt;::sort (18 samples, 0.04%)</title><rect x="54.9781%" y="533" width="0.0355%" height="15" fill="rgb(220,44,45)" fg:x="27853" fg:w="18"/><text x="55.2281%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (18 samples, 0.04%)</title><rect x="54.9781%" y="517" width="0.0355%" height="15" fill="rgb(253,197,36)" fg:x="27853" fg:w="18"/><text x="55.2281%" y="527.50"></text></g><g><title>alloc::slice::merge_sort (18 samples, 0.04%)</title><rect x="54.9781%" y="501" width="0.0355%" height="15" fill="rgb(245,225,54)" fg:x="27853" fg:w="18"/><text x="55.2281%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (25 samples, 0.05%)</title><rect x="54.9682%" y="613" width="0.0493%" height="15" fill="rgb(239,94,37)" fg:x="27848" fg:w="25"/><text x="55.2182%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (25 samples, 0.05%)</title><rect x="54.9682%" y="597" width="0.0493%" height="15" fill="rgb(242,217,10)" fg:x="27848" fg:w="25"/><text x="55.2182%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (25 samples, 0.05%)</title><rect x="54.9682%" y="581" width="0.0493%" height="15" fill="rgb(250,193,7)" fg:x="27848" fg:w="25"/><text x="55.2182%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (25 samples, 0.05%)</title><rect x="54.9682%" y="565" width="0.0493%" height="15" fill="rgb(230,104,19)" fg:x="27848" fg:w="25"/><text x="55.2182%" y="575.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="55.0176%" y="533" width="0.0138%" height="15" fill="rgb(230,181,4)" fg:x="27873" fg:w="7"/><text x="55.2676%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="55.0195%" y="517" width="0.0118%" height="15" fill="rgb(216,219,49)" fg:x="27874" fg:w="6"/><text x="55.2695%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="55.0195%" y="501" width="0.0118%" height="15" fill="rgb(254,144,0)" fg:x="27874" fg:w="6"/><text x="55.2695%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="55.0195%" y="485" width="0.0118%" height="15" fill="rgb(205,209,38)" fg:x="27874" fg:w="6"/><text x="55.2695%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="55.0176%" y="613" width="0.0178%" height="15" fill="rgb(240,21,42)" fg:x="27873" fg:w="9"/><text x="55.2676%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (9 samples, 0.02%)</title><rect x="55.0176%" y="597" width="0.0178%" height="15" fill="rgb(241,132,3)" fg:x="27873" fg:w="9"/><text x="55.2676%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.02%)</title><rect x="55.0176%" y="581" width="0.0178%" height="15" fill="rgb(225,14,2)" fg:x="27873" fg:w="9"/><text x="55.2676%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (9 samples, 0.02%)</title><rect x="55.0176%" y="565" width="0.0178%" height="15" fill="rgb(210,141,35)" fg:x="27873" fg:w="9"/><text x="55.2676%" y="575.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (9 samples, 0.02%)</title><rect x="55.0176%" y="549" width="0.0178%" height="15" fill="rgb(251,14,44)" fg:x="27873" fg:w="9"/><text x="55.2676%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (22 samples, 0.04%)</title><rect x="55.0353%" y="613" width="0.0434%" height="15" fill="rgb(247,48,18)" fg:x="27882" fg:w="22"/><text x="55.2853%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (19 samples, 0.04%)</title><rect x="55.0413%" y="597" width="0.0375%" height="15" fill="rgb(225,0,40)" fg:x="27885" fg:w="19"/><text x="55.2913%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.04%)</title><rect x="55.0413%" y="581" width="0.0375%" height="15" fill="rgb(221,31,33)" fg:x="27885" fg:w="19"/><text x="55.2913%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.04%)</title><rect x="55.0413%" y="565" width="0.0375%" height="15" fill="rgb(237,42,40)" fg:x="27885" fg:w="19"/><text x="55.2913%" y="575.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (18 samples, 0.04%)</title><rect x="55.0432%" y="549" width="0.0355%" height="15" fill="rgb(233,51,29)" fg:x="27886" fg:w="18"/><text x="55.2932%" y="559.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (13 samples, 0.03%)</title><rect x="55.0531%" y="533" width="0.0257%" height="15" fill="rgb(226,58,20)" fg:x="27891" fg:w="13"/><text x="55.3031%" y="543.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (12 samples, 0.02%)</title><rect x="55.0551%" y="517" width="0.0237%" height="15" fill="rgb(208,98,7)" fg:x="27892" fg:w="12"/><text x="55.3051%" y="527.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.02%)</title><rect x="55.0551%" y="501" width="0.0237%" height="15" fill="rgb(228,143,44)" fg:x="27892" fg:w="12"/><text x="55.3051%" y="511.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (12 samples, 0.02%)</title><rect x="55.0551%" y="485" width="0.0237%" height="15" fill="rgb(246,55,38)" fg:x="27892" fg:w="12"/><text x="55.3051%" y="495.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (11 samples, 0.02%)</title><rect x="55.0570%" y="469" width="0.0217%" height="15" fill="rgb(247,87,16)" fg:x="27893" fg:w="11"/><text x="55.3070%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (7 samples, 0.01%)</title><rect x="55.0649%" y="453" width="0.0138%" height="15" fill="rgb(234,129,42)" fg:x="27897" fg:w="7"/><text x="55.3149%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (7 samples, 0.01%)</title><rect x="55.0649%" y="437" width="0.0138%" height="15" fill="rgb(220,82,16)" fg:x="27897" fg:w="7"/><text x="55.3149%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="55.0649%" y="421" width="0.0138%" height="15" fill="rgb(211,88,4)" fg:x="27897" fg:w="7"/><text x="55.3149%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="55.0649%" y="405" width="0.0138%" height="15" fill="rgb(248,151,21)" fg:x="27897" fg:w="7"/><text x="55.3149%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="55.0649%" y="389" width="0.0138%" height="15" fill="rgb(238,163,6)" fg:x="27897" fg:w="7"/><text x="55.3149%" y="399.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (17 samples, 0.03%)</title><rect x="55.0886%" y="549" width="0.0336%" height="15" fill="rgb(209,183,11)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.03%)</title><rect x="55.0886%" y="533" width="0.0336%" height="15" fill="rgb(219,37,20)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="55.0886%" y="517" width="0.0336%" height="15" fill="rgb(210,158,4)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="55.0886%" y="501" width="0.0336%" height="15" fill="rgb(221,167,53)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="55.0886%" y="485" width="0.0336%" height="15" fill="rgb(237,151,45)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.03%)</title><rect x="55.0886%" y="469" width="0.0336%" height="15" fill="rgb(231,39,3)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17 samples, 0.03%)</title><rect x="55.0886%" y="453" width="0.0336%" height="15" fill="rgb(212,167,28)" fg:x="27909" fg:w="17"/><text x="55.3386%" y="463.50"></text></g><g><title>core::ptr::write (16 samples, 0.03%)</title><rect x="55.0906%" y="437" width="0.0316%" height="15" fill="rgb(232,178,8)" fg:x="27910" fg:w="16"/><text x="55.3406%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (27 samples, 0.05%)</title><rect x="55.0788%" y="613" width="0.0533%" height="15" fill="rgb(225,151,20)" fg:x="27904" fg:w="27"/><text x="55.3288%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (24 samples, 0.05%)</title><rect x="55.0847%" y="597" width="0.0474%" height="15" fill="rgb(238,3,37)" fg:x="27907" fg:w="24"/><text x="55.3347%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.05%)</title><rect x="55.0847%" y="581" width="0.0474%" height="15" fill="rgb(251,147,42)" fg:x="27907" fg:w="24"/><text x="55.3347%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (24 samples, 0.05%)</title><rect x="55.0847%" y="565" width="0.0474%" height="15" fill="rgb(208,173,10)" fg:x="27907" fg:w="24"/><text x="55.3347%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (13 samples, 0.03%)</title><rect x="55.1321%" y="613" width="0.0257%" height="15" fill="rgb(246,225,4)" fg:x="27931" fg:w="13"/><text x="55.3821%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (13 samples, 0.03%)</title><rect x="55.1321%" y="597" width="0.0257%" height="15" fill="rgb(248,102,6)" fg:x="27931" fg:w="13"/><text x="55.3821%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.03%)</title><rect x="55.1321%" y="581" width="0.0257%" height="15" fill="rgb(232,6,21)" fg:x="27931" fg:w="13"/><text x="55.3821%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.03%)</title><rect x="55.1321%" y="565" width="0.0257%" height="15" fill="rgb(221,179,22)" fg:x="27931" fg:w="13"/><text x="55.3821%" y="575.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (13 samples, 0.03%)</title><rect x="55.1321%" y="549" width="0.0257%" height="15" fill="rgb(252,50,20)" fg:x="27931" fg:w="13"/><text x="55.3821%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (107 samples, 0.21%)</title><rect x="54.9682%" y="629" width="0.2112%" height="15" fill="rgb(222,56,38)" fg:x="27848" fg:w="107"/><text x="55.2182%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (415 samples, 0.82%)</title><rect x="54.3800%" y="661" width="0.8192%" height="15" fill="rgb(206,193,29)" fg:x="27550" fg:w="415"/><text x="54.6300%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (212 samples, 0.42%)</title><rect x="54.7807%" y="645" width="0.4185%" height="15" fill="rgb(239,192,45)" fg:x="27753" fg:w="212"/><text x="55.0307%" y="655.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="55.2071%" y="645" width="0.0158%" height="15" fill="rgb(254,18,36)" fg:x="27969" fg:w="8"/><text x="55.4571%" y="655.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (8 samples, 0.02%)</title><rect x="55.2071%" y="629" width="0.0158%" height="15" fill="rgb(221,127,11)" fg:x="27969" fg:w="8"/><text x="55.4571%" y="639.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (431 samples, 0.85%)</title><rect x="54.3741%" y="677" width="0.8507%" height="15" fill="rgb(234,146,35)" fg:x="27547" fg:w="431"/><text x="54.6241%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (9 samples, 0.02%)</title><rect x="55.2071%" y="661" width="0.0178%" height="15" fill="rgb(254,201,37)" fg:x="27969" fg:w="9"/><text x="55.4571%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (18 samples, 0.04%)</title><rect x="55.2485%" y="629" width="0.0355%" height="15" fill="rgb(211,202,23)" fg:x="27990" fg:w="18"/><text x="55.4985%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (17 samples, 0.03%)</title><rect x="55.2505%" y="613" width="0.0336%" height="15" fill="rgb(237,91,2)" fg:x="27991" fg:w="17"/><text x="55.5005%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (15 samples, 0.03%)</title><rect x="55.2544%" y="597" width="0.0296%" height="15" fill="rgb(226,228,36)" fg:x="27993" fg:w="15"/><text x="55.5044%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="55.2544%" y="581" width="0.0296%" height="15" fill="rgb(213,63,50)" fg:x="27993" fg:w="15"/><text x="55.5044%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.03%)</title><rect x="55.2544%" y="565" width="0.0296%" height="15" fill="rgb(235,194,19)" fg:x="27993" fg:w="15"/><text x="55.5044%" y="575.50"></text></g><g><title>bevy_render::view::window::prepare_windows (15 samples, 0.03%)</title><rect x="55.2544%" y="549" width="0.0296%" height="15" fill="rgb(207,204,18)" fg:x="27993" fg:w="15"/><text x="55.5044%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.06%)</title><rect x="55.2307%" y="661" width="0.0553%" height="15" fill="rgb(248,8,7)" fg:x="27981" fg:w="28"/><text x="55.4807%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (27 samples, 0.05%)</title><rect x="55.2327%" y="645" width="0.0533%" height="15" fill="rgb(223,145,47)" fg:x="27982" fg:w="27"/><text x="55.4827%" y="655.50"></text></g><g><title>async_task::header::Header::register (12 samples, 0.02%)</title><rect x="55.2959%" y="581" width="0.0237%" height="15" fill="rgb(228,84,11)" fg:x="28014" fg:w="12"/><text x="55.5459%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="55.3077%" y="565" width="0.0118%" height="15" fill="rgb(218,76,45)" fg:x="28020" fg:w="6"/><text x="55.5577%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="55.3077%" y="549" width="0.0118%" height="15" fill="rgb(223,80,15)" fg:x="28020" fg:w="6"/><text x="55.5577%" y="559.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="55.2900%" y="613" width="0.0513%" height="15" fill="rgb(219,218,33)" fg:x="28011" fg:w="26"/><text x="55.5400%" y="623.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (26 samples, 0.05%)</title><rect x="55.2900%" y="597" width="0.0513%" height="15" fill="rgb(208,51,11)" fg:x="28011" fg:w="26"/><text x="55.5400%" y="607.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="55.3492%" y="597" width="0.0138%" height="15" fill="rgb(229,165,39)" fg:x="28041" fg:w="7"/><text x="55.5992%" y="607.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (6 samples, 0.01%)</title><rect x="55.3512%" y="581" width="0.0118%" height="15" fill="rgb(241,100,24)" fg:x="28042" fg:w="6"/><text x="55.6012%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="55.3512%" y="565" width="0.0118%" height="15" fill="rgb(228,14,23)" fg:x="28042" fg:w="6"/><text x="55.6012%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="55.3512%" y="549" width="0.0118%" height="15" fill="rgb(247,116,52)" fg:x="28042" fg:w="6"/><text x="55.6012%" y="559.50"></text></g><g><title>__free (16 samples, 0.03%)</title><rect x="55.3630%" y="597" width="0.0316%" height="15" fill="rgb(216,149,33)" fg:x="28048" fg:w="16"/><text x="55.6130%" y="607.50"></text></g><g><title>_int_free (16 samples, 0.03%)</title><rect x="55.3630%" y="581" width="0.0316%" height="15" fill="rgb(238,142,29)" fg:x="28048" fg:w="16"/><text x="55.6130%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.12%)</title><rect x="55.2860%" y="645" width="0.1224%" height="15" fill="rgb(224,83,40)" fg:x="28009" fg:w="62"/><text x="55.5360%" y="655.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (61 samples, 0.12%)</title><rect x="55.2880%" y="629" width="0.1204%" height="15" fill="rgb(234,165,11)" fg:x="28010" fg:w="61"/><text x="55.5380%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (30 samples, 0.06%)</title><rect x="55.3492%" y="613" width="0.0592%" height="15" fill="rgb(215,96,23)" fg:x="28041" fg:w="30"/><text x="55.5992%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (63 samples, 0.12%)</title><rect x="55.2860%" y="661" width="0.1244%" height="15" fill="rgb(233,179,26)" fg:x="28009" fg:w="63"/><text x="55.5360%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (538 samples, 1.06%)</title><rect x="54.3662%" y="693" width="1.0619%" height="15" fill="rgb(225,129,33)" fg:x="27543" fg:w="538"/><text x="54.6162%" y="703.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (103 samples, 0.20%)</title><rect x="55.2248%" y="677" width="0.2033%" height="15" fill="rgb(237,49,13)" fg:x="27978" fg:w="103"/><text x="55.4748%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::LocalExecutor::spawn&lt;alloc::vec::Vec&lt;()&gt;,core::pin::Pin&lt;&amp;mut dyn core::future::future::Future+Output = alloc::vec::Vec&lt;()&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (6 samples, 0.01%)</title><rect x="55.4163%" y="661" width="0.0118%" height="15" fill="rgb(211,3,31)" fg:x="28075" fg:w="6"/><text x="55.6663%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (7 samples, 0.01%)</title><rect x="55.4360%" y="693" width="0.0138%" height="15" fill="rgb(216,152,19)" fg:x="28085" fg:w="7"/><text x="55.6860%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="55.4360%" y="677" width="0.0138%" height="15" fill="rgb(251,121,35)" fg:x="28085" fg:w="7"/><text x="55.6860%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="55.4360%" y="661" width="0.0138%" height="15" fill="rgb(210,217,47)" fg:x="28085" fg:w="7"/><text x="55.6860%" y="671.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (8 samples, 0.02%)</title><rect x="55.4538%" y="613" width="0.0158%" height="15" fill="rgb(244,116,22)" fg:x="28094" fg:w="8"/><text x="55.7038%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.02%)</title><rect x="55.4538%" y="597" width="0.0158%" height="15" fill="rgb(228,17,21)" fg:x="28094" fg:w="8"/><text x="55.7038%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="55.4558%" y="581" width="0.0138%" height="15" fill="rgb(240,149,34)" fg:x="28095" fg:w="7"/><text x="55.7058%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (11 samples, 0.02%)</title><rect x="55.4498%" y="645" width="0.0217%" height="15" fill="rgb(208,125,47)" fg:x="28092" fg:w="11"/><text x="55.6998%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (9 samples, 0.02%)</title><rect x="55.4538%" y="629" width="0.0178%" height="15" fill="rgb(249,186,39)" fg:x="28094" fg:w="9"/><text x="55.7038%" y="639.50"></text></g><g><title>async_task::utils::abort_on_panic (13 samples, 0.03%)</title><rect x="55.4498%" y="693" width="0.0257%" height="15" fill="rgb(240,220,33)" fg:x="28092" fg:w="13"/><text x="55.6998%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (13 samples, 0.03%)</title><rect x="55.4498%" y="677" width="0.0257%" height="15" fill="rgb(243,110,23)" fg:x="28092" fg:w="13"/><text x="55.6998%" y="687.50"></text></g><g><title>core::task::wake::Waker::wake (13 samples, 0.03%)</title><rect x="55.4498%" y="661" width="0.0257%" height="15" fill="rgb(219,163,46)" fg:x="28092" fg:w="13"/><text x="55.6998%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (586 samples, 1.16%)</title><rect x="54.3524%" y="709" width="1.1567%" height="15" fill="rgb(216,126,30)" fg:x="27536" fg:w="586"/><text x="54.6024%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.03%)</title><rect x="55.4755%" y="693" width="0.0336%" height="15" fill="rgb(208,139,11)" fg:x="28105" fg:w="17"/><text x="55.7255%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.03%)</title><rect x="55.4755%" y="677" width="0.0336%" height="15" fill="rgb(213,118,36)" fg:x="28105" fg:w="17"/><text x="55.7255%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (291 samples, 0.57%)</title><rect x="55.6650%" y="677" width="0.5744%" height="15" fill="rgb(226,43,17)" fg:x="28201" fg:w="291"/><text x="55.9150%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (288 samples, 0.57%)</title><rect x="55.6709%" y="661" width="0.5685%" height="15" fill="rgb(254,217,4)" fg:x="28204" fg:w="288"/><text x="55.9209%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (288 samples, 0.57%)</title><rect x="55.6709%" y="645" width="0.5685%" height="15" fill="rgb(210,134,47)" fg:x="28204" fg:w="288"/><text x="55.9209%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (288 samples, 0.57%)</title><rect x="55.6709%" y="629" width="0.5685%" height="15" fill="rgb(237,24,49)" fg:x="28204" fg:w="288"/><text x="55.9209%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (7 samples, 0.01%)</title><rect x="56.2394%" y="677" width="0.0138%" height="15" fill="rgb(251,39,46)" fg:x="28492" fg:w="7"/><text x="56.4894%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (16 samples, 0.03%)</title><rect x="56.2532%" y="677" width="0.0316%" height="15" fill="rgb(251,220,3)" fg:x="28499" fg:w="16"/><text x="56.5032%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.03%)</title><rect x="56.2532%" y="661" width="0.0316%" height="15" fill="rgb(228,105,12)" fg:x="28499" fg:w="16"/><text x="56.5032%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="56.2848%" y="677" width="0.0178%" height="15" fill="rgb(215,196,1)" fg:x="28515" fg:w="9"/><text x="56.5348%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="56.2848%" y="661" width="0.0178%" height="15" fill="rgb(214,33,39)" fg:x="28515" fg:w="9"/><text x="56.5348%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.02%)</title><rect x="56.3026%" y="677" width="0.0158%" height="15" fill="rgb(220,19,52)" fg:x="28524" fg:w="8"/><text x="56.5526%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.02%)</title><rect x="56.3026%" y="661" width="0.0158%" height="15" fill="rgb(221,78,38)" fg:x="28524" fg:w="8"/><text x="56.5526%" y="671.50"></text></g><g><title>async_executor::Executor::try_tick (1,023 samples, 2.02%)</title><rect x="54.3168%" y="725" width="2.0193%" height="15" fill="rgb(253,30,16)" fg:x="27518" fg:w="1023"/><text x="54.5668%" y="735.50">a..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (419 samples, 0.83%)</title><rect x="55.5091%" y="709" width="0.8270%" height="15" fill="rgb(242,65,0)" fg:x="28122" fg:w="419"/><text x="55.7591%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (419 samples, 0.83%)</title><rect x="55.5091%" y="693" width="0.8270%" height="15" fill="rgb(235,201,12)" fg:x="28122" fg:w="419"/><text x="55.7591%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="56.3183%" y="677" width="0.0178%" height="15" fill="rgb(233,161,9)" fg:x="28532" fg:w="9"/><text x="56.5683%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="56.3183%" y="661" width="0.0178%" height="15" fill="rgb(241,207,41)" fg:x="28532" fg:w="9"/><text x="56.5683%" y="671.50"></text></g><g><title>async_executor::LocalExecutor::spawn (8 samples, 0.02%)</title><rect x="56.3361%" y="725" width="0.0158%" height="15" fill="rgb(212,69,46)" fg:x="28541" fg:w="8"/><text x="56.5861%" y="735.50"></text></g><g><title>__tls_get_addr_slow (9 samples, 0.02%)</title><rect x="56.4210%" y="645" width="0.0178%" height="15" fill="rgb(239,69,45)" fg:x="28584" fg:w="9"/><text x="56.6710%" y="655.50"></text></g><g><title>__tls_get_addr (77 samples, 0.15%)</title><rect x="56.4052%" y="661" width="0.1520%" height="15" fill="rgb(242,117,48)" fg:x="28576" fg:w="77"/><text x="56.6552%" y="671.50"></text></g><g><title>update_get_addr (60 samples, 0.12%)</title><rect x="56.4388%" y="645" width="0.1184%" height="15" fill="rgb(228,41,36)" fg:x="28593" fg:w="60"/><text x="56.6888%" y="655.50"></text></g><g><title>_dl_update_slotinfo (55 samples, 0.11%)</title><rect x="56.4486%" y="629" width="0.1086%" height="15" fill="rgb(212,3,32)" fg:x="28598" fg:w="55"/><text x="56.6986%" y="639.50"></text></g><g><title>_fini (9 samples, 0.02%)</title><rect x="56.5572%" y="661" width="0.0178%" height="15" fill="rgb(233,41,49)" fg:x="28653" fg:w="9"/><text x="56.8072%" y="671.50"></text></g><g><title>__tls_get_addr_slow (16 samples, 0.03%)</title><rect x="56.6361%" y="597" width="0.0316%" height="15" fill="rgb(252,170,49)" fg:x="28693" fg:w="16"/><text x="56.8861%" y="607.50"></text></g><g><title>__tls_get_addr (97 samples, 0.19%)</title><rect x="56.5947%" y="613" width="0.1915%" height="15" fill="rgb(229,53,26)" fg:x="28672" fg:w="97"/><text x="56.8447%" y="623.50"></text></g><g><title>update_get_addr (60 samples, 0.12%)</title><rect x="56.6677%" y="597" width="0.1184%" height="15" fill="rgb(217,157,12)" fg:x="28709" fg:w="60"/><text x="56.9177%" y="607.50"></text></g><g><title>_dl_update_slotinfo (48 samples, 0.09%)</title><rect x="56.6914%" y="581" width="0.0947%" height="15" fill="rgb(227,17,9)" fg:x="28721" fg:w="48"/><text x="56.9414%" y="591.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (211 samples, 0.42%)</title><rect x="56.3874%" y="677" width="0.4165%" height="15" fill="rgb(218,84,12)" fg:x="28567" fg:w="211"/><text x="56.6374%" y="687.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (116 samples, 0.23%)</title><rect x="56.5749%" y="661" width="0.2290%" height="15" fill="rgb(212,79,24)" fg:x="28662" fg:w="116"/><text x="56.8249%" y="671.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (115 samples, 0.23%)</title><rect x="56.5769%" y="645" width="0.2270%" height="15" fill="rgb(217,222,37)" fg:x="28663" fg:w="115"/><text x="56.8269%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (115 samples, 0.23%)</title><rect x="56.5769%" y="629" width="0.2270%" height="15" fill="rgb(246,208,8)" fg:x="28663" fg:w="115"/><text x="56.8269%" y="639.50"></text></g><g><title>_fini (9 samples, 0.02%)</title><rect x="56.7862%" y="613" width="0.0178%" height="15" fill="rgb(244,133,10)" fg:x="28769" fg:w="9"/><text x="57.0362%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (148 samples, 0.29%)</title><rect x="56.9638%" y="549" width="0.2921%" height="15" fill="rgb(209,219,41)" fg:x="28859" fg:w="148"/><text x="57.2138%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (139 samples, 0.27%)</title><rect x="56.9816%" y="533" width="0.2744%" height="15" fill="rgb(253,175,45)" fg:x="28868" fg:w="139"/><text x="57.2316%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (132 samples, 0.26%)</title><rect x="56.9954%" y="517" width="0.2606%" height="15" fill="rgb(235,100,37)" fg:x="28875" fg:w="132"/><text x="57.2454%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (132 samples, 0.26%)</title><rect x="56.9954%" y="501" width="0.2606%" height="15" fill="rgb(225,87,19)" fg:x="28875" fg:w="132"/><text x="57.2454%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (132 samples, 0.26%)</title><rect x="56.9954%" y="485" width="0.2606%" height="15" fill="rgb(217,152,17)" fg:x="28875" fg:w="132"/><text x="57.2454%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (132 samples, 0.26%)</title><rect x="56.9954%" y="469" width="0.2606%" height="15" fill="rgb(235,72,13)" fg:x="28875" fg:w="132"/><text x="57.2454%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (10 samples, 0.02%)</title><rect x="57.2717%" y="485" width="0.0197%" height="15" fill="rgb(233,140,18)" fg:x="29015" fg:w="10"/><text x="57.5217%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.02%)</title><rect x="57.2717%" y="469" width="0.0197%" height="15" fill="rgb(207,212,28)" fg:x="29015" fg:w="10"/><text x="57.5217%" y="479.50"></text></g><g><title>async_task::utils::abort_on_panic (333 samples, 0.66%)</title><rect x="56.9638%" y="581" width="0.6573%" height="15" fill="rgb(220,130,25)" fg:x="28859" fg:w="333"/><text x="57.2138%" y="591.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (333 samples, 0.66%)</title><rect x="56.9638%" y="565" width="0.6573%" height="15" fill="rgb(205,55,34)" fg:x="28859" fg:w="333"/><text x="57.2138%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (185 samples, 0.37%)</title><rect x="57.2559%" y="549" width="0.3652%" height="15" fill="rgb(237,54,35)" fg:x="29007" fg:w="185"/><text x="57.5059%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (177 samples, 0.35%)</title><rect x="57.2717%" y="533" width="0.3494%" height="15" fill="rgb(208,67,23)" fg:x="29015" fg:w="177"/><text x="57.5217%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (177 samples, 0.35%)</title><rect x="57.2717%" y="517" width="0.3494%" height="15" fill="rgb(206,207,50)" fg:x="29015" fg:w="177"/><text x="57.5217%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (177 samples, 0.35%)</title><rect x="57.2717%" y="501" width="0.3494%" height="15" fill="rgb(213,211,42)" fg:x="29015" fg:w="177"/><text x="57.5217%" y="511.50"></text></g><g><title>core::mem::drop (167 samples, 0.33%)</title><rect x="57.2915%" y="485" width="0.3296%" height="15" fill="rgb(252,197,50)" fg:x="29025" fg:w="167"/><text x="57.5415%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (167 samples, 0.33%)</title><rect x="57.2915%" y="469" width="0.3296%" height="15" fill="rgb(251,211,41)" fg:x="29025" fg:w="167"/><text x="57.5415%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.33%)</title><rect x="57.2915%" y="453" width="0.3296%" height="15" fill="rgb(229,211,5)" fg:x="29025" fg:w="167"/><text x="57.5415%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (167 samples, 0.33%)</title><rect x="57.2915%" y="437" width="0.3296%" height="15" fill="rgb(239,36,31)" fg:x="29025" fg:w="167"/><text x="57.5415%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (167 samples, 0.33%)</title><rect x="57.2915%" y="421" width="0.3296%" height="15" fill="rgb(248,67,31)" fg:x="29025" fg:w="167"/><text x="57.5415%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (7 samples, 0.01%)</title><rect x="57.6211%" y="581" width="0.0138%" height="15" fill="rgb(249,55,44)" fg:x="29192" fg:w="7"/><text x="57.8711%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.01%)</title><rect x="57.6211%" y="565" width="0.0138%" height="15" fill="rgb(216,82,12)" fg:x="29192" fg:w="7"/><text x="57.8711%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (318 samples, 0.63%)</title><rect x="57.6349%" y="581" width="0.6277%" height="15" fill="rgb(242,174,1)" fg:x="29199" fg:w="318"/><text x="57.8849%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (318 samples, 0.63%)</title><rect x="57.6349%" y="565" width="0.6277%" height="15" fill="rgb(208,120,29)" fg:x="29199" fg:w="318"/><text x="57.8849%" y="575.50"></text></g><g><title>async_task::header::Header::register (701 samples, 1.38%)</title><rect x="56.8967%" y="597" width="1.3837%" height="15" fill="rgb(221,105,43)" fg:x="28825" fg:w="701"/><text x="57.1467%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.02%)</title><rect x="58.2626%" y="581" width="0.0178%" height="15" fill="rgb(234,124,22)" fg:x="29517" fg:w="9"/><text x="58.5126%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.02%)</title><rect x="58.2626%" y="565" width="0.0178%" height="15" fill="rgb(212,23,30)" fg:x="29517" fg:w="9"/><text x="58.5126%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (92 samples, 0.18%)</title><rect x="58.2804%" y="597" width="0.1816%" height="15" fill="rgb(219,122,53)" fg:x="29526" fg:w="92"/><text x="58.5304%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (92 samples, 0.18%)</title><rect x="58.2804%" y="581" width="0.1816%" height="15" fill="rgb(248,84,24)" fg:x="29526" fg:w="92"/><text x="58.5304%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (833 samples, 1.64%)</title><rect x="56.8197%" y="661" width="1.6442%" height="15" fill="rgb(245,115,18)" fg:x="28786" fg:w="833"/><text x="57.0697%" y="671.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (827 samples, 1.63%)</title><rect x="56.8316%" y="645" width="1.6324%" height="15" fill="rgb(227,176,51)" fg:x="28792" fg:w="827"/><text x="57.0816%" y="655.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (818 samples, 1.61%)</title><rect x="56.8493%" y="629" width="1.6146%" height="15" fill="rgb(229,63,42)" fg:x="28801" fg:w="818"/><text x="57.0993%" y="639.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (818 samples, 1.61%)</title><rect x="56.8493%" y="613" width="1.6146%" height="15" fill="rgb(247,202,24)" fg:x="28801" fg:w="818"/><text x="57.0993%" y="623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (11 samples, 0.02%)</title><rect x="58.4639%" y="661" width="0.0217%" height="15" fill="rgb(244,173,20)" fg:x="29619" fg:w="11"/><text x="58.7139%" y="671.50"></text></g><g><title>core::cell::BorrowRefMut::new (11 samples, 0.02%)</title><rect x="58.4639%" y="645" width="0.0217%" height="15" fill="rgb(242,81,47)" fg:x="29619" fg:w="11"/><text x="58.7139%" y="655.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (10 samples, 0.02%)</title><rect x="58.4856%" y="661" width="0.0197%" height="15" fill="rgb(231,185,54)" fg:x="29630" fg:w="10"/><text x="58.7356%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="58.4856%" y="645" width="0.0197%" height="15" fill="rgb(243,55,32)" fg:x="29630" fg:w="10"/><text x="58.7356%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,269 samples, 4.48%)</title><rect x="54.0346%" y="805" width="4.4787%" height="15" fill="rgb(208,167,19)" fg:x="27375" fg:w="2269"/><text x="54.2846%" y="815.50">&lt;bevy..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,269 samples, 4.48%)</title><rect x="54.0346%" y="789" width="4.4787%" height="15" fill="rgb(231,72,35)" fg:x="27375" fg:w="2269"/><text x="54.2846%" y="799.50">bevy_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,269 samples, 4.48%)</title><rect x="54.0346%" y="773" width="4.4787%" height="15" fill="rgb(250,173,51)" fg:x="27375" fg:w="2269"/><text x="54.2846%" y="783.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,269 samples, 4.48%)</title><rect x="54.0346%" y="757" width="4.4787%" height="15" fill="rgb(209,5,22)" fg:x="27375" fg:w="2269"/><text x="54.2846%" y="767.50">std::..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,268 samples, 4.48%)</title><rect x="54.0366%" y="741" width="4.4767%" height="15" fill="rgb(250,174,19)" fg:x="27376" fg:w="2268"/><text x="54.2866%" y="751.50">bevy_..</text></g><g><title>futures_lite::future::block_on (1,094 samples, 2.16%)</title><rect x="56.3539%" y="725" width="2.1594%" height="15" fill="rgb(217,3,49)" fg:x="28550" fg:w="1094"/><text x="56.6039%" y="735.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,094 samples, 2.16%)</title><rect x="56.3539%" y="709" width="2.1594%" height="15" fill="rgb(218,225,5)" fg:x="28550" fg:w="1094"/><text x="56.6039%" y="719.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,083 samples, 2.14%)</title><rect x="56.3756%" y="693" width="2.1377%" height="15" fill="rgb(236,89,11)" fg:x="28561" fg:w="1083"/><text x="56.6256%" y="703.50">s..</text></g><g><title>futures_lite::future::block_on::{{closure}} (866 samples, 1.71%)</title><rect x="56.8039%" y="677" width="1.7094%" height="15" fill="rgb(206,33,28)" fg:x="28778" fg:w="866"/><text x="57.0539%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="58.5271%" y="645" width="0.0118%" height="15" fill="rgb(241,56,42)" fg:x="29651" fg:w="6"/><text x="58.7771%" y="655.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (6 samples, 0.01%)</title><rect x="58.5271%" y="629" width="0.0118%" height="15" fill="rgb(222,44,11)" fg:x="29651" fg:w="6"/><text x="58.7771%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="58.5271%" y="613" width="0.0118%" height="15" fill="rgb(234,111,20)" fg:x="29651" fg:w="6"/><text x="58.7771%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (14 samples, 0.03%)</title><rect x="58.5133%" y="709" width="0.0276%" height="15" fill="rgb(237,77,6)" fg:x="29644" fg:w="14"/><text x="58.7633%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::add_bundle_to_archetype (12 samples, 0.02%)</title><rect x="58.5172%" y="693" width="0.0237%" height="15" fill="rgb(235,111,23)" fg:x="29646" fg:w="12"/><text x="58.7672%" y="703.50"></text></g><g><title>bevy_ecs::archetype::Edges::get_add_bundle (8 samples, 0.02%)</title><rect x="58.5251%" y="677" width="0.0158%" height="15" fill="rgb(251,135,29)" fg:x="29650" fg:w="8"/><text x="58.7751%" y="687.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (7 samples, 0.01%)</title><rect x="58.5271%" y="661" width="0.0138%" height="15" fill="rgb(217,57,1)" fg:x="29651" fg:w="7"/><text x="58.7771%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (13 samples, 0.03%)</title><rect x="58.5567%" y="677" width="0.0257%" height="15" fill="rgb(249,119,31)" fg:x="29666" fg:w="13"/><text x="58.8067%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (13 samples, 0.03%)</title><rect x="58.5567%" y="661" width="0.0257%" height="15" fill="rgb(233,164,33)" fg:x="29666" fg:w="13"/><text x="58.8067%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="58.5567%" y="645" width="0.0257%" height="15" fill="rgb(250,217,43)" fg:x="29666" fg:w="13"/><text x="58.8067%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="58.5567%" y="629" width="0.0257%" height="15" fill="rgb(232,154,50)" fg:x="29666" fg:w="13"/><text x="58.8067%" y="639.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (7 samples, 0.01%)</title><rect x="58.5824%" y="677" width="0.0138%" height="15" fill="rgb(227,190,8)" fg:x="29679" fg:w="7"/><text x="58.8324%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.01%)</title><rect x="58.6495%" y="645" width="0.0118%" height="15" fill="rgb(209,217,32)" fg:x="29713" fg:w="6"/><text x="58.8995%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.05%)</title><rect x="58.6357%" y="661" width="0.0513%" height="15" fill="rgb(243,203,50)" fg:x="29706" fg:w="26"/><text x="58.8857%" y="671.50"></text></g><g><title>core::ptr::write (13 samples, 0.03%)</title><rect x="58.6613%" y="645" width="0.0257%" height="15" fill="rgb(232,152,27)" fg:x="29719" fg:w="13"/><text x="58.9113%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (51 samples, 0.10%)</title><rect x="58.5962%" y="677" width="0.1007%" height="15" fill="rgb(240,34,29)" fg:x="29686" fg:w="51"/><text x="58.8462%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (83 samples, 0.16%)</title><rect x="58.5409%" y="709" width="0.1638%" height="15" fill="rgb(215,185,52)" fg:x="29658" fg:w="83"/><text x="58.7909%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (79 samples, 0.16%)</title><rect x="58.5488%" y="693" width="0.1559%" height="15" fill="rgb(240,89,49)" fg:x="29662" fg:w="79"/><text x="58.7988%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="58.7561%" y="565" width="0.0237%" height="15" fill="rgb(225,12,52)" fg:x="29767" fg:w="12"/><text x="59.0061%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="58.7245%" y="629" width="0.0612%" height="15" fill="rgb(239,128,45)" fg:x="29751" fg:w="31"/><text x="58.9745%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="58.7245%" y="613" width="0.0612%" height="15" fill="rgb(211,78,47)" fg:x="29751" fg:w="31"/><text x="58.9745%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="58.7245%" y="597" width="0.0612%" height="15" fill="rgb(232,31,21)" fg:x="29751" fg:w="31"/><text x="58.9745%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.04%)</title><rect x="58.7501%" y="581" width="0.0355%" height="15" fill="rgb(222,168,14)" fg:x="29764" fg:w="18"/><text x="59.0001%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.02%)</title><rect x="58.7857%" y="629" width="0.0178%" height="15" fill="rgb(209,128,24)" fg:x="29782" fg:w="9"/><text x="59.0357%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.01%)</title><rect x="58.7896%" y="613" width="0.0138%" height="15" fill="rgb(249,35,13)" fg:x="29784" fg:w="7"/><text x="59.0396%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="58.8291%" y="517" width="0.0178%" height="15" fill="rgb(218,7,2)" fg:x="29804" fg:w="9"/><text x="59.0791%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (73 samples, 0.14%)</title><rect x="58.7186%" y="661" width="0.1441%" height="15" fill="rgb(238,107,27)" fg:x="29748" fg:w="73"/><text x="58.9686%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (72 samples, 0.14%)</title><rect x="58.7205%" y="645" width="0.1421%" height="15" fill="rgb(217,88,38)" fg:x="29749" fg:w="72"/><text x="58.9705%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.06%)</title><rect x="58.8034%" y="629" width="0.0592%" height="15" fill="rgb(230,207,0)" fg:x="29791" fg:w="30"/><text x="59.0534%" y="639.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (30 samples, 0.06%)</title><rect x="58.8034%" y="613" width="0.0592%" height="15" fill="rgb(249,64,54)" fg:x="29791" fg:w="30"/><text x="59.0534%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (27 samples, 0.05%)</title><rect x="58.8094%" y="597" width="0.0533%" height="15" fill="rgb(231,7,11)" fg:x="29794" fg:w="27"/><text x="59.0594%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (27 samples, 0.05%)</title><rect x="58.8094%" y="581" width="0.0533%" height="15" fill="rgb(205,149,21)" fg:x="29794" fg:w="27"/><text x="59.0594%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="58.8094%" y="565" width="0.0533%" height="15" fill="rgb(215,126,34)" fg:x="29794" fg:w="27"/><text x="59.0594%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="58.8094%" y="549" width="0.0533%" height="15" fill="rgb(241,132,45)" fg:x="29794" fg:w="27"/><text x="59.0594%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.05%)</title><rect x="58.8173%" y="533" width="0.0454%" height="15" fill="rgb(252,69,32)" fg:x="29798" fg:w="23"/><text x="59.0673%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="58.8469%" y="517" width="0.0158%" height="15" fill="rgb(232,204,19)" fg:x="29813" fg:w="8"/><text x="59.0969%" y="527.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (103 samples, 0.20%)</title><rect x="58.7047%" y="709" width="0.2033%" height="15" fill="rgb(249,15,47)" fg:x="29741" fg:w="103"/><text x="58.9547%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (98 samples, 0.19%)</title><rect x="58.7146%" y="693" width="0.1934%" height="15" fill="rgb(209,227,23)" fg:x="29746" fg:w="98"/><text x="58.9646%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (96 samples, 0.19%)</title><rect x="58.7186%" y="677" width="0.1895%" height="15" fill="rgb(248,92,24)" fg:x="29748" fg:w="96"/><text x="58.9686%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.05%)</title><rect x="58.8627%" y="661" width="0.0454%" height="15" fill="rgb(247,59,2)" fg:x="29821" fg:w="23"/><text x="59.1127%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.05%)</title><rect x="58.8627%" y="645" width="0.0454%" height="15" fill="rgb(221,30,5)" fg:x="29821" fg:w="23"/><text x="59.1127%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="58.8923%" y="629" width="0.0158%" height="15" fill="rgb(208,108,53)" fg:x="29836" fg:w="8"/><text x="59.1423%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.02%)</title><rect x="58.8923%" y="613" width="0.0158%" height="15" fill="rgb(211,183,26)" fg:x="29836" fg:w="8"/><text x="59.1423%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (205 samples, 0.40%)</title><rect x="58.5133%" y="757" width="0.4046%" height="15" fill="rgb(232,132,4)" fg:x="29644" fg:w="205"/><text x="58.7633%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (205 samples, 0.40%)</title><rect x="58.5133%" y="741" width="0.4046%" height="15" fill="rgb(253,128,37)" fg:x="29644" fg:w="205"/><text x="58.7633%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (205 samples, 0.40%)</title><rect x="58.5133%" y="725" width="0.4046%" height="15" fill="rgb(221,58,24)" fg:x="29644" fg:w="205"/><text x="58.7633%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (12 samples, 0.02%)</title><rect x="58.9219%" y="725" width="0.0237%" height="15" fill="rgb(230,54,45)" fg:x="29851" fg:w="12"/><text x="59.1719%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (9 samples, 0.02%)</title><rect x="58.9278%" y="709" width="0.0178%" height="15" fill="rgb(254,21,18)" fg:x="29854" fg:w="9"/><text x="59.1778%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertBundle&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (15 samples, 0.03%)</title><rect x="58.9179%" y="757" width="0.0296%" height="15" fill="rgb(221,108,0)" fg:x="29849" fg:w="15"/><text x="59.1679%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (15 samples, 0.03%)</title><rect x="58.9179%" y="741" width="0.0296%" height="15" fill="rgb(206,95,1)" fg:x="29849" fg:w="15"/><text x="59.1679%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (21 samples, 0.04%)</title><rect x="59.0403%" y="677" width="0.0415%" height="15" fill="rgb(237,52,5)" fg:x="29911" fg:w="21"/><text x="59.2903%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (20 samples, 0.04%)</title><rect x="59.0423%" y="661" width="0.0395%" height="15" fill="rgb(218,150,34)" fg:x="29912" fg:w="20"/><text x="59.2923%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.03%)</title><rect x="59.0482%" y="645" width="0.0336%" height="15" fill="rgb(235,194,28)" fg:x="29915" fg:w="17"/><text x="59.2982%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="59.0482%" y="629" width="0.0336%" height="15" fill="rgb(245,92,18)" fg:x="29915" fg:w="17"/><text x="59.2982%" y="639.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (33 samples, 0.07%)</title><rect x="59.0225%" y="709" width="0.0651%" height="15" fill="rgb(253,203,53)" fg:x="29902" fg:w="33"/><text x="59.2725%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (30 samples, 0.06%)</title><rect x="59.0285%" y="693" width="0.0592%" height="15" fill="rgb(249,185,47)" fg:x="29905" fg:w="30"/><text x="59.2785%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (6 samples, 0.01%)</title><rect x="59.1469%" y="693" width="0.0118%" height="15" fill="rgb(252,194,52)" fg:x="29965" fg:w="6"/><text x="59.3969%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (74 samples, 0.15%)</title><rect x="59.1607%" y="693" width="0.1461%" height="15" fill="rgb(210,53,36)" fg:x="29972" fg:w="74"/><text x="59.4107%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (73 samples, 0.14%)</title><rect x="59.1627%" y="677" width="0.1441%" height="15" fill="rgb(237,37,25)" fg:x="29973" fg:w="73"/><text x="59.4127%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.14%)</title><rect x="59.1706%" y="661" width="0.1362%" height="15" fill="rgb(242,116,27)" fg:x="29977" fg:w="69"/><text x="59.4206%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (69 samples, 0.14%)</title><rect x="59.1706%" y="645" width="0.1362%" height="15" fill="rgb(213,185,26)" fg:x="29977" fg:w="69"/><text x="59.4206%" y="655.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="59.3186%" y="661" width="0.0138%" height="15" fill="rgb(225,204,8)" fg:x="30052" fg:w="7"/><text x="59.5686%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (17 samples, 0.03%)</title><rect x="59.3068%" y="677" width="0.0336%" height="15" fill="rgb(254,111,37)" fg:x="30046" fg:w="17"/><text x="59.5568%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (13 samples, 0.03%)</title><rect x="59.3463%" y="661" width="0.0257%" height="15" fill="rgb(242,35,9)" fg:x="30066" fg:w="13"/><text x="59.5963%" y="671.50"></text></g><g><title>core::intrinsics::copy (41 samples, 0.08%)</title><rect x="59.3719%" y="661" width="0.0809%" height="15" fill="rgb(232,138,49)" fg:x="30079" fg:w="41"/><text x="59.6219%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.08%)</title><rect x="59.3719%" y="645" width="0.0809%" height="15" fill="rgb(247,56,4)" fg:x="30079" fg:w="41"/><text x="59.6219%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (118 samples, 0.23%)</title><rect x="59.3068%" y="693" width="0.2329%" height="15" fill="rgb(226,179,17)" fg:x="30046" fg:w="118"/><text x="59.5568%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (101 samples, 0.20%)</title><rect x="59.3403%" y="677" width="0.1994%" height="15" fill="rgb(216,163,45)" fg:x="30063" fg:w="101"/><text x="59.5903%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.09%)</title><rect x="59.4528%" y="661" width="0.0869%" height="15" fill="rgb(211,157,3)" fg:x="30120" fg:w="44"/><text x="59.7028%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.08%)</title><rect x="59.4548%" y="645" width="0.0849%" height="15" fill="rgb(234,44,20)" fg:x="30121" fg:w="43"/><text x="59.7048%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (25 samples, 0.05%)</title><rect x="59.5397%" y="693" width="0.0493%" height="15" fill="rgb(254,138,23)" fg:x="30164" fg:w="25"/><text x="59.7897%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.04%)</title><rect x="59.5476%" y="677" width="0.0415%" height="15" fill="rgb(206,119,39)" fg:x="30168" fg:w="21"/><text x="59.7976%" y="687.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="59.5733%" y="661" width="0.0158%" height="15" fill="rgb(231,105,52)" fg:x="30181" fg:w="8"/><text x="59.8233%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (6 samples, 0.01%)</title><rect x="59.5890%" y="693" width="0.0118%" height="15" fill="rgb(250,20,5)" fg:x="30189" fg:w="6"/><text x="59.8390%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (6 samples, 0.01%)</title><rect x="59.5890%" y="677" width="0.0118%" height="15" fill="rgb(215,198,30)" fg:x="30189" fg:w="6"/><text x="59.8390%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (317 samples, 0.63%)</title><rect x="58.9771%" y="725" width="0.6257%" height="15" fill="rgb(246,142,8)" fg:x="29879" fg:w="317"/><text x="59.2271%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (243 samples, 0.48%)</title><rect x="59.1232%" y="709" width="0.4796%" height="15" fill="rgb(243,26,38)" fg:x="29953" fg:w="243"/><text x="59.3732%" y="719.50"></text></g><g><title>bevy_ecs::entity::Entities::alloc_at_without_replacement (10 samples, 0.02%)</title><rect x="59.6029%" y="725" width="0.0197%" height="15" fill="rgb(205,133,28)" fg:x="30196" fg:w="10"/><text x="59.8529%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (345 samples, 0.68%)</title><rect x="58.9475%" y="757" width="0.6810%" height="15" fill="rgb(212,34,0)" fg:x="29864" fg:w="345"/><text x="59.1975%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (345 samples, 0.68%)</title><rect x="58.9475%" y="741" width="0.6810%" height="15" fill="rgb(251,226,22)" fg:x="29864" fg:w="345"/><text x="59.1975%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (569 samples, 1.12%)</title><rect x="58.5133%" y="805" width="1.1231%" height="15" fill="rgb(252,119,9)" fg:x="29644" fg:w="569"/><text x="58.7633%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (569 samples, 1.12%)</title><rect x="58.5133%" y="789" width="1.1231%" height="15" fill="rgb(213,150,50)" fg:x="29644" fg:w="569"/><text x="58.7633%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (569 samples, 1.12%)</title><rect x="58.5133%" y="773" width="1.1231%" height="15" fill="rgb(212,24,39)" fg:x="29644" fg:w="569"/><text x="58.7633%" y="783.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::update_archetypes (14 samples, 0.03%)</title><rect x="59.6502%" y="725" width="0.0276%" height="15" fill="rgb(213,46,39)" fg:x="30220" fg:w="14"/><text x="59.9002%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new_archetype (11 samples, 0.02%)</title><rect x="59.6562%" y="709" width="0.0217%" height="15" fill="rgb(239,106,12)" fg:x="30223" fg:w="11"/><text x="59.9062%" y="719.50"></text></g><g><title>bevy_ecs::world::World::query_filtered (18 samples, 0.04%)</title><rect x="59.6443%" y="757" width="0.0355%" height="15" fill="rgb(249,229,21)" fg:x="30217" fg:w="18"/><text x="59.8943%" y="767.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new (18 samples, 0.04%)</title><rect x="59.6443%" y="741" width="0.0355%" height="15" fill="rgb(212,158,3)" fg:x="30217" fg:w="18"/><text x="59.8943%" y="751.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (8 samples, 0.02%)</title><rect x="59.6897%" y="709" width="0.0158%" height="15" fill="rgb(253,26,48)" fg:x="30240" fg:w="8"/><text x="59.9397%" y="719.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (12 samples, 0.02%)</title><rect x="59.6838%" y="757" width="0.0237%" height="15" fill="rgb(238,178,20)" fg:x="30237" fg:w="12"/><text x="59.9338%" y="767.50"></text></g><g><title>bevy_render::renderer::render_system::{{closure}} (11 samples, 0.02%)</title><rect x="59.6858%" y="741" width="0.0217%" height="15" fill="rgb(208,86,15)" fg:x="30238" fg:w="11"/><text x="59.9358%" y="751.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (11 samples, 0.02%)</title><rect x="59.6858%" y="725" width="0.0217%" height="15" fill="rgb(239,42,53)" fg:x="30238" fg:w="11"/><text x="59.9358%" y="735.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (6 samples, 0.01%)</title><rect x="59.7114%" y="725" width="0.0118%" height="15" fill="rgb(245,226,8)" fg:x="30251" fg:w="6"/><text x="59.9614%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.01%)</title><rect x="59.7114%" y="709" width="0.0118%" height="15" fill="rgb(216,176,32)" fg:x="30251" fg:w="6"/><text x="59.9614%" y="719.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.01%)</title><rect x="59.7114%" y="693" width="0.0118%" height="15" fill="rgb(231,186,21)" fg:x="30251" fg:w="6"/><text x="59.9614%" y="703.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (14 samples, 0.03%)</title><rect x="59.7075%" y="741" width="0.0276%" height="15" fill="rgb(205,95,49)" fg:x="30249" fg:w="14"/><text x="59.9575%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (15 samples, 0.03%)</title><rect x="59.7075%" y="757" width="0.0296%" height="15" fill="rgb(217,145,8)" fg:x="30249" fg:w="15"/><text x="59.9575%" y="767.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (16 samples, 0.03%)</title><rect x="59.7371%" y="757" width="0.0316%" height="15" fill="rgb(239,144,48)" fg:x="30264" fg:w="16"/><text x="59.9871%" y="767.50"></text></g><g><title>wgpu::Queue::submit (6 samples, 0.01%)</title><rect x="59.7568%" y="741" width="0.0118%" height="15" fill="rgb(214,189,23)" fg:x="30274" fg:w="6"/><text x="60.0068%" y="751.50"></text></g><g><title>&lt;tracing::span::EnteredSpan as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="59.7845%" y="741" width="0.0276%" height="15" fill="rgb(229,157,17)" fg:x="30288" fg:w="14"/><text x="60.0345%" y="751.50"></text></g><g><title>tracing::span::Span::do_exit (14 samples, 0.03%)</title><rect x="59.7845%" y="725" width="0.0276%" height="15" fill="rgb(230,5,48)" fg:x="30288" fg:w="14"/><text x="60.0345%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (13 samples, 0.03%)</title><rect x="59.7864%" y="709" width="0.0257%" height="15" fill="rgb(224,156,48)" fg:x="30289" fg:w="13"/><text x="60.0364%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (13 samples, 0.03%)</title><rect x="59.7864%" y="693" width="0.0257%" height="15" fill="rgb(223,14,29)" fg:x="30289" fg:w="13"/><text x="60.0364%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (9 samples, 0.02%)</title><rect x="59.7943%" y="677" width="0.0178%" height="15" fill="rgb(229,96,36)" fg:x="30293" fg:w="9"/><text x="60.0443%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="59.8121%" y="645" width="0.0118%" height="15" fill="rgb(231,102,53)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (6 samples, 0.01%)</title><rect x="59.8121%" y="629" width="0.0118%" height="15" fill="rgb(210,77,38)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="639.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (6 samples, 0.01%)</title><rect x="59.8121%" y="613" width="0.0118%" height="15" fill="rgb(235,131,6)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="623.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (6 samples, 0.01%)</title><rect x="59.8121%" y="597" width="0.0118%" height="15" fill="rgb(252,55,38)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="607.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="59.8121%" y="581" width="0.0118%" height="15" fill="rgb(246,38,14)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="591.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (6 samples, 0.01%)</title><rect x="59.8121%" y="565" width="0.0118%" height="15" fill="rgb(242,27,5)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="575.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (6 samples, 0.01%)</title><rect x="59.8121%" y="549" width="0.0118%" height="15" fill="rgb(228,65,35)" fg:x="30302" fg:w="6"/><text x="60.0621%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (21 samples, 0.04%)</title><rect x="59.7845%" y="757" width="0.0415%" height="15" fill="rgb(245,93,11)" fg:x="30288" fg:w="21"/><text x="60.0345%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (7 samples, 0.01%)</title><rect x="59.8121%" y="741" width="0.0138%" height="15" fill="rgb(213,1,31)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="751.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="59.8121%" y="725" width="0.0138%" height="15" fill="rgb(237,205,14)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (7 samples, 0.01%)</title><rect x="59.8121%" y="709" width="0.0138%" height="15" fill="rgb(232,118,45)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (7 samples, 0.01%)</title><rect x="59.8121%" y="693" width="0.0138%" height="15" fill="rgb(218,5,6)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (7 samples, 0.01%)</title><rect x="59.8121%" y="677" width="0.0138%" height="15" fill="rgb(251,87,51)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="687.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (7 samples, 0.01%)</title><rect x="59.8121%" y="661" width="0.0138%" height="15" fill="rgb(207,225,20)" fg:x="30302" fg:w="7"/><text x="60.0621%" y="671.50"></text></g><g><title>tracing::span::Span::entered (6 samples, 0.01%)</title><rect x="59.8299%" y="757" width="0.0118%" height="15" fill="rgb(222,78,54)" fg:x="30311" fg:w="6"/><text x="60.0799%" y="767.50"></text></g><g><title>tracing::span::Span::do_enter (6 samples, 0.01%)</title><rect x="59.8299%" y="741" width="0.0118%" height="15" fill="rgb(232,85,16)" fg:x="30311" fg:w="6"/><text x="60.0799%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (6 samples, 0.01%)</title><rect x="59.8299%" y="725" width="0.0118%" height="15" fill="rgb(244,25,33)" fg:x="30311" fg:w="6"/><text x="60.0799%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (6 samples, 0.01%)</title><rect x="59.8299%" y="709" width="0.0118%" height="15" fill="rgb(233,24,36)" fg:x="30311" fg:w="6"/><text x="60.0799%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (10 samples, 0.02%)</title><rect x="59.8535%" y="597" width="0.0197%" height="15" fill="rgb(253,49,54)" fg:x="30323" fg:w="10"/><text x="60.1035%" y="607.50"></text></g><g><title>tracing::span::Span::new (22 samples, 0.04%)</title><rect x="59.8417%" y="757" width="0.0434%" height="15" fill="rgb(245,12,22)" fg:x="30317" fg:w="22"/><text x="60.0917%" y="767.50"></text></g><g><title>tracing_core::dispatcher::get_default (22 samples, 0.04%)</title><rect x="59.8417%" y="741" width="0.0434%" height="15" fill="rgb(253,141,28)" fg:x="30317" fg:w="22"/><text x="60.0917%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.04%)</title><rect x="59.8417%" y="725" width="0.0434%" height="15" fill="rgb(225,207,27)" fg:x="30317" fg:w="22"/><text x="60.0917%" y="735.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (19 samples, 0.04%)</title><rect x="59.8476%" y="709" width="0.0375%" height="15" fill="rgb(220,84,2)" fg:x="30320" fg:w="19"/><text x="60.0976%" y="719.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (19 samples, 0.04%)</title><rect x="59.8476%" y="693" width="0.0375%" height="15" fill="rgb(224,37,37)" fg:x="30320" fg:w="19"/><text x="60.0976%" y="703.50"></text></g><g><title>tracing::span::Span::new_with (18 samples, 0.04%)</title><rect x="59.8496%" y="677" width="0.0355%" height="15" fill="rgb(220,143,18)" fg:x="30321" fg:w="18"/><text x="60.0996%" y="687.50"></text></g><g><title>tracing::span::Span::make_with (18 samples, 0.04%)</title><rect x="59.8496%" y="661" width="0.0355%" height="15" fill="rgb(210,88,33)" fg:x="30321" fg:w="18"/><text x="60.0996%" y="671.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (17 samples, 0.03%)</title><rect x="59.8516%" y="645" width="0.0336%" height="15" fill="rgb(219,87,51)" fg:x="30322" fg:w="17"/><text x="60.1016%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (17 samples, 0.03%)</title><rect x="59.8516%" y="629" width="0.0336%" height="15" fill="rgb(211,7,35)" fg:x="30322" fg:w="17"/><text x="60.1016%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (16 samples, 0.03%)</title><rect x="59.8535%" y="613" width="0.0316%" height="15" fill="rgb(232,77,2)" fg:x="30323" fg:w="16"/><text x="60.1035%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (6 samples, 0.01%)</title><rect x="59.8733%" y="597" width="0.0118%" height="15" fill="rgb(249,94,25)" fg:x="30333" fg:w="6"/><text x="60.1233%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (6 samples, 0.01%)</title><rect x="59.8733%" y="581" width="0.0118%" height="15" fill="rgb(215,112,2)" fg:x="30333" fg:w="6"/><text x="60.1233%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2,967 samples, 5.86%)</title><rect x="54.0346%" y="853" width="5.8565%" height="15" fill="rgb(226,115,48)" fg:x="27375" fg:w="2967"/><text x="54.2846%" y="863.50">&lt;alloc:..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (2,967 samples, 5.86%)</title><rect x="54.0346%" y="837" width="5.8565%" height="15" fill="rgb(249,196,10)" fg:x="27375" fg:w="2967"/><text x="54.2846%" y="847.50">&lt;bevy_r..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,967 samples, 5.86%)</title><rect x="54.0346%" y="821" width="5.8565%" height="15" fill="rgb(237,109,14)" fg:x="27375" fg:w="2967"/><text x="54.2846%" y="831.50">&lt;bevy_e..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (128 samples, 0.25%)</title><rect x="59.6384%" y="805" width="0.2527%" height="15" fill="rgb(217,103,53)" fg:x="30214" fg:w="128"/><text x="59.8884%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (128 samples, 0.25%)</title><rect x="59.6384%" y="789" width="0.2527%" height="15" fill="rgb(244,137,9)" fg:x="30214" fg:w="128"/><text x="59.8884%" y="799.50"></text></g><g><title>bevy_render::renderer::render_system (128 samples, 0.25%)</title><rect x="59.6384%" y="773" width="0.2527%" height="15" fill="rgb(227,201,3)" fg:x="30214" fg:w="128"/><text x="59.8884%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="59.9305%" y="693" width="0.0316%" height="15" fill="rgb(243,94,6)" fg:x="30362" fg:w="16"/><text x="60.1805%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.03%)</title><rect x="59.9305%" y="677" width="0.0316%" height="15" fill="rgb(235,118,5)" fg:x="30362" fg:w="16"/><text x="60.1805%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.03%)</title><rect x="59.9305%" y="661" width="0.0316%" height="15" fill="rgb(247,10,30)" fg:x="30362" fg:w="16"/><text x="60.1805%" y="671.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.08%)</title><rect x="59.9266%" y="709" width="0.0790%" height="15" fill="rgb(205,26,28)" fg:x="30360" fg:w="40"/><text x="60.1766%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (22 samples, 0.04%)</title><rect x="59.9621%" y="693" width="0.0434%" height="15" fill="rgb(206,99,35)" fg:x="30378" fg:w="22"/><text x="60.2121%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (22 samples, 0.04%)</title><rect x="59.9621%" y="677" width="0.0434%" height="15" fill="rgb(238,130,40)" fg:x="30378" fg:w="22"/><text x="60.2121%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="60.0055%" y="693" width="0.0217%" height="15" fill="rgb(224,126,31)" fg:x="30400" fg:w="11"/><text x="60.2555%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.02%)</title><rect x="60.0055%" y="677" width="0.0217%" height="15" fill="rgb(254,105,17)" fg:x="30400" fg:w="11"/><text x="60.2555%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.02%)</title><rect x="60.0055%" y="661" width="0.0217%" height="15" fill="rgb(216,87,36)" fg:x="30400" fg:w="11"/><text x="60.2555%" y="671.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="60.0055%" y="709" width="0.0434%" height="15" fill="rgb(240,21,12)" fg:x="30400" fg:w="22"/><text x="60.2555%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.02%)</title><rect x="60.0272%" y="693" width="0.0217%" height="15" fill="rgb(245,192,34)" fg:x="30411" fg:w="11"/><text x="60.2772%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.02%)</title><rect x="60.0272%" y="677" width="0.0217%" height="15" fill="rgb(226,100,49)" fg:x="30411" fg:w="11"/><text x="60.2772%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.07%)</title><rect x="60.0726%" y="629" width="0.0671%" height="15" fill="rgb(245,188,27)" fg:x="30434" fg:w="34"/><text x="60.3226%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.07%)</title><rect x="60.0726%" y="613" width="0.0671%" height="15" fill="rgb(212,170,8)" fg:x="30434" fg:w="34"/><text x="60.3226%" y="623.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.07%)</title><rect x="60.0726%" y="597" width="0.0671%" height="15" fill="rgb(217,113,29)" fg:x="30434" fg:w="34"/><text x="60.3226%" y="607.50"></text></g><g><title>__realloc (34 samples, 0.07%)</title><rect x="60.0726%" y="581" width="0.0671%" height="15" fill="rgb(237,30,3)" fg:x="30434" fg:w="34"/><text x="60.3226%" y="591.50"></text></g><g><title>_int_realloc (27 samples, 0.05%)</title><rect x="60.0865%" y="565" width="0.0533%" height="15" fill="rgb(227,19,28)" fg:x="30441" fg:w="27"/><text x="60.3365%" y="575.50"></text></g><g><title>_int_malloc (18 samples, 0.04%)</title><rect x="60.1042%" y="549" width="0.0355%" height="15" fill="rgb(239,172,45)" fg:x="30450" fg:w="18"/><text x="60.3542%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.07%)</title><rect x="60.0726%" y="645" width="0.0730%" height="15" fill="rgb(254,55,39)" fg:x="30434" fg:w="37"/><text x="60.3226%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.08%)</title><rect x="60.0647%" y="693" width="0.0849%" height="15" fill="rgb(249,208,12)" fg:x="30430" fg:w="43"/><text x="60.3147%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (43 samples, 0.08%)</title><rect x="60.0647%" y="677" width="0.0849%" height="15" fill="rgb(240,52,13)" fg:x="30430" fg:w="43"/><text x="60.3147%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.08%)</title><rect x="60.0647%" y="661" width="0.0849%" height="15" fill="rgb(252,149,13)" fg:x="30430" fg:w="43"/><text x="60.3147%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="60.1733%" y="677" width="0.0237%" height="15" fill="rgb(232,81,48)" fg:x="30485" fg:w="12"/><text x="60.4233%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="60.1733%" y="661" width="0.0237%" height="15" fill="rgb(222,144,2)" fg:x="30485" fg:w="12"/><text x="60.4233%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="60.1733%" y="645" width="0.0237%" height="15" fill="rgb(216,81,32)" fg:x="30485" fg:w="12"/><text x="60.4233%" y="655.50"></text></g><g><title>async_executor::Executor::schedule (18 samples, 0.04%)</title><rect x="60.1970%" y="677" width="0.0355%" height="15" fill="rgb(244,78,51)" fg:x="30497" fg:w="18"/><text x="60.4470%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="60.1970%" y="661" width="0.0355%" height="15" fill="rgb(217,66,21)" fg:x="30497" fg:w="18"/><text x="60.4470%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.04%)</title><rect x="60.1970%" y="645" width="0.0355%" height="15" fill="rgb(247,101,42)" fg:x="30497" fg:w="18"/><text x="60.4470%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.04%)</title><rect x="60.1970%" y="629" width="0.0355%" height="15" fill="rgb(227,81,39)" fg:x="30497" fg:w="18"/><text x="60.4470%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.06%)</title><rect x="60.2365%" y="661" width="0.0612%" height="15" fill="rgb(220,223,44)" fg:x="30517" fg:w="31"/><text x="60.4865%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.06%)</title><rect x="60.2365%" y="645" width="0.0612%" height="15" fill="rgb(205,218,2)" fg:x="30517" fg:w="31"/><text x="60.4865%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (32 samples, 0.06%)</title><rect x="60.2365%" y="677" width="0.0632%" height="15" fill="rgb(212,207,28)" fg:x="30517" fg:w="32"/><text x="60.4865%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (7 samples, 0.01%)</title><rect x="60.2996%" y="677" width="0.0138%" height="15" fill="rgb(224,12,41)" fg:x="30549" fg:w="7"/><text x="60.5496%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="60.3016%" y="661" width="0.0118%" height="15" fill="rgb(216,118,12)" fg:x="30550" fg:w="6"/><text x="60.5516%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="60.3016%" y="645" width="0.0118%" height="15" fill="rgb(252,97,46)" fg:x="30550" fg:w="6"/><text x="60.5516%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.03%)</title><rect x="60.3194%" y="629" width="0.0296%" height="15" fill="rgb(244,206,19)" fg:x="30559" fg:w="15"/><text x="60.5694%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.03%)</title><rect x="60.3194%" y="613" width="0.0296%" height="15" fill="rgb(231,84,31)" fg:x="30559" fg:w="15"/><text x="60.5694%" y="623.50"></text></g><g><title>async_executor::State::notify (25 samples, 0.05%)</title><rect x="60.3154%" y="645" width="0.0493%" height="15" fill="rgb(244,133,0)" fg:x="30557" fg:w="25"/><text x="60.5654%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake (8 samples, 0.02%)</title><rect x="60.3490%" y="629" width="0.0158%" height="15" fill="rgb(223,15,50)" fg:x="30574" fg:w="8"/><text x="60.5990%" y="639.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (8 samples, 0.02%)</title><rect x="60.3490%" y="613" width="0.0158%" height="15" fill="rgb(250,118,49)" fg:x="30574" fg:w="8"/><text x="60.5990%" y="623.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (8 samples, 0.02%)</title><rect x="60.3490%" y="597" width="0.0158%" height="15" fill="rgb(248,25,38)" fg:x="30574" fg:w="8"/><text x="60.5990%" y="607.50"></text></g><g><title>parking::Unparker::unpark (8 samples, 0.02%)</title><rect x="60.3490%" y="581" width="0.0158%" height="15" fill="rgb(215,70,14)" fg:x="30574" fg:w="8"/><text x="60.5990%" y="591.50"></text></g><g><title>parking::Inner::unpark (7 samples, 0.01%)</title><rect x="60.3510%" y="565" width="0.0138%" height="15" fill="rgb(215,28,15)" fg:x="30575" fg:w="7"/><text x="60.6010%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.02%)</title><rect x="60.3707%" y="613" width="0.0237%" height="15" fill="rgb(243,6,28)" fg:x="30585" fg:w="12"/><text x="60.6207%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.02%)</title><rect x="60.3707%" y="597" width="0.0237%" height="15" fill="rgb(222,130,1)" fg:x="30585" fg:w="12"/><text x="60.6207%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.03%)</title><rect x="60.3964%" y="613" width="0.0296%" height="15" fill="rgb(236,166,44)" fg:x="30598" fg:w="15"/><text x="60.6464%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.03%)</title><rect x="60.3964%" y="597" width="0.0296%" height="15" fill="rgb(221,108,14)" fg:x="30598" fg:w="15"/><text x="60.6464%" y="607.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (57 samples, 0.11%)</title><rect x="60.3154%" y="661" width="0.1125%" height="15" fill="rgb(252,3,45)" fg:x="30557" fg:w="57"/><text x="60.5654%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (32 samples, 0.06%)</title><rect x="60.3648%" y="645" width="0.0632%" height="15" fill="rgb(237,68,30)" fg:x="30582" fg:w="32"/><text x="60.6148%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (31 samples, 0.06%)</title><rect x="60.3667%" y="629" width="0.0612%" height="15" fill="rgb(211,79,22)" fg:x="30583" fg:w="31"/><text x="60.6167%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (82 samples, 0.16%)</title><rect x="60.3134%" y="677" width="0.1619%" height="15" fill="rgb(252,185,21)" fg:x="30556" fg:w="82"/><text x="60.5634%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (24 samples, 0.05%)</title><rect x="60.4279%" y="661" width="0.0474%" height="15" fill="rgb(225,189,26)" fg:x="30614" fg:w="24"/><text x="60.6779%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.05%)</title><rect x="60.4279%" y="645" width="0.0474%" height="15" fill="rgb(241,30,40)" fg:x="30614" fg:w="24"/><text x="60.6779%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.05%)</title><rect x="60.4279%" y="629" width="0.0474%" height="15" fill="rgb(235,215,44)" fg:x="30614" fg:w="24"/><text x="60.6779%" y="639.50"></text></g><g><title>__GI___libc_malloc (64 samples, 0.13%)</title><rect x="60.4891%" y="629" width="0.1263%" height="15" fill="rgb(205,8,29)" fg:x="30645" fg:w="64"/><text x="60.7391%" y="639.50"></text></g><g><title>_int_malloc (43 samples, 0.08%)</title><rect x="60.5306%" y="613" width="0.0849%" height="15" fill="rgb(241,137,42)" fg:x="30666" fg:w="43"/><text x="60.7806%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (8 samples, 0.02%)</title><rect x="60.5997%" y="597" width="0.0158%" height="15" fill="rgb(237,155,2)" fg:x="30701" fg:w="8"/><text x="60.8497%" y="607.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.13%)</title><rect x="60.4891%" y="645" width="0.1322%" height="15" fill="rgb(245,29,42)" fg:x="30645" fg:w="67"/><text x="60.7391%" y="655.50"></text></g><g><title>async_task::runnable::spawn_unchecked (79 samples, 0.16%)</title><rect x="60.4793%" y="677" width="0.1559%" height="15" fill="rgb(234,101,35)" fg:x="30640" fg:w="79"/><text x="60.7293%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (74 samples, 0.15%)</title><rect x="60.4891%" y="661" width="0.1461%" height="15" fill="rgb(228,64,37)" fg:x="30645" fg:w="74"/><text x="60.7391%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.01%)</title><rect x="60.6233%" y="645" width="0.0118%" height="15" fill="rgb(217,214,36)" fg:x="30713" fg:w="6"/><text x="60.8733%" y="655.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="60.6233%" y="629" width="0.0118%" height="15" fill="rgb(243,70,3)" fg:x="30713" fg:w="6"/><text x="60.8733%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="60.6233%" y="613" width="0.0118%" height="15" fill="rgb(253,158,52)" fg:x="30713" fg:w="6"/><text x="60.8733%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="60.6352%" y="677" width="0.0257%" height="15" fill="rgb(234,111,54)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="60.6352%" y="661" width="0.0257%" height="15" fill="rgb(217,70,32)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.03%)</title><rect x="60.6352%" y="645" width="0.0257%" height="15" fill="rgb(234,18,33)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (13 samples, 0.03%)</title><rect x="60.6352%" y="629" width="0.0257%" height="15" fill="rgb(234,12,49)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (13 samples, 0.03%)</title><rect x="60.6352%" y="613" width="0.0257%" height="15" fill="rgb(236,10,21)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.03%)</title><rect x="60.6352%" y="597" width="0.0257%" height="15" fill="rgb(248,182,45)" fg:x="30719" fg:w="13"/><text x="60.8852%" y="607.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (15 samples, 0.03%)</title><rect x="60.6609%" y="677" width="0.0296%" height="15" fill="rgb(217,95,36)" fg:x="30732" fg:w="15"/><text x="60.9109%" y="687.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (13 samples, 0.03%)</title><rect x="60.6648%" y="661" width="0.0257%" height="15" fill="rgb(212,110,31)" fg:x="30734" fg:w="13"/><text x="60.9148%" y="671.50"></text></g><g><title>async_executor::Executor::spawn (287 samples, 0.57%)</title><rect x="60.1496%" y="693" width="0.5665%" height="15" fill="rgb(206,32,53)" fg:x="30473" fg:w="287"/><text x="60.3996%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="60.6905%" y="677" width="0.0257%" height="15" fill="rgb(246,141,37)" fg:x="30747" fg:w="13"/><text x="60.9405%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.02%)</title><rect x="60.6924%" y="661" width="0.0237%" height="15" fill="rgb(219,16,7)" fg:x="30748" fg:w="12"/><text x="60.9424%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (12 samples, 0.02%)</title><rect x="60.6924%" y="645" width="0.0237%" height="15" fill="rgb(230,205,45)" fg:x="30748" fg:w="12"/><text x="60.9424%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (12 samples, 0.02%)</title><rect x="60.6924%" y="629" width="0.0237%" height="15" fill="rgb(231,43,49)" fg:x="30748" fg:w="12"/><text x="60.9424%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.02%)</title><rect x="60.6924%" y="613" width="0.0237%" height="15" fill="rgb(212,106,34)" fg:x="30748" fg:w="12"/><text x="60.9424%" y="623.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (334 samples, 0.66%)</title><rect x="60.0588%" y="709" width="0.6593%" height="15" fill="rgb(206,83,17)" fg:x="30427" fg:w="334"/><text x="60.3088%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (412 samples, 0.81%)</title><rect x="59.9226%" y="725" width="0.8132%" height="15" fill="rgb(244,154,49)" fg:x="30358" fg:w="412"/><text x="60.1726%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (419 samples, 0.83%)</title><rect x="59.9226%" y="741" width="0.8270%" height="15" fill="rgb(244,149,49)" fg:x="30358" fg:w="419"/><text x="60.1726%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (7 samples, 0.01%)</title><rect x="60.7359%" y="725" width="0.0138%" height="15" fill="rgb(227,134,18)" fg:x="30770" fg:w="7"/><text x="60.9859%" y="735.50"></text></g><g><title>async_executor::Executor::spawn (6 samples, 0.01%)</title><rect x="60.7378%" y="709" width="0.0118%" height="15" fill="rgb(237,116,36)" fg:x="30771" fg:w="6"/><text x="60.9878%" y="719.50"></text></g><g><title>async_executor::Executor::state (11 samples, 0.02%)</title><rect x="60.7832%" y="725" width="0.0217%" height="15" fill="rgb(205,129,40)" fg:x="30794" fg:w="11"/><text x="61.0332%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (11 samples, 0.02%)</title><rect x="60.7832%" y="709" width="0.0217%" height="15" fill="rgb(236,178,4)" fg:x="30794" fg:w="11"/><text x="61.0332%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (11 samples, 0.02%)</title><rect x="60.7832%" y="693" width="0.0217%" height="15" fill="rgb(251,76,53)" fg:x="30794" fg:w="11"/><text x="61.0332%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="60.7832%" y="677" width="0.0217%" height="15" fill="rgb(242,92,40)" fg:x="30794" fg:w="11"/><text x="61.0332%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (11 samples, 0.02%)</title><rect x="60.7832%" y="661" width="0.0217%" height="15" fill="rgb(209,45,30)" fg:x="30794" fg:w="11"/><text x="61.0332%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="60.7911%" y="645" width="0.0138%" height="15" fill="rgb(218,157,36)" fg:x="30798" fg:w="7"/><text x="61.0411%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="60.7911%" y="629" width="0.0138%" height="15" fill="rgb(222,186,16)" fg:x="30798" fg:w="7"/><text x="61.0411%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (51 samples, 0.10%)</title><rect x="60.8049%" y="709" width="0.1007%" height="15" fill="rgb(254,72,35)" fg:x="30805" fg:w="51"/><text x="61.0549%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.10%)</title><rect x="60.8049%" y="693" width="0.1007%" height="15" fill="rgb(224,25,35)" fg:x="30805" fg:w="51"/><text x="61.0549%" y="703.50"></text></g><g><title>async_executor::State::notify (52 samples, 0.10%)</title><rect x="60.8049%" y="725" width="0.1026%" height="15" fill="rgb(206,135,52)" fg:x="30805" fg:w="52"/><text x="61.0549%" y="735.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="60.9589%" y="629" width="0.0178%" height="15" fill="rgb(229,174,47)" fg:x="30883" fg:w="9"/><text x="61.2089%" y="639.50"></text></g><g><title>concurrent_queue::full_fence (10 samples, 0.02%)</title><rect x="61.0004%" y="581" width="0.0197%" height="15" fill="rgb(242,184,21)" fg:x="30904" fg:w="10"/><text x="61.2504%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (10 samples, 0.02%)</title><rect x="61.0004%" y="565" width="0.0197%" height="15" fill="rgb(213,22,45)" fg:x="30904" fg:w="10"/><text x="61.2504%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="61.0004%" y="549" width="0.0197%" height="15" fill="rgb(237,81,54)" fg:x="30904" fg:w="10"/><text x="61.2504%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="61.0004%" y="533" width="0.0197%" height="15" fill="rgb(248,177,18)" fg:x="30904" fg:w="10"/><text x="61.2504%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 0.01%)</title><rect x="61.0319%" y="581" width="0.0138%" height="15" fill="rgb(254,31,16)" fg:x="30920" fg:w="7"/><text x="61.2819%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.01%)</title><rect x="61.0319%" y="565" width="0.0138%" height="15" fill="rgb(235,20,31)" fg:x="30920" fg:w="7"/><text x="61.2819%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.02%)</title><rect x="61.0458%" y="581" width="0.0197%" height="15" fill="rgb(240,56,43)" fg:x="30927" fg:w="10"/><text x="61.2958%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.02%)</title><rect x="61.0458%" y="565" width="0.0197%" height="15" fill="rgb(237,197,51)" fg:x="30927" fg:w="10"/><text x="61.2958%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (51 samples, 0.10%)</title><rect x="60.9786%" y="613" width="0.1007%" height="15" fill="rgb(241,162,44)" fg:x="30893" fg:w="51"/><text x="61.2286%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (45 samples, 0.09%)</title><rect x="60.9905%" y="597" width="0.0888%" height="15" fill="rgb(224,23,20)" fg:x="30899" fg:w="45"/><text x="61.2405%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="61.0655%" y="581" width="0.0138%" height="15" fill="rgb(250,109,34)" fg:x="30937" fg:w="7"/><text x="61.3155%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="61.0655%" y="565" width="0.0138%" height="15" fill="rgb(214,175,50)" fg:x="30937" fg:w="7"/><text x="61.3155%" y="575.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (60 samples, 0.12%)</title><rect x="60.9767%" y="629" width="0.1184%" height="15" fill="rgb(213,182,5)" fg:x="30892" fg:w="60"/><text x="61.2267%" y="639.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.02%)</title><rect x="61.0793%" y="613" width="0.0158%" height="15" fill="rgb(209,199,19)" fg:x="30944" fg:w="8"/><text x="61.3293%" y="623.50"></text></g><g><title>event_listener::full_fence (7 samples, 0.01%)</title><rect x="61.0813%" y="597" width="0.0138%" height="15" fill="rgb(236,224,42)" fg:x="30945" fg:w="7"/><text x="61.3313%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.01%)</title><rect x="61.0813%" y="581" width="0.0138%" height="15" fill="rgb(246,226,29)" fg:x="30945" fg:w="7"/><text x="61.3313%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="61.0813%" y="565" width="0.0138%" height="15" fill="rgb(227,223,11)" fg:x="30945" fg:w="7"/><text x="61.3313%" y="575.50"></text></g><g><title>event_listener::Event::listen (13 samples, 0.03%)</title><rect x="61.0951%" y="629" width="0.0257%" height="15" fill="rgb(219,7,51)" fg:x="30952" fg:w="13"/><text x="61.3451%" y="639.50"></text></g><g><title>core::hint::spin_loop (20 samples, 0.04%)</title><rect x="61.1267%" y="517" width="0.0395%" height="15" fill="rgb(245,167,10)" fg:x="30968" fg:w="20"/><text x="61.3767%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (20 samples, 0.04%)</title><rect x="61.1267%" y="501" width="0.0395%" height="15" fill="rgb(237,224,16)" fg:x="30968" fg:w="20"/><text x="61.3767%" y="511.50"></text></g><g><title>event_listener::Inner::lock (25 samples, 0.05%)</title><rect x="61.1227%" y="613" width="0.0493%" height="15" fill="rgb(226,132,13)" fg:x="30966" fg:w="25"/><text x="61.3727%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.05%)</title><rect x="61.1227%" y="597" width="0.0493%" height="15" fill="rgb(214,140,3)" fg:x="30966" fg:w="25"/><text x="61.3727%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.05%)</title><rect x="61.1247%" y="581" width="0.0474%" height="15" fill="rgb(221,177,4)" fg:x="30967" fg:w="24"/><text x="61.3747%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (24 samples, 0.05%)</title><rect x="61.1247%" y="565" width="0.0474%" height="15" fill="rgb(238,139,3)" fg:x="30967" fg:w="24"/><text x="61.3747%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (23 samples, 0.05%)</title><rect x="61.1267%" y="549" width="0.0454%" height="15" fill="rgb(216,17,39)" fg:x="30968" fg:w="23"/><text x="61.3767%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (23 samples, 0.05%)</title><rect x="61.1267%" y="533" width="0.0454%" height="15" fill="rgb(238,120,9)" fg:x="30968" fg:w="23"/><text x="61.3767%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (114 samples, 0.23%)</title><rect x="60.9530%" y="645" width="0.2250%" height="15" fill="rgb(244,92,53)" fg:x="30880" fg:w="114"/><text x="61.2030%" y="655.50"></text></g><g><title>event_listener::Event::notify (29 samples, 0.06%)</title><rect x="61.1208%" y="629" width="0.0572%" height="15" fill="rgb(224,148,33)" fg:x="30965" fg:w="29"/><text x="61.3708%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (21 samples, 0.04%)</title><rect x="61.2195%" y="549" width="0.0415%" height="15" fill="rgb(243,6,36)" fg:x="31015" fg:w="21"/><text x="61.4695%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.04%)</title><rect x="61.2195%" y="533" width="0.0415%" height="15" fill="rgb(230,102,11)" fg:x="31015" fg:w="21"/><text x="61.4695%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.04%)</title><rect x="61.2195%" y="517" width="0.0415%" height="15" fill="rgb(234,148,36)" fg:x="31015" fg:w="21"/><text x="61.4695%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (39 samples, 0.08%)</title><rect x="61.2076%" y="581" width="0.0770%" height="15" fill="rgb(251,153,25)" fg:x="31009" fg:w="39"/><text x="61.4576%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (33 samples, 0.07%)</title><rect x="61.2195%" y="565" width="0.0651%" height="15" fill="rgb(215,129,8)" fg:x="31015" fg:w="33"/><text x="61.4695%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (12 samples, 0.02%)</title><rect x="61.2609%" y="549" width="0.0237%" height="15" fill="rgb(224,128,35)" fg:x="31036" fg:w="12"/><text x="61.5109%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_and (12 samples, 0.02%)</title><rect x="61.2609%" y="533" width="0.0237%" height="15" fill="rgb(237,56,52)" fg:x="31036" fg:w="12"/><text x="61.5109%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="61.2866%" y="533" width="0.0118%" height="15" fill="rgb(234,213,19)" fg:x="31049" fg:w="6"/><text x="61.5366%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (6 samples, 0.01%)</title><rect x="61.2866%" y="517" width="0.0118%" height="15" fill="rgb(252,82,23)" fg:x="31049" fg:w="6"/><text x="61.5366%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="61.2866%" y="501" width="0.0118%" height="15" fill="rgb(254,201,21)" fg:x="31049" fg:w="6"/><text x="61.5366%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.01%)</title><rect x="61.2866%" y="485" width="0.0118%" height="15" fill="rgb(250,186,11)" fg:x="31049" fg:w="6"/><text x="61.5366%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="61.2866%" y="469" width="0.0118%" height="15" fill="rgb(211,174,5)" fg:x="31049" fg:w="6"/><text x="61.5366%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="61.2866%" y="565" width="0.0138%" height="15" fill="rgb(214,121,10)" fg:x="31049" fg:w="7"/><text x="61.5366%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (7 samples, 0.01%)</title><rect x="61.2866%" y="549" width="0.0138%" height="15" fill="rgb(241,66,2)" fg:x="31049" fg:w="7"/><text x="61.5366%" y="559.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.03%)</title><rect x="61.3024%" y="565" width="0.0316%" height="15" fill="rgb(220,167,19)" fg:x="31057" fg:w="16"/><text x="61.5524%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.03%)</title><rect x="61.3043%" y="549" width="0.0296%" height="15" fill="rgb(231,54,50)" fg:x="31058" fg:w="15"/><text x="61.5543%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.03%)</title><rect x="61.3043%" y="533" width="0.0296%" height="15" fill="rgb(239,217,53)" fg:x="31058" fg:w="15"/><text x="61.5543%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (15 samples, 0.03%)</title><rect x="61.3043%" y="517" width="0.0296%" height="15" fill="rgb(248,8,0)" fg:x="31058" fg:w="15"/><text x="61.5543%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (15 samples, 0.03%)</title><rect x="61.3043%" y="501" width="0.0296%" height="15" fill="rgb(229,118,37)" fg:x="31058" fg:w="15"/><text x="61.5543%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.03%)</title><rect x="61.3043%" y="485" width="0.0296%" height="15" fill="rgb(253,223,43)" fg:x="31058" fg:w="15"/><text x="61.5543%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (8 samples, 0.02%)</title><rect x="61.3379%" y="501" width="0.0158%" height="15" fill="rgb(211,77,36)" fg:x="31075" fg:w="8"/><text x="61.5879%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="61.3379%" y="485" width="0.0158%" height="15" fill="rgb(219,3,53)" fg:x="31075" fg:w="8"/><text x="61.5879%" y="495.50"></text></g><g><title>async_executor::State::notify (9 samples, 0.02%)</title><rect x="61.3379%" y="517" width="0.0178%" height="15" fill="rgb(244,45,42)" fg:x="31075" fg:w="9"/><text x="61.5879%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (6 samples, 0.01%)</title><rect x="61.3557%" y="517" width="0.0118%" height="15" fill="rgb(225,95,27)" fg:x="31084" fg:w="6"/><text x="61.6057%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.03%)</title><rect x="61.3892%" y="453" width="0.0316%" height="15" fill="rgb(207,74,8)" fg:x="31101" fg:w="16"/><text x="61.6392%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.03%)</title><rect x="61.3892%" y="437" width="0.0316%" height="15" fill="rgb(243,63,36)" fg:x="31101" fg:w="16"/><text x="61.6392%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (17 samples, 0.03%)</title><rect x="61.4208%" y="453" width="0.0336%" height="15" fill="rgb(211,180,12)" fg:x="31117" fg:w="17"/><text x="61.6708%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_or (17 samples, 0.03%)</title><rect x="61.4208%" y="437" width="0.0336%" height="15" fill="rgb(254,166,49)" fg:x="31117" fg:w="17"/><text x="61.6708%" y="447.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (42 samples, 0.08%)</title><rect x="61.3734%" y="501" width="0.0829%" height="15" fill="rgb(205,19,0)" fg:x="31093" fg:w="42"/><text x="61.6234%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.08%)</title><rect x="61.3734%" y="485" width="0.0829%" height="15" fill="rgb(224,172,32)" fg:x="31093" fg:w="42"/><text x="61.6234%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (39 samples, 0.08%)</title><rect x="61.3793%" y="469" width="0.0770%" height="15" fill="rgb(254,136,30)" fg:x="31096" fg:w="39"/><text x="61.6293%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (26 samples, 0.05%)</title><rect x="61.4563%" y="501" width="0.0513%" height="15" fill="rgb(246,19,35)" fg:x="31135" fg:w="26"/><text x="61.7063%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.05%)</title><rect x="61.4563%" y="485" width="0.0513%" height="15" fill="rgb(219,24,36)" fg:x="31135" fg:w="26"/><text x="61.7063%" y="495.50"></text></g><g><title>event_listener::List::notify (90 samples, 0.18%)</title><rect x="61.3339%" y="565" width="0.1776%" height="15" fill="rgb(251,55,1)" fg:x="31073" fg:w="90"/><text x="61.5839%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (88 samples, 0.17%)</title><rect x="61.3379%" y="549" width="0.1737%" height="15" fill="rgb(218,117,39)" fg:x="31075" fg:w="88"/><text x="61.5879%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (88 samples, 0.17%)</title><rect x="61.3379%" y="533" width="0.1737%" height="15" fill="rgb(248,169,11)" fg:x="31075" fg:w="88"/><text x="61.5879%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (73 samples, 0.14%)</title><rect x="61.3675%" y="517" width="0.1441%" height="15" fill="rgb(244,40,44)" fg:x="31090" fg:w="73"/><text x="61.6175%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 0.35%)</title><rect x="61.2017%" y="613" width="0.3533%" height="15" fill="rgb(234,62,37)" fg:x="31006" fg:w="179"/><text x="61.4517%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (176 samples, 0.35%)</title><rect x="61.2076%" y="597" width="0.3474%" height="15" fill="rgb(207,117,42)" fg:x="31009" fg:w="176"/><text x="61.4576%" y="607.50"></text></g><g><title>event_listener::Event::notify (137 samples, 0.27%)</title><rect x="61.2846%" y="581" width="0.2704%" height="15" fill="rgb(213,43,2)" fg:x="31048" fg:w="137"/><text x="61.5346%" y="591.50"></text></g><g><title>event_listener::full_fence (22 samples, 0.04%)</title><rect x="61.5116%" y="565" width="0.0434%" height="15" fill="rgb(244,202,51)" fg:x="31163" fg:w="22"/><text x="61.7616%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.04%)</title><rect x="61.5116%" y="549" width="0.0434%" height="15" fill="rgb(253,174,46)" fg:x="31163" fg:w="22"/><text x="61.7616%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.04%)</title><rect x="61.5116%" y="533" width="0.0434%" height="15" fill="rgb(251,23,1)" fg:x="31163" fg:w="22"/><text x="61.7616%" y="543.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (9 samples, 0.02%)</title><rect x="61.5708%" y="613" width="0.0178%" height="15" fill="rgb(253,26,1)" fg:x="31193" fg:w="9"/><text x="61.8208%" y="623.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (9 samples, 0.02%)</title><rect x="61.5708%" y="597" width="0.0178%" height="15" fill="rgb(216,89,31)" fg:x="31193" fg:w="9"/><text x="61.8208%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (9 samples, 0.02%)</title><rect x="61.6083%" y="565" width="0.0178%" height="15" fill="rgb(209,109,5)" fg:x="31212" fg:w="9"/><text x="61.8583%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="61.6083%" y="549" width="0.0178%" height="15" fill="rgb(229,63,13)" fg:x="31212" fg:w="9"/><text x="61.8583%" y="559.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (17 samples, 0.03%)</title><rect x="61.5965%" y="597" width="0.0336%" height="15" fill="rgb(238,137,54)" fg:x="31206" fg:w="17"/><text x="61.8465%" y="607.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (16 samples, 0.03%)</title><rect x="61.5984%" y="581" width="0.0316%" height="15" fill="rgb(228,1,9)" fg:x="31207" fg:w="16"/><text x="61.8484%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.01%)</title><rect x="61.6320%" y="581" width="0.0118%" height="15" fill="rgb(249,120,48)" fg:x="31224" fg:w="6"/><text x="61.8820%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="61.6320%" y="565" width="0.0118%" height="15" fill="rgb(209,72,36)" fg:x="31224" fg:w="6"/><text x="61.8820%" y="575.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (29 samples, 0.06%)</title><rect x="61.5886%" y="613" width="0.0572%" height="15" fill="rgb(247,98,49)" fg:x="31202" fg:w="29"/><text x="61.8386%" y="623.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (8 samples, 0.02%)</title><rect x="61.6300%" y="597" width="0.0158%" height="15" fill="rgb(233,75,36)" fg:x="31223" fg:w="8"/><text x="61.8800%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (249 samples, 0.49%)</title><rect x="61.1780%" y="645" width="0.4915%" height="15" fill="rgb(225,14,24)" fg:x="30994" fg:w="249"/><text x="61.4280%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (245 samples, 0.48%)</title><rect x="61.1859%" y="629" width="0.4836%" height="15" fill="rgb(237,193,20)" fg:x="30998" fg:w="245"/><text x="61.4359%" y="639.50"></text></g><g><title>concurrent_queue::full_fence (13 samples, 0.03%)</title><rect x="61.6813%" y="597" width="0.0257%" height="15" fill="rgb(239,122,19)" fg:x="31249" fg:w="13"/><text x="61.9313%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (13 samples, 0.03%)</title><rect x="61.6813%" y="581" width="0.0257%" height="15" fill="rgb(231,220,10)" fg:x="31249" fg:w="13"/><text x="61.9313%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.03%)</title><rect x="61.6813%" y="565" width="0.0257%" height="15" fill="rgb(220,66,15)" fg:x="31249" fg:w="13"/><text x="61.9313%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="61.6813%" y="549" width="0.0257%" height="15" fill="rgb(215,171,52)" fg:x="31249" fg:w="13"/><text x="61.9313%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.02%)</title><rect x="61.7307%" y="597" width="0.0178%" height="15" fill="rgb(241,169,50)" fg:x="31274" fg:w="9"/><text x="61.9807%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.02%)</title><rect x="61.7307%" y="581" width="0.0178%" height="15" fill="rgb(236,189,0)" fg:x="31274" fg:w="9"/><text x="61.9807%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (44 samples, 0.09%)</title><rect x="61.6695%" y="629" width="0.0869%" height="15" fill="rgb(217,147,20)" fg:x="31243" fg:w="44"/><text x="61.9195%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (44 samples, 0.09%)</title><rect x="61.6695%" y="613" width="0.0869%" height="15" fill="rgb(206,188,39)" fg:x="31243" fg:w="44"/><text x="61.9195%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (51 samples, 0.10%)</title><rect x="61.6695%" y="645" width="0.1007%" height="15" fill="rgb(227,118,25)" fg:x="31243" fg:w="51"/><text x="61.9195%" y="655.50"></text></g><g><title>event_listener::Event::notify (7 samples, 0.01%)</title><rect x="61.7563%" y="629" width="0.0138%" height="15" fill="rgb(248,171,40)" fg:x="31287" fg:w="7"/><text x="62.0063%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="61.7741%" y="581" width="0.0118%" height="15" fill="rgb(251,90,54)" fg:x="31296" fg:w="6"/><text x="62.0241%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="61.7741%" y="565" width="0.0118%" height="15" fill="rgb(234,11,46)" fg:x="31296" fg:w="6"/><text x="62.0241%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.02%)</title><rect x="61.7741%" y="597" width="0.0158%" height="15" fill="rgb(229,134,13)" fg:x="31296" fg:w="8"/><text x="62.0241%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="61.7741%" y="629" width="0.0178%" height="15" fill="rgb(223,129,3)" fg:x="31296" fg:w="9"/><text x="62.0241%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="61.7741%" y="613" width="0.0178%" height="15" fill="rgb(221,124,13)" fg:x="31296" fg:w="9"/><text x="62.0241%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (15 samples, 0.03%)</title><rect x="61.7702%" y="645" width="0.0296%" height="15" fill="rgb(234,3,18)" fg:x="31294" fg:w="15"/><text x="62.0202%" y="655.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (6 samples, 0.01%)</title><rect x="61.8136%" y="629" width="0.0118%" height="15" fill="rgb(249,199,20)" fg:x="31316" fg:w="6"/><text x="62.0636%" y="639.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (6 samples, 0.01%)</title><rect x="61.8136%" y="613" width="0.0118%" height="15" fill="rgb(224,134,6)" fg:x="31316" fg:w="6"/><text x="62.0636%" y="623.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="61.8136%" y="597" width="0.0118%" height="15" fill="rgb(254,83,26)" fg:x="31316" fg:w="6"/><text x="62.0636%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.02%)</title><rect x="61.8807%" y="581" width="0.0197%" height="15" fill="rgb(217,88,9)" fg:x="31350" fg:w="10"/><text x="62.1307%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="61.8807%" y="597" width="0.0217%" height="15" fill="rgb(225,73,2)" fg:x="31350" fg:w="11"/><text x="62.1307%" y="607.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (41 samples, 0.08%)</title><rect x="61.8254%" y="629" width="0.0809%" height="15" fill="rgb(226,44,39)" fg:x="31322" fg:w="41"/><text x="62.0754%" y="639.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (38 samples, 0.08%)</title><rect x="61.8314%" y="613" width="0.0750%" height="15" fill="rgb(228,53,17)" fg:x="31325" fg:w="38"/><text x="62.0814%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (56 samples, 0.11%)</title><rect x="61.7998%" y="645" width="0.1105%" height="15" fill="rgb(212,27,27)" fg:x="31309" fg:w="56"/><text x="62.0498%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (11 samples, 0.02%)</title><rect x="61.9182%" y="645" width="0.0217%" height="15" fill="rgb(241,50,6)" fg:x="31369" fg:w="11"/><text x="62.1682%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (11 samples, 0.02%)</title><rect x="61.9182%" y="629" width="0.0217%" height="15" fill="rgb(225,28,51)" fg:x="31369" fg:w="11"/><text x="62.1682%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (11 samples, 0.02%)</title><rect x="61.9182%" y="613" width="0.0217%" height="15" fill="rgb(215,33,16)" fg:x="31369" fg:w="11"/><text x="62.1682%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="61.9182%" y="597" width="0.0217%" height="15" fill="rgb(243,40,39)" fg:x="31369" fg:w="11"/><text x="62.1682%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (528 samples, 1.04%)</title><rect x="60.9451%" y="661" width="1.0422%" height="15" fill="rgb(225,11,42)" fg:x="30876" fg:w="528"/><text x="61.1951%" y="671.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (24 samples, 0.05%)</title><rect x="61.9399%" y="645" width="0.0474%" height="15" fill="rgb(241,220,38)" fg:x="31380" fg:w="24"/><text x="62.1899%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (18 samples, 0.04%)</title><rect x="61.9518%" y="629" width="0.0355%" height="15" fill="rgb(244,52,35)" fg:x="31386" fg:w="18"/><text x="62.2018%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (18 samples, 0.04%)</title><rect x="61.9518%" y="613" width="0.0355%" height="15" fill="rgb(246,42,46)" fg:x="31386" fg:w="18"/><text x="62.2018%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="61.9518%" y="597" width="0.0355%" height="15" fill="rgb(205,184,13)" fg:x="31386" fg:w="18"/><text x="62.2018%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.04%)</title><rect x="61.9518%" y="581" width="0.0355%" height="15" fill="rgb(209,48,36)" fg:x="31386" fg:w="18"/><text x="62.2018%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.03%)</title><rect x="61.9616%" y="565" width="0.0257%" height="15" fill="rgb(244,34,51)" fg:x="31391" fg:w="13"/><text x="62.2116%" y="575.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (12 samples, 0.02%)</title><rect x="61.9636%" y="549" width="0.0237%" height="15" fill="rgb(221,107,33)" fg:x="31392" fg:w="12"/><text x="62.2136%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="62.0228%" y="613" width="0.0237%" height="15" fill="rgb(224,203,12)" fg:x="31422" fg:w="12"/><text x="62.2728%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (12 samples, 0.02%)</title><rect x="62.0228%" y="597" width="0.0237%" height="15" fill="rgb(230,215,18)" fg:x="31422" fg:w="12"/><text x="62.2728%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.02%)</title><rect x="62.0268%" y="581" width="0.0197%" height="15" fill="rgb(206,185,35)" fg:x="31424" fg:w="10"/><text x="62.2768%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="62.0268%" y="565" width="0.0197%" height="15" fill="rgb(228,140,34)" fg:x="31424" fg:w="10"/><text x="62.2768%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (8 samples, 0.02%)</title><rect x="62.0544%" y="613" width="0.0158%" height="15" fill="rgb(208,93,13)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (8 samples, 0.02%)</title><rect x="62.0544%" y="597" width="0.0158%" height="15" fill="rgb(221,193,39)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="62.0544%" y="581" width="0.0158%" height="15" fill="rgb(241,132,34)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (8 samples, 0.02%)</title><rect x="62.0544%" y="565" width="0.0158%" height="15" fill="rgb(221,141,10)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (8 samples, 0.02%)</title><rect x="62.0544%" y="549" width="0.0158%" height="15" fill="rgb(226,90,31)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (8 samples, 0.02%)</title><rect x="62.0544%" y="533" width="0.0158%" height="15" fill="rgb(243,75,5)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.02%)</title><rect x="62.0544%" y="517" width="0.0158%" height="15" fill="rgb(227,156,21)" fg:x="31438" fg:w="8"/><text x="62.3044%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (38 samples, 0.08%)</title><rect x="62.0208%" y="629" width="0.0750%" height="15" fill="rgb(250,195,8)" fg:x="31421" fg:w="38"/><text x="62.2708%" y="639.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.02%)</title><rect x="62.0741%" y="613" width="0.0217%" height="15" fill="rgb(220,134,5)" fg:x="31448" fg:w="11"/><text x="62.3241%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="62.0761%" y="597" width="0.0197%" height="15" fill="rgb(246,106,34)" fg:x="31449" fg:w="10"/><text x="62.3261%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (9 samples, 0.02%)</title><rect x="62.0781%" y="581" width="0.0178%" height="15" fill="rgb(205,1,4)" fg:x="31450" fg:w="9"/><text x="62.3281%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (9 samples, 0.02%)</title><rect x="62.0781%" y="565" width="0.0178%" height="15" fill="rgb(224,151,29)" fg:x="31450" fg:w="9"/><text x="62.3281%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (9 samples, 0.02%)</title><rect x="62.0781%" y="549" width="0.0178%" height="15" fill="rgb(251,196,0)" fg:x="31450" fg:w="9"/><text x="62.3281%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="62.0781%" y="533" width="0.0178%" height="15" fill="rgb(212,127,0)" fg:x="31450" fg:w="9"/><text x="62.3281%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.07%)</title><rect x="62.1097%" y="581" width="0.0730%" height="15" fill="rgb(236,71,53)" fg:x="31466" fg:w="37"/><text x="62.3597%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.07%)</title><rect x="62.1097%" y="565" width="0.0730%" height="15" fill="rgb(227,99,0)" fg:x="31466" fg:w="37"/><text x="62.3597%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.07%)</title><rect x="62.1097%" y="549" width="0.0730%" height="15" fill="rgb(239,89,21)" fg:x="31466" fg:w="37"/><text x="62.3597%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (48 samples, 0.09%)</title><rect x="62.0959%" y="613" width="0.0947%" height="15" fill="rgb(243,122,19)" fg:x="31459" fg:w="48"/><text x="62.3459%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (42 samples, 0.08%)</title><rect x="62.1077%" y="597" width="0.0829%" height="15" fill="rgb(229,192,45)" fg:x="31465" fg:w="42"/><text x="62.3577%" y="607.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (54 samples, 0.11%)</title><rect x="62.0959%" y="629" width="0.1066%" height="15" fill="rgb(235,165,35)" fg:x="31459" fg:w="54"/><text x="62.3459%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="62.2084%" y="613" width="0.0178%" height="15" fill="rgb(253,202,0)" fg:x="31516" fg:w="9"/><text x="62.4584%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="62.2084%" y="597" width="0.0178%" height="15" fill="rgb(235,51,20)" fg:x="31516" fg:w="9"/><text x="62.4584%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="62.2084%" y="581" width="0.0178%" height="15" fill="rgb(218,95,46)" fg:x="31516" fg:w="9"/><text x="62.4584%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.02%)</title><rect x="62.2261%" y="613" width="0.0217%" height="15" fill="rgb(212,81,10)" fg:x="31525" fg:w="11"/><text x="62.4761%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (10 samples, 0.02%)</title><rect x="62.2281%" y="597" width="0.0197%" height="15" fill="rgb(240,59,0)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="62.2281%" y="581" width="0.0197%" height="15" fill="rgb(212,191,42)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.02%)</title><rect x="62.2281%" y="565" width="0.0197%" height="15" fill="rgb(233,140,3)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (10 samples, 0.02%)</title><rect x="62.2281%" y="549" width="0.0197%" height="15" fill="rgb(215,69,23)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.02%)</title><rect x="62.2281%" y="533" width="0.0197%" height="15" fill="rgb(240,202,20)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.02%)</title><rect x="62.2281%" y="517" width="0.0197%" height="15" fill="rgb(209,146,50)" fg:x="31526" fg:w="10"/><text x="62.4781%" y="527.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.02%)</title><rect x="62.2478%" y="613" width="0.0237%" height="15" fill="rgb(253,102,54)" fg:x="31536" fg:w="12"/><text x="62.4978%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="62.2478%" y="597" width="0.0237%" height="15" fill="rgb(250,173,47)" fg:x="31536" fg:w="12"/><text x="62.4978%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.02%)</title><rect x="62.2498%" y="581" width="0.0217%" height="15" fill="rgb(232,142,7)" fg:x="31537" fg:w="11"/><text x="62.4998%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (11 samples, 0.02%)</title><rect x="62.2498%" y="565" width="0.0217%" height="15" fill="rgb(230,157,47)" fg:x="31537" fg:w="11"/><text x="62.4998%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (11 samples, 0.02%)</title><rect x="62.2498%" y="549" width="0.0217%" height="15" fill="rgb(214,177,35)" fg:x="31537" fg:w="11"/><text x="62.4998%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="62.2498%" y="533" width="0.0217%" height="15" fill="rgb(234,119,46)" fg:x="31537" fg:w="11"/><text x="62.4998%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (145 samples, 0.29%)</title><rect x="62.0110%" y="645" width="0.2862%" height="15" fill="rgb(241,180,50)" fg:x="31416" fg:w="145"/><text x="62.2610%" y="655.50"></text></g><g><title>event_listener::Event::listen (48 samples, 0.09%)</title><rect x="62.2024%" y="629" width="0.0947%" height="15" fill="rgb(221,54,25)" fg:x="31513" fg:w="48"/><text x="62.4524%" y="639.50"></text></g><g><title>event_listener::full_fence (9 samples, 0.02%)</title><rect x="62.2794%" y="613" width="0.0178%" height="15" fill="rgb(209,157,44)" fg:x="31552" fg:w="9"/><text x="62.5294%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (9 samples, 0.02%)</title><rect x="62.2794%" y="597" width="0.0178%" height="15" fill="rgb(246,115,41)" fg:x="31552" fg:w="9"/><text x="62.5294%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="62.2794%" y="581" width="0.0178%" height="15" fill="rgb(229,86,1)" fg:x="31552" fg:w="9"/><text x="62.5294%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="62.3268%" y="581" width="0.0178%" height="15" fill="rgb(240,108,53)" fg:x="31576" fg:w="9"/><text x="62.5768%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="62.3268%" y="565" width="0.0178%" height="15" fill="rgb(227,134,2)" fg:x="31576" fg:w="9"/><text x="62.5768%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.01%)</title><rect x="62.3465%" y="581" width="0.0118%" height="15" fill="rgb(213,129,25)" fg:x="31586" fg:w="6"/><text x="62.5965%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.01%)</title><rect x="62.3465%" y="565" width="0.0118%" height="15" fill="rgb(226,35,21)" fg:x="31586" fg:w="6"/><text x="62.5965%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (32 samples, 0.06%)</title><rect x="62.3051%" y="613" width="0.0632%" height="15" fill="rgb(208,129,26)" fg:x="31565" fg:w="32"/><text x="62.5551%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (24 samples, 0.05%)</title><rect x="62.3209%" y="597" width="0.0474%" height="15" fill="rgb(224,83,6)" fg:x="31573" fg:w="24"/><text x="62.5709%" y="607.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.02%)</title><rect x="62.3761%" y="597" width="0.0237%" height="15" fill="rgb(227,52,39)" fg:x="31601" fg:w="12"/><text x="62.6261%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="62.3761%" y="581" width="0.0237%" height="15" fill="rgb(241,30,17)" fg:x="31601" fg:w="12"/><text x="62.6261%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.02%)</title><rect x="62.3761%" y="565" width="0.0237%" height="15" fill="rgb(246,186,42)" fg:x="31601" fg:w="12"/><text x="62.6261%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (12 samples, 0.02%)</title><rect x="62.3761%" y="549" width="0.0237%" height="15" fill="rgb(221,169,15)" fg:x="31601" fg:w="12"/><text x="62.6261%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (11 samples, 0.02%)</title><rect x="62.3781%" y="533" width="0.0217%" height="15" fill="rgb(235,108,21)" fg:x="31602" fg:w="11"/><text x="62.6281%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (6 samples, 0.01%)</title><rect x="62.3880%" y="517" width="0.0118%" height="15" fill="rgb(219,148,30)" fg:x="31607" fg:w="6"/><text x="62.6380%" y="527.50"></text></g><g><title>core::hint::spin_loop (6 samples, 0.01%)</title><rect x="62.3880%" y="501" width="0.0118%" height="15" fill="rgb(220,109,5)" fg:x="31607" fg:w="6"/><text x="62.6380%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (6 samples, 0.01%)</title><rect x="62.3880%" y="485" width="0.0118%" height="15" fill="rgb(213,203,48)" fg:x="31607" fg:w="6"/><text x="62.6380%" y="495.50"></text></g><g><title>async_executor::State::notify (13 samples, 0.03%)</title><rect x="62.3998%" y="549" width="0.0257%" height="15" fill="rgb(244,71,33)" fg:x="31613" fg:w="13"/><text x="62.6498%" y="559.50"></text></g><g><title>core::task::wake::Waker::wake (7 samples, 0.01%)</title><rect x="62.4117%" y="533" width="0.0138%" height="15" fill="rgb(209,23,2)" fg:x="31619" fg:w="7"/><text x="62.6617%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (7 samples, 0.01%)</title><rect x="62.4117%" y="517" width="0.0138%" height="15" fill="rgb(219,97,7)" fg:x="31619" fg:w="7"/><text x="62.6617%" y="527.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (7 samples, 0.01%)</title><rect x="62.4117%" y="501" width="0.0138%" height="15" fill="rgb(216,161,23)" fg:x="31619" fg:w="7"/><text x="62.6617%" y="511.50"></text></g><g><title>parking::Unparker::unpark (7 samples, 0.01%)</title><rect x="62.4117%" y="485" width="0.0138%" height="15" fill="rgb(207,45,42)" fg:x="31619" fg:w="7"/><text x="62.6617%" y="495.50"></text></g><g><title>event_listener::List::notify (15 samples, 0.03%)</title><rect x="62.3998%" y="597" width="0.0296%" height="15" fill="rgb(241,61,4)" fg:x="31613" fg:w="15"/><text x="62.6498%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake (15 samples, 0.03%)</title><rect x="62.3998%" y="581" width="0.0296%" height="15" fill="rgb(236,170,1)" fg:x="31613" fg:w="15"/><text x="62.6498%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (15 samples, 0.03%)</title><rect x="62.3998%" y="565" width="0.0296%" height="15" fill="rgb(239,72,5)" fg:x="31613" fg:w="15"/><text x="62.6498%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (76 samples, 0.15%)</title><rect x="62.3051%" y="629" width="0.1500%" height="15" fill="rgb(214,13,50)" fg:x="31565" fg:w="76"/><text x="62.5551%" y="639.50"></text></g><g><title>event_listener::Event::notify (44 samples, 0.09%)</title><rect x="62.3682%" y="613" width="0.0869%" height="15" fill="rgb(224,88,9)" fg:x="31597" fg:w="44"/><text x="62.6182%" y="623.50"></text></g><g><title>event_listener::full_fence (13 samples, 0.03%)</title><rect x="62.4294%" y="597" width="0.0257%" height="15" fill="rgb(238,192,34)" fg:x="31628" fg:w="13"/><text x="62.6794%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.03%)</title><rect x="62.4294%" y="581" width="0.0257%" height="15" fill="rgb(217,203,50)" fg:x="31628" fg:w="13"/><text x="62.6794%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="62.4294%" y="565" width="0.0257%" height="15" fill="rgb(241,123,32)" fg:x="31628" fg:w="13"/><text x="62.6794%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.18%)</title><rect x="62.2972%" y="645" width="0.1796%" height="15" fill="rgb(248,151,39)" fg:x="31561" fg:w="91"/><text x="62.5472%" y="655.50"></text></g><g><title>event_listener::Event::notify (9 samples, 0.02%)</title><rect x="62.4590%" y="629" width="0.0178%" height="15" fill="rgb(208,89,6)" fg:x="31643" fg:w="9"/><text x="62.7090%" y="639.50"></text></g><g><title>event_listener::full_fence (8 samples, 0.02%)</title><rect x="62.4610%" y="613" width="0.0158%" height="15" fill="rgb(254,43,26)" fg:x="31644" fg:w="8"/><text x="62.7110%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.02%)</title><rect x="62.4610%" y="597" width="0.0158%" height="15" fill="rgb(216,158,13)" fg:x="31644" fg:w="8"/><text x="62.7110%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="62.4610%" y="581" width="0.0158%" height="15" fill="rgb(212,47,37)" fg:x="31644" fg:w="8"/><text x="62.7110%" y="591.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (8 samples, 0.02%)</title><rect x="62.4808%" y="565" width="0.0158%" height="15" fill="rgb(254,16,10)" fg:x="31654" fg:w="8"/><text x="62.7308%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.02%)</title><rect x="62.4808%" y="549" width="0.0158%" height="15" fill="rgb(223,228,16)" fg:x="31654" fg:w="8"/><text x="62.7308%" y="559.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (8 samples, 0.02%)</title><rect x="62.4808%" y="533" width="0.0158%" height="15" fill="rgb(249,108,50)" fg:x="31654" fg:w="8"/><text x="62.7308%" y="543.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (8 samples, 0.02%)</title><rect x="62.4808%" y="517" width="0.0158%" height="15" fill="rgb(208,220,5)" fg:x="31654" fg:w="8"/><text x="62.7308%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (11 samples, 0.02%)</title><rect x="62.4768%" y="597" width="0.0217%" height="15" fill="rgb(217,89,48)" fg:x="31652" fg:w="11"/><text x="62.7268%" y="607.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (10 samples, 0.02%)</title><rect x="62.4788%" y="581" width="0.0197%" height="15" fill="rgb(212,113,41)" fg:x="31653" fg:w="10"/><text x="62.7288%" y="591.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (12 samples, 0.02%)</title><rect x="62.4768%" y="613" width="0.0237%" height="15" fill="rgb(231,127,5)" fg:x="31652" fg:w="12"/><text x="62.7268%" y="623.50"></text></g><g><title>bevy_ecs::event::Events&lt;T&gt;::update_system (9 samples, 0.02%)</title><rect x="62.5084%" y="565" width="0.0178%" height="15" fill="rgb(217,141,17)" fg:x="31668" fg:w="9"/><text x="62.7584%" y="575.50"></text></g><g><title>bevy_ecs::event::Events&lt;T&gt;::update (7 samples, 0.01%)</title><rect x="62.5123%" y="549" width="0.0138%" height="15" fill="rgb(245,125,54)" fg:x="31670" fg:w="7"/><text x="62.7623%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (28 samples, 0.06%)</title><rect x="62.4768%" y="629" width="0.0553%" height="15" fill="rgb(248,125,3)" fg:x="31652" fg:w="28"/><text x="62.7268%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (16 samples, 0.03%)</title><rect x="62.5005%" y="613" width="0.0316%" height="15" fill="rgb(236,119,51)" fg:x="31664" fg:w="16"/><text x="62.7505%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.03%)</title><rect x="62.5005%" y="597" width="0.0316%" height="15" fill="rgb(239,99,8)" fg:x="31664" fg:w="16"/><text x="62.7505%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 0.03%)</title><rect x="62.5005%" y="581" width="0.0316%" height="15" fill="rgb(224,228,4)" fg:x="31664" fg:w="16"/><text x="62.7505%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (6 samples, 0.01%)</title><rect x="62.5419%" y="597" width="0.0118%" height="15" fill="rgb(220,131,45)" fg:x="31685" fg:w="6"/><text x="62.7919%" y="607.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (13 samples, 0.03%)</title><rect x="62.5321%" y="613" width="0.0257%" height="15" fill="rgb(215,62,5)" fg:x="31680" fg:w="13"/><text x="62.7821%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="62.6584%" y="485" width="0.0138%" height="15" fill="rgb(253,12,24)" fg:x="31744" fg:w="7"/><text x="62.9084%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="62.6584%" y="469" width="0.0138%" height="15" fill="rgb(248,120,50)" fg:x="31744" fg:w="7"/><text x="62.9084%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (25 samples, 0.05%)</title><rect x="62.6268%" y="533" width="0.0493%" height="15" fill="rgb(245,194,10)" fg:x="31728" fg:w="25"/><text x="62.8768%" y="543.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (9 samples, 0.02%)</title><rect x="62.6584%" y="517" width="0.0178%" height="15" fill="rgb(241,149,38)" fg:x="31744" fg:w="9"/><text x="62.9084%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (9 samples, 0.02%)</title><rect x="62.6584%" y="501" width="0.0178%" height="15" fill="rgb(219,215,7)" fg:x="31744" fg:w="9"/><text x="62.9084%" y="511.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (56 samples, 0.11%)</title><rect x="62.5834%" y="549" width="0.1105%" height="15" fill="rgb(208,120,31)" fg:x="31706" fg:w="56"/><text x="62.8334%" y="559.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (58 samples, 0.11%)</title><rect x="62.5814%" y="565" width="0.1145%" height="15" fill="rgb(244,30,8)" fg:x="31705" fg:w="58"/><text x="62.8314%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="62.7591%" y="549" width="0.0197%" height="15" fill="rgb(238,35,44)" fg:x="31795" fg:w="10"/><text x="63.0091%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (35 samples, 0.07%)</title><rect x="62.8696%" y="517" width="0.0691%" height="15" fill="rgb(243,218,37)" fg:x="31851" fg:w="35"/><text x="63.1196%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (35 samples, 0.07%)</title><rect x="62.8696%" y="501" width="0.0691%" height="15" fill="rgb(218,169,10)" fg:x="31851" fg:w="35"/><text x="63.1196%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.03%)</title><rect x="62.9071%" y="485" width="0.0316%" height="15" fill="rgb(221,144,10)" fg:x="31870" fg:w="16"/><text x="63.1571%" y="495.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.10%)</title><rect x="62.8696%" y="533" width="0.1007%" height="15" fill="rgb(226,41,38)" fg:x="31851" fg:w="51"/><text x="63.1196%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.03%)</title><rect x="62.9387%" y="517" width="0.0316%" height="15" fill="rgb(228,3,1)" fg:x="31886" fg:w="16"/><text x="63.1887%" y="527.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (16 samples, 0.03%)</title><rect x="62.9387%" y="501" width="0.0316%" height="15" fill="rgb(209,129,12)" fg:x="31886" fg:w="16"/><text x="63.1887%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (16 samples, 0.03%)</title><rect x="62.9387%" y="485" width="0.0316%" height="15" fill="rgb(213,136,33)" fg:x="31886" fg:w="16"/><text x="63.1887%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (16 samples, 0.03%)</title><rect x="62.9387%" y="469" width="0.0316%" height="15" fill="rgb(209,181,29)" fg:x="31886" fg:w="16"/><text x="63.1887%" y="479.50"></text></g><g><title>core::ptr::read (16 samples, 0.03%)</title><rect x="62.9387%" y="453" width="0.0316%" height="15" fill="rgb(234,173,18)" fg:x="31886" fg:w="16"/><text x="63.1887%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (38 samples, 0.08%)</title><rect x="63.9454%" y="485" width="0.0750%" height="15" fill="rgb(227,73,47)" fg:x="32396" fg:w="38"/><text x="64.1954%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (168 samples, 0.33%)</title><rect x="63.7677%" y="501" width="0.3316%" height="15" fill="rgb(234,9,34)" fg:x="32306" fg:w="168"/><text x="64.0177%" y="511.50"></text></g><g><title>core::ptr::write (40 samples, 0.08%)</title><rect x="64.0204%" y="485" width="0.0790%" height="15" fill="rgb(235,172,15)" fg:x="32434" fg:w="40"/><text x="64.2704%" y="495.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (10 samples, 0.02%)</title><rect x="64.0993%" y="501" width="0.0197%" height="15" fill="rgb(245,61,2)" fg:x="32474" fg:w="10"/><text x="64.3493%" y="511.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (31 samples, 0.06%)</title><rect x="65.9548%" y="469" width="0.0612%" height="15" fill="rgb(238,39,47)" fg:x="33414" fg:w="31"/><text x="66.2048%" y="479.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (1,050 samples, 2.07%)</title><rect x="65.8284%" y="485" width="2.0726%" height="15" fill="rgb(234,37,24)" fg:x="33350" fg:w="1050"/><text x="66.0784%" y="495.50">&lt;..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (955 samples, 1.89%)</title><rect x="66.0159%" y="469" width="1.8850%" height="15" fill="rgb(248,223,24)" fg:x="33445" fg:w="955"/><text x="66.2659%" y="479.50">s..</text></g><g><title>f64xsubf128 (916 samples, 1.81%)</title><rect x="66.0929%" y="453" width="1.8081%" height="15" fill="rgb(223,12,15)" fg:x="33484" fg:w="916"/><text x="66.3429%" y="463.50">f..</text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (2,518 samples, 4.97%)</title><rect x="62.9703%" y="533" width="4.9702%" height="15" fill="rgb(249,6,3)" fg:x="31902" fg:w="2518"/><text x="63.2203%" y="543.50">bevy_p..</text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (2,232 samples, 4.41%)</title><rect x="63.5348%" y="517" width="4.4057%" height="15" fill="rgb(237,105,33)" fg:x="32188" fg:w="2232"/><text x="63.7848%" y="527.50">bevy_..</text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (1,936 samples, 3.82%)</title><rect x="64.1191%" y="501" width="3.8214%" height="15" fill="rgb(252,208,35)" fg:x="32484" fg:w="1936"/><text x="64.3691%" y="511.50">bevy..</text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (20 samples, 0.04%)</title><rect x="67.9010%" y="485" width="0.0395%" height="15" fill="rgb(215,181,35)" fg:x="34400" fg:w="20"/><text x="68.1510%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="67.9424%" y="533" width="0.0197%" height="15" fill="rgb(246,212,3)" fg:x="34421" fg:w="10"/><text x="68.1924%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (45 samples, 0.09%)</title><rect x="67.9977%" y="517" width="0.0888%" height="15" fill="rgb(247,156,24)" fg:x="34449" fg:w="45"/><text x="68.2477%" y="527.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2,818 samples, 5.56%)</title><rect x="62.5321%" y="629" width="5.5624%" height="15" fill="rgb(248,9,31)" fg:x="31680" fg:w="2818"/><text x="62.7821%" y="639.50">&lt;Func a..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (2,805 samples, 5.54%)</title><rect x="62.5577%" y="613" width="5.5367%" height="15" fill="rgb(234,26,45)" fg:x="31693" fg:w="2805"/><text x="62.8077%" y="623.50">&lt;Func a..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,805 samples, 5.54%)</title><rect x="62.5577%" y="597" width="5.5367%" height="15" fill="rgb(249,11,32)" fg:x="31693" fg:w="2805"/><text x="62.8077%" y="607.50">core::o..</text></g><g><title>core::ops::function::FnMut::call_mut (2,796 samples, 5.52%)</title><rect x="62.5755%" y="581" width="5.5189%" height="15" fill="rgb(249,162,33)" fg:x="31702" fg:w="2796"/><text x="62.8255%" y="591.50">core::o..</text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (2,712 samples, 5.35%)</title><rect x="62.7413%" y="565" width="5.3531%" height="15" fill="rgb(232,4,32)" fg:x="31786" fg:w="2712"/><text x="62.9913%" y="575.50">stellar..</text></g><g><title>stellar_coordinates_test::draw_bounding_box (2,693 samples, 5.32%)</title><rect x="62.7788%" y="549" width="5.3156%" height="15" fill="rgb(212,5,45)" fg:x="31805" fg:w="2693"/><text x="63.0288%" y="559.50">stellar..</text></g><g><title>glam::vec3::Vec3::select (67 samples, 0.13%)</title><rect x="67.9622%" y="533" width="0.1322%" height="15" fill="rgb(227,95,13)" fg:x="34431" fg:w="67"/><text x="68.2122%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (16 samples, 0.03%)</title><rect x="68.0944%" y="629" width="0.0316%" height="15" fill="rgb(223,205,10)" fg:x="34498" fg:w="16"/><text x="68.3444%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (12 samples, 0.02%)</title><rect x="68.1023%" y="613" width="0.0237%" height="15" fill="rgb(222,178,8)" fg:x="34502" fg:w="12"/><text x="68.3523%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="68.1023%" y="597" width="0.0237%" height="15" fill="rgb(216,13,22)" fg:x="34502" fg:w="12"/><text x="68.3523%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.02%)</title><rect x="68.1043%" y="581" width="0.0217%" height="15" fill="rgb(240,167,12)" fg:x="34503" fg:w="11"/><text x="68.3543%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (56 samples, 0.11%)</title><rect x="68.1458%" y="549" width="0.1105%" height="15" fill="rgb(235,68,35)" fg:x="34524" fg:w="56"/><text x="68.3958%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (56 samples, 0.11%)</title><rect x="68.1458%" y="533" width="0.1105%" height="15" fill="rgb(253,40,27)" fg:x="34524" fg:w="56"/><text x="68.3958%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (56 samples, 0.11%)</title><rect x="68.1458%" y="517" width="0.1105%" height="15" fill="rgb(214,19,28)" fg:x="34524" fg:w="56"/><text x="68.3958%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.11%)</title><rect x="68.1458%" y="501" width="0.1105%" height="15" fill="rgb(210,167,45)" fg:x="34524" fg:w="56"/><text x="68.3958%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (56 samples, 0.11%)</title><rect x="68.1458%" y="485" width="0.1105%" height="15" fill="rgb(232,97,40)" fg:x="34524" fg:w="56"/><text x="68.3958%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.02%)</title><rect x="68.4793%" y="533" width="0.0237%" height="15" fill="rgb(250,35,23)" fg:x="34693" fg:w="12"/><text x="68.7293%" y="543.50"></text></g><g><title>core::intrinsics::copy (60 samples, 0.12%)</title><rect x="68.5978%" y="501" width="0.1184%" height="15" fill="rgb(248,47,53)" fg:x="34753" fg:w="60"/><text x="68.8478%" y="511.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (302 samples, 0.60%)</title><rect x="68.2701%" y="549" width="0.5961%" height="15" fill="rgb(226,58,50)" fg:x="34587" fg:w="302"/><text x="68.5201%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (176 samples, 0.35%)</title><rect x="68.5188%" y="533" width="0.3474%" height="15" fill="rgb(217,105,26)" fg:x="34713" fg:w="176"/><text x="68.7688%" y="543.50"></text></g><g><title>core::ptr::swap (143 samples, 0.28%)</title><rect x="68.5839%" y="517" width="0.2823%" height="15" fill="rgb(208,64,1)" fg:x="34746" fg:w="143"/><text x="68.8339%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.15%)</title><rect x="68.7162%" y="501" width="0.1500%" height="15" fill="rgb(214,80,1)" fg:x="34813" fg:w="76"/><text x="68.9662%" y="511.50"></text></g><g><title>bevy_prototype_debug_lines::update (402 samples, 0.79%)</title><rect x="68.1418%" y="565" width="0.7935%" height="15" fill="rgb(206,175,26)" fg:x="34522" fg:w="402"/><text x="68.3918%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.07%)</title><rect x="68.8702%" y="549" width="0.0651%" height="15" fill="rgb(235,156,37)" fg:x="34891" fg:w="33"/><text x="69.1202%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (412 samples, 0.81%)</title><rect x="68.1260%" y="629" width="0.8132%" height="15" fill="rgb(213,100,9)" fg:x="34514" fg:w="412"/><text x="68.3760%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (410 samples, 0.81%)</title><rect x="68.1300%" y="613" width="0.8093%" height="15" fill="rgb(241,15,13)" fg:x="34516" fg:w="410"/><text x="68.3800%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (410 samples, 0.81%)</title><rect x="68.1300%" y="597" width="0.8093%" height="15" fill="rgb(205,97,43)" fg:x="34516" fg:w="410"/><text x="68.3800%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (409 samples, 0.81%)</title><rect x="68.1319%" y="581" width="0.8073%" height="15" fill="rgb(216,106,32)" fg:x="34517" fg:w="409"/><text x="68.3819%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (9 samples, 0.02%)</title><rect x="68.9629%" y="629" width="0.0178%" height="15" fill="rgb(226,200,8)" fg:x="34938" fg:w="9"/><text x="69.2129%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (8 samples, 0.02%)</title><rect x="68.9649%" y="613" width="0.0158%" height="15" fill="rgb(244,54,29)" fg:x="34939" fg:w="8"/><text x="69.2149%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="68.9649%" y="597" width="0.0158%" height="15" fill="rgb(252,169,12)" fg:x="34939" fg:w="8"/><text x="69.2149%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.02%)</title><rect x="68.9649%" y="581" width="0.0158%" height="15" fill="rgb(231,199,11)" fg:x="34939" fg:w="8"/><text x="69.2149%" y="591.50"></text></g><g><title>bevy_ui::flex::flex_node_system (8 samples, 0.02%)</title><rect x="68.9649%" y="565" width="0.0158%" height="15" fill="rgb(233,191,18)" fg:x="34939" fg:w="8"/><text x="69.2149%" y="575.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (10 samples, 0.02%)</title><rect x="68.9807%" y="629" width="0.0197%" height="15" fill="rgb(215,83,47)" fg:x="34947" fg:w="10"/><text x="69.2307%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (10 samples, 0.02%)</title><rect x="68.9807%" y="613" width="0.0197%" height="15" fill="rgb(251,67,19)" fg:x="34947" fg:w="10"/><text x="69.2307%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="68.9807%" y="597" width="0.0197%" height="15" fill="rgb(240,7,20)" fg:x="34947" fg:w="10"/><text x="69.2307%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,309 samples, 6.53%)</title><rect x="62.4768%" y="645" width="6.5315%" height="15" fill="rgb(210,150,26)" fg:x="31652" fg:w="3309"/><text x="62.7268%" y="655.50">&lt;bevy_ecs..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="69.0103%" y="629" width="0.0158%" height="15" fill="rgb(228,75,42)" fg:x="34962" fg:w="8"/><text x="69.2603%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.02%)</title><rect x="69.0103%" y="613" width="0.0158%" height="15" fill="rgb(237,134,48)" fg:x="34962" fg:w="8"/><text x="69.2603%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.02%)</title><rect x="69.0103%" y="597" width="0.0158%" height="15" fill="rgb(205,80,50)" fg:x="34962" fg:w="8"/><text x="69.2603%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (16 samples, 0.03%)</title><rect x="69.0103%" y="645" width="0.0316%" height="15" fill="rgb(217,74,48)" fg:x="34962" fg:w="16"/><text x="69.2603%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="69.0261%" y="629" width="0.0158%" height="15" fill="rgb(205,82,50)" fg:x="34970" fg:w="8"/><text x="69.2761%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="69.0261%" y="613" width="0.0158%" height="15" fill="rgb(228,1,33)" fg:x="34970" fg:w="8"/><text x="69.2761%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.02%)</title><rect x="69.0261%" y="597" width="0.0158%" height="15" fill="rgb(214,50,23)" fg:x="34970" fg:w="8"/><text x="69.2761%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.02%)</title><rect x="69.0261%" y="581" width="0.0158%" height="15" fill="rgb(210,62,9)" fg:x="34970" fg:w="8"/><text x="69.2761%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="69.0439%" y="581" width="0.0138%" height="15" fill="rgb(210,104,37)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (7 samples, 0.01%)</title><rect x="69.0439%" y="565" width="0.0138%" height="15" fill="rgb(232,104,43)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="69.0439%" y="549" width="0.0138%" height="15" fill="rgb(244,52,6)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (7 samples, 0.01%)</title><rect x="69.0439%" y="533" width="0.0138%" height="15" fill="rgb(211,174,52)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (7 samples, 0.01%)</title><rect x="69.0439%" y="517" width="0.0138%" height="15" fill="rgb(229,48,4)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.01%)</title><rect x="69.0439%" y="501" width="0.0138%" height="15" fill="rgb(205,155,16)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.01%)</title><rect x="69.0439%" y="485" width="0.0138%" height="15" fill="rgb(211,141,53)" fg:x="34979" fg:w="7"/><text x="69.2939%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.02%)</title><rect x="69.0616%" y="517" width="0.0158%" height="15" fill="rgb(240,148,11)" fg:x="34988" fg:w="8"/><text x="69.3116%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="69.0616%" y="501" width="0.0158%" height="15" fill="rgb(214,45,23)" fg:x="34988" fg:w="8"/><text x="69.3116%" y="511.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.03%)</title><rect x="69.0597%" y="581" width="0.0257%" height="15" fill="rgb(248,74,26)" fg:x="34987" fg:w="13"/><text x="69.3097%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="69.0597%" y="565" width="0.0257%" height="15" fill="rgb(218,121,16)" fg:x="34987" fg:w="13"/><text x="69.3097%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.02%)</title><rect x="69.0616%" y="549" width="0.0237%" height="15" fill="rgb(218,10,47)" fg:x="34988" fg:w="12"/><text x="69.3116%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (12 samples, 0.02%)</title><rect x="69.0616%" y="533" width="0.0237%" height="15" fill="rgb(227,99,14)" fg:x="34988" fg:w="12"/><text x="69.3116%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (25 samples, 0.05%)</title><rect x="69.0419%" y="597" width="0.0493%" height="15" fill="rgb(229,83,46)" fg:x="34978" fg:w="25"/><text x="69.2919%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (35 samples, 0.07%)</title><rect x="69.0419%" y="645" width="0.0691%" height="15" fill="rgb(228,25,1)" fg:x="34978" fg:w="35"/><text x="69.2919%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (35 samples, 0.07%)</title><rect x="69.0419%" y="629" width="0.0691%" height="15" fill="rgb(252,190,15)" fg:x="34978" fg:w="35"/><text x="69.2919%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (35 samples, 0.07%)</title><rect x="69.0419%" y="613" width="0.0691%" height="15" fill="rgb(213,103,51)" fg:x="34978" fg:w="35"/><text x="69.2919%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (10 samples, 0.02%)</title><rect x="69.0912%" y="597" width="0.0197%" height="15" fill="rgb(220,38,44)" fg:x="35003" fg:w="10"/><text x="69.3412%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="69.0912%" y="581" width="0.0197%" height="15" fill="rgb(210,45,26)" fg:x="35003" fg:w="10"/><text x="69.3412%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.02%)</title><rect x="69.0952%" y="565" width="0.0158%" height="15" fill="rgb(205,95,48)" fg:x="35005" fg:w="8"/><text x="69.3452%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.02%)</title><rect x="69.0952%" y="549" width="0.0158%" height="15" fill="rgb(225,179,37)" fg:x="35005" fg:w="8"/><text x="69.3452%" y="559.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="69.1110%" y="629" width="0.0138%" height="15" fill="rgb(230,209,3)" fg:x="35013" fg:w="7"/><text x="69.3610%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="69.1110%" y="613" width="0.0138%" height="15" fill="rgb(248,12,46)" fg:x="35013" fg:w="7"/><text x="69.3610%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="69.1110%" y="597" width="0.0138%" height="15" fill="rgb(234,18,0)" fg:x="35013" fg:w="7"/><text x="69.3610%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,146 samples, 8.18%)</title><rect x="60.9451%" y="677" width="8.1836%" height="15" fill="rgb(238,197,14)" fg:x="30876" fg:w="4146"/><text x="61.1951%" y="687.50">&lt;core::futu..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,614 samples, 7.13%)</title><rect x="61.9952%" y="661" width="7.1336%" height="15" fill="rgb(251,162,48)" fg:x="31408" fg:w="3614"/><text x="62.2452%" y="671.50">bevy_ecs::..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (9 samples, 0.02%)</title><rect x="69.1110%" y="645" width="0.0178%" height="15" fill="rgb(237,73,42)" fg:x="35013" fg:w="9"/><text x="69.3610%" y="655.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="69.1287%" y="661" width="0.0138%" height="15" fill="rgb(211,108,8)" fg:x="35022" fg:w="7"/><text x="69.3787%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="69.1307%" y="645" width="0.0118%" height="15" fill="rgb(213,45,22)" fg:x="35023" fg:w="6"/><text x="69.3807%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (8 samples, 0.02%)</title><rect x="69.1287%" y="677" width="0.0158%" height="15" fill="rgb(252,154,5)" fg:x="35022" fg:w="8"/><text x="69.3787%" y="687.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="69.1445%" y="629" width="0.0118%" height="15" fill="rgb(221,79,52)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (6 samples, 0.01%)</title><rect x="69.1445%" y="613" width="0.0118%" height="15" fill="rgb(229,220,36)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="69.1445%" y="597" width="0.0118%" height="15" fill="rgb(211,17,16)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (6 samples, 0.01%)</title><rect x="69.1445%" y="581" width="0.0118%" height="15" fill="rgb(222,55,31)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="69.1445%" y="565" width="0.0118%" height="15" fill="rgb(221,221,31)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="69.1445%" y="549" width="0.0118%" height="15" fill="rgb(227,168,26)" fg:x="35030" fg:w="6"/><text x="69.3945%" y="559.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.05%)</title><rect x="69.1445%" y="661" width="0.0454%" height="15" fill="rgb(224,139,9)" fg:x="35030" fg:w="23"/><text x="69.3945%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (23 samples, 0.05%)</title><rect x="69.1445%" y="645" width="0.0454%" height="15" fill="rgb(254,172,0)" fg:x="35030" fg:w="23"/><text x="69.3945%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="69.1702%" y="629" width="0.0197%" height="15" fill="rgb(235,203,1)" fg:x="35043" fg:w="10"/><text x="69.4202%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (9 samples, 0.02%)</title><rect x="69.1722%" y="613" width="0.0178%" height="15" fill="rgb(216,205,24)" fg:x="35044" fg:w="9"/><text x="69.4222%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (9 samples, 0.02%)</title><rect x="69.1722%" y="597" width="0.0178%" height="15" fill="rgb(233,24,6)" fg:x="35044" fg:w="9"/><text x="69.4222%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,184 samples, 8.26%)</title><rect x="60.9411%" y="693" width="8.2587%" height="15" fill="rgb(244,110,9)" fg:x="30874" fg:w="4184"/><text x="61.1911%" y="703.50">async_execu..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (28 samples, 0.06%)</title><rect x="69.1445%" y="677" width="0.0553%" height="15" fill="rgb(239,222,42)" fg:x="35030" fg:w="28"/><text x="69.3945%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="69.2037%" y="677" width="0.0276%" height="15" fill="rgb(218,145,13)" fg:x="35060" fg:w="14"/><text x="69.4537%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (14 samples, 0.03%)</title><rect x="69.2037%" y="661" width="0.0276%" height="15" fill="rgb(207,69,11)" fg:x="35060" fg:w="14"/><text x="69.4537%" y="671.50"></text></g><g><title>async_task::utils::abort_on_panic (7 samples, 0.01%)</title><rect x="69.2649%" y="581" width="0.0138%" height="15" fill="rgb(220,223,22)" fg:x="35091" fg:w="7"/><text x="69.5149%" y="591.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (6 samples, 0.01%)</title><rect x="69.2669%" y="565" width="0.0118%" height="15" fill="rgb(245,102,5)" fg:x="35092" fg:w="6"/><text x="69.5169%" y="575.50"></text></g><g><title>async_task::header::Header::register (28 samples, 0.06%)</title><rect x="69.2570%" y="597" width="0.0553%" height="15" fill="rgb(211,148,2)" fg:x="35087" fg:w="28"/><text x="69.5070%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.03%)</title><rect x="69.2807%" y="581" width="0.0316%" height="15" fill="rgb(241,13,44)" fg:x="35099" fg:w="16"/><text x="69.5307%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.03%)</title><rect x="69.2807%" y="565" width="0.0316%" height="15" fill="rgb(219,137,21)" fg:x="35099" fg:w="16"/><text x="69.5307%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.08%)</title><rect x="69.3123%" y="597" width="0.0790%" height="15" fill="rgb(242,206,5)" fg:x="35115" fg:w="40"/><text x="69.5623%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.08%)</title><rect x="69.3123%" y="581" width="0.0790%" height="15" fill="rgb(217,114,22)" fg:x="35115" fg:w="40"/><text x="69.5623%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.04%)</title><rect x="69.3913%" y="597" width="0.0355%" height="15" fill="rgb(253,206,42)" fg:x="35155" fg:w="18"/><text x="69.6413%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.04%)</title><rect x="69.3913%" y="581" width="0.0355%" height="15" fill="rgb(236,102,18)" fg:x="35155" fg:w="18"/><text x="69.6413%" y="591.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.19%)</title><rect x="69.2472%" y="629" width="0.1875%" height="15" fill="rgb(208,59,49)" fg:x="35082" fg:w="95"/><text x="69.4972%" y="639.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (95 samples, 0.19%)</title><rect x="69.2472%" y="613" width="0.1875%" height="15" fill="rgb(215,194,28)" fg:x="35082" fg:w="95"/><text x="69.4972%" y="623.50"></text></g><g><title>__free (6 samples, 0.01%)</title><rect x="69.4367%" y="613" width="0.0118%" height="15" fill="rgb(243,207,11)" fg:x="35178" fg:w="6"/><text x="69.6867%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="69.4367%" y="629" width="0.0138%" height="15" fill="rgb(254,179,35)" fg:x="35178" fg:w="7"/><text x="69.6867%" y="639.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.08%)</title><rect x="69.4524%" y="613" width="0.0809%" height="15" fill="rgb(235,97,3)" fg:x="35186" fg:w="41"/><text x="69.7024%" y="623.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (37 samples, 0.07%)</title><rect x="69.4603%" y="597" width="0.0730%" height="15" fill="rgb(215,155,33)" fg:x="35190" fg:w="37"/><text x="69.7103%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.07%)</title><rect x="69.4623%" y="581" width="0.0711%" height="15" fill="rgb(223,128,12)" fg:x="35191" fg:w="36"/><text x="69.7123%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.07%)</title><rect x="69.4623%" y="565" width="0.0711%" height="15" fill="rgb(208,157,18)" fg:x="35191" fg:w="36"/><text x="69.7123%" y="575.50"></text></g><g><title>__free (56 samples, 0.11%)</title><rect x="69.5334%" y="613" width="0.1105%" height="15" fill="rgb(249,70,54)" fg:x="35227" fg:w="56"/><text x="69.7834%" y="623.50"></text></g><g><title>_int_free (47 samples, 0.09%)</title><rect x="69.5511%" y="597" width="0.0928%" height="15" fill="rgb(244,118,24)" fg:x="35236" fg:w="47"/><text x="69.8011%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (229 samples, 0.45%)</title><rect x="69.2314%" y="677" width="0.4520%" height="15" fill="rgb(211,54,0)" fg:x="35074" fg:w="229"/><text x="69.4814%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.45%)</title><rect x="69.2314%" y="661" width="0.4520%" height="15" fill="rgb(245,137,45)" fg:x="35074" fg:w="229"/><text x="69.4814%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (229 samples, 0.45%)</title><rect x="69.2314%" y="645" width="0.4520%" height="15" fill="rgb(232,154,31)" fg:x="35074" fg:w="229"/><text x="69.4814%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (118 samples, 0.23%)</title><rect x="69.4505%" y="629" width="0.2329%" height="15" fill="rgb(253,6,39)" fg:x="35185" fg:w="118"/><text x="69.7005%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (18 samples, 0.04%)</title><rect x="69.6479%" y="613" width="0.0355%" height="15" fill="rgb(234,183,24)" fg:x="35285" fg:w="18"/><text x="69.8979%" y="623.50"></text></g><g><title>async_task::utils::abort_on_panic (17 samples, 0.03%)</title><rect x="69.6498%" y="597" width="0.0336%" height="15" fill="rgb(252,84,40)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (17 samples, 0.03%)</title><rect x="69.6498%" y="581" width="0.0336%" height="15" fill="rgb(224,65,2)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (17 samples, 0.03%)</title><rect x="69.6498%" y="565" width="0.0336%" height="15" fill="rgb(229,38,24)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::LocalExecutor::schedule::{{closure}}&gt; (17 samples, 0.03%)</title><rect x="69.6498%" y="549" width="0.0336%" height="15" fill="rgb(218,131,50)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (17 samples, 0.03%)</title><rect x="69.6498%" y="533" width="0.0336%" height="15" fill="rgb(233,106,18)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="69.6498%" y="517" width="0.0336%" height="15" fill="rgb(220,216,11)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.03%)</title><rect x="69.6498%" y="501" width="0.0336%" height="15" fill="rgb(251,100,45)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.03%)</title><rect x="69.6498%" y="485" width="0.0336%" height="15" fill="rgb(235,143,32)" fg:x="35286" fg:w="17"/><text x="69.8998%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,431 samples, 8.75%)</title><rect x="60.9392%" y="709" width="8.7462%" height="15" fill="rgb(248,124,34)" fg:x="30873" fg:w="4431"/><text x="61.1892%" y="719.50">&lt;core::futur..</text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (246 samples, 0.49%)</title><rect x="69.1998%" y="693" width="0.4856%" height="15" fill="rgb(225,221,4)" fg:x="35058" fg:w="246"/><text x="69.4498%" y="703.50"></text></g><g><title>async_task::header::Header::take (17 samples, 0.03%)</title><rect x="69.6854%" y="709" width="0.0336%" height="15" fill="rgb(242,27,43)" fg:x="35304" fg:w="17"/><text x="69.9354%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.03%)</title><rect x="69.6933%" y="693" width="0.0257%" height="15" fill="rgb(227,54,8)" fg:x="35308" fg:w="13"/><text x="69.9433%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.03%)</title><rect x="69.6933%" y="677" width="0.0257%" height="15" fill="rgb(253,139,49)" fg:x="35308" fg:w="13"/><text x="69.9433%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (28 samples, 0.06%)</title><rect x="69.7189%" y="709" width="0.0553%" height="15" fill="rgb(231,26,43)" fg:x="35321" fg:w="28"/><text x="69.9689%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.05%)</title><rect x="69.7248%" y="693" width="0.0493%" height="15" fill="rgb(207,121,39)" fg:x="35324" fg:w="25"/><text x="69.9748%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.05%)</title><rect x="69.7248%" y="677" width="0.0493%" height="15" fill="rgb(223,101,35)" fg:x="35324" fg:w="25"/><text x="69.9748%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (12 samples, 0.02%)</title><rect x="69.7742%" y="661" width="0.0237%" height="15" fill="rgb(232,87,23)" fg:x="35349" fg:w="12"/><text x="70.0242%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (7 samples, 0.01%)</title><rect x="69.7841%" y="645" width="0.0138%" height="15" fill="rgb(225,180,29)" fg:x="35354" fg:w="7"/><text x="70.0341%" y="655.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (7 samples, 0.01%)</title><rect x="69.7841%" y="629" width="0.0138%" height="15" fill="rgb(225,25,17)" fg:x="35354" fg:w="7"/><text x="70.0341%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="69.7841%" y="613" width="0.0138%" height="15" fill="rgb(223,8,52)" fg:x="35354" fg:w="7"/><text x="70.0341%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="69.7841%" y="597" width="0.0138%" height="15" fill="rgb(246,42,21)" fg:x="35354" fg:w="7"/><text x="70.0341%" y="607.50"></text></g><g><title>async_task::utils::abort_on_panic (14 samples, 0.03%)</title><rect x="69.7742%" y="709" width="0.0276%" height="15" fill="rgb(205,64,43)" fg:x="35349" fg:w="14"/><text x="70.0242%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (14 samples, 0.03%)</title><rect x="69.7742%" y="693" width="0.0276%" height="15" fill="rgb(221,160,13)" fg:x="35349" fg:w="14"/><text x="70.0242%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (14 samples, 0.03%)</title><rect x="69.7742%" y="677" width="0.0276%" height="15" fill="rgb(239,58,35)" fg:x="35349" fg:w="14"/><text x="70.0242%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,564 samples, 9.01%)</title><rect x="60.9076%" y="725" width="9.0087%" height="15" fill="rgb(251,26,40)" fg:x="30857" fg:w="4564"/><text x="61.1576%" y="735.50">async_task::r..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (57 samples, 0.11%)</title><rect x="69.8038%" y="709" width="0.1125%" height="15" fill="rgb(247,0,4)" fg:x="35364" fg:w="57"/><text x="70.0538%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.11%)</title><rect x="69.8038%" y="693" width="0.1125%" height="15" fill="rgb(218,130,10)" fg:x="35364" fg:w="57"/><text x="70.0538%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (256 samples, 0.51%)</title><rect x="70.1354%" y="693" width="0.5053%" height="15" fill="rgb(239,32,7)" fg:x="35532" fg:w="256"/><text x="70.3854%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (250 samples, 0.49%)</title><rect x="70.1473%" y="677" width="0.4935%" height="15" fill="rgb(210,192,24)" fg:x="35538" fg:w="250"/><text x="70.3973%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (250 samples, 0.49%)</title><rect x="70.1473%" y="661" width="0.4935%" height="15" fill="rgb(226,212,17)" fg:x="35538" fg:w="250"/><text x="70.3973%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (250 samples, 0.49%)</title><rect x="70.1473%" y="645" width="0.4935%" height="15" fill="rgb(219,201,28)" fg:x="35538" fg:w="250"/><text x="70.3973%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (9 samples, 0.02%)</title><rect x="70.6466%" y="693" width="0.0178%" height="15" fill="rgb(235,207,41)" fg:x="35791" fg:w="9"/><text x="70.8966%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="70.6466%" y="677" width="0.0178%" height="15" fill="rgb(241,95,54)" fg:x="35791" fg:w="9"/><text x="70.8966%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="70.6466%" y="661" width="0.0178%" height="15" fill="rgb(248,12,23)" fg:x="35791" fg:w="9"/><text x="70.8966%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (8 samples, 0.02%)</title><rect x="70.6664%" y="693" width="0.0158%" height="15" fill="rgb(228,173,4)" fg:x="35801" fg:w="8"/><text x="70.9164%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="70.6664%" y="677" width="0.0158%" height="15" fill="rgb(254,99,5)" fg:x="35801" fg:w="8"/><text x="70.9164%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.08%)</title><rect x="70.6822%" y="693" width="0.0849%" height="15" fill="rgb(212,184,17)" fg:x="35809" fg:w="43"/><text x="70.9322%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.08%)</title><rect x="70.6822%" y="677" width="0.0849%" height="15" fill="rgb(252,174,1)" fg:x="35809" fg:w="43"/><text x="70.9322%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (41 samples, 0.08%)</title><rect x="70.7670%" y="693" width="0.0809%" height="15" fill="rgb(241,118,51)" fg:x="35852" fg:w="41"/><text x="71.0170%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (41 samples, 0.08%)</title><rect x="70.7670%" y="677" width="0.0809%" height="15" fill="rgb(227,94,47)" fg:x="35852" fg:w="41"/><text x="71.0170%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (5,139 samples, 10.14%)</title><rect x="60.7497%" y="741" width="10.1437%" height="15" fill="rgb(229,104,2)" fg:x="30777" fg:w="5139"/><text x="60.9997%" y="751.50">async_executor:..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (492 samples, 0.97%)</title><rect x="69.9222%" y="725" width="0.9711%" height="15" fill="rgb(219,28,31)" fg:x="35424" fg:w="492"/><text x="70.1722%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (454 samples, 0.90%)</title><rect x="69.9972%" y="709" width="0.8961%" height="15" fill="rgb(233,109,36)" fg:x="35462" fg:w="454"/><text x="70.2472%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23 samples, 0.05%)</title><rect x="70.8480%" y="693" width="0.0454%" height="15" fill="rgb(246,88,11)" fg:x="35893" fg:w="23"/><text x="71.0980%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.05%)</title><rect x="70.8480%" y="677" width="0.0454%" height="15" fill="rgb(209,212,17)" fg:x="35893" fg:w="23"/><text x="71.0980%" y="687.50"></text></g><g><title>async_executor::LocalExecutor::spawn (17 samples, 0.03%)</title><rect x="70.8934%" y="741" width="0.0336%" height="15" fill="rgb(243,59,29)" fg:x="35916" fg:w="17"/><text x="71.1434%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="70.9368%" y="725" width="0.0118%" height="15" fill="rgb(244,205,48)" fg:x="35938" fg:w="6"/><text x="71.1868%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[async_task::task::Task&lt;()&gt;]&gt; (6 samples, 0.01%)</title><rect x="70.9368%" y="709" width="0.0118%" height="15" fill="rgb(227,30,6)" fg:x="35938" fg:w="6"/><text x="71.1868%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (6 samples, 0.01%)</title><rect x="70.9368%" y="693" width="0.0118%" height="15" fill="rgb(220,205,48)" fg:x="35938" fg:w="6"/><text x="71.1868%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="70.9368%" y="741" width="0.0138%" height="15" fill="rgb(250,94,14)" fg:x="35938" fg:w="7"/><text x="71.1868%" y="751.50"></text></g><g><title>__tls_get_addr_slow (9 samples, 0.02%)</title><rect x="71.0651%" y="661" width="0.0178%" height="15" fill="rgb(216,119,42)" fg:x="36003" fg:w="9"/><text x="71.3151%" y="671.50"></text></g><g><title>__tls_get_addr (79 samples, 0.16%)</title><rect x="71.0414%" y="677" width="0.1559%" height="15" fill="rgb(232,155,0)" fg:x="35991" fg:w="79"/><text x="71.2914%" y="687.50"></text></g><g><title>update_get_addr (58 samples, 0.11%)</title><rect x="71.0829%" y="661" width="0.1145%" height="15" fill="rgb(212,24,32)" fg:x="36012" fg:w="58"/><text x="71.3329%" y="671.50"></text></g><g><title>_dl_update_slotinfo (44 samples, 0.09%)</title><rect x="71.1105%" y="645" width="0.0869%" height="15" fill="rgb(216,69,20)" fg:x="36026" fg:w="44"/><text x="71.3605%" y="655.50"></text></g><g><title>_fini (7 samples, 0.01%)</title><rect x="71.1973%" y="677" width="0.0138%" height="15" fill="rgb(229,73,31)" fg:x="36070" fg:w="7"/><text x="71.4473%" y="687.50"></text></g><g><title>__tls_get_addr_slow (11 samples, 0.02%)</title><rect x="71.2664%" y="613" width="0.0217%" height="15" fill="rgb(224,219,20)" fg:x="36105" fg:w="11"/><text x="71.5164%" y="623.50"></text></g><g><title>__tls_get_addr (78 samples, 0.15%)</title><rect x="71.2368%" y="629" width="0.1540%" height="15" fill="rgb(215,146,41)" fg:x="36090" fg:w="78"/><text x="71.4868%" y="639.50"></text></g><g><title>update_get_addr (52 samples, 0.10%)</title><rect x="71.2881%" y="613" width="0.1026%" height="15" fill="rgb(244,71,31)" fg:x="36116" fg:w="52"/><text x="71.5381%" y="623.50"></text></g><g><title>_dl_update_slotinfo (45 samples, 0.09%)</title><rect x="71.3020%" y="597" width="0.0888%" height="15" fill="rgb(224,24,11)" fg:x="36123" fg:w="45"/><text x="71.5520%" y="607.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (188 samples, 0.37%)</title><rect x="71.0315%" y="693" width="0.3711%" height="15" fill="rgb(229,76,15)" fg:x="35986" fg:w="188"/><text x="71.2815%" y="703.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (97 samples, 0.19%)</title><rect x="71.2112%" y="677" width="0.1915%" height="15" fill="rgb(209,93,2)" fg:x="36077" fg:w="97"/><text x="71.4612%" y="687.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (96 samples, 0.19%)</title><rect x="71.2131%" y="661" width="0.1895%" height="15" fill="rgb(216,200,50)" fg:x="36078" fg:w="96"/><text x="71.4631%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (96 samples, 0.19%)</title><rect x="71.2131%" y="645" width="0.1895%" height="15" fill="rgb(211,67,34)" fg:x="36078" fg:w="96"/><text x="71.4631%" y="655.50"></text></g><g><title>_fini (6 samples, 0.01%)</title><rect x="71.3908%" y="629" width="0.0118%" height="15" fill="rgb(225,87,47)" fg:x="36168" fg:w="6"/><text x="71.6408%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (134 samples, 0.26%)</title><rect x="71.5566%" y="565" width="0.2645%" height="15" fill="rgb(217,185,16)" fg:x="36252" fg:w="134"/><text x="71.8066%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (129 samples, 0.25%)</title><rect x="71.5665%" y="549" width="0.2546%" height="15" fill="rgb(205,0,0)" fg:x="36257" fg:w="129"/><text x="71.8165%" y="559.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (124 samples, 0.24%)</title><rect x="71.5763%" y="533" width="0.2448%" height="15" fill="rgb(207,116,45)" fg:x="36262" fg:w="124"/><text x="71.8263%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (124 samples, 0.24%)</title><rect x="71.5763%" y="517" width="0.2448%" height="15" fill="rgb(221,156,26)" fg:x="36262" fg:w="124"/><text x="71.8263%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (124 samples, 0.24%)</title><rect x="71.5763%" y="501" width="0.2448%" height="15" fill="rgb(213,140,4)" fg:x="36262" fg:w="124"/><text x="71.8263%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (124 samples, 0.24%)</title><rect x="71.5763%" y="485" width="0.2448%" height="15" fill="rgb(231,224,15)" fg:x="36262" fg:w="124"/><text x="71.8263%" y="495.50"></text></g><g><title>async_task::utils::abort_on_panic (296 samples, 0.58%)</title><rect x="71.5566%" y="597" width="0.5843%" height="15" fill="rgb(244,76,20)" fg:x="36252" fg:w="296"/><text x="71.8066%" y="607.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (296 samples, 0.58%)</title><rect x="71.5566%" y="581" width="0.5843%" height="15" fill="rgb(238,117,7)" fg:x="36252" fg:w="296"/><text x="71.8066%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (162 samples, 0.32%)</title><rect x="71.8211%" y="565" width="0.3198%" height="15" fill="rgb(235,1,10)" fg:x="36386" fg:w="162"/><text x="72.0711%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (151 samples, 0.30%)</title><rect x="71.8428%" y="549" width="0.2981%" height="15" fill="rgb(216,165,6)" fg:x="36397" fg:w="151"/><text x="72.0928%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (151 samples, 0.30%)</title><rect x="71.8428%" y="533" width="0.2981%" height="15" fill="rgb(246,91,35)" fg:x="36397" fg:w="151"/><text x="72.0928%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (151 samples, 0.30%)</title><rect x="71.8428%" y="517" width="0.2981%" height="15" fill="rgb(228,96,24)" fg:x="36397" fg:w="151"/><text x="72.0928%" y="527.50"></text></g><g><title>core::mem::drop (146 samples, 0.29%)</title><rect x="71.8527%" y="501" width="0.2882%" height="15" fill="rgb(254,217,53)" fg:x="36402" fg:w="146"/><text x="72.1027%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (146 samples, 0.29%)</title><rect x="71.8527%" y="485" width="0.2882%" height="15" fill="rgb(209,60,0)" fg:x="36402" fg:w="146"/><text x="72.1027%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.29%)</title><rect x="71.8527%" y="469" width="0.2882%" height="15" fill="rgb(250,93,26)" fg:x="36402" fg:w="146"/><text x="72.1027%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (146 samples, 0.29%)</title><rect x="71.8527%" y="453" width="0.2882%" height="15" fill="rgb(211,9,40)" fg:x="36402" fg:w="146"/><text x="72.1027%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (146 samples, 0.29%)</title><rect x="71.8527%" y="437" width="0.2882%" height="15" fill="rgb(242,57,20)" fg:x="36402" fg:w="146"/><text x="72.1027%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (290 samples, 0.57%)</title><rect x="72.1428%" y="597" width="0.5724%" height="15" fill="rgb(248,85,48)" fg:x="36549" fg:w="290"/><text x="72.3928%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (290 samples, 0.57%)</title><rect x="72.1428%" y="581" width="0.5724%" height="15" fill="rgb(212,117,2)" fg:x="36549" fg:w="290"/><text x="72.3928%" y="591.50"></text></g><g><title>async_task::header::Header::register (628 samples, 1.24%)</title><rect x="71.4954%" y="613" width="1.2396%" height="15" fill="rgb(243,19,3)" fg:x="36221" fg:w="628"/><text x="71.7454%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.02%)</title><rect x="72.7153%" y="597" width="0.0197%" height="15" fill="rgb(232,217,24)" fg:x="36839" fg:w="10"/><text x="72.9653%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.02%)</title><rect x="72.7153%" y="581" width="0.0197%" height="15" fill="rgb(224,175,40)" fg:x="36839" fg:w="10"/><text x="72.9653%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (80 samples, 0.16%)</title><rect x="72.7370%" y="613" width="0.1579%" height="15" fill="rgb(212,162,32)" fg:x="36850" fg:w="80"/><text x="72.9870%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.16%)</title><rect x="72.7370%" y="597" width="0.1579%" height="15" fill="rgb(215,9,4)" fg:x="36850" fg:w="80"/><text x="72.9870%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (745 samples, 1.47%)</title><rect x="71.4263%" y="677" width="1.4705%" height="15" fill="rgb(242,42,7)" fg:x="36186" fg:w="745"/><text x="71.6763%" y="687.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (736 samples, 1.45%)</title><rect x="71.4441%" y="661" width="1.4528%" height="15" fill="rgb(242,184,45)" fg:x="36195" fg:w="736"/><text x="71.6941%" y="671.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (731 samples, 1.44%)</title><rect x="71.4539%" y="645" width="1.4429%" height="15" fill="rgb(228,111,51)" fg:x="36200" fg:w="731"/><text x="71.7039%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (730 samples, 1.44%)</title><rect x="71.4559%" y="629" width="1.4409%" height="15" fill="rgb(236,147,17)" fg:x="36201" fg:w="730"/><text x="71.7059%" y="639.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.02%)</title><rect x="72.8968%" y="677" width="0.0237%" height="15" fill="rgb(210,75,22)" fg:x="36931" fg:w="12"/><text x="73.1468%" y="687.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.02%)</title><rect x="72.8968%" y="661" width="0.0237%" height="15" fill="rgb(217,159,45)" fg:x="36931" fg:w="12"/><text x="73.1468%" y="671.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (8 samples, 0.02%)</title><rect x="72.9205%" y="677" width="0.0158%" height="15" fill="rgb(245,165,53)" fg:x="36943" fg:w="8"/><text x="73.1705%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="72.9225%" y="661" width="0.0138%" height="15" fill="rgb(251,190,50)" fg:x="36944" fg:w="7"/><text x="73.1725%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (6 samples, 0.01%)</title><rect x="72.9363%" y="677" width="0.0118%" height="15" fill="rgb(208,203,29)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (6 samples, 0.01%)</title><rect x="72.9363%" y="661" width="0.0118%" height="15" fill="rgb(207,209,35)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="671.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="72.9363%" y="645" width="0.0118%" height="15" fill="rgb(230,144,49)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="72.9363%" y="629" width="0.0118%" height="15" fill="rgb(229,31,6)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="72.9363%" y="613" width="0.0118%" height="15" fill="rgb(251,129,24)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="623.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="72.9363%" y="597" width="0.0118%" height="15" fill="rgb(235,105,15)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="607.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="72.9363%" y="581" width="0.0118%" height="15" fill="rgb(216,52,43)" fg:x="36951" fg:w="6"/><text x="73.1863%" y="591.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (6,623 samples, 13.07%)</title><rect x="59.8910%" y="821" width="13.0729%" height="15" fill="rgb(238,144,41)" fg:x="30342" fg:w="6623"/><text x="60.1410%" y="831.50">&lt;bevy_ecs::schedule:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (6,623 samples, 13.07%)</title><rect x="59.8910%" y="805" width="13.0729%" height="15" fill="rgb(243,63,9)" fg:x="30342" fg:w="6623"/><text x="60.1410%" y="815.50">bevy_tasks::task_poo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,623 samples, 13.07%)</title><rect x="59.8910%" y="789" width="13.0729%" height="15" fill="rgb(246,208,1)" fg:x="30342" fg:w="6623"/><text x="60.1410%" y="799.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,623 samples, 13.07%)</title><rect x="59.8910%" y="773" width="13.0729%" height="15" fill="rgb(233,182,18)" fg:x="30342" fg:w="6623"/><text x="60.1410%" y="783.50">std::thread::local::..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (6,620 samples, 13.07%)</title><rect x="59.8970%" y="757" width="13.0670%" height="15" fill="rgb(242,224,8)" fg:x="30345" fg:w="6620"/><text x="60.1470%" y="767.50">bevy_tasks::task_poo..</text></g><g><title>futures_lite::future::block_on (1,016 samples, 2.01%)</title><rect x="70.9585%" y="741" width="2.0054%" height="15" fill="rgb(243,54,37)" fg:x="35949" fg:w="1016"/><text x="71.2085%" y="751.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (993 samples, 1.96%)</title><rect x="71.0039%" y="725" width="1.9600%" height="15" fill="rgb(233,192,12)" fg:x="35972" fg:w="993"/><text x="71.2539%" y="735.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (982 samples, 1.94%)</title><rect x="71.0256%" y="709" width="1.9383%" height="15" fill="rgb(251,192,53)" fg:x="35983" fg:w="982"/><text x="71.2756%" y="719.50">s..</text></g><g><title>futures_lite::future::block_on::{{closure}} (791 samples, 1.56%)</title><rect x="71.4026%" y="693" width="1.5613%" height="15" fill="rgb(246,141,26)" fg:x="36174" fg:w="791"/><text x="71.6526%" y="703.50"></text></g><g><title>parking::Parker::park (8 samples, 0.02%)</title><rect x="72.9482%" y="677" width="0.0158%" height="15" fill="rgb(239,195,19)" fg:x="36957" fg:w="8"/><text x="73.1982%" y="687.50"></text></g><g><title>parking::Inner::park (8 samples, 0.02%)</title><rect x="72.9482%" y="661" width="0.0158%" height="15" fill="rgb(241,16,39)" fg:x="36957" fg:w="8"/><text x="73.1982%" y="671.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (9,603 samples, 18.96%)</title><rect x="54.0346%" y="901" width="18.9550%" height="15" fill="rgb(223,13,53)" fg:x="27375" fg:w="9603"/><text x="54.2846%" y="911.50">winit::platform_impl::platform..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (9,603 samples, 18.96%)</title><rect x="54.0346%" y="885" width="18.9550%" height="15" fill="rgb(214,227,0)" fg:x="27375" fg:w="9603"/><text x="54.2846%" y="895.50">bevy_winit::winit_runner_with:..</text></g><g><title>bevy_app::app::App::update (9,603 samples, 18.96%)</title><rect x="54.0346%" y="869" width="18.9550%" height="15" fill="rgb(228,103,26)" fg:x="27375" fg:w="9603"/><text x="54.2846%" y="879.50">bevy_app::app::App::update</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (6,636 samples, 13.10%)</title><rect x="59.8910%" y="853" width="13.0986%" height="15" fill="rgb(254,177,53)" fg:x="30342" fg:w="6636"/><text x="60.1410%" y="863.50">bevy_ecs::schedule::..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (6,636 samples, 13.10%)</title><rect x="59.8910%" y="837" width="13.0986%" height="15" fill="rgb(208,201,34)" fg:x="30342" fg:w="6636"/><text x="60.1410%" y="847.50">&lt;bevy_ecs::schedule:..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (13 samples, 0.03%)</title><rect x="72.9640%" y="821" width="0.0257%" height="15" fill="rgb(212,39,5)" fg:x="36965" fg:w="13"/><text x="73.2140%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.03%)</title><rect x="72.9640%" y="805" width="0.0257%" height="15" fill="rgb(246,117,3)" fg:x="36965" fg:w="13"/><text x="73.2140%" y="815.50"></text></g><g><title>bevy_winit::change_window (8 samples, 0.02%)</title><rect x="72.9738%" y="789" width="0.0158%" height="15" fill="rgb(244,118,39)" fg:x="36970" fg:w="8"/><text x="73.2238%" y="799.50"></text></g><g><title>_XimCbDispatch (7 samples, 0.01%)</title><rect x="72.9896%" y="869" width="0.0138%" height="15" fill="rgb(241,64,10)" fg:x="36978" fg:w="7"/><text x="73.2396%" y="879.50"></text></g><g><title>_XimProcSyncReply (7 samples, 0.01%)</title><rect x="72.9896%" y="853" width="0.0138%" height="15" fill="rgb(229,39,44)" fg:x="36978" fg:w="7"/><text x="73.2396%" y="863.50"></text></g><g><title>_XimFilterWaitEvent (7 samples, 0.01%)</title><rect x="73.0034%" y="869" width="0.0138%" height="15" fill="rgb(230,226,3)" fg:x="36985" fg:w="7"/><text x="73.2534%" y="879.50"></text></g><g><title>_XimFilterWaitEvent (7 samples, 0.01%)</title><rect x="73.0034%" y="853" width="0.0138%" height="15" fill="rgb(222,13,42)" fg:x="36985" fg:w="7"/><text x="73.2534%" y="863.50"></text></g><g><title>_XSend (8 samples, 0.02%)</title><rect x="73.0370%" y="693" width="0.0158%" height="15" fill="rgb(247,180,54)" fg:x="37002" fg:w="8"/><text x="73.2870%" y="703.50"></text></g><g><title>__libc_poll (10 samples, 0.02%)</title><rect x="73.0627%" y="645" width="0.0197%" height="15" fill="rgb(205,96,16)" fg:x="37015" fg:w="10"/><text x="73.3127%" y="655.50"></text></g><g><title>xcb_connect_to_fd (17 samples, 0.03%)</title><rect x="73.0607%" y="661" width="0.0336%" height="15" fill="rgb(205,100,21)" fg:x="37014" fg:w="17"/><text x="73.3107%" y="671.50"></text></g><g><title>xcb_wait_for_special_event (6 samples, 0.01%)</title><rect x="73.0824%" y="645" width="0.0118%" height="15" fill="rgb(248,51,4)" fg:x="37025" fg:w="6"/><text x="73.3324%" y="655.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (43 samples, 0.08%)</title><rect x="73.0173%" y="869" width="0.0849%" height="15" fill="rgb(217,197,30)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="879.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (43 samples, 0.08%)</title><rect x="73.0173%" y="853" width="0.0849%" height="15" fill="rgb(240,179,40)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (43 samples, 0.08%)</title><rect x="73.0173%" y="837" width="0.0849%" height="15" fill="rgb(212,185,35)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="847.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (43 samples, 0.08%)</title><rect x="73.0173%" y="821" width="0.0849%" height="15" fill="rgb(251,222,31)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="831.50"></text></g><g><title>winit::window::Window::inner_size (43 samples, 0.08%)</title><rect x="73.0173%" y="805" width="0.0849%" height="15" fill="rgb(208,140,36)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="815.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (43 samples, 0.08%)</title><rect x="73.0173%" y="789" width="0.0849%" height="15" fill="rgb(220,148,1)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="799.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (43 samples, 0.08%)</title><rect x="73.0173%" y="773" width="0.0849%" height="15" fill="rgb(254,4,28)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="783.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (43 samples, 0.08%)</title><rect x="73.0173%" y="757" width="0.0849%" height="15" fill="rgb(222,185,44)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="767.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (43 samples, 0.08%)</title><rect x="73.0173%" y="741" width="0.0849%" height="15" fill="rgb(215,74,39)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="751.50"></text></g><g><title>XGetGeometry (43 samples, 0.08%)</title><rect x="73.0173%" y="725" width="0.0849%" height="15" fill="rgb(247,86,4)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="735.50"></text></g><g><title>_XReply (43 samples, 0.08%)</title><rect x="73.0173%" y="709" width="0.0849%" height="15" fill="rgb(231,105,32)" fg:x="36992" fg:w="43"/><text x="73.2673%" y="719.50"></text></g><g><title>xcb_wait_for_reply64 (24 samples, 0.05%)</title><rect x="73.0548%" y="693" width="0.0474%" height="15" fill="rgb(222,65,35)" fg:x="37011" fg:w="24"/><text x="73.3048%" y="703.50"></text></g><g><title>xcb_unregister_for_special_event (22 samples, 0.04%)</title><rect x="73.0587%" y="677" width="0.0434%" height="15" fill="rgb(218,145,35)" fg:x="37013" fg:w="22"/><text x="73.3087%" y="687.50"></text></g><g><title>bevy_winit::run (9,661 samples, 19.07%)</title><rect x="54.0346%" y="981" width="19.0695%" height="15" fill="rgb(208,7,15)" fg:x="27375" fg:w="9661"/><text x="54.2846%" y="991.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (9,661 samples, 19.07%)</title><rect x="54.0346%" y="965" width="19.0695%" height="15" fill="rgb(209,83,13)" fg:x="27375" fg:w="9661"/><text x="54.2846%" y="975.50">winit::event_loop::EventLoop&lt;T..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (9,661 samples, 19.07%)</title><rect x="54.0346%" y="949" width="19.0695%" height="15" fill="rgb(218,3,10)" fg:x="27375" fg:w="9661"/><text x="54.2846%" y="959.50">winit::platform_impl::platform..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (9,661 samples, 19.07%)</title><rect x="54.0346%" y="933" width="19.0695%" height="15" fill="rgb(211,219,4)" fg:x="27375" fg:w="9661"/><text x="54.2846%" y="943.50">winit::platform_impl::platform..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (9,661 samples, 19.07%)</title><rect x="54.0346%" y="917" width="19.0695%" height="15" fill="rgb(228,194,12)" fg:x="27375" fg:w="9661"/><text x="54.2846%" y="927.50">winit::platform_impl::platform..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (58 samples, 0.11%)</title><rect x="72.9896%" y="901" width="0.1145%" height="15" fill="rgb(210,175,7)" fg:x="36978" fg:w="58"/><text x="73.2396%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (58 samples, 0.11%)</title><rect x="72.9896%" y="885" width="0.1145%" height="15" fill="rgb(243,132,6)" fg:x="36978" fg:w="58"/><text x="73.2396%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.03%)</title><rect x="73.1337%" y="693" width="0.0296%" height="15" fill="rgb(207,72,18)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.03%)</title><rect x="73.1337%" y="677" width="0.0296%" height="15" fill="rgb(236,1,18)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.03%)</title><rect x="73.1337%" y="661" width="0.0296%" height="15" fill="rgb(227,0,18)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.03%)</title><rect x="73.1337%" y="645" width="0.0296%" height="15" fill="rgb(247,37,5)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.03%)</title><rect x="73.1337%" y="629" width="0.0296%" height="15" fill="rgb(237,179,24)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.03%)</title><rect x="73.1337%" y="613" width="0.0296%" height="15" fill="rgb(226,53,20)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.03%)</title><rect x="73.1337%" y="597" width="0.0296%" height="15" fill="rgb(247,75,7)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.03%)</title><rect x="73.1337%" y="581" width="0.0296%" height="15" fill="rgb(233,96,12)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.03%)</title><rect x="73.1337%" y="565" width="0.0296%" height="15" fill="rgb(224,125,0)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.03%)</title><rect x="73.1337%" y="549" width="0.0296%" height="15" fill="rgb(224,92,25)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="559.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.03%)</title><rect x="73.1337%" y="533" width="0.0296%" height="15" fill="rgb(224,42,24)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="543.50"></text></g><g><title>__realloc (15 samples, 0.03%)</title><rect x="73.1337%" y="517" width="0.0296%" height="15" fill="rgb(234,132,49)" fg:x="37051" fg:w="15"/><text x="73.3837%" y="527.50"></text></g><g><title>_int_realloc (14 samples, 0.03%)</title><rect x="73.1357%" y="501" width="0.0276%" height="15" fill="rgb(248,100,35)" fg:x="37052" fg:w="14"/><text x="73.3857%" y="511.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="73.1416%" y="485" width="0.0217%" height="15" fill="rgb(239,94,40)" fg:x="37055" fg:w="11"/><text x="73.3916%" y="495.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (30 samples, 0.06%)</title><rect x="73.1337%" y="741" width="0.0592%" height="15" fill="rgb(235,139,28)" fg:x="37051" fg:w="30"/><text x="73.3837%" y="751.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (30 samples, 0.06%)</title><rect x="73.1337%" y="725" width="0.0592%" height="15" fill="rgb(217,144,7)" fg:x="37051" fg:w="30"/><text x="73.3837%" y="735.50"></text></g><g><title>wgpu_render_pass_set_bind_group (30 samples, 0.06%)</title><rect x="73.1337%" y="709" width="0.0592%" height="15" fill="rgb(227,55,4)" fg:x="37051" fg:w="30"/><text x="73.3837%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.03%)</title><rect x="73.1633%" y="693" width="0.0296%" height="15" fill="rgb(252,82,54)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.03%)</title><rect x="73.1633%" y="677" width="0.0296%" height="15" fill="rgb(245,172,4)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.03%)</title><rect x="73.1633%" y="661" width="0.0296%" height="15" fill="rgb(207,26,27)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.03%)</title><rect x="73.1633%" y="645" width="0.0296%" height="15" fill="rgb(252,98,18)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.03%)</title><rect x="73.1633%" y="629" width="0.0296%" height="15" fill="rgb(244,8,26)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.03%)</title><rect x="73.1633%" y="613" width="0.0296%" height="15" fill="rgb(237,173,45)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="623.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.03%)</title><rect x="73.1633%" y="597" width="0.0296%" height="15" fill="rgb(208,213,49)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="607.50"></text></g><g><title>__realloc (15 samples, 0.03%)</title><rect x="73.1633%" y="581" width="0.0296%" height="15" fill="rgb(212,122,37)" fg:x="37066" fg:w="15"/><text x="73.4133%" y="591.50"></text></g><g><title>_int_realloc (13 samples, 0.03%)</title><rect x="73.1673%" y="565" width="0.0257%" height="15" fill="rgb(213,80,17)" fg:x="37068" fg:w="13"/><text x="73.4173%" y="575.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="73.1791%" y="549" width="0.0138%" height="15" fill="rgb(206,210,43)" fg:x="37074" fg:w="7"/><text x="73.4291%" y="559.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (47 samples, 0.09%)</title><rect x="73.1199%" y="789" width="0.0928%" height="15" fill="rgb(229,214,3)" fg:x="37044" fg:w="47"/><text x="73.3699%" y="799.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (47 samples, 0.09%)</title><rect x="73.1199%" y="773" width="0.0928%" height="15" fill="rgb(235,213,29)" fg:x="37044" fg:w="47"/><text x="73.3699%" y="783.50"></text></g><g><title>&lt;E as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (47 samples, 0.09%)</title><rect x="73.1199%" y="757" width="0.0928%" height="15" fill="rgb(248,135,26)" fg:x="37044" fg:w="47"/><text x="73.3699%" y="767.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::DrawMeshInstanced as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (10 samples, 0.02%)</title><rect x="73.1929%" y="741" width="0.0197%" height="15" fill="rgb(242,188,12)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="751.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_vertex_buffer (10 samples, 0.02%)</title><rect x="73.1929%" y="725" width="0.0197%" height="15" fill="rgb(245,38,12)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="735.50"></text></g><g><title>wgpu_render_pass_set_vertex_buffer (10 samples, 0.02%)</title><rect x="73.1929%" y="709" width="0.0197%" height="15" fill="rgb(218,42,13)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.02%)</title><rect x="73.1929%" y="693" width="0.0197%" height="15" fill="rgb(238,132,49)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.02%)</title><rect x="73.1929%" y="677" width="0.0197%" height="15" fill="rgb(209,196,19)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="73.1929%" y="661" width="0.0197%" height="15" fill="rgb(244,131,22)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="73.1929%" y="645" width="0.0197%" height="15" fill="rgb(223,18,34)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.02%)</title><rect x="73.1929%" y="629" width="0.0197%" height="15" fill="rgb(252,124,54)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.02%)</title><rect x="73.1929%" y="613" width="0.0197%" height="15" fill="rgb(229,106,42)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="623.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.02%)</title><rect x="73.1929%" y="597" width="0.0197%" height="15" fill="rgb(221,129,1)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="607.50"></text></g><g><title>__realloc (10 samples, 0.02%)</title><rect x="73.1929%" y="581" width="0.0197%" height="15" fill="rgb(229,74,15)" fg:x="37081" fg:w="10"/><text x="73.4429%" y="591.50"></text></g><g><title>_int_realloc (9 samples, 0.02%)</title><rect x="73.1949%" y="565" width="0.0178%" height="15" fill="rgb(210,206,50)" fg:x="37082" fg:w="9"/><text x="73.4449%" y="575.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (50 samples, 0.10%)</title><rect x="73.1159%" y="837" width="0.0987%" height="15" fill="rgb(251,114,31)" fg:x="37042" fg:w="50"/><text x="73.3659%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (50 samples, 0.10%)</title><rect x="73.1159%" y="821" width="0.0987%" height="15" fill="rgb(215,225,28)" fg:x="37042" fg:w="50"/><text x="73.3659%" y="831.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (48 samples, 0.09%)</title><rect x="73.1199%" y="805" width="0.0947%" height="15" fill="rgb(237,109,14)" fg:x="37044" fg:w="48"/><text x="73.3699%" y="815.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_command_encoder (6 samples, 0.01%)</title><rect x="73.2146%" y="837" width="0.0118%" height="15" fill="rgb(230,13,37)" fg:x="37092" fg:w="6"/><text x="73.4646%" y="847.50"></text></g><g><title>wgpu::Device::create_command_encoder (6 samples, 0.01%)</title><rect x="73.2146%" y="821" width="0.0118%" height="15" fill="rgb(231,40,28)" fg:x="37092" fg:w="6"/><text x="73.4646%" y="831.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (6 samples, 0.01%)</title><rect x="73.2146%" y="805" width="0.0118%" height="15" fill="rgb(231,202,18)" fg:x="37092" fg:w="6"/><text x="73.4646%" y="815.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (6 samples, 0.01%)</title><rect x="73.2146%" y="789" width="0.0118%" height="15" fill="rgb(225,33,18)" fg:x="37092" fg:w="6"/><text x="73.4646%" y="799.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (10 samples, 0.02%)</title><rect x="73.2265%" y="789" width="0.0197%" height="15" fill="rgb(223,64,47)" fg:x="37098" fg:w="10"/><text x="73.4765%" y="799.50"></text></g><g><title>ash::device::Device::queue_submit (10 samples, 0.02%)</title><rect x="73.2265%" y="773" width="0.0197%" height="15" fill="rgb(234,114,13)" fg:x="37098" fg:w="10"/><text x="73.4765%" y="783.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (10 samples, 0.02%)</title><rect x="73.2265%" y="757" width="0.0197%" height="15" fill="rgb(248,56,40)" fg:x="37098" fg:w="10"/><text x="73.4765%" y="767.50"></text></g><g><title>__glx_Main (10 samples, 0.02%)</title><rect x="73.2265%" y="741" width="0.0197%" height="15" fill="rgb(221,194,21)" fg:x="37098" fg:w="10"/><text x="73.4765%" y="751.50"></text></g><g><title>glXCreateGLXPbufferSGIX (10 samples, 0.02%)</title><rect x="73.2265%" y="725" width="0.0197%" height="15" fill="rgb(242,108,46)" fg:x="37098" fg:w="10"/><text x="73.4765%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_bind_group (17 samples, 0.03%)</title><rect x="73.2462%" y="741" width="0.0336%" height="15" fill="rgb(220,106,10)" fg:x="37108" fg:w="17"/><text x="73.4962%" y="751.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (17 samples, 0.03%)</title><rect x="73.2462%" y="725" width="0.0336%" height="15" fill="rgb(211,88,4)" fg:x="37108" fg:w="17"/><text x="73.4962%" y="735.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (17 samples, 0.03%)</title><rect x="73.2462%" y="709" width="0.0336%" height="15" fill="rgb(214,95,34)" fg:x="37108" fg:w="17"/><text x="73.4962%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets (16 samples, 0.03%)</title><rect x="73.2482%" y="693" width="0.0316%" height="15" fill="rgb(250,160,33)" fg:x="37109" fg:w="16"/><text x="73.4982%" y="703.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (16 samples, 0.03%)</title><rect x="73.2482%" y="677" width="0.0316%" height="15" fill="rgb(225,29,10)" fg:x="37109" fg:w="16"/><text x="73.4982%" y="687.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (16 samples, 0.03%)</title><rect x="73.2482%" y="661" width="0.0316%" height="15" fill="rgb(224,28,30)" fg:x="37109" fg:w="16"/><text x="73.4982%" y="671.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (16 samples, 0.03%)</title><rect x="73.2482%" y="645" width="0.0316%" height="15" fill="rgb(231,77,4)" fg:x="37109" fg:w="16"/><text x="73.4982%" y="655.50"></text></g><g><title>inplace_it::fixed_array::indirect (11 samples, 0.02%)</title><rect x="73.2581%" y="629" width="0.0217%" height="15" fill="rgb(209,63,21)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="639.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (11 samples, 0.02%)</title><rect x="73.2581%" y="613" width="0.0217%" height="15" fill="rgb(226,22,11)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="623.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (11 samples, 0.02%)</title><rect x="73.2581%" y="597" width="0.0217%" height="15" fill="rgb(216,82,30)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets::{{closure}} (11 samples, 0.02%)</title><rect x="73.2581%" y="581" width="0.0217%" height="15" fill="rgb(246,227,38)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="591.50"></text></g><g><title>ash::device::Device::free_descriptor_sets (11 samples, 0.02%)</title><rect x="73.2581%" y="565" width="0.0217%" height="15" fill="rgb(251,203,53)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="575.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::free_descriptor_sets (11 samples, 0.02%)</title><rect x="73.2581%" y="549" width="0.0217%" height="15" fill="rgb(254,101,1)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="559.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="73.2581%" y="533" width="0.0217%" height="15" fill="rgb(241,180,5)" fg:x="37114" fg:w="11"/><text x="73.5081%" y="543.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (10 samples, 0.02%)</title><rect x="73.2600%" y="517" width="0.0197%" height="15" fill="rgb(218,168,4)" fg:x="37115" fg:w="10"/><text x="73.5100%" y="527.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="73.2660%" y="501" width="0.0138%" height="15" fill="rgb(224,223,32)" fg:x="37118" fg:w="7"/><text x="73.5160%" y="511.50"></text></g><g><title>gpu_alloc::buddy::Size::release (7 samples, 0.01%)</title><rect x="73.2798%" y="693" width="0.0138%" height="15" fill="rgb(236,106,22)" fg:x="37125" fg:w="7"/><text x="73.5298%" y="703.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (11 samples, 0.02%)</title><rect x="73.2798%" y="709" width="0.0217%" height="15" fill="rgb(206,121,5)" fg:x="37125" fg:w="11"/><text x="73.5298%" y="719.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block (6 samples, 0.01%)</title><rect x="73.3035%" y="693" width="0.0118%" height="15" fill="rgb(233,87,28)" fg:x="37137" fg:w="6"/><text x="73.5535%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (36 samples, 0.07%)</title><rect x="73.2462%" y="789" width="0.0711%" height="15" fill="rgb(236,137,17)" fg:x="37108" fg:w="36"/><text x="73.4962%" y="799.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (36 samples, 0.07%)</title><rect x="73.2462%" y="773" width="0.0711%" height="15" fill="rgb(209,183,38)" fg:x="37108" fg:w="36"/><text x="73.4962%" y="783.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (36 samples, 0.07%)</title><rect x="73.2462%" y="757" width="0.0711%" height="15" fill="rgb(206,162,44)" fg:x="37108" fg:w="36"/><text x="73.4962%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (19 samples, 0.04%)</title><rect x="73.2798%" y="741" width="0.0375%" height="15" fill="rgb(237,70,39)" fg:x="37125" fg:w="19"/><text x="73.5298%" y="751.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (19 samples, 0.04%)</title><rect x="73.2798%" y="725" width="0.0375%" height="15" fill="rgb(212,176,5)" fg:x="37125" fg:w="19"/><text x="73.5298%" y="735.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (8 samples, 0.02%)</title><rect x="73.3015%" y="709" width="0.0158%" height="15" fill="rgb(232,95,16)" fg:x="37136" fg:w="8"/><text x="73.5515%" y="719.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (109 samples, 0.22%)</title><rect x="73.1159%" y="853" width="0.2152%" height="15" fill="rgb(219,115,35)" fg:x="37042" fg:w="109"/><text x="73.3659%" y="863.50"></text></g><g><title>wgpu::Queue::submit (53 samples, 0.10%)</title><rect x="73.2265%" y="837" width="0.1046%" height="15" fill="rgb(251,67,27)" fg:x="37098" fg:w="53"/><text x="73.4765%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (53 samples, 0.10%)</title><rect x="73.2265%" y="821" width="0.1046%" height="15" fill="rgb(222,95,40)" fg:x="37098" fg:w="53"/><text x="73.4765%" y="831.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (53 samples, 0.10%)</title><rect x="73.2265%" y="805" width="0.1046%" height="15" fill="rgb(250,35,16)" fg:x="37098" fg:w="53"/><text x="73.4765%" y="815.50"></text></g><g><title>_nv009glcore (7 samples, 0.01%)</title><rect x="73.3311%" y="677" width="0.0138%" height="15" fill="rgb(224,86,44)" fg:x="37151" fg:w="7"/><text x="73.5811%" y="687.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="73.3311%" y="661" width="0.0138%" height="15" fill="rgb(237,53,53)" fg:x="37151" fg:w="7"/><text x="73.5811%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (122 samples, 0.24%)</title><rect x="73.1061%" y="949" width="0.2408%" height="15" fill="rgb(208,171,33)" fg:x="37037" fg:w="122"/><text x="73.3561%" y="959.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (122 samples, 0.24%)</title><rect x="73.1061%" y="933" width="0.2408%" height="15" fill="rgb(222,64,27)" fg:x="37037" fg:w="122"/><text x="73.3561%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (122 samples, 0.24%)</title><rect x="73.1061%" y="917" width="0.2408%" height="15" fill="rgb(221,121,35)" fg:x="37037" fg:w="122"/><text x="73.3561%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (117 samples, 0.23%)</title><rect x="73.1159%" y="901" width="0.2309%" height="15" fill="rgb(228,137,42)" fg:x="37042" fg:w="117"/><text x="73.3659%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (117 samples, 0.23%)</title><rect x="73.1159%" y="885" width="0.2309%" height="15" fill="rgb(227,54,21)" fg:x="37042" fg:w="117"/><text x="73.3659%" y="895.50"></text></g><g><title>bevy_render::renderer::render_system (117 samples, 0.23%)</title><rect x="73.1159%" y="869" width="0.2309%" height="15" fill="rgb(240,168,33)" fg:x="37042" fg:w="117"/><text x="73.3659%" y="879.50"></text></g><g><title>wgpu::SurfaceTexture::present (8 samples, 0.02%)</title><rect x="73.3311%" y="853" width="0.0158%" height="15" fill="rgb(243,159,6)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (8 samples, 0.02%)</title><rect x="73.3311%" y="837" width="0.0158%" height="15" fill="rgb(205,211,41)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="847.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (8 samples, 0.02%)</title><rect x="73.3311%" y="821" width="0.0158%" height="15" fill="rgb(253,30,1)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="831.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (8 samples, 0.02%)</title><rect x="73.3311%" y="805" width="0.0158%" height="15" fill="rgb(226,80,18)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="815.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (8 samples, 0.02%)</title><rect x="73.3311%" y="789" width="0.0158%" height="15" fill="rgb(253,156,46)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="799.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (8 samples, 0.02%)</title><rect x="73.3311%" y="773" width="0.0158%" height="15" fill="rgb(248,87,27)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="783.50"></text></g><g><title>__glx_Main (8 samples, 0.02%)</title><rect x="73.3311%" y="757" width="0.0158%" height="15" fill="rgb(227,122,2)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="73.3311%" y="741" width="0.0158%" height="15" fill="rgb(229,94,39)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="73.3311%" y="725" width="0.0158%" height="15" fill="rgb(225,173,31)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="73.3311%" y="709" width="0.0158%" height="15" fill="rgb(239,176,30)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="73.3311%" y="693" width="0.0158%" height="15" fill="rgb(212,104,21)" fg:x="37151" fg:w="8"/><text x="73.5811%" y="703.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="73.3469%" y="485" width="0.0553%" height="15" fill="rgb(240,209,40)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="495.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (28 samples, 0.06%)</title><rect x="73.3469%" y="469" width="0.0553%" height="15" fill="rgb(234,195,5)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="479.50"></text></g><g><title>csv::string_record::StringRecord::read (28 samples, 0.06%)</title><rect x="73.3469%" y="453" width="0.0553%" height="15" fill="rgb(238,213,1)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="463.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (28 samples, 0.06%)</title><rect x="73.3469%" y="437" width="0.0553%" height="15" fill="rgb(235,182,54)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="447.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (28 samples, 0.06%)</title><rect x="73.3469%" y="421" width="0.0553%" height="15" fill="rgb(229,50,46)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (28 samples, 0.06%)</title><rect x="73.3469%" y="405" width="0.0553%" height="15" fill="rgb(219,145,13)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="415.50"></text></g><g><title>std::io::Read::read_buf (28 samples, 0.06%)</title><rect x="73.3469%" y="389" width="0.0553%" height="15" fill="rgb(220,226,10)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="399.50"></text></g><g><title>std::io::default_read_buf (28 samples, 0.06%)</title><rect x="73.3469%" y="373" width="0.0553%" height="15" fill="rgb(248,47,30)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="383.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (28 samples, 0.06%)</title><rect x="73.3469%" y="357" width="0.0553%" height="15" fill="rgb(231,209,44)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="367.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.06%)</title><rect x="73.3469%" y="341" width="0.0553%" height="15" fill="rgb(209,80,30)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="351.50"></text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.06%)</title><rect x="73.3469%" y="325" width="0.0553%" height="15" fill="rgb(232,9,14)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="335.50"></text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.06%)</title><rect x="73.3469%" y="309" width="0.0553%" height="15" fill="rgb(243,91,43)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="319.50"></text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.06%)</title><rect x="73.3469%" y="293" width="0.0553%" height="15" fill="rgb(231,90,52)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="303.50"></text></g><g><title>flate2::zio::read (28 samples, 0.06%)</title><rect x="73.3469%" y="277" width="0.0553%" height="15" fill="rgb(253,192,44)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="287.50"></text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (28 samples, 0.06%)</title><rect x="73.3469%" y="261" width="0.0553%" height="15" fill="rgb(241,66,31)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="271.50"></text></g><g><title>flate2::mem::Decompress::decompress (28 samples, 0.06%)</title><rect x="73.3469%" y="245" width="0.0553%" height="15" fill="rgb(235,81,37)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="255.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (28 samples, 0.06%)</title><rect x="73.3469%" y="229" width="0.0553%" height="15" fill="rgb(223,221,9)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="239.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (28 samples, 0.06%)</title><rect x="73.3469%" y="213" width="0.0553%" height="15" fill="rgb(242,180,7)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="223.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (28 samples, 0.06%)</title><rect x="73.3469%" y="197" width="0.0553%" height="15" fill="rgb(243,78,19)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="207.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (28 samples, 0.06%)</title><rect x="73.3469%" y="181" width="0.0553%" height="15" fill="rgb(233,23,17)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="191.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (28 samples, 0.06%)</title><rect x="73.3469%" y="165" width="0.0553%" height="15" fill="rgb(252,122,45)" fg:x="37159" fg:w="28"/><text x="73.5969%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="73.4633%" y="229" width="0.0178%" height="15" fill="rgb(247,108,20)" fg:x="37218" fg:w="9"/><text x="73.7133%" y="239.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (17 samples, 0.03%)</title><rect x="73.4495%" y="261" width="0.0336%" height="15" fill="rgb(235,84,21)" fg:x="37211" fg:w="17"/><text x="73.6995%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (13 samples, 0.03%)</title><rect x="73.4574%" y="245" width="0.0257%" height="15" fill="rgb(247,129,10)" fg:x="37215" fg:w="13"/><text x="73.7074%" y="255.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (9 samples, 0.02%)</title><rect x="73.4831%" y="261" width="0.0178%" height="15" fill="rgb(208,173,14)" fg:x="37228" fg:w="9"/><text x="73.7331%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (51 samples, 0.10%)</title><rect x="73.4495%" y="293" width="0.1007%" height="15" fill="rgb(236,31,38)" fg:x="37211" fg:w="51"/><text x="73.6995%" y="303.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (51 samples, 0.10%)</title><rect x="73.4495%" y="277" width="0.1007%" height="15" fill="rgb(232,65,17)" fg:x="37211" fg:w="51"/><text x="73.6995%" y="287.50"></text></g><g><title>std::sys_common::memchr::memrchr (25 samples, 0.05%)</title><rect x="73.5008%" y="261" width="0.0493%" height="15" fill="rgb(224,45,49)" fg:x="37237" fg:w="25"/><text x="73.7508%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr (25 samples, 0.05%)</title><rect x="73.5008%" y="245" width="0.0493%" height="15" fill="rgb(225,2,53)" fg:x="37237" fg:w="25"/><text x="73.7508%" y="255.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (25 samples, 0.05%)</title><rect x="73.5008%" y="229" width="0.0493%" height="15" fill="rgb(248,210,53)" fg:x="37237" fg:w="25"/><text x="73.7508%" y="239.50"></text></g><g><title>__memrchr_avx2 (21 samples, 0.04%)</title><rect x="73.5087%" y="213" width="0.0415%" height="15" fill="rgb(211,1,30)" fg:x="37241" fg:w="21"/><text x="73.7587%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (64 samples, 0.13%)</title><rect x="73.4337%" y="341" width="0.1263%" height="15" fill="rgb(224,96,15)" fg:x="37203" fg:w="64"/><text x="73.6837%" y="351.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (63 samples, 0.12%)</title><rect x="73.4357%" y="325" width="0.1244%" height="15" fill="rgb(252,45,11)" fg:x="37204" fg:w="63"/><text x="73.6857%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (58 samples, 0.11%)</title><rect x="73.4456%" y="309" width="0.1145%" height="15" fill="rgb(220,125,38)" fg:x="37209" fg:w="58"/><text x="73.6956%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (80 samples, 0.16%)</title><rect x="73.4041%" y="357" width="0.1579%" height="15" fill="rgb(243,161,33)" fg:x="37188" fg:w="80"/><text x="73.6541%" y="367.50"></text></g><g><title>core::num::diy_float::Fp::mul (9 samples, 0.02%)</title><rect x="73.9094%" y="293" width="0.0178%" height="15" fill="rgb(248,197,34)" fg:x="37444" fg:w="9"/><text x="74.1594%" y="303.50"></text></g><g><title>core::num::diy_float::Fp::normalize (21 samples, 0.04%)</title><rect x="73.9272%" y="293" width="0.0415%" height="15" fill="rgb(228,165,23)" fg:x="37453" fg:w="21"/><text x="74.1772%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::cached_power (16 samples, 0.03%)</title><rect x="73.9687%" y="293" width="0.0316%" height="15" fill="rgb(236,94,38)" fg:x="37474" fg:w="16"/><text x="74.2187%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (27 samples, 0.05%)</title><rect x="74.0002%" y="293" width="0.0533%" height="15" fill="rgb(220,13,23)" fg:x="37490" fg:w="27"/><text x="74.2502%" y="303.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (485 samples, 0.96%)</title><rect x="73.1041%" y="981" width="0.9573%" height="15" fill="rgb(234,26,39)" fg:x="37036" fg:w="485"/><text x="73.3541%" y="991.50"></text></g><g><title>bevy_app::app::App::update (484 samples, 0.96%)</title><rect x="73.1061%" y="965" width="0.9554%" height="15" fill="rgb(205,117,44)" fg:x="37037" fg:w="484"/><text x="73.3561%" y="975.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (362 samples, 0.71%)</title><rect x="73.3469%" y="949" width="0.7145%" height="15" fill="rgb(250,42,2)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="959.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (362 samples, 0.71%)</title><rect x="73.3469%" y="933" width="0.7145%" height="15" fill="rgb(223,83,14)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (362 samples, 0.71%)</title><rect x="73.3469%" y="917" width="0.7145%" height="15" fill="rgb(241,147,50)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (362 samples, 0.71%)</title><rect x="73.3469%" y="901" width="0.7145%" height="15" fill="rgb(218,90,6)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (362 samples, 0.71%)</title><rect x="73.3469%" y="885" width="0.7145%" height="15" fill="rgb(210,191,5)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (362 samples, 0.71%)</title><rect x="73.3469%" y="869" width="0.7145%" height="15" fill="rgb(225,139,19)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (362 samples, 0.71%)</title><rect x="73.3469%" y="853" width="0.7145%" height="15" fill="rgb(210,1,33)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (362 samples, 0.71%)</title><rect x="73.3469%" y="837" width="0.7145%" height="15" fill="rgb(213,50,3)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="847.50"></text></g><g><title>async_executor::Executor::try_tick (362 samples, 0.71%)</title><rect x="73.3469%" y="821" width="0.7145%" height="15" fill="rgb(234,227,4)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (362 samples, 0.71%)</title><rect x="73.3469%" y="805" width="0.7145%" height="15" fill="rgb(246,63,5)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (362 samples, 0.71%)</title><rect x="73.3469%" y="789" width="0.7145%" height="15" fill="rgb(245,136,27)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (362 samples, 0.71%)</title><rect x="73.3469%" y="773" width="0.7145%" height="15" fill="rgb(247,199,27)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (362 samples, 0.71%)</title><rect x="73.3469%" y="757" width="0.7145%" height="15" fill="rgb(252,158,49)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (362 samples, 0.71%)</title><rect x="73.3469%" y="741" width="0.7145%" height="15" fill="rgb(254,73,1)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (362 samples, 0.71%)</title><rect x="73.3469%" y="725" width="0.7145%" height="15" fill="rgb(248,93,19)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="735.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (362 samples, 0.71%)</title><rect x="73.3469%" y="709" width="0.7145%" height="15" fill="rgb(206,67,5)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (362 samples, 0.71%)</title><rect x="73.3469%" y="693" width="0.7145%" height="15" fill="rgb(209,210,4)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (362 samples, 0.71%)</title><rect x="73.3469%" y="677" width="0.7145%" height="15" fill="rgb(214,185,36)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (362 samples, 0.71%)</title><rect x="73.3469%" y="661" width="0.7145%" height="15" fill="rgb(233,191,26)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="671.50"></text></g><g><title>stellar_coordinates_test::setup (362 samples, 0.71%)</title><rect x="73.3469%" y="645" width="0.7145%" height="15" fill="rgb(248,94,17)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="655.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (362 samples, 0.71%)</title><rect x="73.3469%" y="629" width="0.7145%" height="15" fill="rgb(250,64,4)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="639.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (362 samples, 0.71%)</title><rect x="73.3469%" y="613" width="0.7145%" height="15" fill="rgb(218,41,53)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="623.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (362 samples, 0.71%)</title><rect x="73.3469%" y="597" width="0.7145%" height="15" fill="rgb(251,176,28)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="607.50"></text></g><g><title>std::sync::once::Once::call_once (362 samples, 0.71%)</title><rect x="73.3469%" y="581" width="0.7145%" height="15" fill="rgb(247,22,9)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="591.50"></text></g><g><title>std::sync::once::Once::call_inner (362 samples, 0.71%)</title><rect x="73.3469%" y="565" width="0.7145%" height="15" fill="rgb(218,201,14)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="575.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (362 samples, 0.71%)</title><rect x="73.3469%" y="549" width="0.7145%" height="15" fill="rgb(218,94,10)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="559.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (362 samples, 0.71%)</title><rect x="73.3469%" y="533" width="0.7145%" height="15" fill="rgb(222,183,52)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (362 samples, 0.71%)</title><rect x="73.3469%" y="517" width="0.7145%" height="15" fill="rgb(242,140,25)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="527.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (362 samples, 0.71%)</title><rect x="73.3469%" y="501" width="0.7145%" height="15" fill="rgb(235,197,38)" fg:x="37159" fg:w="362"/><text x="73.5969%" y="511.50"></text></g><g><title>std::io::stdio::_print (334 samples, 0.66%)</title><rect x="73.4022%" y="485" width="0.6593%" height="15" fill="rgb(237,136,15)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="495.50"></text></g><g><title>std::io::stdio::print_to (334 samples, 0.66%)</title><rect x="73.4022%" y="469" width="0.6593%" height="15" fill="rgb(223,44,49)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="479.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (334 samples, 0.66%)</title><rect x="73.4022%" y="453" width="0.6593%" height="15" fill="rgb(227,71,15)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="463.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (334 samples, 0.66%)</title><rect x="73.4022%" y="437" width="0.6593%" height="15" fill="rgb(225,153,20)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (334 samples, 0.66%)</title><rect x="73.4022%" y="421" width="0.6593%" height="15" fill="rgb(210,190,26)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="431.50"></text></g><g><title>core::fmt::write (334 samples, 0.66%)</title><rect x="73.4022%" y="405" width="0.6593%" height="15" fill="rgb(223,147,5)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="415.50"></text></g><g><title>core::fmt::run (334 samples, 0.66%)</title><rect x="73.4022%" y="389" width="0.6593%" height="15" fill="rgb(207,14,23)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="399.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (334 samples, 0.66%)</title><rect x="73.4022%" y="373" width="0.6593%" height="15" fill="rgb(211,195,53)" fg:x="37187" fg:w="334"/><text x="73.6522%" y="383.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (253 samples, 0.50%)</title><rect x="73.5620%" y="357" width="0.4994%" height="15" fill="rgb(237,75,46)" fg:x="37268" fg:w="253"/><text x="73.8120%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (253 samples, 0.50%)</title><rect x="73.5620%" y="341" width="0.4994%" height="15" fill="rgb(254,55,14)" fg:x="37268" fg:w="253"/><text x="73.8120%" y="351.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (253 samples, 0.50%)</title><rect x="73.5620%" y="325" width="0.4994%" height="15" fill="rgb(230,185,30)" fg:x="37268" fg:w="253"/><text x="73.8120%" y="335.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (253 samples, 0.50%)</title><rect x="73.5620%" y="309" width="0.4994%" height="15" fill="rgb(220,14,11)" fg:x="37268" fg:w="253"/><text x="73.8120%" y="319.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (8 samples, 0.02%)</title><rect x="74.1325%" y="773" width="0.0158%" height="15" fill="rgb(215,169,44)" fg:x="37557" fg:w="8"/><text x="74.3825%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="74.1483%" y="757" width="0.0197%" height="15" fill="rgb(253,203,20)" fg:x="37565" fg:w="10"/><text x="74.3983%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (17 samples, 0.03%)</title><rect x="74.1483%" y="773" width="0.0336%" height="15" fill="rgb(229,225,17)" fg:x="37565" fg:w="17"/><text x="74.3983%" y="783.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="74.1700%" y="757" width="0.0118%" height="15" fill="rgb(236,76,26)" fg:x="37576" fg:w="6"/><text x="74.4200%" y="767.50"></text></g><g><title>&lt;bevy_tasks::usages::ComputeTaskPool as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="74.1818%" y="773" width="0.0118%" height="15" fill="rgb(234,15,30)" fg:x="37582" fg:w="6"/><text x="74.4318%" y="783.50"></text></g><g><title>&lt;bevy_tasks::task_pool::TaskPool as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="74.1818%" y="757" width="0.0118%" height="15" fill="rgb(211,113,48)" fg:x="37582" fg:w="6"/><text x="74.4318%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="74.1818%" y="741" width="0.0118%" height="15" fill="rgb(221,31,36)" fg:x="37582" fg:w="6"/><text x="74.4318%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="74.1818%" y="725" width="0.0118%" height="15" fill="rgb(215,118,52)" fg:x="37582" fg:w="6"/><text x="74.4318%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="74.1818%" y="709" width="0.0118%" height="15" fill="rgb(241,151,27)" fg:x="37582" fg:w="6"/><text x="74.4318%" y="719.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (28 samples, 0.06%)</title><rect x="74.1937%" y="773" width="0.0553%" height="15" fill="rgb(253,51,3)" fg:x="37588" fg:w="28"/><text x="74.4437%" y="783.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (24 samples, 0.05%)</title><rect x="74.2016%" y="757" width="0.0474%" height="15" fill="rgb(216,201,24)" fg:x="37592" fg:w="24"/><text x="74.4516%" y="767.50"></text></g><g><title>async_executor::Executor::state (12 samples, 0.02%)</title><rect x="74.3318%" y="693" width="0.0237%" height="15" fill="rgb(231,107,4)" fg:x="37658" fg:w="12"/><text x="74.5818%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.02%)</title><rect x="74.3318%" y="677" width="0.0237%" height="15" fill="rgb(243,97,54)" fg:x="37658" fg:w="12"/><text x="74.5818%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.02%)</title><rect x="74.3318%" y="661" width="0.0237%" height="15" fill="rgb(221,32,51)" fg:x="37658" fg:w="12"/><text x="74.5818%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (12 samples, 0.02%)</title><rect x="74.3318%" y="645" width="0.0237%" height="15" fill="rgb(218,171,35)" fg:x="37658" fg:w="12"/><text x="74.5818%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (12 samples, 0.02%)</title><rect x="74.3318%" y="629" width="0.0237%" height="15" fill="rgb(214,20,53)" fg:x="37658" fg:w="12"/><text x="74.5818%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="74.3437%" y="613" width="0.0118%" height="15" fill="rgb(239,9,52)" fg:x="37664" fg:w="6"/><text x="74.5937%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="74.3437%" y="597" width="0.0118%" height="15" fill="rgb(215,114,45)" fg:x="37664" fg:w="6"/><text x="74.5937%" y="607.50"></text></g><g><title>async_executor::Executor::try_tick (54 samples, 0.11%)</title><rect x="74.3003%" y="709" width="0.1066%" height="15" fill="rgb(208,118,9)" fg:x="37642" fg:w="54"/><text x="74.5503%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (21 samples, 0.04%)</title><rect x="74.3654%" y="693" width="0.0415%" height="15" fill="rgb(235,7,39)" fg:x="37675" fg:w="21"/><text x="74.6154%" y="703.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (6 samples, 0.01%)</title><rect x="74.4069%" y="709" width="0.0118%" height="15" fill="rgb(243,225,15)" fg:x="37696" fg:w="6"/><text x="74.6569%" y="719.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (99 samples, 0.20%)</title><rect x="74.2588%" y="773" width="0.1954%" height="15" fill="rgb(225,216,18)" fg:x="37621" fg:w="99"/><text x="74.5088%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (99 samples, 0.20%)</title><rect x="74.2588%" y="757" width="0.1954%" height="15" fill="rgb(233,36,38)" fg:x="37621" fg:w="99"/><text x="74.5088%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (99 samples, 0.20%)</title><rect x="74.2588%" y="741" width="0.1954%" height="15" fill="rgb(239,88,23)" fg:x="37621" fg:w="99"/><text x="74.5088%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (98 samples, 0.19%)</title><rect x="74.2608%" y="725" width="0.1934%" height="15" fill="rgb(219,181,35)" fg:x="37622" fg:w="98"/><text x="74.5108%" y="735.50"></text></g><g><title>futures_lite::future::block_on (15 samples, 0.03%)</title><rect x="74.4246%" y="709" width="0.0296%" height="15" fill="rgb(215,18,46)" fg:x="37705" fg:w="15"/><text x="74.6746%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (176 samples, 0.35%)</title><rect x="74.1108%" y="789" width="0.3474%" height="15" fill="rgb(241,38,11)" fg:x="37546" fg:w="176"/><text x="74.3608%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (10 samples, 0.02%)</title><rect x="74.4582%" y="789" width="0.0197%" height="15" fill="rgb(248,169,45)" fg:x="37722" fg:w="10"/><text x="74.7082%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="74.4601%" y="773" width="0.0178%" height="15" fill="rgb(239,50,49)" fg:x="37723" fg:w="9"/><text x="74.7101%" y="783.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (34 samples, 0.07%)</title><rect x="74.5194%" y="725" width="0.0671%" height="15" fill="rgb(231,96,31)" fg:x="37753" fg:w="34"/><text x="74.7694%" y="735.50"></text></g><g><title>bevy_ecs::entity::Entities::get (7 samples, 0.01%)</title><rect x="74.5727%" y="709" width="0.0138%" height="15" fill="rgb(224,193,37)" fg:x="37780" fg:w="7"/><text x="74.8227%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (19 samples, 0.04%)</title><rect x="74.6102%" y="693" width="0.0375%" height="15" fill="rgb(227,153,50)" fg:x="37799" fg:w="19"/><text x="74.8602%" y="703.50"></text></g><g><title>bevy_ecs::archetype::Archetype::allocate (13 samples, 0.03%)</title><rect x="74.6773%" y="677" width="0.0257%" height="15" fill="rgb(249,228,3)" fg:x="37833" fg:w="13"/><text x="74.9273%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.02%)</title><rect x="74.6852%" y="661" width="0.0178%" height="15" fill="rgb(219,164,43)" fg:x="37837" fg:w="9"/><text x="74.9352%" y="671.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="74.6911%" y="645" width="0.0118%" height="15" fill="rgb(216,45,41)" fg:x="37840" fg:w="6"/><text x="74.9411%" y="655.50"></text></g><g><title>bevy_ecs::archetype::Archetype::swap_remove (11 samples, 0.02%)</title><rect x="74.7049%" y="677" width="0.0217%" height="15" fill="rgb(210,226,51)" fg:x="37847" fg:w="11"/><text x="74.9549%" y="687.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.01%)</title><rect x="74.7266%" y="661" width="0.0118%" height="15" fill="rgb(209,117,49)" fg:x="37858" fg:w="6"/><text x="74.9766%" y="671.50"></text></g><g><title>bevy_ecs::archetype::Edges::get_add_bundle (9 samples, 0.02%)</title><rect x="74.7266%" y="677" width="0.0178%" height="15" fill="rgb(206,196,24)" fg:x="37858" fg:w="9"/><text x="74.9766%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="74.7918%" y="661" width="0.0178%" height="15" fill="rgb(253,218,3)" fg:x="37891" fg:w="9"/><text x="75.0418%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (9 samples, 0.02%)</title><rect x="74.8293%" y="629" width="0.0178%" height="15" fill="rgb(252,166,2)" fg:x="37910" fg:w="9"/><text x="75.0793%" y="639.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (93 samples, 0.18%)</title><rect x="74.8174%" y="661" width="0.1836%" height="15" fill="rgb(236,218,26)" fg:x="37904" fg:w="93"/><text x="75.0674%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (87 samples, 0.17%)</title><rect x="74.8293%" y="645" width="0.1717%" height="15" fill="rgb(254,84,19)" fg:x="37910" fg:w="87"/><text x="75.0793%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.15%)</title><rect x="74.8470%" y="629" width="0.1540%" height="15" fill="rgb(219,137,29)" fg:x="37919" fg:w="78"/><text x="75.0970%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (78 samples, 0.15%)</title><rect x="74.8470%" y="613" width="0.1540%" height="15" fill="rgb(227,47,52)" fg:x="37919" fg:w="78"/><text x="75.0970%" y="623.50"></text></g><g><title>core::intrinsics::copy (11 samples, 0.02%)</title><rect x="75.0148%" y="629" width="0.0217%" height="15" fill="rgb(229,167,24)" fg:x="38004" fg:w="11"/><text x="75.2648%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (22 samples, 0.04%)</title><rect x="75.0010%" y="645" width="0.0434%" height="15" fill="rgb(233,164,1)" fg:x="37997" fg:w="22"/><text x="75.2510%" y="655.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (18 samples, 0.04%)</title><rect x="75.0503%" y="629" width="0.0355%" height="15" fill="rgb(218,88,48)" fg:x="38022" fg:w="18"/><text x="75.3003%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.01%)</title><rect x="75.0720%" y="613" width="0.0138%" height="15" fill="rgb(226,214,24)" fg:x="38033" fg:w="7"/><text x="75.3220%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="75.0740%" y="597" width="0.0118%" height="15" fill="rgb(233,29,12)" fg:x="38034" fg:w="6"/><text x="75.3240%" y="607.50"></text></g><g><title>core::intrinsics::copy (46 samples, 0.09%)</title><rect x="75.0859%" y="629" width="0.0908%" height="15" fill="rgb(219,120,34)" fg:x="38040" fg:w="46"/><text x="75.3359%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.08%)</title><rect x="75.0957%" y="613" width="0.0809%" height="15" fill="rgb(226,78,44)" fg:x="38045" fg:w="41"/><text x="75.3457%" y="623.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (131 samples, 0.26%)</title><rect x="75.0010%" y="661" width="0.2586%" height="15" fill="rgb(240,15,48)" fg:x="37997" fg:w="131"/><text x="75.2510%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (109 samples, 0.22%)</title><rect x="75.0444%" y="645" width="0.2152%" height="15" fill="rgb(253,176,7)" fg:x="38019" fg:w="109"/><text x="75.2944%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.08%)</title><rect x="75.1767%" y="629" width="0.0829%" height="15" fill="rgb(206,166,28)" fg:x="38086" fg:w="42"/><text x="75.4267%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.08%)</title><rect x="75.1806%" y="613" width="0.0790%" height="15" fill="rgb(241,53,51)" fg:x="38088" fg:w="40"/><text x="75.4306%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="75.2596%" y="613" width="0.0158%" height="15" fill="rgb(249,112,30)" fg:x="38128" fg:w="8"/><text x="75.5096%" y="623.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (8 samples, 0.02%)</title><rect x="75.2596%" y="597" width="0.0158%" height="15" fill="rgb(217,85,30)" fg:x="38128" fg:w="8"/><text x="75.5096%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="75.2596%" y="581" width="0.0158%" height="15" fill="rgb(233,49,7)" fg:x="38128" fg:w="8"/><text x="75.5096%" y="591.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (13 samples, 0.03%)</title><rect x="75.2596%" y="629" width="0.0257%" height="15" fill="rgb(234,109,9)" fg:x="38128" fg:w="13"/><text x="75.5096%" y="639.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (20 samples, 0.04%)</title><rect x="75.2596%" y="645" width="0.0395%" height="15" fill="rgb(253,95,22)" fg:x="38128" fg:w="20"/><text x="75.5096%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (21 samples, 0.04%)</title><rect x="75.2596%" y="661" width="0.0415%" height="15" fill="rgb(233,176,25)" fg:x="38128" fg:w="21"/><text x="75.5096%" y="671.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (332 samples, 0.66%)</title><rect x="74.6477%" y="693" width="0.6553%" height="15" fill="rgb(236,33,39)" fg:x="37818" fg:w="332"/><text x="74.8977%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (278 samples, 0.55%)</title><rect x="74.7543%" y="677" width="0.5487%" height="15" fill="rgb(223,226,42)" fg:x="37872" fg:w="278"/><text x="75.0043%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (7 samples, 0.01%)</title><rect x="75.3346%" y="597" width="0.0138%" height="15" fill="rgb(216,99,33)" fg:x="38166" fg:w="7"/><text x="75.5846%" y="607.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (34 samples, 0.07%)</title><rect x="75.3346%" y="629" width="0.0671%" height="15" fill="rgb(235,84,23)" fg:x="38166" fg:w="34"/><text x="75.5846%" y="639.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (34 samples, 0.07%)</title><rect x="75.3346%" y="613" width="0.0671%" height="15" fill="rgb(232,2,27)" fg:x="38166" fg:w="34"/><text x="75.5846%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.05%)</title><rect x="75.3484%" y="597" width="0.0533%" height="15" fill="rgb(241,23,22)" fg:x="38173" fg:w="27"/><text x="75.5984%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.05%)</title><rect x="75.3484%" y="581" width="0.0533%" height="15" fill="rgb(211,73,27)" fg:x="38173" fg:w="27"/><text x="75.5984%" y="591.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.01%)</title><rect x="75.4017%" y="597" width="0.0118%" height="15" fill="rgb(235,109,49)" fg:x="38200" fg:w="6"/><text x="75.6517%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="75.4017%" y="581" width="0.0118%" height="15" fill="rgb(230,99,29)" fg:x="38200" fg:w="6"/><text x="75.6517%" y="591.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (6 samples, 0.01%)</title><rect x="75.4017%" y="565" width="0.0118%" height="15" fill="rgb(245,199,7)" fg:x="38200" fg:w="6"/><text x="75.6517%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="75.4017%" y="549" width="0.0118%" height="15" fill="rgb(217,179,10)" fg:x="38200" fg:w="6"/><text x="75.6517%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (464 samples, 0.92%)</title><rect x="74.5055%" y="741" width="0.9159%" height="15" fill="rgb(254,99,47)" fg:x="37746" fg:w="464"/><text x="74.7555%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (423 samples, 0.83%)</title><rect x="74.5865%" y="725" width="0.8349%" height="15" fill="rgb(251,121,7)" fg:x="37787" fg:w="423"/><text x="74.8365%" y="735.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (422 samples, 0.83%)</title><rect x="74.5884%" y="709" width="0.8330%" height="15" fill="rgb(250,177,26)" fg:x="37788" fg:w="422"/><text x="74.8384%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (60 samples, 0.12%)</title><rect x="75.3030%" y="693" width="0.1184%" height="15" fill="rgb(232,88,15)" fg:x="38150" fg:w="60"/><text x="75.5530%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (57 samples, 0.11%)</title><rect x="75.3089%" y="677" width="0.1125%" height="15" fill="rgb(251,54,54)" fg:x="38153" fg:w="57"/><text x="75.5589%" y="687.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (56 samples, 0.11%)</title><rect x="75.3109%" y="661" width="0.1105%" height="15" fill="rgb(208,177,15)" fg:x="38154" fg:w="56"/><text x="75.5609%" y="671.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (52 samples, 0.10%)</title><rect x="75.3188%" y="645" width="0.1026%" height="15" fill="rgb(205,97,32)" fg:x="38158" fg:w="52"/><text x="75.5688%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (10 samples, 0.02%)</title><rect x="75.4017%" y="629" width="0.0197%" height="15" fill="rgb(217,192,13)" fg:x="38200" fg:w="10"/><text x="75.6517%" y="639.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (10 samples, 0.02%)</title><rect x="75.4017%" y="613" width="0.0197%" height="15" fill="rgb(215,163,41)" fg:x="38200" fg:w="10"/><text x="75.6517%" y="623.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (474 samples, 0.94%)</title><rect x="74.4917%" y="757" width="0.9356%" height="15" fill="rgb(246,83,29)" fg:x="37739" fg:w="474"/><text x="74.7417%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (488 samples, 0.96%)</title><rect x="74.4779%" y="789" width="0.9632%" height="15" fill="rgb(219,2,45)" fg:x="37732" fg:w="488"/><text x="74.7279%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (488 samples, 0.96%)</title><rect x="74.4779%" y="773" width="0.9632%" height="15" fill="rgb(242,215,33)" fg:x="37732" fg:w="488"/><text x="74.7279%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (6 samples, 0.01%)</title><rect x="75.4412%" y="789" width="0.0118%" height="15" fill="rgb(217,1,6)" fg:x="38220" fg:w="6"/><text x="75.6912%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (699 samples, 1.38%)</title><rect x="74.0812%" y="805" width="1.3797%" height="15" fill="rgb(207,85,52)" fg:x="37531" fg:w="699"/><text x="74.3312%" y="815.50"></text></g><g><title>bevy_ecs::entity::Entities::flush_as_invalid (6 samples, 0.01%)</title><rect x="75.4609%" y="805" width="0.0118%" height="15" fill="rgb(231,171,19)" fg:x="38230" fg:w="6"/><text x="75.7109%" y="815.50"></text></g><g><title>bevy_ecs::entity::Entities::flush (6 samples, 0.01%)</title><rect x="75.4609%" y="789" width="0.0118%" height="15" fill="rgb(207,128,4)" fg:x="38230" fg:w="6"/><text x="75.7109%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="75.4747%" y="757" width="0.0118%" height="15" fill="rgb(219,208,4)" fg:x="38237" fg:w="6"/><text x="75.7247%" y="767.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="75.4747%" y="741" width="0.0118%" height="15" fill="rgb(235,161,42)" fg:x="38237" fg:w="6"/><text x="75.7247%" y="751.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (721 samples, 1.42%)</title><rect x="74.0772%" y="821" width="1.4232%" height="15" fill="rgb(247,218,18)" fg:x="37529" fg:w="721"/><text x="74.3272%" y="831.50"></text></g><g><title>bevy_ecs::schedule::Schedule::get_stage_mut (14 samples, 0.03%)</title><rect x="75.4727%" y="805" width="0.0276%" height="15" fill="rgb(232,114,51)" fg:x="38236" fg:w="14"/><text x="75.7227%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (13 samples, 0.03%)</title><rect x="75.4747%" y="789" width="0.0257%" height="15" fill="rgb(222,95,3)" fg:x="38237" fg:w="13"/><text x="75.7247%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (13 samples, 0.03%)</title><rect x="75.4747%" y="773" width="0.0257%" height="15" fill="rgb(240,65,29)" fg:x="38237" fg:w="13"/><text x="75.7247%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.01%)</title><rect x="75.4866%" y="757" width="0.0138%" height="15" fill="rgb(249,209,20)" fg:x="38243" fg:w="7"/><text x="75.7366%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="75.4866%" y="741" width="0.0138%" height="15" fill="rgb(241,48,37)" fg:x="38243" fg:w="7"/><text x="75.7366%" y="751.50"></text></g><g><title>__free (16 samples, 0.03%)</title><rect x="75.5497%" y="741" width="0.0316%" height="15" fill="rgb(230,140,42)" fg:x="38275" fg:w="16"/><text x="75.7997%" y="751.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="75.5537%" y="725" width="0.0276%" height="15" fill="rgb(230,176,45)" fg:x="38277" fg:w="14"/><text x="75.8037%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (8 samples, 0.02%)</title><rect x="75.5912%" y="725" width="0.0158%" height="15" fill="rgb(245,112,21)" fg:x="38296" fg:w="8"/><text x="75.8412%" y="735.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::bind_group_drop (8 samples, 0.02%)</title><rect x="75.5912%" y="709" width="0.0158%" height="15" fill="rgb(207,183,35)" fg:x="38296" fg:w="8"/><text x="75.8412%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.03%)</title><rect x="75.5892%" y="741" width="0.0257%" height="15" fill="rgb(227,44,33)" fg:x="38295" fg:w="13"/><text x="75.8392%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::mesh::mesh::Mesh&gt;&gt; (12 samples, 0.02%)</title><rect x="75.6149%" y="709" width="0.0237%" height="15" fill="rgb(246,120,21)" fg:x="38308" fg:w="12"/><text x="75.8649%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="75.6149%" y="693" width="0.0237%" height="15" fill="rgb(235,57,52)" fg:x="38308" fg:w="12"/><text x="75.8649%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::light::Clusters&gt; (69 samples, 0.14%)</title><rect x="75.6385%" y="709" width="0.1362%" height="15" fill="rgb(238,84,10)" fg:x="38320" fg:w="69"/><text x="75.8885%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_pbr::light::VisiblePointLights&gt;&gt; (69 samples, 0.14%)</title><rect x="75.6385%" y="693" width="0.1362%" height="15" fill="rgb(251,200,32)" fg:x="38320" fg:w="69"/><text x="75.8885%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.14%)</title><rect x="75.6385%" y="677" width="0.1362%" height="15" fill="rgb(247,159,13)" fg:x="38320" fg:w="69"/><text x="75.8885%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_pbr::light::VisiblePointLights]&gt; (69 samples, 0.14%)</title><rect x="75.6385%" y="661" width="0.1362%" height="15" fill="rgb(238,64,4)" fg:x="38320" fg:w="69"/><text x="75.8885%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::light::VisiblePointLights&gt; (68 samples, 0.13%)</title><rect x="75.6405%" y="645" width="0.1342%" height="15" fill="rgb(221,131,51)" fg:x="38321" fg:w="68"/><text x="75.8905%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt; (68 samples, 0.13%)</title><rect x="75.6405%" y="629" width="0.1342%" height="15" fill="rgb(242,5,29)" fg:x="38321" fg:w="68"/><text x="75.8905%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_ecs::entity::Entity&gt;&gt; (68 samples, 0.13%)</title><rect x="75.6405%" y="613" width="0.1342%" height="15" fill="rgb(214,130,32)" fg:x="38321" fg:w="68"/><text x="75.8905%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.13%)</title><rect x="75.6405%" y="597" width="0.1342%" height="15" fill="rgb(244,210,16)" fg:x="38321" fg:w="68"/><text x="75.8905%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.04%)</title><rect x="75.7392%" y="581" width="0.0355%" height="15" fill="rgb(234,48,26)" fg:x="38371" fg:w="18"/><text x="75.9892%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;glam::vec2::UVec2&gt;&gt; (7 samples, 0.01%)</title><rect x="75.7747%" y="661" width="0.0138%" height="15" fill="rgb(231,82,38)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;glam::vec2::UVec2&gt;&gt; (7 samples, 0.01%)</title><rect x="75.7747%" y="645" width="0.0138%" height="15" fill="rgb(254,128,41)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="75.7747%" y="629" width="0.0138%" height="15" fill="rgb(212,73,49)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="75.7747%" y="613" width="0.0138%" height="15" fill="rgb(205,62,54)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="75.7747%" y="597" width="0.0138%" height="15" fill="rgb(228,0,8)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="607.50"></text></g><g><title>__free (7 samples, 0.01%)</title><rect x="75.7747%" y="581" width="0.0138%" height="15" fill="rgb(251,28,17)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="591.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="75.7747%" y="565" width="0.0138%" height="15" fill="rgb(238,105,27)" fg:x="38389" fg:w="7"/><text x="76.0247%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::storage_buffer::StorageBuffer&lt;glam::vec2::UVec2&gt;&gt; (14 samples, 0.03%)</title><rect x="75.7747%" y="677" width="0.0276%" height="15" fill="rgb(237,216,33)" fg:x="38389" fg:w="14"/><text x="76.0247%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="75.7886%" y="661" width="0.0138%" height="15" fill="rgb(229,228,25)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="75.7886%" y="645" width="0.0138%" height="15" fill="rgb(233,75,23)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="75.7886%" y="629" width="0.0138%" height="15" fill="rgb(231,207,16)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="75.7886%" y="613" width="0.0138%" height="15" fill="rgb(231,191,45)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="75.7886%" y="597" width="0.0138%" height="15" fill="rgb(224,133,17)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="607.50"></text></g><g><title>__free (7 samples, 0.01%)</title><rect x="75.7886%" y="581" width="0.0138%" height="15" fill="rgb(209,178,27)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="591.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="75.7886%" y="565" width="0.0138%" height="15" fill="rgb(218,37,11)" fg:x="38396" fg:w="7"/><text x="76.0386%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="75.8103%" y="597" width="0.0237%" height="15" fill="rgb(251,226,25)" fg:x="38407" fg:w="12"/><text x="76.0603%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (12 samples, 0.02%)</title><rect x="75.8103%" y="581" width="0.0237%" height="15" fill="rgb(209,222,27)" fg:x="38407" fg:w="12"/><text x="76.0603%" y="591.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (12 samples, 0.02%)</title><rect x="75.8103%" y="565" width="0.0237%" height="15" fill="rgb(238,22,21)" fg:x="38407" fg:w="12"/><text x="76.0603%" y="575.50"></text></g><g><title>log::__private_api_log (8 samples, 0.02%)</title><rect x="75.8182%" y="549" width="0.0158%" height="15" fill="rgb(233,161,25)" fg:x="38411" fg:w="8"/><text x="76.0682%" y="559.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (8 samples, 0.02%)</title><rect x="75.8182%" y="533" width="0.0158%" height="15" fill="rgb(226,122,53)" fg:x="38411" fg:w="8"/><text x="76.0682%" y="543.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (8 samples, 0.02%)</title><rect x="75.8182%" y="517" width="0.0158%" height="15" fill="rgb(220,123,17)" fg:x="38411" fg:w="8"/><text x="76.0682%" y="527.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (7 samples, 0.01%)</title><rect x="75.8201%" y="501" width="0.0138%" height="15" fill="rgb(230,224,35)" fg:x="38412" fg:w="7"/><text x="76.0701%" y="511.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (7 samples, 0.01%)</title><rect x="75.8201%" y="485" width="0.0138%" height="15" fill="rgb(246,83,8)" fg:x="38412" fg:w="7"/><text x="76.0701%" y="495.50"></text></g><g><title>tracing_core::dispatcher::get_default (7 samples, 0.01%)</title><rect x="75.8201%" y="469" width="0.0138%" height="15" fill="rgb(230,214,17)" fg:x="38412" fg:w="7"/><text x="76.0701%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="75.8201%" y="453" width="0.0138%" height="15" fill="rgb(222,97,18)" fg:x="38412" fg:w="7"/><text x="76.0701%" y="463.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (6 samples, 0.01%)</title><rect x="75.8221%" y="437" width="0.0118%" height="15" fill="rgb(206,79,1)" fg:x="38413" fg:w="6"/><text x="76.0721%" y="447.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="75.8221%" y="421" width="0.0118%" height="15" fill="rgb(214,121,34)" fg:x="38413" fg:w="6"/><text x="76.0721%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::render::light::ViewClusterBindings&gt; (31 samples, 0.06%)</title><rect x="75.7747%" y="709" width="0.0612%" height="15" fill="rgb(249,199,46)" fg:x="38389" fg:w="31"/><text x="76.0247%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::render::light::ViewClusterBuffers&gt; (31 samples, 0.06%)</title><rect x="75.7747%" y="693" width="0.0612%" height="15" fill="rgb(214,222,46)" fg:x="38389" fg:w="31"/><text x="76.0247%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::storage_buffer::StorageBuffer&lt;u32&gt;&gt; (17 samples, 0.03%)</title><rect x="75.8024%" y="677" width="0.0336%" height="15" fill="rgb(248,168,30)" fg:x="38403" fg:w="17"/><text x="76.0524%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_render::render_resource::buffer::Buffer&gt;&gt; (13 samples, 0.03%)</title><rect x="75.8103%" y="661" width="0.0257%" height="15" fill="rgb(226,14,28)" fg:x="38407" fg:w="13"/><text x="76.0603%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (13 samples, 0.03%)</title><rect x="75.8103%" y="645" width="0.0257%" height="15" fill="rgb(253,123,1)" fg:x="38407" fg:w="13"/><text x="76.0603%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (13 samples, 0.03%)</title><rect x="75.8103%" y="629" width="0.0257%" height="15" fill="rgb(225,24,42)" fg:x="38407" fg:w="13"/><text x="76.0603%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="75.8103%" y="613" width="0.0257%" height="15" fill="rgb(216,161,37)" fg:x="38407" fg:w="13"/><text x="76.0603%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::render::light::ViewShadowBindings&gt; (9 samples, 0.02%)</title><rect x="75.8359%" y="709" width="0.0178%" height="15" fill="rgb(251,164,26)" fg:x="38420" fg:w="9"/><text x="76.0859%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::texture::TextureView&gt; (8 samples, 0.02%)</title><rect x="75.8379%" y="693" width="0.0158%" height="15" fill="rgb(219,177,3)" fg:x="38421" fg:w="8"/><text x="76.0879%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::texture::TextureViewValue&gt; (8 samples, 0.02%)</title><rect x="75.8379%" y="677" width="0.0158%" height="15" fill="rgb(222,65,0)" fg:x="38421" fg:w="8"/><text x="76.0879%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::TextureView&gt;&gt; (8 samples, 0.02%)</title><rect x="75.8379%" y="661" width="0.0158%" height="15" fill="rgb(223,69,54)" fg:x="38421" fg:w="8"/><text x="76.0879%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="75.8379%" y="645" width="0.0158%" height="15" fill="rgb(235,30,27)" fg:x="38421" fg:w="8"/><text x="76.0879%" y="655.50"></text></g><g><title>bevy_ecs::component::ComponentDescriptor::drop_ptr (258 samples, 0.51%)</title><rect x="75.6149%" y="741" width="0.5093%" height="15" fill="rgb(220,183,50)" fg:x="38308" fg:w="258"/><text x="75.8649%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (258 samples, 0.51%)</title><rect x="75.6149%" y="725" width="0.5093%" height="15" fill="rgb(248,198,15)" fg:x="38308" fg:w="258"/><text x="75.8649%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;stellar_coordinates_test::GPUInstanceing::InstanceMaterialDataBuffer&gt; (134 samples, 0.26%)</title><rect x="75.8596%" y="709" width="0.2645%" height="15" fill="rgb(222,211,4)" fg:x="38432" fg:w="134"/><text x="76.1096%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (134 samples, 0.26%)</title><rect x="75.8596%" y="693" width="0.2645%" height="15" fill="rgb(214,102,34)" fg:x="38432" fg:w="134"/><text x="76.1096%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (134 samples, 0.26%)</title><rect x="75.8596%" y="677" width="0.2645%" height="15" fill="rgb(245,92,5)" fg:x="38432" fg:w="134"/><text x="76.1096%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.26%)</title><rect x="75.8596%" y="661" width="0.2645%" height="15" fill="rgb(252,72,51)" fg:x="38432" fg:w="134"/><text x="76.1096%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (127 samples, 0.25%)</title><rect x="75.8734%" y="645" width="0.2507%" height="15" fill="rgb(252,208,19)" fg:x="38439" fg:w="127"/><text x="76.1234%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (127 samples, 0.25%)</title><rect x="75.8734%" y="629" width="0.2507%" height="15" fill="rgb(211,69,7)" fg:x="38439" fg:w="127"/><text x="76.1234%" y="639.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (317 samples, 0.63%)</title><rect x="75.5162%" y="757" width="0.6257%" height="15" fill="rgb(211,27,16)" fg:x="38258" fg:w="317"/><text x="75.7662%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="76.1241%" y="741" width="0.0178%" height="15" fill="rgb(219,216,14)" fg:x="38566" fg:w="9"/><text x="76.3741%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.02%)</title><rect x="76.1241%" y="725" width="0.0178%" height="15" fill="rgb(219,71,8)" fg:x="38566" fg:w="9"/><text x="76.3741%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Tables::clear (325 samples, 0.64%)</title><rect x="75.5043%" y="805" width="0.6415%" height="15" fill="rgb(223,170,53)" fg:x="38252" fg:w="325"/><text x="75.7543%" y="815.50"></text></g><g><title>bevy_ecs::storage::table::Table::clear (324 samples, 0.64%)</title><rect x="75.5063%" y="789" width="0.6395%" height="15" fill="rgb(246,21,26)" fg:x="38253" fg:w="324"/><text x="75.7563%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::clear (323 samples, 0.64%)</title><rect x="75.5083%" y="773" width="0.6376%" height="15" fill="rgb(248,20,46)" fg:x="38254" fg:w="323"/><text x="75.7583%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1,049 samples, 2.07%)</title><rect x="74.0772%" y="837" width="2.0706%" height="15" fill="rgb(252,94,11)" fg:x="37529" fg:w="1049"/><text x="74.3272%" y="847.50">&lt;..</text></g><g><title>bevy_ecs::world::World::clear_entities (328 samples, 0.65%)</title><rect x="75.5004%" y="821" width="0.6474%" height="15" fill="rgb(236,163,8)" fg:x="38250" fg:w="328"/><text x="75.7504%" y="831.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.01%)</title><rect x="76.1833%" y="805" width="0.0138%" height="15" fill="rgb(217,221,45)" fg:x="38596" fg:w="7"/><text x="76.4333%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (7 samples, 0.01%)</title><rect x="76.1833%" y="789" width="0.0138%" height="15" fill="rgb(238,38,17)" fg:x="38596" fg:w="7"/><text x="76.4333%" y="799.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="76.1833%" y="773" width="0.0138%" height="15" fill="rgb(242,210,23)" fg:x="38596" fg:w="7"/><text x="76.4333%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.01%)</title><rect x="76.1833%" y="757" width="0.0138%" height="15" fill="rgb(250,86,53)" fg:x="38596" fg:w="7"/><text x="76.4333%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.01%)</title><rect x="76.1833%" y="741" width="0.0138%" height="15" fill="rgb(223,168,25)" fg:x="38596" fg:w="7"/><text x="76.4333%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (48 samples, 0.09%)</title><rect x="76.2090%" y="789" width="0.0947%" height="15" fill="rgb(251,189,4)" fg:x="38609" fg:w="48"/><text x="76.4590%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (28 samples, 0.06%)</title><rect x="76.3077%" y="773" width="0.0553%" height="15" fill="rgb(245,19,28)" fg:x="38659" fg:w="28"/><text x="76.5577%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (37 samples, 0.07%)</title><rect x="76.3037%" y="789" width="0.0730%" height="15" fill="rgb(207,10,34)" fg:x="38657" fg:w="37"/><text x="76.5537%" y="799.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="76.3630%" y="773" width="0.0138%" height="15" fill="rgb(235,153,31)" fg:x="38687" fg:w="7"/><text x="76.6130%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="76.5860%" y="757" width="0.0237%" height="15" fill="rgb(228,72,37)" fg:x="38800" fg:w="12"/><text x="76.8360%" y="767.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (8 samples, 0.02%)</title><rect x="76.5939%" y="741" width="0.0158%" height="15" fill="rgb(215,15,16)" fg:x="38804" fg:w="8"/><text x="76.8439%" y="751.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (117 samples, 0.23%)</title><rect x="76.3827%" y="789" width="0.2309%" height="15" fill="rgb(250,119,29)" fg:x="38697" fg:w="117"/><text x="76.6327%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (108 samples, 0.21%)</title><rect x="76.4005%" y="773" width="0.2132%" height="15" fill="rgb(214,59,1)" fg:x="38706" fg:w="108"/><text x="76.6505%" y="783.50"></text></g><g><title>bevy_ecs::world::World::contains_resource (7 samples, 0.01%)</title><rect x="76.6136%" y="773" width="0.0138%" height="15" fill="rgb(223,109,25)" fg:x="38814" fg:w="7"/><text x="76.8636%" y="783.50"></text></g><g><title>bevy_ecs::world::World::get_resource_or_insert_with (8 samples, 0.02%)</title><rect x="76.6136%" y="789" width="0.0158%" height="15" fill="rgb(230,198,22)" fg:x="38814" fg:w="8"/><text x="76.8636%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (220 samples, 0.43%)</title><rect x="76.1971%" y="805" width="0.4343%" height="15" fill="rgb(245,184,46)" fg:x="38603" fg:w="220"/><text x="76.4471%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (15 samples, 0.03%)</title><rect x="76.6314%" y="805" width="0.0296%" height="15" fill="rgb(253,73,16)" fg:x="38823" fg:w="15"/><text x="76.8814%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.03%)</title><rect x="76.6334%" y="789" width="0.0276%" height="15" fill="rgb(206,94,45)" fg:x="38824" fg:w="14"/><text x="76.8834%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (9 samples, 0.02%)</title><rect x="76.6630%" y="805" width="0.0178%" height="15" fill="rgb(236,83,27)" fg:x="38839" fg:w="9"/><text x="76.9130%" y="815.50"></text></g><g><title>bevy_ecs::system::system::System::run (7 samples, 0.01%)</title><rect x="76.6669%" y="789" width="0.0138%" height="15" fill="rgb(220,196,8)" fg:x="38841" fg:w="7"/><text x="76.9169%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (279 samples, 0.55%)</title><rect x="76.1518%" y="821" width="0.5507%" height="15" fill="rgb(254,185,14)" fg:x="38580" fg:w="279"/><text x="76.4018%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="76.7025%" y="789" width="0.0118%" height="15" fill="rgb(226,50,22)" fg:x="38859" fg:w="6"/><text x="76.9525%" y="799.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (295 samples, 0.58%)</title><rect x="76.1478%" y="837" width="0.5823%" height="15" fill="rgb(253,147,0)" fg:x="38578" fg:w="295"/><text x="76.3978%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (14 samples, 0.03%)</title><rect x="76.7025%" y="821" width="0.0276%" height="15" fill="rgb(252,46,33)" fg:x="38859" fg:w="14"/><text x="76.9525%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (14 samples, 0.03%)</title><rect x="76.7025%" y="805" width="0.0276%" height="15" fill="rgb(242,22,54)" fg:x="38859" fg:w="14"/><text x="76.9525%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.02%)</title><rect x="76.7143%" y="789" width="0.0158%" height="15" fill="rgb(223,178,32)" fg:x="38865" fg:w="8"/><text x="76.9643%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="76.7143%" y="773" width="0.0158%" height="15" fill="rgb(214,106,53)" fg:x="38865" fg:w="8"/><text x="76.9643%" y="783.50"></text></g><g><title>bevy_app::app::App::update (1,345 samples, 2.65%)</title><rect x="74.0772%" y="853" width="2.6548%" height="15" fill="rgb(232,65,50)" fg:x="37529" fg:w="1345"/><text x="74.3272%" y="863.50">be..</text></g><g><title>bevy_ecs::world::World::resource (9 samples, 0.02%)</title><rect x="76.7459%" y="853" width="0.0178%" height="15" fill="rgb(231,110,28)" fg:x="38881" fg:w="9"/><text x="76.9959%" y="863.50"></text></g><g><title>bevy_ecs::world::World::get_resource (9 samples, 0.02%)</title><rect x="76.7459%" y="837" width="0.0178%" height="15" fill="rgb(216,71,40)" fg:x="38881" fg:w="9"/><text x="76.9959%" y="847.50"></text></g><g><title>bevy_winit::handle_create_window_events (8 samples, 0.02%)</title><rect x="76.7676%" y="853" width="0.0158%" height="15" fill="rgb(229,89,53)" fg:x="38892" fg:w="8"/><text x="77.0176%" y="863.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,379 samples, 2.72%)</title><rect x="74.0693%" y="885" width="2.7220%" height="15" fill="rgb(210,124,14)" fg:x="37525" fg:w="1379"/><text x="74.3193%" y="895.50">wi..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,378 samples, 2.72%)</title><rect x="74.0713%" y="869" width="2.7200%" height="15" fill="rgb(236,213,6)" fg:x="37526" fg:w="1378"/><text x="74.3213%" y="879.50">be..</text></g><g><title>XFilterEvent (6 samples, 0.01%)</title><rect x="76.8288%" y="853" width="0.0118%" height="15" fill="rgb(228,41,5)" fg:x="38923" fg:w="6"/><text x="77.0788%" y="863.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send_mut (9 samples, 0.02%)</title><rect x="76.8900%" y="789" width="0.0178%" height="15" fill="rgb(221,167,25)" fg:x="38954" fg:w="9"/><text x="77.1400%" y="799.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (8 samples, 0.02%)</title><rect x="76.9077%" y="789" width="0.0158%" height="15" fill="rgb(228,144,37)" fg:x="38963" fg:w="8"/><text x="77.1577%" y="799.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (50 samples, 0.10%)</title><rect x="76.8623%" y="853" width="0.0987%" height="15" fill="rgb(227,189,38)" fg:x="38940" fg:w="50"/><text x="77.1123%" y="863.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (48 samples, 0.09%)</title><rect x="76.8663%" y="837" width="0.0947%" height="15" fill="rgb(218,8,2)" fg:x="38942" fg:w="48"/><text x="77.1163%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (48 samples, 0.09%)</title><rect x="76.8663%" y="821" width="0.0947%" height="15" fill="rgb(209,61,28)" fg:x="38942" fg:w="48"/><text x="77.1163%" y="831.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (45 samples, 0.09%)</title><rect x="76.8722%" y="805" width="0.0888%" height="15" fill="rgb(233,140,39)" fg:x="38945" fg:w="45"/><text x="77.1222%" y="815.50"></text></g><g><title>winit::window::Window::inner_size (8 samples, 0.02%)</title><rect x="76.9452%" y="789" width="0.0158%" height="15" fill="rgb(251,66,48)" fg:x="38982" fg:w="8"/><text x="77.1952%" y="799.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (8 samples, 0.02%)</title><rect x="76.9452%" y="773" width="0.0158%" height="15" fill="rgb(210,44,45)" fg:x="38982" fg:w="8"/><text x="77.1952%" y="783.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (8 samples, 0.02%)</title><rect x="76.9452%" y="757" width="0.0158%" height="15" fill="rgb(214,136,46)" fg:x="38982" fg:w="8"/><text x="77.1952%" y="767.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (6 samples, 0.01%)</title><rect x="76.9492%" y="741" width="0.0118%" height="15" fill="rgb(207,130,50)" fg:x="38984" fg:w="6"/><text x="77.1992%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (108 samples, 0.21%)</title><rect x="76.7913%" y="885" width="0.2132%" height="15" fill="rgb(228,102,49)" fg:x="38904" fg:w="108"/><text x="77.0413%" y="895.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (103 samples, 0.20%)</title><rect x="76.8012%" y="869" width="0.2033%" height="15" fill="rgb(253,55,1)" fg:x="38909" fg:w="103"/><text x="77.0512%" y="879.50"></text></g><g><title>_XError (8 samples, 0.02%)</title><rect x="77.0045%" y="837" width="0.0158%" height="15" fill="rgb(238,222,9)" fg:x="39012" fg:w="8"/><text x="77.2545%" y="847.50"></text></g><g><title>_XEnq (8 samples, 0.02%)</title><rect x="77.0045%" y="821" width="0.0158%" height="15" fill="rgb(246,99,6)" fg:x="39012" fg:w="8"/><text x="77.2545%" y="831.50"></text></g><g><title>_XiGetDevicePresenceNotifyEvent (8 samples, 0.02%)</title><rect x="77.0045%" y="805" width="0.0158%" height="15" fill="rgb(219,110,26)" fg:x="39012" fg:w="8"/><text x="77.2545%" y="815.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="77.0499%" y="773" width="0.0118%" height="15" fill="rgb(239,160,33)" fg:x="39035" fg:w="6"/><text x="77.2999%" y="783.50"></text></g><g><title>_XSend (25 samples, 0.05%)</title><rect x="77.0222%" y="821" width="0.0493%" height="15" fill="rgb(220,202,23)" fg:x="39021" fg:w="25"/><text x="77.2722%" y="831.50"></text></g><g><title>xcb_poll_for_reply64 (25 samples, 0.05%)</title><rect x="77.0222%" y="805" width="0.0493%" height="15" fill="rgb(208,80,26)" fg:x="39021" fg:w="25"/><text x="77.2722%" y="815.50"></text></g><g><title>xcb_wait_for_special_event (18 samples, 0.04%)</title><rect x="77.0360%" y="789" width="0.0355%" height="15" fill="rgb(243,85,7)" fg:x="39028" fg:w="18"/><text x="77.2860%" y="799.50"></text></g><g><title>bevy_winit::winit_runner_with (1,526 samples, 3.01%)</title><rect x="74.0614%" y="981" width="3.0121%" height="15" fill="rgb(228,77,47)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="991.50">bev..</text></g><g><title>bevy_winit::run (1,526 samples, 3.01%)</title><rect x="74.0614%" y="965" width="3.0121%" height="15" fill="rgb(212,226,8)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="975.50">bev..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,526 samples, 3.01%)</title><rect x="74.0614%" y="949" width="3.0121%" height="15" fill="rgb(241,120,54)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="959.50">win..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,526 samples, 3.01%)</title><rect x="74.0614%" y="933" width="3.0121%" height="15" fill="rgb(226,80,16)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="943.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,526 samples, 3.01%)</title><rect x="74.0614%" y="917" width="3.0121%" height="15" fill="rgb(240,76,13)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="927.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,526 samples, 3.01%)</title><rect x="74.0614%" y="901" width="3.0121%" height="15" fill="rgb(252,74,8)" fg:x="37521" fg:w="1526"/><text x="74.3114%" y="911.50">win..</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (35 samples, 0.07%)</title><rect x="77.0045%" y="885" width="0.0691%" height="15" fill="rgb(244,155,2)" fg:x="39012" fg:w="35"/><text x="77.2545%" y="895.50"></text></g><g><title>XPending (35 samples, 0.07%)</title><rect x="77.0045%" y="869" width="0.0691%" height="15" fill="rgb(215,81,35)" fg:x="39012" fg:w="35"/><text x="77.2545%" y="879.50"></text></g><g><title>_XEventsQueued (35 samples, 0.07%)</title><rect x="77.0045%" y="853" width="0.0691%" height="15" fill="rgb(206,55,2)" fg:x="39012" fg:w="35"/><text x="77.2545%" y="863.50"></text></g><g><title>_XSend (27 samples, 0.05%)</title><rect x="77.0203%" y="837" width="0.0533%" height="15" fill="rgb(231,2,34)" fg:x="39020" fg:w="27"/><text x="77.2703%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.03%)</title><rect x="77.0735%" y="981" width="0.0257%" height="15" fill="rgb(242,176,48)" fg:x="39047" fg:w="13"/><text x="77.3235%" y="991.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6 samples, 0.01%)</title><rect x="77.1150%" y="981" width="0.0118%" height="15" fill="rgb(249,31,36)" fg:x="39068" fg:w="6"/><text x="77.3650%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (10 samples, 0.02%)</title><rect x="77.1347%" y="981" width="0.0197%" height="15" fill="rgb(205,18,17)" fg:x="39078" fg:w="10"/><text x="77.3847%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (9 samples, 0.02%)</title><rect x="77.1367%" y="965" width="0.0178%" height="15" fill="rgb(254,130,5)" fg:x="39079" fg:w="9"/><text x="77.3867%" y="975.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (12 samples, 0.02%)</title><rect x="77.1564%" y="981" width="0.0237%" height="15" fill="rgb(229,42,45)" fg:x="39089" fg:w="12"/><text x="77.4064%" y="991.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (6 samples, 0.01%)</title><rect x="77.1683%" y="965" width="0.0118%" height="15" fill="rgb(245,95,25)" fg:x="39095" fg:w="6"/><text x="77.4183%" y="975.50"></text></g><g><title>core::fmt::write (9 samples, 0.02%)</title><rect x="77.1880%" y="981" width="0.0178%" height="15" fill="rgb(249,193,38)" fg:x="39105" fg:w="9"/><text x="77.4380%" y="991.50"></text></g><g><title>core::num::dec2flt::common::BiasedFp::zero_pow2 (9 samples, 0.02%)</title><rect x="77.2196%" y="981" width="0.0178%" height="15" fill="rgb(241,140,43)" fg:x="39121" fg:w="9"/><text x="77.4696%" y="991.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (23 samples, 0.05%)</title><rect x="77.2374%" y="981" width="0.0454%" height="15" fill="rgb(245,78,48)" fg:x="39130" fg:w="23"/><text x="77.4874%" y="991.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (6 samples, 0.01%)</title><rect x="77.2828%" y="981" width="0.0118%" height="15" fill="rgb(214,92,39)" fg:x="39153" fg:w="6"/><text x="77.5328%" y="991.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (23 samples, 0.05%)</title><rect x="77.3045%" y="981" width="0.0454%" height="15" fill="rgb(211,189,14)" fg:x="39164" fg:w="23"/><text x="77.5545%" y="991.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (10 samples, 0.02%)</title><rect x="77.3637%" y="981" width="0.0197%" height="15" fill="rgb(218,7,24)" fg:x="39194" fg:w="10"/><text x="77.6137%" y="991.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (19 samples, 0.04%)</title><rect x="77.4091%" y="853" width="0.0375%" height="15" fill="rgb(224,200,49)" fg:x="39217" fg:w="19"/><text x="77.6591%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (17 samples, 0.03%)</title><rect x="77.4131%" y="837" width="0.0336%" height="15" fill="rgb(218,210,14)" fg:x="39219" fg:w="17"/><text x="77.6631%" y="847.50"></text></g><g><title>XCheckIfEvent (15 samples, 0.03%)</title><rect x="77.4170%" y="821" width="0.0296%" height="15" fill="rgb(234,142,31)" fg:x="39221" fg:w="15"/><text x="77.6670%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (50 samples, 0.10%)</title><rect x="77.3894%" y="981" width="0.0987%" height="15" fill="rgb(227,165,2)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="991.50"></text></g><g><title>bevy_winit::winit_runner (50 samples, 0.10%)</title><rect x="77.3894%" y="965" width="0.0987%" height="15" fill="rgb(232,44,46)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="975.50"></text></g><g><title>bevy_winit::winit_runner_with (50 samples, 0.10%)</title><rect x="77.3894%" y="949" width="0.0987%" height="15" fill="rgb(236,149,47)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="959.50"></text></g><g><title>bevy_winit::run (50 samples, 0.10%)</title><rect x="77.3894%" y="933" width="0.0987%" height="15" fill="rgb(227,45,31)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="943.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (50 samples, 0.10%)</title><rect x="77.3894%" y="917" width="0.0987%" height="15" fill="rgb(240,176,51)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="927.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (50 samples, 0.10%)</title><rect x="77.3894%" y="901" width="0.0987%" height="15" fill="rgb(249,146,41)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (50 samples, 0.10%)</title><rect x="77.3894%" y="885" width="0.0987%" height="15" fill="rgb(213,208,4)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="895.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (50 samples, 0.10%)</title><rect x="77.3894%" y="869" width="0.0987%" height="15" fill="rgb(245,84,36)" fg:x="39207" fg:w="50"/><text x="77.6394%" y="879.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (21 samples, 0.04%)</title><rect x="77.4466%" y="853" width="0.0415%" height="15" fill="rgb(254,84,18)" fg:x="39236" fg:w="21"/><text x="77.6966%" y="863.50"></text></g><g><title>XPending (20 samples, 0.04%)</title><rect x="77.4486%" y="837" width="0.0395%" height="15" fill="rgb(225,38,54)" fg:x="39237" fg:w="20"/><text x="77.6986%" y="847.50"></text></g><g><title>_XEventsQueued (9 samples, 0.02%)</title><rect x="77.4703%" y="821" width="0.0178%" height="15" fill="rgb(246,50,30)" fg:x="39248" fg:w="9"/><text x="77.7203%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.05%)</title><rect x="77.4881%" y="981" width="0.0474%" height="15" fill="rgb(246,148,9)" fg:x="39257" fg:w="24"/><text x="77.7381%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.03%)</title><rect x="77.5078%" y="965" width="0.0276%" height="15" fill="rgb(223,75,4)" fg:x="39267" fg:w="14"/><text x="77.7578%" y="975.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (12 samples, 0.02%)</title><rect x="77.5117%" y="949" width="0.0237%" height="15" fill="rgb(239,148,41)" fg:x="39269" fg:w="12"/><text x="77.7617%" y="959.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (12 samples, 0.02%)</title><rect x="77.5117%" y="933" width="0.0237%" height="15" fill="rgb(205,195,3)" fg:x="39269" fg:w="12"/><text x="77.7617%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (8 samples, 0.02%)</title><rect x="77.5710%" y="981" width="0.0158%" height="15" fill="rgb(254,161,1)" fg:x="39299" fg:w="8"/><text x="77.8210%" y="991.50"></text></g><g><title>log::__private_api_log (6 samples, 0.01%)</title><rect x="77.6460%" y="981" width="0.0118%" height="15" fill="rgb(211,229,8)" fg:x="39337" fg:w="6"/><text x="77.8960%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (27 samples, 0.05%)</title><rect x="77.6618%" y="981" width="0.0533%" height="15" fill="rgb(220,97,9)" fg:x="39345" fg:w="27"/><text x="77.9118%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (36 samples, 0.07%)</title><rect x="77.7151%" y="981" width="0.0711%" height="15" fill="rgb(240,218,8)" fg:x="39372" fg:w="36"/><text x="77.9651%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (36 samples, 0.07%)</title><rect x="77.7151%" y="965" width="0.0711%" height="15" fill="rgb(250,44,0)" fg:x="39372" fg:w="36"/><text x="77.9651%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (62 samples, 0.12%)</title><rect x="77.8552%" y="981" width="0.1224%" height="15" fill="rgb(236,41,53)" fg:x="39443" fg:w="62"/><text x="78.1052%" y="991.50"></text></g><g><title>wgpu::SurfaceTexture::present (7 samples, 0.01%)</title><rect x="77.9776%" y="981" width="0.0138%" height="15" fill="rgb(218,227,13)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (7 samples, 0.01%)</title><rect x="77.9776%" y="965" width="0.0138%" height="15" fill="rgb(217,94,32)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="975.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (7 samples, 0.01%)</title><rect x="77.9776%" y="949" width="0.0138%" height="15" fill="rgb(213,217,12)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="959.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (7 samples, 0.01%)</title><rect x="77.9776%" y="933" width="0.0138%" height="15" fill="rgb(229,13,46)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="943.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (7 samples, 0.01%)</title><rect x="77.9776%" y="917" width="0.0138%" height="15" fill="rgb(243,139,5)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="927.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (7 samples, 0.01%)</title><rect x="77.9776%" y="901" width="0.0138%" height="15" fill="rgb(249,38,45)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="911.50"></text></g><g><title>__glx_Main (7 samples, 0.01%)</title><rect x="77.9776%" y="885" width="0.0138%" height="15" fill="rgb(216,70,11)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="77.9776%" y="869" width="0.0138%" height="15" fill="rgb(253,101,25)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="77.9776%" y="853" width="0.0138%" height="15" fill="rgb(207,197,30)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="77.9776%" y="837" width="0.0138%" height="15" fill="rgb(238,87,13)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="77.9776%" y="821" width="0.0138%" height="15" fill="rgb(215,155,8)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="831.50"></text></g><g><title>_nv009glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="805" width="0.0138%" height="15" fill="rgb(239,166,38)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="815.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="789" width="0.0138%" height="15" fill="rgb(240,194,35)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="799.50"></text></g><g><title>_nv011glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="773" width="0.0138%" height="15" fill="rgb(219,10,44)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="783.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="757" width="0.0138%" height="15" fill="rgb(251,220,35)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="767.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="741" width="0.0138%" height="15" fill="rgb(218,117,13)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="751.50"></text></g><g><title>_nv009glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="725" width="0.0138%" height="15" fill="rgb(221,213,40)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="735.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="709" width="0.0138%" height="15" fill="rgb(251,224,35)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="719.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="77.9776%" y="693" width="0.0138%" height="15" fill="rgb(241,33,39)" fg:x="39505" fg:w="7"/><text x="78.2276%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (17 samples, 0.03%)</title><rect x="78.0052%" y="965" width="0.0336%" height="15" fill="rgb(222,74,17)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (17 samples, 0.03%)</title><rect x="78.0052%" y="949" width="0.0336%" height="15" fill="rgb(225,103,0)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="959.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.03%)</title><rect x="78.0052%" y="933" width="0.0336%" height="15" fill="rgb(240,0,12)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="943.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.03%)</title><rect x="78.0052%" y="917" width="0.0336%" height="15" fill="rgb(233,213,37)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.03%)</title><rect x="78.0052%" y="901" width="0.0336%" height="15" fill="rgb(225,84,52)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.03%)</title><rect x="78.0052%" y="885" width="0.0336%" height="15" fill="rgb(247,160,51)" fg:x="39519" fg:w="17"/><text x="78.2552%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.03%)</title><rect x="78.0131%" y="869" width="0.0257%" height="15" fill="rgb(244,60,51)" fg:x="39523" fg:w="13"/><text x="78.2631%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="78.0171%" y="853" width="0.0217%" height="15" fill="rgb(233,114,7)" fg:x="39525" fg:w="11"/><text x="78.2671%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="78.0230%" y="837" width="0.0158%" height="15" fill="rgb(246,136,16)" fg:x="39528" fg:w="8"/><text x="78.2730%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="78.0249%" y="821" width="0.0138%" height="15" fill="rgb(243,114,45)" fg:x="39529" fg:w="7"/><text x="78.2749%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="78.0269%" y="805" width="0.0118%" height="15" fill="rgb(247,183,43)" fg:x="39530" fg:w="6"/><text x="78.2769%" y="815.50"></text></g><g><title>_nv011glcore (7 samples, 0.01%)</title><rect x="78.1236%" y="901" width="0.0138%" height="15" fill="rgb(251,210,42)" fg:x="39579" fg:w="7"/><text x="78.3736%" y="911.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="78.1256%" y="885" width="0.0118%" height="15" fill="rgb(221,88,35)" fg:x="39580" fg:w="6"/><text x="78.3756%" y="895.50"></text></g><g><title>_nv023glcore (9 samples, 0.02%)</title><rect x="78.1690%" y="885" width="0.0178%" height="15" fill="rgb(242,21,20)" fg:x="39602" fg:w="9"/><text x="78.4190%" y="895.50"></text></g><g><title>_nv023glcore (6 samples, 0.01%)</title><rect x="78.1750%" y="869" width="0.0118%" height="15" fill="rgb(233,226,36)" fg:x="39605" fg:w="6"/><text x="78.4250%" y="879.50"></text></g><g><title>_nv023glcore (15 samples, 0.03%)</title><rect x="78.2243%" y="869" width="0.0296%" height="15" fill="rgb(243,189,34)" fg:x="39630" fg:w="15"/><text x="78.4743%" y="879.50"></text></g><g><title>_nv023glcore (6 samples, 0.01%)</title><rect x="78.2421%" y="853" width="0.0118%" height="15" fill="rgb(207,145,50)" fg:x="39639" fg:w="6"/><text x="78.4921%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (105 samples, 0.21%)</title><rect x="78.0743%" y="933" width="0.2073%" height="15" fill="rgb(242,1,50)" fg:x="39554" fg:w="105"/><text x="78.3243%" y="943.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (92 samples, 0.18%)</title><rect x="78.1000%" y="917" width="0.1816%" height="15" fill="rgb(231,65,32)" fg:x="39567" fg:w="92"/><text x="78.3500%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (73 samples, 0.14%)</title><rect x="78.1375%" y="901" width="0.1441%" height="15" fill="rgb(208,68,49)" fg:x="39586" fg:w="73"/><text x="78.3875%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (48 samples, 0.09%)</title><rect x="78.1868%" y="885" width="0.0947%" height="15" fill="rgb(253,54,49)" fg:x="39611" fg:w="48"/><text x="78.4368%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.03%)</title><rect x="78.2539%" y="869" width="0.0276%" height="15" fill="rgb(245,186,24)" fg:x="39645" fg:w="14"/><text x="78.5039%" y="879.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.01%)</title><rect x="78.3033%" y="901" width="0.0118%" height="15" fill="rgb(209,2,41)" fg:x="39670" fg:w="6"/><text x="78.5533%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (161 samples, 0.32%)</title><rect x="77.9993%" y="981" width="0.3178%" height="15" fill="rgb(242,208,54)" fg:x="39516" fg:w="161"/><text x="78.2493%" y="991.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (141 samples, 0.28%)</title><rect x="78.0388%" y="965" width="0.2783%" height="15" fill="rgb(225,9,51)" fg:x="39536" fg:w="141"/><text x="78.2888%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (141 samples, 0.28%)</title><rect x="78.0388%" y="949" width="0.2783%" height="15" fill="rgb(207,207,25)" fg:x="39536" fg:w="141"/><text x="78.2888%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_render_pass (9 samples, 0.02%)</title><rect x="78.2993%" y="933" width="0.0178%" height="15" fill="rgb(253,96,18)" fg:x="39668" fg:w="9"/><text x="78.5493%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.01%)</title><rect x="78.3033%" y="917" width="0.0138%" height="15" fill="rgb(252,215,20)" fg:x="39670" fg:w="7"/><text x="78.5533%" y="927.50"></text></g><g><title>_nv009glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="885" width="0.0296%" height="15" fill="rgb(245,227,26)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="895.50"></text></g><g><title>_nv041glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="869" width="0.0296%" height="15" fill="rgb(241,208,0)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="879.50"></text></g><g><title>_nv041glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="853" width="0.0296%" height="15" fill="rgb(224,130,10)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="863.50"></text></g><g><title>_nv041glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="837" width="0.0296%" height="15" fill="rgb(237,29,0)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="847.50"></text></g><g><title>_nv009glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="821" width="0.0296%" height="15" fill="rgb(219,27,41)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="831.50"></text></g><g><title>_nv009glcore (15 samples, 0.03%)</title><rect x="78.3348%" y="805" width="0.0296%" height="15" fill="rgb(245,101,19)" fg:x="39686" fg:w="15"/><text x="78.5848%" y="815.50"></text></g><g><title>_nv009glcore (21 samples, 0.04%)</title><rect x="78.3645%" y="757" width="0.0415%" height="15" fill="rgb(243,44,37)" fg:x="39701" fg:w="21"/><text x="78.6145%" y="767.50"></text></g><g><title>_nv041glcore (22 samples, 0.04%)</title><rect x="78.3645%" y="805" width="0.0434%" height="15" fill="rgb(228,213,43)" fg:x="39701" fg:w="22"/><text x="78.6145%" y="815.50"></text></g><g><title>_nv041glcore (22 samples, 0.04%)</title><rect x="78.3645%" y="789" width="0.0434%" height="15" fill="rgb(219,163,21)" fg:x="39701" fg:w="22"/><text x="78.6145%" y="799.50"></text></g><g><title>_nv009glcore (22 samples, 0.04%)</title><rect x="78.3645%" y="773" width="0.0434%" height="15" fill="rgb(234,86,24)" fg:x="39701" fg:w="22"/><text x="78.6145%" y="783.50"></text></g><g><title>_nv009glcore (43 samples, 0.08%)</title><rect x="78.4316%" y="661" width="0.0849%" height="15" fill="rgb(225,10,24)" fg:x="39735" fg:w="43"/><text x="78.6816%" y="671.50"></text></g><g><title>_nv009glcore (41 samples, 0.08%)</title><rect x="78.4355%" y="645" width="0.0809%" height="15" fill="rgb(218,109,7)" fg:x="39737" fg:w="41"/><text x="78.6855%" y="655.50"></text></g><g><title>_nv011glcore (66 samples, 0.13%)</title><rect x="78.4118%" y="741" width="0.1303%" height="15" fill="rgb(210,20,26)" fg:x="39725" fg:w="66"/><text x="78.6618%" y="751.50"></text></g><g><title>_nv041glcore (65 samples, 0.13%)</title><rect x="78.4138%" y="725" width="0.1283%" height="15" fill="rgb(216,18,1)" fg:x="39726" fg:w="65"/><text x="78.6638%" y="735.50"></text></g><g><title>_nv041glcore (63 samples, 0.12%)</title><rect x="78.4177%" y="709" width="0.1244%" height="15" fill="rgb(206,163,23)" fg:x="39728" fg:w="63"/><text x="78.6677%" y="719.50"></text></g><g><title>_nv041glcore (63 samples, 0.12%)</title><rect x="78.4177%" y="693" width="0.1244%" height="15" fill="rgb(229,150,31)" fg:x="39728" fg:w="63"/><text x="78.6677%" y="703.50"></text></g><g><title>_nv041glcore (59 samples, 0.12%)</title><rect x="78.4256%" y="677" width="0.1165%" height="15" fill="rgb(231,10,5)" fg:x="39732" fg:w="59"/><text x="78.6756%" y="687.50"></text></g><g><title>_nv041glcore (13 samples, 0.03%)</title><rect x="78.5164%" y="661" width="0.0257%" height="15" fill="rgb(250,40,50)" fg:x="39778" fg:w="13"/><text x="78.7664%" y="671.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (112 samples, 0.22%)</title><rect x="78.3348%" y="965" width="0.2211%" height="15" fill="rgb(217,119,7)" fg:x="39686" fg:w="112"/><text x="78.5848%" y="975.50"></text></g><g><title>ash::device::Device::queue_submit (112 samples, 0.22%)</title><rect x="78.3348%" y="949" width="0.2211%" height="15" fill="rgb(245,214,40)" fg:x="39686" fg:w="112"/><text x="78.5848%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (112 samples, 0.22%)</title><rect x="78.3348%" y="933" width="0.2211%" height="15" fill="rgb(216,187,1)" fg:x="39686" fg:w="112"/><text x="78.5848%" y="943.50"></text></g><g><title>__glx_Main (112 samples, 0.22%)</title><rect x="78.3348%" y="917" width="0.2211%" height="15" fill="rgb(237,146,21)" fg:x="39686" fg:w="112"/><text x="78.5848%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (112 samples, 0.22%)</title><rect x="78.3348%" y="901" width="0.2211%" height="15" fill="rgb(210,174,47)" fg:x="39686" fg:w="112"/><text x="78.5848%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (97 samples, 0.19%)</title><rect x="78.3645%" y="885" width="0.1915%" height="15" fill="rgb(218,111,39)" fg:x="39701" fg:w="97"/><text x="78.6145%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (97 samples, 0.19%)</title><rect x="78.3645%" y="869" width="0.1915%" height="15" fill="rgb(224,95,19)" fg:x="39701" fg:w="97"/><text x="78.6145%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (97 samples, 0.19%)</title><rect x="78.3645%" y="853" width="0.1915%" height="15" fill="rgb(234,15,38)" fg:x="39701" fg:w="97"/><text x="78.6145%" y="863.50"></text></g><g><title>_nv009glcore (97 samples, 0.19%)</title><rect x="78.3645%" y="837" width="0.1915%" height="15" fill="rgb(246,56,12)" fg:x="39701" fg:w="97"/><text x="78.6145%" y="847.50"></text></g><g><title>_nv041glcore (97 samples, 0.19%)</title><rect x="78.3645%" y="821" width="0.1915%" height="15" fill="rgb(247,16,17)" fg:x="39701" fg:w="97"/><text x="78.6145%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (75 samples, 0.15%)</title><rect x="78.4079%" y="805" width="0.1480%" height="15" fill="rgb(215,151,11)" fg:x="39723" fg:w="75"/><text x="78.6579%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (75 samples, 0.15%)</title><rect x="78.4079%" y="789" width="0.1480%" height="15" fill="rgb(225,16,24)" fg:x="39723" fg:w="75"/><text x="78.6579%" y="799.50"></text></g><g><title>_nv009glcore (75 samples, 0.15%)</title><rect x="78.4079%" y="773" width="0.1480%" height="15" fill="rgb(217,117,5)" fg:x="39723" fg:w="75"/><text x="78.6579%" y="783.50"></text></g><g><title>_nv041glcore (74 samples, 0.15%)</title><rect x="78.4099%" y="757" width="0.1461%" height="15" fill="rgb(246,187,53)" fg:x="39724" fg:w="74"/><text x="78.6599%" y="767.50"></text></g><g><title>_nv041glcore (6 samples, 0.01%)</title><rect x="78.5441%" y="741" width="0.0118%" height="15" fill="rgb(241,71,40)" fg:x="39792" fg:w="6"/><text x="78.7941%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (8 samples, 0.02%)</title><rect x="78.5559%" y="949" width="0.0158%" height="15" fill="rgb(231,67,39)" fg:x="39798" fg:w="8"/><text x="78.8059%" y="959.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (8 samples, 0.02%)</title><rect x="78.5559%" y="933" width="0.0158%" height="15" fill="rgb(222,120,24)" fg:x="39798" fg:w="8"/><text x="78.8059%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (8 samples, 0.02%)</title><rect x="78.5559%" y="917" width="0.0158%" height="15" fill="rgb(248,3,3)" fg:x="39798" fg:w="8"/><text x="78.8059%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="78.5559%" y="901" width="0.0158%" height="15" fill="rgb(228,218,5)" fg:x="39798" fg:w="8"/><text x="78.8059%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="78.5579%" y="885" width="0.0138%" height="15" fill="rgb(212,202,43)" fg:x="39799" fg:w="7"/><text x="78.8079%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="78.5579%" y="869" width="0.0138%" height="15" fill="rgb(235,183,2)" fg:x="39799" fg:w="7"/><text x="78.8079%" y="879.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (14 samples, 0.03%)</title><rect x="78.5559%" y="965" width="0.0276%" height="15" fill="rgb(230,165,10)" fg:x="39798" fg:w="14"/><text x="78.8059%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (6 samples, 0.01%)</title><rect x="78.5717%" y="949" width="0.0118%" height="15" fill="rgb(219,54,40)" fg:x="39806" fg:w="6"/><text x="78.8217%" y="959.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (6 samples, 0.01%)</title><rect x="78.5717%" y="933" width="0.0118%" height="15" fill="rgb(244,73,9)" fg:x="39806" fg:w="6"/><text x="78.8217%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (6 samples, 0.01%)</title><rect x="78.5717%" y="917" width="0.0118%" height="15" fill="rgb(212,32,45)" fg:x="39806" fg:w="6"/><text x="78.8217%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="78.5717%" y="901" width="0.0118%" height="15" fill="rgb(205,58,31)" fg:x="39806" fg:w="6"/><text x="78.8217%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="78.5875%" y="901" width="0.0138%" height="15" fill="rgb(250,120,43)" fg:x="39814" fg:w="7"/><text x="78.8375%" y="911.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (11 samples, 0.02%)</title><rect x="78.5836%" y="965" width="0.0217%" height="15" fill="rgb(235,13,10)" fg:x="39812" fg:w="11"/><text x="78.8336%" y="975.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (11 samples, 0.02%)</title><rect x="78.5836%" y="949" width="0.0217%" height="15" fill="rgb(232,219,31)" fg:x="39812" fg:w="11"/><text x="78.8336%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (11 samples, 0.02%)</title><rect x="78.5836%" y="933" width="0.0217%" height="15" fill="rgb(218,157,51)" fg:x="39812" fg:w="11"/><text x="78.8336%" y="943.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (11 samples, 0.02%)</title><rect x="78.5836%" y="917" width="0.0217%" height="15" fill="rgb(211,91,52)" fg:x="39812" fg:w="11"/><text x="78.8336%" y="927.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (142 samples, 0.28%)</title><rect x="78.3329%" y="981" width="0.2803%" height="15" fill="rgb(240,173,1)" fg:x="39685" fg:w="142"/><text x="78.5829%" y="991.50"></text></g><g><title>__glx_Main (10 samples, 0.02%)</title><rect x="78.6151%" y="837" width="0.0197%" height="15" fill="rgb(248,20,47)" fg:x="39828" fg:w="10"/><text x="78.8651%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (10 samples, 0.02%)</title><rect x="78.6151%" y="821" width="0.0197%" height="15" fill="rgb(217,221,40)" fg:x="39828" fg:w="10"/><text x="78.8651%" y="831.50"></text></g><g><title>_nv011glcore (10 samples, 0.02%)</title><rect x="78.6151%" y="805" width="0.0197%" height="15" fill="rgb(226,149,51)" fg:x="39828" fg:w="10"/><text x="78.8651%" y="815.50"></text></g><g><title>_nv011glcore (10 samples, 0.02%)</title><rect x="78.6151%" y="789" width="0.0197%" height="15" fill="rgb(252,193,7)" fg:x="39828" fg:w="10"/><text x="78.8651%" y="799.50"></text></g><g><title>ash::entry::Entry::create_instance (12 samples, 0.02%)</title><rect x="78.6132%" y="917" width="0.0237%" height="15" fill="rgb(205,123,0)" fg:x="39827" fg:w="12"/><text x="78.8632%" y="927.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::create_instance (12 samples, 0.02%)</title><rect x="78.6132%" y="901" width="0.0237%" height="15" fill="rgb(233,173,25)" fg:x="39827" fg:w="12"/><text x="78.8632%" y="911.50"></text></g><g><title>vkCreateInstance (12 samples, 0.02%)</title><rect x="78.6132%" y="885" width="0.0237%" height="15" fill="rgb(216,63,32)" fg:x="39827" fg:w="12"/><text x="78.8632%" y="895.50"></text></g><g><title>[libvulkan.so.1.3.208] (12 samples, 0.02%)</title><rect x="78.6132%" y="869" width="0.0237%" height="15" fill="rgb(209,56,45)" fg:x="39827" fg:w="12"/><text x="78.8632%" y="879.50"></text></g><g><title>[libvulkan.so.1.3.208] (12 samples, 0.02%)</title><rect x="78.6132%" y="853" width="0.0237%" height="15" fill="rgb(226,111,49)" fg:x="39827" fg:w="12"/><text x="78.8632%" y="863.50"></text></g><g><title>__GI__dl_catch_error (14 samples, 0.03%)</title><rect x="78.6447%" y="757" width="0.0276%" height="15" fill="rgb(244,181,21)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="767.50"></text></g><g><title>__GI__dl_catch_exception (14 samples, 0.03%)</title><rect x="78.6447%" y="741" width="0.0276%" height="15" fill="rgb(222,126,15)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="751.50"></text></g><g><title>dlopen_doit (14 samples, 0.03%)</title><rect x="78.6447%" y="725" width="0.0276%" height="15" fill="rgb(222,95,17)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="735.50"></text></g><g><title>_dl_open (14 samples, 0.03%)</title><rect x="78.6447%" y="709" width="0.0276%" height="15" fill="rgb(254,46,5)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="719.50"></text></g><g><title>__GI__dl_catch_exception (14 samples, 0.03%)</title><rect x="78.6447%" y="693" width="0.0276%" height="15" fill="rgb(236,216,35)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="703.50"></text></g><g><title>dl_open_worker (14 samples, 0.03%)</title><rect x="78.6447%" y="677" width="0.0276%" height="15" fill="rgb(217,187,26)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="687.50"></text></g><g><title>__GI__dl_catch_exception (14 samples, 0.03%)</title><rect x="78.6447%" y="661" width="0.0276%" height="15" fill="rgb(207,192,25)" fg:x="39843" fg:w="14"/><text x="78.8947%" y="671.50"></text></g><g><title>dl_open_worker_begin (13 samples, 0.03%)</title><rect x="78.6467%" y="645" width="0.0257%" height="15" fill="rgb(253,135,27)" fg:x="39844" fg:w="13"/><text x="78.8967%" y="655.50"></text></g><g><title>_dl_relocate_object (13 samples, 0.03%)</title><rect x="78.6467%" y="629" width="0.0257%" height="15" fill="rgb(211,122,29)" fg:x="39844" fg:w="13"/><text x="78.8967%" y="639.50"></text></g><g><title>_dl_lookup_symbol_x (8 samples, 0.02%)</title><rect x="78.6566%" y="613" width="0.0158%" height="15" fill="rgb(233,162,40)" fg:x="39849" fg:w="8"/><text x="78.9066%" y="623.50"></text></g><g><title>do_lookup_x (6 samples, 0.01%)</title><rect x="78.6605%" y="597" width="0.0118%" height="15" fill="rgb(222,184,47)" fg:x="39851" fg:w="6"/><text x="78.9105%" y="607.50"></text></g><g><title>___dlopen (15 samples, 0.03%)</title><rect x="78.6447%" y="789" width="0.0296%" height="15" fill="rgb(249,99,23)" fg:x="39843" fg:w="15"/><text x="78.8947%" y="799.50"></text></g><g><title>_dlerror_run (15 samples, 0.03%)</title><rect x="78.6447%" y="773" width="0.0296%" height="15" fill="rgb(214,60,12)" fg:x="39843" fg:w="15"/><text x="78.8947%" y="783.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (34 samples, 0.07%)</title><rect x="78.6132%" y="981" width="0.0671%" height="15" fill="rgb(250,229,36)" fg:x="39827" fg:w="34"/><text x="78.8632%" y="991.50"></text></g><g><title>wgpu_core::instance::Instance::new (34 samples, 0.07%)</title><rect x="78.6132%" y="965" width="0.0671%" height="15" fill="rgb(232,195,10)" fg:x="39827" fg:w="34"/><text x="78.8632%" y="975.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (34 samples, 0.07%)</title><rect x="78.6132%" y="949" width="0.0671%" height="15" fill="rgb(205,213,31)" fg:x="39827" fg:w="34"/><text x="78.8632%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (34 samples, 0.07%)</title><rect x="78.6132%" y="933" width="0.0671%" height="15" fill="rgb(237,43,8)" fg:x="39827" fg:w="34"/><text x="78.8632%" y="943.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (18 samples, 0.04%)</title><rect x="78.6447%" y="917" width="0.0355%" height="15" fill="rgb(216,208,3)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="927.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (18 samples, 0.04%)</title><rect x="78.6447%" y="901" width="0.0355%" height="15" fill="rgb(228,179,44)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="911.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (18 samples, 0.04%)</title><rect x="78.6447%" y="885" width="0.0355%" height="15" fill="rgb(230,192,27)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="895.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (18 samples, 0.04%)</title><rect x="78.6447%" y="869" width="0.0355%" height="15" fill="rgb(251,30,38)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="879.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (18 samples, 0.04%)</title><rect x="78.6447%" y="853" width="0.0355%" height="15" fill="rgb(246,55,52)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="863.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (18 samples, 0.04%)</title><rect x="78.6447%" y="837" width="0.0355%" height="15" fill="rgb(249,79,26)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.208] (18 samples, 0.04%)</title><rect x="78.6447%" y="821" width="0.0355%" height="15" fill="rgb(220,202,16)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.208] (18 samples, 0.04%)</title><rect x="78.6447%" y="805" width="0.0355%" height="15" fill="rgb(250,170,23)" fg:x="39843" fg:w="18"/><text x="78.8947%" y="815.50"></text></g><g><title>_nv009glcore (20 samples, 0.04%)</title><rect x="78.7138%" y="757" width="0.0395%" height="15" fill="rgb(230,7,37)" fg:x="39878" fg:w="20"/><text x="78.9638%" y="767.50"></text></g><g><title>_nv041glcore (20 samples, 0.04%)</title><rect x="78.7138%" y="741" width="0.0395%" height="15" fill="rgb(213,71,1)" fg:x="39878" fg:w="20"/><text x="78.9638%" y="751.50"></text></g><g><title>_nv041glcore (20 samples, 0.04%)</title><rect x="78.7138%" y="725" width="0.0395%" height="15" fill="rgb(227,87,39)" fg:x="39878" fg:w="20"/><text x="78.9638%" y="735.50"></text></g><g><title>_nv041glcore (19 samples, 0.04%)</title><rect x="78.7158%" y="709" width="0.0375%" height="15" fill="rgb(210,41,29)" fg:x="39879" fg:w="19"/><text x="78.9658%" y="719.50"></text></g><g><title>_nv009glcore (19 samples, 0.04%)</title><rect x="78.7158%" y="693" width="0.0375%" height="15" fill="rgb(206,191,31)" fg:x="39879" fg:w="19"/><text x="78.9658%" y="703.50"></text></g><g><title>_nv009glcore (19 samples, 0.04%)</title><rect x="78.7158%" y="677" width="0.0375%" height="15" fill="rgb(247,75,54)" fg:x="39879" fg:w="19"/><text x="78.9658%" y="687.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (25 samples, 0.05%)</title><rect x="78.7138%" y="981" width="0.0493%" height="15" fill="rgb(208,54,50)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="991.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (25 samples, 0.05%)</title><rect x="78.7138%" y="965" width="0.0493%" height="15" fill="rgb(214,90,37)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="975.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (25 samples, 0.05%)</title><rect x="78.7138%" y="949" width="0.0493%" height="15" fill="rgb(220,132,6)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="959.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (25 samples, 0.05%)</title><rect x="78.7138%" y="933" width="0.0493%" height="15" fill="rgb(213,167,7)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="943.50"></text></g><g><title>__glx_Main (25 samples, 0.05%)</title><rect x="78.7138%" y="917" width="0.0493%" height="15" fill="rgb(243,36,27)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.05%)</title><rect x="78.7138%" y="901" width="0.0493%" height="15" fill="rgb(235,147,12)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.05%)</title><rect x="78.7138%" y="885" width="0.0493%" height="15" fill="rgb(212,198,44)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.05%)</title><rect x="78.7138%" y="869" width="0.0493%" height="15" fill="rgb(218,68,50)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.05%)</title><rect x="78.7138%" y="853" width="0.0493%" height="15" fill="rgb(224,79,48)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="863.50"></text></g><g><title>_nv009glcore (25 samples, 0.05%)</title><rect x="78.7138%" y="837" width="0.0493%" height="15" fill="rgb(213,191,50)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="847.50"></text></g><g><title>_nv041glcore (25 samples, 0.05%)</title><rect x="78.7138%" y="821" width="0.0493%" height="15" fill="rgb(254,146,10)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="831.50"></text></g><g><title>_nv011glcore (25 samples, 0.05%)</title><rect x="78.7138%" y="805" width="0.0493%" height="15" fill="rgb(215,175,11)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="815.50"></text></g><g><title>_nv041glcore (25 samples, 0.05%)</title><rect x="78.7138%" y="789" width="0.0493%" height="15" fill="rgb(207,49,7)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="799.50"></text></g><g><title>_nv041glcore (25 samples, 0.05%)</title><rect x="78.7138%" y="773" width="0.0493%" height="15" fill="rgb(234,144,29)" fg:x="39878" fg:w="25"/><text x="78.9638%" y="783.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (10 samples, 0.02%)</title><rect x="78.7730%" y="981" width="0.0197%" height="15" fill="rgb(213,222,48)" fg:x="39908" fg:w="10"/><text x="79.0230%" y="991.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (7 samples, 0.01%)</title><rect x="78.8421%" y="565" width="0.0138%" height="15" fill="rgb(222,8,6)" fg:x="39943" fg:w="7"/><text x="79.0921%" y="575.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (7 samples, 0.01%)</title><rect x="78.8421%" y="549" width="0.0138%" height="15" fill="rgb(221,114,49)" fg:x="39943" fg:w="7"/><text x="79.0921%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="78.8421%" y="533" width="0.0138%" height="15" fill="rgb(250,140,42)" fg:x="39943" fg:w="7"/><text x="79.0921%" y="543.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (7 samples, 0.01%)</title><rect x="78.8421%" y="517" width="0.0138%" height="15" fill="rgb(250,150,27)" fg:x="39943" fg:w="7"/><text x="79.0921%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.03%)</title><rect x="78.8796%" y="517" width="0.0296%" height="15" fill="rgb(252,159,3)" fg:x="39962" fg:w="15"/><text x="79.1296%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (15 samples, 0.03%)</title><rect x="78.8796%" y="501" width="0.0296%" height="15" fill="rgb(241,182,3)" fg:x="39962" fg:w="15"/><text x="79.1296%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.03%)</title><rect x="78.8796%" y="485" width="0.0296%" height="15" fill="rgb(236,3,9)" fg:x="39962" fg:w="15"/><text x="79.1296%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="78.9092%" y="517" width="0.0296%" height="15" fill="rgb(223,227,51)" fg:x="39977" fg:w="15"/><text x="79.1592%" y="527.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="78.9092%" y="501" width="0.0296%" height="15" fill="rgb(232,133,30)" fg:x="39977" fg:w="15"/><text x="79.1592%" y="511.50"></text></g><g><title>alloc::vec::from_elem (19 samples, 0.04%)</title><rect x="78.9388%" y="517" width="0.0375%" height="15" fill="rgb(209,93,27)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (19 samples, 0.04%)</title><rect x="78.9388%" y="501" width="0.0375%" height="15" fill="rgb(208,108,34)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (19 samples, 0.04%)</title><rect x="78.9388%" y="485" width="0.0375%" height="15" fill="rgb(215,189,13)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.04%)</title><rect x="78.9388%" y="469" width="0.0375%" height="15" fill="rgb(206,88,23)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (19 samples, 0.04%)</title><rect x="78.9388%" y="453" width="0.0375%" height="15" fill="rgb(240,173,0)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.04%)</title><rect x="78.9388%" y="437" width="0.0375%" height="15" fill="rgb(223,106,52)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="447.50"></text></g><g><title>alloc::alloc::alloc_zeroed (19 samples, 0.04%)</title><rect x="78.9388%" y="421" width="0.0375%" height="15" fill="rgb(206,130,16)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="431.50"></text></g><g><title>__memset_avx2_unaligned_erms (19 samples, 0.04%)</title><rect x="78.9388%" y="405" width="0.0375%" height="15" fill="rgb(220,54,25)" fg:x="39992" fg:w="19"/><text x="79.1888%" y="415.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (168 samples, 0.33%)</title><rect x="78.8638%" y="533" width="0.3316%" height="15" fill="rgb(210,4,38)" fg:x="39954" fg:w="168"/><text x="79.1138%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (109 samples, 0.22%)</title><rect x="78.9803%" y="517" width="0.2152%" height="15" fill="rgb(238,94,39)" fg:x="40013" fg:w="109"/><text x="79.2303%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (109 samples, 0.22%)</title><rect x="78.9803%" y="501" width="0.2152%" height="15" fill="rgb(234,124,34)" fg:x="40013" fg:w="109"/><text x="79.2303%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (95 samples, 0.19%)</title><rect x="79.0079%" y="485" width="0.1875%" height="15" fill="rgb(221,91,40)" fg:x="40027" fg:w="95"/><text x="79.2579%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (21 samples, 0.04%)</title><rect x="79.2033%" y="501" width="0.0415%" height="15" fill="rgb(246,53,28)" fg:x="40126" fg:w="21"/><text x="79.4533%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.04%)</title><rect x="79.2033%" y="485" width="0.0415%" height="15" fill="rgb(229,109,7)" fg:x="40126" fg:w="21"/><text x="79.4533%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.04%)</title><rect x="79.2033%" y="469" width="0.0415%" height="15" fill="rgb(249,117,8)" fg:x="40126" fg:w="21"/><text x="79.4533%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (28 samples, 0.06%)</title><rect x="79.1955%" y="533" width="0.0553%" height="15" fill="rgb(210,181,1)" fg:x="40122" fg:w="28"/><text x="79.4455%" y="543.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (25 samples, 0.05%)</title><rect x="79.2014%" y="517" width="0.0493%" height="15" fill="rgb(211,66,1)" fg:x="40125" fg:w="25"/><text x="79.4514%" y="527.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (203 samples, 0.40%)</title><rect x="78.8579%" y="549" width="0.4007%" height="15" fill="rgb(221,90,14)" fg:x="39951" fg:w="203"/><text x="79.1079%" y="559.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (213 samples, 0.42%)</title><rect x="78.8559%" y="565" width="0.4204%" height="15" fill="rgb(219,222,44)" fg:x="39950" fg:w="213"/><text x="79.1059%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (222 samples, 0.44%)</title><rect x="78.8402%" y="629" width="0.4382%" height="15" fill="rgb(246,34,33)" fg:x="39942" fg:w="222"/><text x="79.0902%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (222 samples, 0.44%)</title><rect x="78.8402%" y="613" width="0.4382%" height="15" fill="rgb(227,135,41)" fg:x="39942" fg:w="222"/><text x="79.0902%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (222 samples, 0.44%)</title><rect x="78.8402%" y="597" width="0.4382%" height="15" fill="rgb(226,15,14)" fg:x="39942" fg:w="222"/><text x="79.0902%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (222 samples, 0.44%)</title><rect x="78.8402%" y="581" width="0.4382%" height="15" fill="rgb(236,148,47)" fg:x="39942" fg:w="222"/><text x="79.0902%" y="591.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;A&gt;&gt;::prepare_stage (7 samples, 0.01%)</title><rect x="79.2922%" y="485" width="0.0138%" height="15" fill="rgb(233,162,52)" fg:x="40171" fg:w="7"/><text x="79.5422%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.01%)</title><rect x="79.2922%" y="469" width="0.0138%" height="15" fill="rgb(244,35,28)" fg:x="40171" fg:w="7"/><text x="79.5422%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="79.3080%" y="469" width="0.0138%" height="15" fill="rgb(205,121,10)" fg:x="40179" fg:w="7"/><text x="79.5580%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="79.3080%" y="453" width="0.0138%" height="15" fill="rgb(250,58,18)" fg:x="40179" fg:w="7"/><text x="79.5580%" y="463.50"></text></g><g><title>wgpu_core::device::queue::StagingData&lt;A&gt;::write (8 samples, 0.02%)</title><rect x="79.3080%" y="485" width="0.0158%" height="15" fill="rgb(216,37,13)" fg:x="40179" fg:w="8"/><text x="79.5580%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (29 samples, 0.06%)</title><rect x="79.2882%" y="517" width="0.0572%" height="15" fill="rgb(221,215,42)" fg:x="40169" fg:w="29"/><text x="79.5382%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (29 samples, 0.06%)</title><rect x="79.2882%" y="501" width="0.0572%" height="15" fill="rgb(217,214,19)" fg:x="40169" fg:w="29"/><text x="79.5382%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.02%)</title><rect x="79.3652%" y="421" width="0.0158%" height="15" fill="rgb(233,139,13)" fg:x="40208" fg:w="8"/><text x="79.6152%" y="431.50"></text></g><g><title>bevy_crevice::imp::imp_glam::&lt;impl bevy_crevice::std140::traits::AsStd140 for glam::mat4::Mat4&gt;::as_std140 (15 samples, 0.03%)</title><rect x="79.3652%" y="437" width="0.0296%" height="15" fill="rgb(247,168,23)" fg:x="40208" fg:w="15"/><text x="79.6152%" y="447.50"></text></g><g><title>bevy_crevice::imp::imp_mint::&lt;impl bevy_crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (7 samples, 0.01%)</title><rect x="79.3810%" y="421" width="0.0138%" height="15" fill="rgb(207,202,1)" fg:x="40216" fg:w="7"/><text x="79.6310%" y="431.50"></text></g><g><title>bevy_crevice::imp::imp_mint::&lt;impl bevy_crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (7 samples, 0.01%)</title><rect x="79.3810%" y="405" width="0.0138%" height="15" fill="rgb(220,155,48)" fg:x="40216" fg:w="7"/><text x="79.6310%" y="415.50"></text></g><g><title>&lt;bevy_crevice::std140::dynamic_uniform::DynamicUniform&lt;T&gt; as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (28 samples, 0.06%)</title><rect x="79.3455%" y="469" width="0.0553%" height="15" fill="rgb(250,43,26)" fg:x="40198" fg:w="28"/><text x="79.5955%" y="479.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::MeshUniform as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (28 samples, 0.06%)</title><rect x="79.3455%" y="453" width="0.0553%" height="15" fill="rgb(212,190,23)" fg:x="40198" fg:w="28"/><text x="79.5955%" y="463.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.01%)</title><rect x="79.4560%" y="453" width="0.0118%" height="15" fill="rgb(216,39,24)" fg:x="40254" fg:w="6"/><text x="79.7060%" y="463.50"></text></g><g><title>bevy_crevice::internal::align_offset (6 samples, 0.01%)</title><rect x="79.4678%" y="453" width="0.0118%" height="15" fill="rgb(252,113,16)" fg:x="40260" fg:w="6"/><text x="79.7178%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (16 samples, 0.03%)</title><rect x="79.4797%" y="421" width="0.0316%" height="15" fill="rgb(208,113,19)" fg:x="40266" fg:w="16"/><text x="79.7297%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (16 samples, 0.03%)</title><rect x="79.4797%" y="405" width="0.0316%" height="15" fill="rgb(234,107,25)" fg:x="40266" fg:w="16"/><text x="79.7297%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.05%)</title><rect x="79.4797%" y="453" width="0.0454%" height="15" fill="rgb(234,217,51)" fg:x="40266" fg:w="23"/><text x="79.7297%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.05%)</title><rect x="79.4797%" y="437" width="0.0454%" height="15" fill="rgb(251,29,42)" fg:x="40266" fg:w="23"/><text x="79.7297%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.01%)</title><rect x="79.5113%" y="421" width="0.0138%" height="15" fill="rgb(221,62,51)" fg:x="40282" fg:w="7"/><text x="79.7613%" y="431.50"></text></g><g><title>core::cmp::min (23 samples, 0.05%)</title><rect x="79.6948%" y="421" width="0.0454%" height="15" fill="rgb(240,192,43)" fg:x="40375" fg:w="23"/><text x="79.9448%" y="431.50"></text></g><g><title>core::cmp::Ord::min (23 samples, 0.05%)</title><rect x="79.6948%" y="405" width="0.0454%" height="15" fill="rgb(224,157,47)" fg:x="40375" fg:w="23"/><text x="79.9448%" y="415.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.05%)</title><rect x="79.6948%" y="389" width="0.0454%" height="15" fill="rgb(226,84,45)" fg:x="40375" fg:w="23"/><text x="79.9448%" y="399.50"></text></g><g><title>core::mem::replace (50 samples, 0.10%)</title><rect x="79.7402%" y="421" width="0.0987%" height="15" fill="rgb(208,207,23)" fg:x="40398" fg:w="50"/><text x="79.9902%" y="431.50"></text></g><g><title>core::ptr::read (50 samples, 0.10%)</title><rect x="79.7402%" y="405" width="0.0987%" height="15" fill="rgb(253,34,51)" fg:x="40398" fg:w="50"/><text x="79.9902%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="79.8468%" y="389" width="0.0158%" height="15" fill="rgb(227,26,34)" fg:x="40452" fg:w="8"/><text x="80.0968%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (241 samples, 0.48%)</title><rect x="79.8389%" y="421" width="0.4757%" height="15" fill="rgb(245,75,19)" fg:x="40448" fg:w="241"/><text x="80.0889%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (241 samples, 0.48%)</title><rect x="79.8389%" y="405" width="0.4757%" height="15" fill="rgb(250,191,31)" fg:x="40448" fg:w="241"/><text x="80.0889%" y="415.50"></text></g><g><title>__memset_avx2_unaligned_erms (229 samples, 0.45%)</title><rect x="79.8626%" y="389" width="0.4520%" height="15" fill="rgb(224,11,50)" fg:x="40460" fg:w="229"/><text x="80.1126%" y="399.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (560 samples, 1.11%)</title><rect x="79.2882%" y="549" width="1.1054%" height="15" fill="rgb(231,171,7)" fg:x="40169" fg:w="560"/><text x="79.5382%" y="559.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (560 samples, 1.11%)</title><rect x="79.2882%" y="533" width="1.1054%" height="15" fill="rgb(252,214,10)" fg:x="40169" fg:w="560"/><text x="79.5382%" y="543.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (531 samples, 1.05%)</title><rect x="79.3455%" y="517" width="1.0481%" height="15" fill="rgb(249,45,46)" fg:x="40198" fg:w="531"/><text x="79.5955%" y="527.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (531 samples, 1.05%)</title><rect x="79.3455%" y="501" width="1.0481%" height="15" fill="rgb(240,173,7)" fg:x="40198" fg:w="531"/><text x="79.5955%" y="511.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (531 samples, 1.05%)</title><rect x="79.3455%" y="485" width="1.0481%" height="15" fill="rgb(235,214,13)" fg:x="40198" fg:w="531"/><text x="79.5955%" y="495.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (503 samples, 0.99%)</title><rect x="79.4007%" y="469" width="0.9929%" height="15" fill="rgb(245,156,8)" fg:x="40226" fg:w="503"/><text x="79.6507%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (440 samples, 0.87%)</title><rect x="79.5251%" y="453" width="0.8685%" height="15" fill="rgb(235,46,12)" fg:x="40289" fg:w="440"/><text x="79.7751%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (440 samples, 0.87%)</title><rect x="79.5251%" y="437" width="0.8685%" height="15" fill="rgb(221,81,14)" fg:x="40289" fg:w="440"/><text x="79.7751%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (40 samples, 0.08%)</title><rect x="80.3146%" y="421" width="0.0790%" height="15" fill="rgb(238,207,9)" fg:x="40689" fg:w="40"/><text x="80.5646%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (40 samples, 0.08%)</title><rect x="80.3146%" y="405" width="0.0790%" height="15" fill="rgb(224,129,35)" fg:x="40689" fg:w="40"/><text x="80.5646%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (38 samples, 0.08%)</title><rect x="80.3186%" y="389" width="0.0750%" height="15" fill="rgb(243,218,34)" fg:x="40691" fg:w="38"/><text x="80.5686%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (38 samples, 0.08%)</title><rect x="80.3186%" y="373" width="0.0750%" height="15" fill="rgb(220,166,13)" fg:x="40691" fg:w="38"/><text x="80.5686%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="80.3936%" y="453" width="0.0237%" height="15" fill="rgb(227,167,49)" fg:x="40729" fg:w="12"/><text x="80.6436%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="80.3975%" y="437" width="0.0197%" height="15" fill="rgb(234,142,12)" fg:x="40731" fg:w="10"/><text x="80.6475%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.02%)</title><rect x="80.3975%" y="421" width="0.0197%" height="15" fill="rgb(207,100,48)" fg:x="40731" fg:w="10"/><text x="80.6475%" y="431.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components::{{closure}} (10 samples, 0.02%)</title><rect x="80.3975%" y="405" width="0.0197%" height="15" fill="rgb(210,25,14)" fg:x="40731" fg:w="10"/><text x="80.6475%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.05%)</title><rect x="80.3936%" y="485" width="0.0513%" height="15" fill="rgb(246,116,27)" fg:x="40729" fg:w="26"/><text x="80.6436%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.05%)</title><rect x="80.3936%" y="469" width="0.0513%" height="15" fill="rgb(214,193,42)" fg:x="40729" fg:w="26"/><text x="80.6436%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="80.4173%" y="453" width="0.0276%" height="15" fill="rgb(214,122,8)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="80.4173%" y="437" width="0.0276%" height="15" fill="rgb(244,173,18)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.03%)</title><rect x="80.4173%" y="421" width="0.0276%" height="15" fill="rgb(232,68,19)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.03%)</title><rect x="80.4173%" y="405" width="0.0276%" height="15" fill="rgb(236,224,1)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="80.4173%" y="389" width="0.0276%" height="15" fill="rgb(240,11,8)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.03%)</title><rect x="80.4173%" y="373" width="0.0276%" height="15" fill="rgb(244,159,20)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.03%)</title><rect x="80.4173%" y="357" width="0.0276%" height="15" fill="rgb(240,223,54)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="367.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.03%)</title><rect x="80.4173%" y="341" width="0.0276%" height="15" fill="rgb(237,146,5)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="351.50"></text></g><g><title>__realloc (14 samples, 0.03%)</title><rect x="80.4173%" y="325" width="0.0276%" height="15" fill="rgb(218,221,32)" fg:x="40741" fg:w="14"/><text x="80.6673%" y="335.50"></text></g><g><title>_int_realloc (12 samples, 0.02%)</title><rect x="80.4212%" y="309" width="0.0237%" height="15" fill="rgb(244,96,26)" fg:x="40743" fg:w="12"/><text x="80.6712%" y="319.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="80.4311%" y="293" width="0.0138%" height="15" fill="rgb(245,184,37)" fg:x="40748" fg:w="7"/><text x="80.6811%" y="303.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (587 samples, 1.16%)</title><rect x="79.2882%" y="565" width="1.1587%" height="15" fill="rgb(248,91,47)" fg:x="40169" fg:w="587"/><text x="79.5382%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.05%)</title><rect x="80.3936%" y="549" width="0.0533%" height="15" fill="rgb(243,199,8)" fg:x="40729" fg:w="27"/><text x="80.6436%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.05%)</title><rect x="80.3936%" y="533" width="0.0533%" height="15" fill="rgb(249,12,15)" fg:x="40729" fg:w="27"/><text x="80.6436%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.05%)</title><rect x="80.3936%" y="517" width="0.0533%" height="15" fill="rgb(245,97,12)" fg:x="40729" fg:w="27"/><text x="80.6436%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (27 samples, 0.05%)</title><rect x="80.3936%" y="501" width="0.0533%" height="15" fill="rgb(244,61,1)" fg:x="40729" fg:w="27"/><text x="80.6436%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (594 samples, 1.17%)</title><rect x="79.2784%" y="629" width="1.1725%" height="15" fill="rgb(222,194,10)" fg:x="40164" fg:w="594"/><text x="79.5284%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (594 samples, 1.17%)</title><rect x="79.2784%" y="613" width="1.1725%" height="15" fill="rgb(226,178,8)" fg:x="40164" fg:w="594"/><text x="79.5284%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (594 samples, 1.17%)</title><rect x="79.2784%" y="597" width="1.1725%" height="15" fill="rgb(241,32,34)" fg:x="40164" fg:w="594"/><text x="79.5284%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (594 samples, 1.17%)</title><rect x="79.2784%" y="581" width="1.1725%" height="15" fill="rgb(254,26,6)" fg:x="40164" fg:w="594"/><text x="79.5284%" y="591.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (10 samples, 0.02%)</title><rect x="80.4508%" y="549" width="0.0197%" height="15" fill="rgb(249,71,11)" fg:x="40758" fg:w="10"/><text x="80.7008%" y="559.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (7 samples, 0.01%)</title><rect x="80.4568%" y="533" width="0.0138%" height="15" fill="rgb(232,170,27)" fg:x="40761" fg:w="7"/><text x="80.7068%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="80.4568%" y="517" width="0.0138%" height="15" fill="rgb(214,223,17)" fg:x="40761" fg:w="7"/><text x="80.7068%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="80.4706%" y="517" width="0.0178%" height="15" fill="rgb(250,18,15)" fg:x="40768" fg:w="9"/><text x="80.7206%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (9 samples, 0.02%)</title><rect x="80.4706%" y="501" width="0.0178%" height="15" fill="rgb(212,153,51)" fg:x="40768" fg:w="9"/><text x="80.7206%" y="511.50"></text></g><g><title>bevy_crevice::internal::align_offset (8 samples, 0.02%)</title><rect x="80.4943%" y="453" width="0.0158%" height="15" fill="rgb(219,194,12)" fg:x="40780" fg:w="8"/><text x="80.7443%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (33 samples, 0.07%)</title><rect x="80.5160%" y="421" width="0.0651%" height="15" fill="rgb(212,58,17)" fg:x="40791" fg:w="33"/><text x="80.7660%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.07%)</title><rect x="80.5160%" y="405" width="0.0651%" height="15" fill="rgb(254,5,10)" fg:x="40791" fg:w="33"/><text x="80.7660%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.07%)</title><rect x="80.5160%" y="389" width="0.0651%" height="15" fill="rgb(246,91,7)" fg:x="40791" fg:w="33"/><text x="80.7660%" y="399.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (48 samples, 0.09%)</title><rect x="80.4883%" y="485" width="0.0947%" height="15" fill="rgb(218,108,49)" fg:x="40777" fg:w="48"/><text x="80.7383%" y="495.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (47 samples, 0.09%)</title><rect x="80.4903%" y="469" width="0.0928%" height="15" fill="rgb(238,123,20)" fg:x="40778" fg:w="47"/><text x="80.7403%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (37 samples, 0.07%)</title><rect x="80.5100%" y="453" width="0.0730%" height="15" fill="rgb(231,69,23)" fg:x="40788" fg:w="37"/><text x="80.7600%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (37 samples, 0.07%)</title><rect x="80.5100%" y="437" width="0.0730%" height="15" fill="rgb(230,209,3)" fg:x="40788" fg:w="37"/><text x="80.7600%" y="447.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (52 samples, 0.10%)</title><rect x="80.4883%" y="517" width="0.1026%" height="15" fill="rgb(231,19,0)" fg:x="40777" fg:w="52"/><text x="80.7383%" y="527.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (52 samples, 0.10%)</title><rect x="80.4883%" y="501" width="0.1026%" height="15" fill="rgb(226,192,25)" fg:x="40777" fg:w="52"/><text x="80.7383%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (74 samples, 0.15%)</title><rect x="80.4508%" y="629" width="0.1461%" height="15" fill="rgb(223,175,53)" fg:x="40758" fg:w="74"/><text x="80.7008%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (74 samples, 0.15%)</title><rect x="80.4508%" y="613" width="0.1461%" height="15" fill="rgb(248,35,51)" fg:x="40758" fg:w="74"/><text x="80.7008%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (74 samples, 0.15%)</title><rect x="80.4508%" y="597" width="0.1461%" height="15" fill="rgb(230,37,26)" fg:x="40758" fg:w="74"/><text x="80.7008%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (74 samples, 0.15%)</title><rect x="80.4508%" y="581" width="0.1461%" height="15" fill="rgb(206,120,22)" fg:x="40758" fg:w="74"/><text x="80.7008%" y="591.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (74 samples, 0.15%)</title><rect x="80.4508%" y="565" width="0.1461%" height="15" fill="rgb(207,165,28)" fg:x="40758" fg:w="74"/><text x="80.7008%" y="575.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (64 samples, 0.13%)</title><rect x="80.4706%" y="549" width="0.1263%" height="15" fill="rgb(226,23,46)" fg:x="40768" fg:w="64"/><text x="80.7206%" y="559.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (64 samples, 0.13%)</title><rect x="80.4706%" y="533" width="0.1263%" height="15" fill="rgb(208,130,44)" fg:x="40768" fg:w="64"/><text x="80.7206%" y="543.50"></text></g><g><title>bevy_render::render_resource::pipeline_specializer::SpecializedMeshPipelines&lt;S&gt;::specialize (6 samples, 0.01%)</title><rect x="80.6186%" y="549" width="0.0118%" height="15" fill="rgb(231,67,8)" fg:x="40843" fg:w="6"/><text x="80.8686%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;bevy_utils::Hashed&lt;K&gt;,V,bevy_utils::PassHash&gt; as bevy_utils::PreHashMapExt&lt;K,V&gt;&gt;::get_or_insert_with (6 samples, 0.01%)</title><rect x="80.6186%" y="533" width="0.0118%" height="15" fill="rgb(205,183,22)" fg:x="40843" fg:w="6"/><text x="80.8686%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_key_hashed_nocheck (6 samples, 0.01%)</title><rect x="80.6186%" y="517" width="0.0118%" height="15" fill="rgb(224,47,9)" fg:x="40843" fg:w="6"/><text x="80.8686%" y="527.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (6 samples, 0.01%)</title><rect x="80.6186%" y="501" width="0.0118%" height="15" fill="rgb(250,183,49)" fg:x="40843" fg:w="6"/><text x="80.8686%" y="511.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (6 samples, 0.01%)</title><rect x="80.6186%" y="485" width="0.0118%" height="15" fill="rgb(220,151,39)" fg:x="40843" fg:w="6"/><text x="80.8686%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (10 samples, 0.02%)</title><rect x="80.6127%" y="629" width="0.0197%" height="15" fill="rgb(220,118,20)" fg:x="40840" fg:w="10"/><text x="80.8627%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (10 samples, 0.02%)</title><rect x="80.6127%" y="613" width="0.0197%" height="15" fill="rgb(231,65,51)" fg:x="40840" fg:w="10"/><text x="80.8627%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="80.6127%" y="597" width="0.0197%" height="15" fill="rgb(253,125,37)" fg:x="40840" fg:w="10"/><text x="80.8627%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.02%)</title><rect x="80.6127%" y="581" width="0.0197%" height="15" fill="rgb(232,102,6)" fg:x="40840" fg:w="10"/><text x="80.8627%" y="591.50"></text></g><g><title>bevy_prototype_debug_lines::render_dim::r3d::queue (10 samples, 0.02%)</title><rect x="80.6127%" y="565" width="0.0197%" height="15" fill="rgb(251,105,13)" fg:x="40840" fg:w="10"/><text x="80.8627%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (925 samples, 1.83%)</title><rect x="78.8362%" y="693" width="1.8258%" height="15" fill="rgb(222,179,29)" fg:x="39940" fg:w="925"/><text x="79.0862%" y="703.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (925 samples, 1.83%)</title><rect x="78.8362%" y="677" width="1.8258%" height="15" fill="rgb(229,180,53)" fg:x="39940" fg:w="925"/><text x="79.0862%" y="687.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (925 samples, 1.83%)</title><rect x="78.8362%" y="661" width="1.8258%" height="15" fill="rgb(238,104,13)" fg:x="39940" fg:w="925"/><text x="79.0862%" y="671.50">b..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (925 samples, 1.83%)</title><rect x="78.8362%" y="645" width="1.8258%" height="15" fill="rgb(210,130,5)" fg:x="39940" fg:w="925"/><text x="79.0862%" y="655.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14),()&gt;&gt;::run (7 samples, 0.01%)</title><rect x="80.6482%" y="629" width="0.0138%" height="15" fill="rgb(233,87,49)" fg:x="40858" fg:w="7"/><text x="80.8982%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="80.6482%" y="613" width="0.0138%" height="15" fill="rgb(243,34,9)" fg:x="40858" fg:w="7"/><text x="80.8982%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="80.6482%" y="597" width="0.0138%" height="15" fill="rgb(235,225,10)" fg:x="40858" fg:w="7"/><text x="80.8982%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="80.6482%" y="581" width="0.0138%" height="15" fill="rgb(212,0,30)" fg:x="40858" fg:w="7"/><text x="80.8982%" y="591.50"></text></g><g><title>bevy_sprite::render::queue_sprites (7 samples, 0.01%)</title><rect x="80.6482%" y="565" width="0.0138%" height="15" fill="rgb(211,177,0)" fg:x="40858" fg:w="7"/><text x="80.8982%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="80.6778%" y="373" width="0.0118%" height="15" fill="rgb(225,220,11)" fg:x="40873" fg:w="6"/><text x="80.9278%" y="383.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="80.6778%" y="357" width="0.0118%" height="15" fill="rgb(215,10,13)" fg:x="40873" fg:w="6"/><text x="80.9278%" y="367.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="80.6778%" y="341" width="0.0118%" height="15" fill="rgb(240,177,14)" fg:x="40873" fg:w="6"/><text x="80.9278%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.01%)</title><rect x="80.6778%" y="405" width="0.0138%" height="15" fill="rgb(243,7,39)" fg:x="40873" fg:w="7"/><text x="80.9278%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.01%)</title><rect x="80.6778%" y="389" width="0.0138%" height="15" fill="rgb(212,99,0)" fg:x="40873" fg:w="7"/><text x="80.9278%" y="399.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (941 samples, 1.86%)</title><rect x="78.8362%" y="821" width="1.8574%" height="15" fill="rgb(225,162,48)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="831.50">&lt;..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (941 samples, 1.86%)</title><rect x="78.8362%" y="805" width="1.8574%" height="15" fill="rgb(246,16,25)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="815.50">b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (941 samples, 1.86%)</title><rect x="78.8362%" y="789" width="1.8574%" height="15" fill="rgb(220,150,2)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="799.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (941 samples, 1.86%)</title><rect x="78.8362%" y="773" width="1.8574%" height="15" fill="rgb(237,113,11)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="783.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (941 samples, 1.86%)</title><rect x="78.8362%" y="757" width="1.8574%" height="15" fill="rgb(236,70,20)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="767.50">b..</text></g><g><title>async_executor::Executor::try_tick (941 samples, 1.86%)</title><rect x="78.8362%" y="741" width="1.8574%" height="15" fill="rgb(234,94,7)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="751.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (941 samples, 1.86%)</title><rect x="78.8362%" y="725" width="1.8574%" height="15" fill="rgb(250,221,0)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="735.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (941 samples, 1.86%)</title><rect x="78.8362%" y="709" width="1.8574%" height="15" fill="rgb(245,149,46)" fg:x="39940" fg:w="941"/><text x="79.0862%" y="719.50">&lt;..</text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (16 samples, 0.03%)</title><rect x="80.6620%" y="693" width="0.0316%" height="15" fill="rgb(215,37,27)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="80.6620%" y="677" width="0.0316%" height="15" fill="rgb(232,65,3)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (16 samples, 0.03%)</title><rect x="80.6620%" y="661" width="0.0316%" height="15" fill="rgb(214,2,16)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (16 samples, 0.03%)</title><rect x="80.6620%" y="645" width="0.0316%" height="15" fill="rgb(227,131,50)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (16 samples, 0.03%)</title><rect x="80.6620%" y="629" width="0.0316%" height="15" fill="rgb(247,131,45)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (16 samples, 0.03%)</title><rect x="80.6620%" y="613" width="0.0316%" height="15" fill="rgb(215,97,47)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.03%)</title><rect x="80.6620%" y="597" width="0.0316%" height="15" fill="rgb(233,143,12)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 0.03%)</title><rect x="80.6620%" y="581" width="0.0316%" height="15" fill="rgb(222,57,17)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="591.50"></text></g><g><title>bevy_render::view::window::prepare_windows (16 samples, 0.03%)</title><rect x="80.6620%" y="565" width="0.0316%" height="15" fill="rgb(214,119,38)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="575.50"></text></g><g><title>&lt;bevy_render::render_resource::texture::TextureView as core::convert::From&lt;wgpu::SurfaceTexture&gt;&gt;::from (16 samples, 0.03%)</title><rect x="80.6620%" y="549" width="0.0316%" height="15" fill="rgb(217,28,47)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="559.50"></text></g><g><title>wgpu::Texture::create_view (16 samples, 0.03%)</title><rect x="80.6620%" y="533" width="0.0316%" height="15" fill="rgb(231,14,52)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (16 samples, 0.03%)</title><rect x="80.6620%" y="517" width="0.0316%" height="15" fill="rgb(220,158,18)" fg:x="40865" fg:w="16"/><text x="80.9120%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (15 samples, 0.03%)</title><rect x="80.6640%" y="501" width="0.0296%" height="15" fill="rgb(222,143,46)" fg:x="40866" fg:w="15"/><text x="80.9140%" y="511.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (8 samples, 0.02%)</title><rect x="80.6778%" y="485" width="0.0158%" height="15" fill="rgb(227,165,5)" fg:x="40873" fg:w="8"/><text x="80.9278%" y="495.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (8 samples, 0.02%)</title><rect x="80.6778%" y="469" width="0.0158%" height="15" fill="rgb(216,222,49)" fg:x="40873" fg:w="8"/><text x="80.9278%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (8 samples, 0.02%)</title><rect x="80.6778%" y="453" width="0.0158%" height="15" fill="rgb(238,73,39)" fg:x="40873" fg:w="8"/><text x="80.9278%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (8 samples, 0.02%)</title><rect x="80.6778%" y="437" width="0.0158%" height="15" fill="rgb(252,115,9)" fg:x="40873" fg:w="8"/><text x="80.9278%" y="447.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (8 samples, 0.02%)</title><rect x="80.6778%" y="421" width="0.0158%" height="15" fill="rgb(238,202,4)" fg:x="40873" fg:w="8"/><text x="80.9278%" y="431.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass_driver::ClearPassDriverNode as bevy_render::render_graph::node::Node&gt;::run (7 samples, 0.01%)</title><rect x="80.7015%" y="741" width="0.0138%" height="15" fill="rgb(252,153,44)" fg:x="40885" fg:w="7"/><text x="80.9515%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="80.7213%" y="741" width="0.0158%" height="15" fill="rgb(235,128,27)" fg:x="40895" fg:w="8"/><text x="80.9713%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="80.7213%" y="725" width="0.0158%" height="15" fill="rgb(221,121,47)" fg:x="40895" fg:w="8"/><text x="80.9713%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="80.7213%" y="709" width="0.0158%" height="15" fill="rgb(247,211,47)" fg:x="40895" fg:w="8"/><text x="80.9713%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="80.7528%" y="709" width="0.0158%" height="15" fill="rgb(252,47,49)" fg:x="40911" fg:w="8"/><text x="81.0028%" y="719.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="80.7528%" y="693" width="0.0158%" height="15" fill="rgb(219,119,53)" fg:x="40911" fg:w="8"/><text x="81.0028%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="80.7568%" y="677" width="0.0118%" height="15" fill="rgb(243,165,53)" fg:x="40913" fg:w="6"/><text x="81.0068%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.01%)</title><rect x="80.7568%" y="661" width="0.0118%" height="15" fill="rgb(230,12,35)" fg:x="40913" fg:w="6"/><text x="81.0068%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.01%)</title><rect x="80.7568%" y="645" width="0.0118%" height="15" fill="rgb(239,57,49)" fg:x="40913" fg:w="6"/><text x="81.0068%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.01%)</title><rect x="80.7568%" y="629" width="0.0118%" height="15" fill="rgb(231,154,7)" fg:x="40913" fg:w="6"/><text x="81.0068%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="80.7568%" y="613" width="0.0118%" height="15" fill="rgb(248,81,34)" fg:x="40913" fg:w="6"/><text x="81.0068%" y="623.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="80.7528%" y="725" width="0.0178%" height="15" fill="rgb(247,9,5)" fg:x="40911" fg:w="9"/><text x="81.0028%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.02%)</title><rect x="80.7528%" y="741" width="0.0197%" height="15" fill="rgb(228,172,27)" fg:x="40911" fg:w="10"/><text x="81.0028%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="80.7805%" y="741" width="0.0118%" height="15" fill="rgb(230,57,44)" fg:x="40925" fg:w="6"/><text x="81.0305%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (6 samples, 0.01%)</title><rect x="80.7805%" y="725" width="0.0118%" height="15" fill="rgb(249,35,22)" fg:x="40925" fg:w="6"/><text x="81.0305%" y="735.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (51 samples, 0.10%)</title><rect x="80.6936%" y="773" width="0.1007%" height="15" fill="rgb(250,137,27)" fg:x="40881" fg:w="51"/><text x="80.9436%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (51 samples, 0.10%)</title><rect x="80.6936%" y="757" width="0.1007%" height="15" fill="rgb(251,57,31)" fg:x="40881" fg:w="51"/><text x="80.9436%" y="767.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (29 samples, 0.06%)</title><rect x="80.8061%" y="725" width="0.0572%" height="15" fill="rgb(238,60,0)" fg:x="40938" fg:w="29"/><text x="81.0561%" y="735.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (29 samples, 0.06%)</title><rect x="80.8061%" y="709" width="0.0572%" height="15" fill="rgb(242,185,39)" fg:x="40938" fg:w="29"/><text x="81.0561%" y="719.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (27 samples, 0.05%)</title><rect x="80.8101%" y="693" width="0.0533%" height="15" fill="rgb(240,63,43)" fg:x="40940" fg:w="27"/><text x="81.0601%" y="703.50"></text></g><g><title>__glx_Main (27 samples, 0.05%)</title><rect x="80.8101%" y="677" width="0.0533%" height="15" fill="rgb(236,155,6)" fg:x="40940" fg:w="27"/><text x="81.0601%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.05%)</title><rect x="80.8180%" y="661" width="0.0454%" height="15" fill="rgb(215,11,29)" fg:x="40944" fg:w="23"/><text x="81.0680%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.04%)</title><rect x="80.8219%" y="645" width="0.0415%" height="15" fill="rgb(228,180,48)" fg:x="40946" fg:w="21"/><text x="81.0719%" y="655.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.02%)</title><rect x="80.8397%" y="629" width="0.0237%" height="15" fill="rgb(241,102,12)" fg:x="40955" fg:w="12"/><text x="81.0897%" y="639.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="80.8732%" y="725" width="0.0118%" height="15" fill="rgb(246,213,4)" fg:x="40972" fg:w="6"/><text x="81.1232%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="80.8732%" y="709" width="0.0118%" height="15" fill="rgb(218,134,35)" fg:x="40972" fg:w="6"/><text x="81.1232%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,039 samples, 2.05%)</title><rect x="78.8362%" y="837" width="2.0508%" height="15" fill="rgb(251,117,35)" fg:x="39940" fg:w="1039"/><text x="79.0862%" y="847.50">&lt;..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (98 samples, 0.19%)</title><rect x="80.6936%" y="821" width="0.1934%" height="15" fill="rgb(206,156,45)" fg:x="40881" fg:w="98"/><text x="80.9436%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (98 samples, 0.19%)</title><rect x="80.6936%" y="805" width="0.1934%" height="15" fill="rgb(218,52,27)" fg:x="40881" fg:w="98"/><text x="80.9436%" y="815.50"></text></g><g><title>bevy_render::renderer::render_system (98 samples, 0.19%)</title><rect x="80.6936%" y="789" width="0.1934%" height="15" fill="rgb(238,83,36)" fg:x="40881" fg:w="98"/><text x="80.9436%" y="799.50"></text></g><g><title>wgpu::SurfaceTexture::present (44 samples, 0.09%)</title><rect x="80.8002%" y="773" width="0.0869%" height="15" fill="rgb(218,53,43)" fg:x="40935" fg:w="44"/><text x="81.0502%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (44 samples, 0.09%)</title><rect x="80.8002%" y="757" width="0.0869%" height="15" fill="rgb(239,54,39)" fg:x="40935" fg:w="44"/><text x="81.0502%" y="767.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (44 samples, 0.09%)</title><rect x="80.8002%" y="741" width="0.0869%" height="15" fill="rgb(212,198,13)" fg:x="40935" fg:w="44"/><text x="81.0502%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (8 samples, 0.02%)</title><rect x="80.9028%" y="789" width="0.0158%" height="15" fill="rgb(234,54,46)" fg:x="40987" fg:w="8"/><text x="81.1528%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (20 samples, 0.04%)</title><rect x="80.8910%" y="805" width="0.0395%" height="15" fill="rgb(217,120,7)" fg:x="40981" fg:w="20"/><text x="81.1410%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (23 samples, 0.05%)</title><rect x="80.8871%" y="821" width="0.0454%" height="15" fill="rgb(246,39,15)" fg:x="40979" fg:w="23"/><text x="81.1371%" y="831.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (9 samples, 0.02%)</title><rect x="80.9818%" y="709" width="0.0178%" height="15" fill="rgb(242,143,31)" fg:x="41027" fg:w="9"/><text x="81.2318%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (8 samples, 0.02%)</title><rect x="80.9838%" y="693" width="0.0158%" height="15" fill="rgb(252,60,24)" fg:x="41028" fg:w="8"/><text x="81.2338%" y="703.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (6 samples, 0.01%)</title><rect x="80.9996%" y="709" width="0.0118%" height="15" fill="rgb(249,220,7)" fg:x="41036" fg:w="6"/><text x="81.2496%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (17 samples, 0.03%)</title><rect x="80.9798%" y="757" width="0.0336%" height="15" fill="rgb(236,67,13)" fg:x="41026" fg:w="17"/><text x="81.2298%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (17 samples, 0.03%)</title><rect x="80.9798%" y="741" width="0.0336%" height="15" fill="rgb(210,62,39)" fg:x="41026" fg:w="17"/><text x="81.2298%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (17 samples, 0.03%)</title><rect x="80.9798%" y="725" width="0.0336%" height="15" fill="rgb(219,122,53)" fg:x="41026" fg:w="17"/><text x="81.2298%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (6 samples, 0.01%)</title><rect x="81.0252%" y="725" width="0.0118%" height="15" fill="rgb(218,87,25)" fg:x="41049" fg:w="6"/><text x="81.2752%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertBundle&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (17 samples, 0.03%)</title><rect x="81.0134%" y="757" width="0.0336%" height="15" fill="rgb(234,179,48)" fg:x="41043" fg:w="17"/><text x="81.2634%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (17 samples, 0.03%)</title><rect x="81.0134%" y="741" width="0.0336%" height="15" fill="rgb(248,90,0)" fg:x="41043" fg:w="17"/><text x="81.2634%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="81.1259%" y="725" width="0.0118%" height="15" fill="rgb(207,228,37)" fg:x="41100" fg:w="6"/><text x="81.3759%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (9 samples, 0.02%)</title><rect x="81.1397%" y="725" width="0.0178%" height="15" fill="rgb(235,214,15)" fg:x="41107" fg:w="9"/><text x="81.3897%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_spawner (8 samples, 0.02%)</title><rect x="81.1575%" y="725" width="0.0158%" height="15" fill="rgb(210,144,39)" fg:x="41116" fg:w="8"/><text x="81.4075%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (13 samples, 0.03%)</title><rect x="81.2088%" y="661" width="0.0257%" height="15" fill="rgb(222,67,41)" fg:x="41142" fg:w="13"/><text x="81.4588%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (12 samples, 0.02%)</title><rect x="81.2108%" y="645" width="0.0237%" height="15" fill="rgb(205,35,37)" fg:x="41143" fg:w="12"/><text x="81.4608%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="81.2206%" y="629" width="0.0138%" height="15" fill="rgb(216,125,40)" fg:x="41148" fg:w="7"/><text x="81.4706%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="81.2206%" y="613" width="0.0138%" height="15" fill="rgb(228,227,20)" fg:x="41148" fg:w="7"/><text x="81.4706%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (28 samples, 0.06%)</title><rect x="81.1910%" y="709" width="0.0553%" height="15" fill="rgb(242,173,45)" fg:x="41133" fg:w="28"/><text x="81.4410%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (25 samples, 0.05%)</title><rect x="81.1970%" y="693" width="0.0493%" height="15" fill="rgb(215,79,24)" fg:x="41136" fg:w="25"/><text x="81.4470%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (25 samples, 0.05%)</title><rect x="81.1970%" y="677" width="0.0493%" height="15" fill="rgb(238,164,38)" fg:x="41136" fg:w="25"/><text x="81.4470%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (6 samples, 0.01%)</title><rect x="81.2345%" y="661" width="0.0118%" height="15" fill="rgb(245,196,38)" fg:x="41155" fg:w="6"/><text x="81.4845%" y="671.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (6 samples, 0.01%)</title><rect x="81.2345%" y="645" width="0.0118%" height="15" fill="rgb(231,217,29)" fg:x="41155" fg:w="6"/><text x="81.4845%" y="655.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (42 samples, 0.08%)</title><rect x="81.1733%" y="725" width="0.0829%" height="15" fill="rgb(245,6,4)" fg:x="41124" fg:w="42"/><text x="81.4233%" y="735.50"></text></g><g><title>bevy_ecs::entity::Entities::alloc_at_without_replacement (22 samples, 0.04%)</title><rect x="81.2601%" y="725" width="0.0434%" height="15" fill="rgb(214,76,49)" fg:x="41168" fg:w="22"/><text x="81.5101%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (137 samples, 0.27%)</title><rect x="81.0469%" y="757" width="0.2704%" height="15" fill="rgb(205,96,12)" fg:x="41060" fg:w="137"/><text x="81.2969%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (137 samples, 0.27%)</title><rect x="81.0469%" y="741" width="0.2704%" height="15" fill="rgb(243,131,4)" fg:x="41060" fg:w="137"/><text x="81.2969%" y="751.50"></text></g><g><title>bevy_ecs::component::Components::init_resource (6 samples, 0.01%)</title><rect x="81.3193%" y="725" width="0.0118%" height="15" fill="rgb(214,114,4)" fg:x="41198" fg:w="6"/><text x="81.5693%" y="735.50"></text></g><g><title>bevy_ecs::component::Components::get_or_insert_resource_with (6 samples, 0.01%)</title><rect x="81.3193%" y="709" width="0.0118%" height="15" fill="rgb(234,215,15)" fg:x="41198" fg:w="6"/><text x="81.5693%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.01%)</title><rect x="81.3193%" y="693" width="0.0118%" height="15" fill="rgb(250,216,45)" fg:x="41198" fg:w="6"/><text x="81.5693%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (6 samples, 0.01%)</title><rect x="81.3331%" y="709" width="0.0118%" height="15" fill="rgb(236,128,4)" fg:x="41205" fg:w="6"/><text x="81.5831%" y="719.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (6 samples, 0.01%)</title><rect x="81.3331%" y="693" width="0.0118%" height="15" fill="rgb(234,50,33)" fg:x="41205" fg:w="6"/><text x="81.5831%" y="703.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (201 samples, 0.40%)</title><rect x="80.9601%" y="773" width="0.3967%" height="15" fill="rgb(253,131,37)" fg:x="41016" fg:w="201"/><text x="81.2101%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertResource&lt;R&gt; as bevy_ecs::system::commands::Command&gt;::write (20 samples, 0.04%)</title><rect x="81.3174%" y="757" width="0.0395%" height="15" fill="rgb(218,55,27)" fg:x="41197" fg:w="20"/><text x="81.5674%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_resource (19 samples, 0.04%)</title><rect x="81.3193%" y="741" width="0.0375%" height="15" fill="rgb(241,220,28)" fg:x="41198" fg:w="19"/><text x="81.5693%" y="751.50"></text></g><g><title>bevy_ecs::world::World::insert_resource_with_id (13 samples, 0.03%)</title><rect x="81.3312%" y="725" width="0.0257%" height="15" fill="rgb(241,90,48)" fg:x="41204" fg:w="13"/><text x="81.5812%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (209 samples, 0.41%)</title><rect x="80.9482%" y="805" width="0.4125%" height="15" fill="rgb(216,43,37)" fg:x="41010" fg:w="209"/><text x="81.1982%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (209 samples, 0.41%)</title><rect x="80.9482%" y="789" width="0.4125%" height="15" fill="rgb(207,173,9)" fg:x="41010" fg:w="209"/><text x="81.1982%" y="799.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (210 samples, 0.41%)</title><rect x="80.9482%" y="821" width="0.4145%" height="15" fill="rgb(240,126,30)" fg:x="41010" fg:w="210"/><text x="81.1982%" y="831.50"></text></g><g><title>bevy_ecs::world::World::insert_resource (8 samples, 0.02%)</title><rect x="81.3628%" y="821" width="0.0158%" height="15" fill="rgb(228,178,53)" fg:x="41220" fg:w="8"/><text x="81.6128%" y="831.50"></text></g><g><title>bevy_ecs::world::World::insert_resource_with_id (6 samples, 0.01%)</title><rect x="81.3667%" y="805" width="0.0118%" height="15" fill="rgb(217,33,4)" fg:x="41222" fg:w="6"/><text x="81.6167%" y="815.50"></text></g><g><title>bevy_ecs::world::World::remove_resource (8 samples, 0.02%)</title><rect x="81.3785%" y="821" width="0.0158%" height="15" fill="rgb(206,124,34)" fg:x="41228" fg:w="8"/><text x="81.6285%" y="831.50"></text></g><g><title>bevy_ecs::world::World::remove_resource_unchecked (8 samples, 0.02%)</title><rect x="81.3785%" y="805" width="0.0158%" height="15" fill="rgb(208,122,53)" fg:x="41228" fg:w="8"/><text x="81.6285%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1,298 samples, 2.56%)</title><rect x="78.8362%" y="869" width="2.5621%" height="15" fill="rgb(215,202,26)" fg:x="39940" fg:w="1298"/><text x="79.0862%" y="879.50">&lt;a..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (1,298 samples, 2.56%)</title><rect x="78.8362%" y="853" width="2.5621%" height="15" fill="rgb(232,198,31)" fg:x="39940" fg:w="1298"/><text x="79.0862%" y="863.50">&lt;b..</text></g><g><title>bevy_render::extract (259 samples, 0.51%)</title><rect x="80.8871%" y="837" width="0.5112%" height="15" fill="rgb(222,23,35)" fg:x="40979" fg:w="259"/><text x="81.1371%" y="847.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (10 samples, 0.02%)</title><rect x="81.4003%" y="581" width="0.0197%" height="15" fill="rgb(242,27,53)" fg:x="41239" fg:w="10"/><text x="81.6503%" y="591.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (10 samples, 0.02%)</title><rect x="81.4003%" y="565" width="0.0197%" height="15" fill="rgb(210,216,42)" fg:x="41239" fg:w="10"/><text x="81.6503%" y="575.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (8 samples, 0.02%)</title><rect x="81.4042%" y="549" width="0.0158%" height="15" fill="rgb(234,39,38)" fg:x="41241" fg:w="8"/><text x="81.6542%" y="559.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="81.4476%" y="565" width="0.0178%" height="15" fill="rgb(235,126,54)" fg:x="41263" fg:w="9"/><text x="81.6976%" y="575.50"></text></g><g><title>glam::vec3::Vec3A::dot (6 samples, 0.01%)</title><rect x="81.5068%" y="533" width="0.0118%" height="15" fill="rgb(235,150,33)" fg:x="41293" fg:w="6"/><text x="81.7568%" y="543.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector3&lt;f32&gt; for core::core_arch::x86::__m128&gt;::dot (6 samples, 0.01%)</title><rect x="81.5068%" y="517" width="0.0118%" height="15" fill="rgb(249,49,53)" fg:x="41293" fg:w="6"/><text x="81.7568%" y="527.50"></text></g><g><title>glam::core::sse2::vector::dot3_in_x (6 samples, 0.01%)</title><rect x="81.5068%" y="501" width="0.0118%" height="15" fill="rgb(238,60,50)" fg:x="41293" fg:w="6"/><text x="81.7568%" y="511.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_obb (26 samples, 0.05%)</title><rect x="81.4693%" y="565" width="0.0513%" height="15" fill="rgb(210,5,2)" fg:x="41274" fg:w="26"/><text x="81.7193%" y="575.50"></text></g><g><title>bevy_render::primitives::Aabb::relative_radius (7 samples, 0.01%)</title><rect x="81.5068%" y="549" width="0.0138%" height="15" fill="rgb(214,207,24)" fg:x="41293" fg:w="7"/><text x="81.7568%" y="559.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_sphere (12 samples, 0.02%)</title><rect x="81.5207%" y="565" width="0.0237%" height="15" fill="rgb(228,173,2)" fg:x="41300" fg:w="12"/><text x="81.7707%" y="575.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (15 samples, 0.03%)</title><rect x="81.5483%" y="565" width="0.0296%" height="15" fill="rgb(244,26,8)" fg:x="41314" fg:w="15"/><text x="81.7983%" y="575.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (14 samples, 0.03%)</title><rect x="81.5503%" y="549" width="0.0276%" height="15" fill="rgb(249,153,35)" fg:x="41315" fg:w="14"/><text x="81.8003%" y="559.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (14 samples, 0.03%)</title><rect x="81.5503%" y="533" width="0.0276%" height="15" fill="rgb(221,215,40)" fg:x="41315" fg:w="14"/><text x="81.8003%" y="543.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (11 samples, 0.02%)</title><rect x="81.5562%" y="517" width="0.0217%" height="15" fill="rgb(238,106,35)" fg:x="41318" fg:w="11"/><text x="81.8062%" y="527.50"></text></g><g><title>&lt;f32 as glam::core::traits::scalar::Float&gt;::mul_add (10 samples, 0.02%)</title><rect x="81.5799%" y="517" width="0.0197%" height="15" fill="rgb(207,195,21)" fg:x="41330" fg:w="10"/><text x="81.8299%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::mul_add (7 samples, 0.01%)</title><rect x="81.5858%" y="501" width="0.0138%" height="15" fill="rgb(205,43,29)" fg:x="41333" fg:w="7"/><text x="81.8358%" y="511.50"></text></g><g><title>sincosf32 (7 samples, 0.01%)</title><rect x="81.5858%" y="485" width="0.0138%" height="15" fill="rgb(236,35,21)" fg:x="41333" fg:w="7"/><text x="81.8358%" y="495.50"></text></g><g><title>glam::mat4::Mat4::transform_point3a (13 samples, 0.03%)</title><rect x="81.5779%" y="565" width="0.0257%" height="15" fill="rgb(244,74,8)" fg:x="41329" fg:w="13"/><text x="81.8279%" y="575.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::FloatMatrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::transform_float4_as_point3 (13 samples, 0.03%)</title><rect x="81.5779%" y="549" width="0.0257%" height="15" fill="rgb(241,229,7)" fg:x="41329" fg:w="13"/><text x="81.8279%" y="559.50"></text></g><g><title>glam::core::traits::vector::FloatVector4::mul_add (12 samples, 0.02%)</title><rect x="81.5799%" y="533" width="0.0237%" height="15" fill="rgb(212,223,25)" fg:x="41330" fg:w="12"/><text x="81.8299%" y="543.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (99 samples, 0.20%)</title><rect x="81.4200%" y="581" width="0.1954%" height="15" fill="rgb(234,58,53)" fg:x="41249" fg:w="99"/><text x="81.6700%" y="591.50"></text></g><g><title>glam::vec3::Vec3A::length (6 samples, 0.01%)</title><rect x="81.6036%" y="565" width="0.0118%" height="15" fill="rgb(244,36,1)" fg:x="41342" fg:w="6"/><text x="81.8536%" y="575.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::FloatVector3&lt;f32&gt; for core::core_arch::x86::__m128&gt;::length (6 samples, 0.01%)</title><rect x="81.6036%" y="549" width="0.0118%" height="15" fill="rgb(222,40,54)" fg:x="41342" fg:w="6"/><text x="81.8536%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (111 samples, 0.22%)</title><rect x="81.3983%" y="645" width="0.2191%" height="15" fill="rgb(210,207,39)" fg:x="41238" fg:w="111"/><text x="81.6483%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (110 samples, 0.22%)</title><rect x="81.4003%" y="629" width="0.2171%" height="15" fill="rgb(234,52,14)" fg:x="41239" fg:w="110"/><text x="81.6503%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (110 samples, 0.22%)</title><rect x="81.4003%" y="613" width="0.2171%" height="15" fill="rgb(239,108,46)" fg:x="41239" fg:w="110"/><text x="81.6503%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (110 samples, 0.22%)</title><rect x="81.4003%" y="597" width="0.2171%" height="15" fill="rgb(252,223,5)" fg:x="41239" fg:w="110"/><text x="81.6503%" y="607.50"></text></g><g><title>&lt;bevy_ecs::query::access::Access&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="81.6213%" y="581" width="0.0118%" height="15" fill="rgb(227,181,11)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="591.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="81.6213%" y="565" width="0.0118%" height="15" fill="rgb(248,126,40)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="81.6213%" y="549" width="0.0118%" height="15" fill="rgb(243,1,18)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="81.6213%" y="533" width="0.0118%" height="15" fill="rgb(214,145,23)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="81.6213%" y="517" width="0.0118%" height="15" fill="rgb(241,218,11)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="81.6213%" y="501" width="0.0118%" height="15" fill="rgb(214,219,24)" fg:x="41351" fg:w="6"/><text x="81.8713%" y="511.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (10 samples, 0.02%)</title><rect x="81.6213%" y="629" width="0.0197%" height="15" fill="rgb(235,32,7)" fg:x="41351" fg:w="10"/><text x="81.8713%" y="639.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSetState&lt;(PF0,PF1)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (10 samples, 0.02%)</title><rect x="81.6213%" y="613" width="0.0197%" height="15" fill="rgb(227,121,28)" fg:x="41351" fg:w="10"/><text x="81.8713%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::SystemMeta as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="81.6213%" y="597" width="0.0197%" height="15" fill="rgb(216,129,49)" fg:x="41351" fg:w="10"/><text x="81.8713%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="81.6411%" y="565" width="0.0118%" height="15" fill="rgb(207,194,50)" fg:x="41361" fg:w="6"/><text x="81.8911%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::system_param::ParamSet&lt;(bevy_ecs::system::query::Query&lt;(bevy_ecs::entity::Entity,&amp;mut bevy_render::camera::camera::Camera,&amp;mut bevy_render::camera::projection::PerspectiveProjection)&gt;,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::Added&lt;bevy_render::camera::camera::Camera&gt;&gt;)&gt;&gt; (7 samples, 0.01%)</title><rect x="81.6687%" y="565" width="0.0138%" height="15" fill="rgb(207,4,18)" fg:x="41375" fg:w="7"/><text x="81.9187%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemMeta&gt; (6 samples, 0.01%)</title><rect x="81.6707%" y="549" width="0.0118%" height="15" fill="rgb(213,50,30)" fg:x="41376" fg:w="6"/><text x="81.9207%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::query::access::FilteredAccessSet&lt;bevy_ecs::component::ComponentId&gt;&gt; (6 samples, 0.01%)</title><rect x="81.6707%" y="533" width="0.0118%" height="15" fill="rgb(208,77,22)" fg:x="41376" fg:w="6"/><text x="81.9207%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (32 samples, 0.06%)</title><rect x="81.6213%" y="645" width="0.0632%" height="15" fill="rgb(244,204,34)" fg:x="41351" fg:w="32"/><text x="81.8713%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (22 samples, 0.04%)</title><rect x="81.6411%" y="629" width="0.0434%" height="15" fill="rgb(230,20,17)" fg:x="41361" fg:w="22"/><text x="81.8911%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.04%)</title><rect x="81.6411%" y="613" width="0.0434%" height="15" fill="rgb(237,83,15)" fg:x="41361" fg:w="22"/><text x="81.8911%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.04%)</title><rect x="81.6411%" y="597" width="0.0434%" height="15" fill="rgb(221,109,25)" fg:x="41361" fg:w="22"/><text x="81.8911%" y="607.50"></text></g><g><title>bevy_render::camera::camera::camera_system (22 samples, 0.04%)</title><rect x="81.6411%" y="581" width="0.0434%" height="15" fill="rgb(205,194,52)" fg:x="41361" fg:w="22"/><text x="81.8911%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (6 samples, 0.01%)</title><rect x="81.6845%" y="645" width="0.0118%" height="15" fill="rgb(244,173,54)" fg:x="41383" fg:w="6"/><text x="81.9345%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="81.6963%" y="565" width="0.0138%" height="15" fill="rgb(227,181,18)" fg:x="41389" fg:w="7"/><text x="81.9463%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.01%)</title><rect x="81.6963%" y="549" width="0.0138%" height="15" fill="rgb(238,36,30)" fg:x="41389" fg:w="7"/><text x="81.9463%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.01%)</title><rect x="81.6963%" y="533" width="0.0138%" height="15" fill="rgb(254,85,0)" fg:x="41389" fg:w="7"/><text x="81.9463%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.01%)</title><rect x="81.6963%" y="517" width="0.0138%" height="15" fill="rgb(247,63,33)" fg:x="41389" fg:w="7"/><text x="81.9463%" y="527.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7,P8) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (8 samples, 0.02%)</title><rect x="81.6963%" y="629" width="0.0158%" height="15" fill="rgb(220,7,54)" fg:x="41389" fg:w="8"/><text x="81.9463%" y="639.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSetState&lt;(PF0,PF1,PF2)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (8 samples, 0.02%)</title><rect x="81.6963%" y="613" width="0.0158%" height="15" fill="rgb(238,227,21)" fg:x="41389" fg:w="8"/><text x="81.9463%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::SystemMeta as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="81.6963%" y="597" width="0.0158%" height="15" fill="rgb(237,29,31)" fg:x="41389" fg:w="8"/><text x="81.9463%" y="607.50"></text></g><g><title>&lt;bevy_ecs::query::access::FilteredAccessSet&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="81.6963%" y="581" width="0.0158%" height="15" fill="rgb(211,21,50)" fg:x="41389" fg:w="8"/><text x="81.9463%" y="591.50"></text></g><g><title>bevy_pbr::light::assign_lights_to_clusters (9 samples, 0.02%)</title><rect x="81.7121%" y="581" width="0.0178%" height="15" fill="rgb(239,119,2)" fg:x="41397" fg:w="9"/><text x="81.9621%" y="591.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (7 samples, 0.01%)</title><rect x="81.7299%" y="565" width="0.0138%" height="15" fill="rgb(250,2,39)" fg:x="41406" fg:w="7"/><text x="81.9799%" y="575.50"></text></g><g><title>stretch::node::Stretch::compute_layout (7 samples, 0.01%)</title><rect x="81.7299%" y="549" width="0.0138%" height="15" fill="rgb(244,46,53)" fg:x="41406" fg:w="7"/><text x="81.9799%" y="559.50"></text></g><g><title>stretch::forest::Forest::compute_layout (7 samples, 0.01%)</title><rect x="81.7299%" y="533" width="0.0138%" height="15" fill="rgb(209,21,19)" fg:x="41406" fg:w="7"/><text x="81.9799%" y="543.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute (7 samples, 0.01%)</title><rect x="81.7299%" y="517" width="0.0138%" height="15" fill="rgb(236,145,4)" fg:x="41406" fg:w="7"/><text x="81.9799%" y="527.50"></text></g><g><title>bevy_ui::flex::flex_node_system (15 samples, 0.03%)</title><rect x="81.7299%" y="581" width="0.0296%" height="15" fill="rgb(220,133,36)" fg:x="41406" fg:w="15"/><text x="81.9799%" y="591.50"></text></g><g><title>bevy_ui::flex::FlexSurface::update_window (6 samples, 0.01%)</title><rect x="81.7477%" y="565" width="0.0118%" height="15" fill="rgb(244,18,3)" fg:x="41415" fg:w="6"/><text x="81.9977%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (35 samples, 0.07%)</title><rect x="81.6963%" y="645" width="0.0691%" height="15" fill="rgb(232,171,48)" fg:x="41389" fg:w="35"/><text x="81.9463%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (27 samples, 0.05%)</title><rect x="81.7121%" y="629" width="0.0533%" height="15" fill="rgb(223,223,53)" fg:x="41397" fg:w="27"/><text x="81.9621%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.05%)</title><rect x="81.7121%" y="613" width="0.0533%" height="15" fill="rgb(246,92,13)" fg:x="41397" fg:w="27"/><text x="81.9621%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (27 samples, 0.05%)</title><rect x="81.7121%" y="597" width="0.0533%" height="15" fill="rgb(229,171,10)" fg:x="41397" fg:w="27"/><text x="81.9621%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (187 samples, 0.37%)</title><rect x="81.3983%" y="709" width="0.3691%" height="15" fill="rgb(213,131,26)" fg:x="41238" fg:w="187"/><text x="81.6483%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.37%)</title><rect x="81.3983%" y="693" width="0.3691%" height="15" fill="rgb(242,87,54)" fg:x="41238" fg:w="187"/><text x="81.6483%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (187 samples, 0.37%)</title><rect x="81.3983%" y="677" width="0.3691%" height="15" fill="rgb(237,21,35)" fg:x="41238" fg:w="187"/><text x="81.6483%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (187 samples, 0.37%)</title><rect x="81.3983%" y="661" width="0.3691%" height="15" fill="rgb(253,13,47)" fg:x="41238" fg:w="187"/><text x="81.6483%" y="671.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (191 samples, 0.38%)</title><rect x="81.3983%" y="837" width="0.3770%" height="15" fill="rgb(215,122,49)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (191 samples, 0.38%)</title><rect x="81.3983%" y="821" width="0.3770%" height="15" fill="rgb(209,179,30)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (191 samples, 0.38%)</title><rect x="81.3983%" y="805" width="0.3770%" height="15" fill="rgb(235,100,24)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (191 samples, 0.38%)</title><rect x="81.3983%" y="789" width="0.3770%" height="15" fill="rgb(209,67,24)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (191 samples, 0.38%)</title><rect x="81.3983%" y="773" width="0.3770%" height="15" fill="rgb(206,74,32)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (191 samples, 0.38%)</title><rect x="81.3983%" y="757" width="0.3770%" height="15" fill="rgb(212,45,25)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (191 samples, 0.38%)</title><rect x="81.3983%" y="741" width="0.3770%" height="15" fill="rgb(239,26,3)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (191 samples, 0.38%)</title><rect x="81.3983%" y="725" width="0.3770%" height="15" fill="rgb(218,36,15)" fg:x="41238" fg:w="191"/><text x="81.6483%" y="735.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send (6 samples, 0.01%)</title><rect x="81.7812%" y="789" width="0.0118%" height="15" fill="rgb(206,108,24)" fg:x="41432" fg:w="6"/><text x="82.0312%" y="799.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (6 samples, 0.01%)</title><rect x="81.7970%" y="789" width="0.0118%" height="15" fill="rgb(234,204,42)" fg:x="41440" fg:w="6"/><text x="82.0470%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (213 samples, 0.42%)</title><rect x="81.3983%" y="853" width="0.4204%" height="15" fill="rgb(229,2,11)" fg:x="41238" fg:w="213"/><text x="81.6483%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (22 samples, 0.04%)</title><rect x="81.7753%" y="837" width="0.0434%" height="15" fill="rgb(221,20,48)" fg:x="41429" fg:w="22"/><text x="82.0253%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.04%)</title><rect x="81.7753%" y="821" width="0.0434%" height="15" fill="rgb(244,164,10)" fg:x="41429" fg:w="22"/><text x="82.0253%" y="831.50"></text></g><g><title>bevy_audio::audio_output::play_queued_audio_system (22 samples, 0.04%)</title><rect x="81.7753%" y="805" width="0.0434%" height="15" fill="rgb(243,229,2)" fg:x="41429" fg:w="22"/><text x="82.0253%" y="815.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,525 samples, 3.01%)</title><rect x="78.8362%" y="917" width="3.0101%" height="15" fill="rgb(232,131,37)" fg:x="39940" fg:w="1525"/><text x="79.0862%" y="927.50">win..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,525 samples, 3.01%)</title><rect x="78.8362%" y="901" width="3.0101%" height="15" fill="rgb(217,156,11)" fg:x="39940" fg:w="1525"/><text x="79.0862%" y="911.50">bev..</text></g><g><title>bevy_app::app::App::update (1,525 samples, 3.01%)</title><rect x="78.8362%" y="885" width="3.0101%" height="15" fill="rgb(239,99,48)" fg:x="39940" fg:w="1525"/><text x="79.0862%" y="895.50">bev..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (227 samples, 0.45%)</title><rect x="81.3983%" y="869" width="0.4481%" height="15" fill="rgb(231,209,9)" fg:x="41238" fg:w="227"/><text x="81.6483%" y="879.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (14 samples, 0.03%)</title><rect x="81.8187%" y="853" width="0.0276%" height="15" fill="rgb(254,97,27)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (14 samples, 0.03%)</title><rect x="81.8187%" y="837" width="0.0276%" height="15" fill="rgb(223,151,38)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (14 samples, 0.03%)</title><rect x="81.8187%" y="821" width="0.0276%" height="15" fill="rgb(219,206,35)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (14 samples, 0.03%)</title><rect x="81.8187%" y="805" width="0.0276%" height="15" fill="rgb(216,130,31)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.03%)</title><rect x="81.8187%" y="789" width="0.0276%" height="15" fill="rgb(251,97,34)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.03%)</title><rect x="81.8187%" y="773" width="0.0276%" height="15" fill="rgb(246,159,47)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (14 samples, 0.03%)</title><rect x="81.8187%" y="757" width="0.0276%" height="15" fill="rgb(232,87,10)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="767.50"></text></g><g><title>async_executor::Executor::try_tick (14 samples, 0.03%)</title><rect x="81.8187%" y="741" width="0.0276%" height="15" fill="rgb(249,1,37)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14 samples, 0.03%)</title><rect x="81.8187%" y="725" width="0.0276%" height="15" fill="rgb(239,135,14)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="81.8187%" y="709" width="0.0276%" height="15" fill="rgb(253,116,46)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="719.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (14 samples, 0.03%)</title><rect x="81.8187%" y="693" width="0.0276%" height="15" fill="rgb(222,217,37)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="81.8187%" y="677" width="0.0276%" height="15" fill="rgb(252,96,8)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (14 samples, 0.03%)</title><rect x="81.8187%" y="661" width="0.0276%" height="15" fill="rgb(254,103,41)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (14 samples, 0.03%)</title><rect x="81.8187%" y="645" width="0.0276%" height="15" fill="rgb(218,213,19)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (14 samples, 0.03%)</title><rect x="81.8187%" y="629" width="0.0276%" height="15" fill="rgb(253,95,21)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (14 samples, 0.03%)</title><rect x="81.8187%" y="613" width="0.0276%" height="15" fill="rgb(229,26,28)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.03%)</title><rect x="81.8187%" y="597" width="0.0276%" height="15" fill="rgb(230,129,16)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.03%)</title><rect x="81.8187%" y="581" width="0.0276%" height="15" fill="rgb(236,126,17)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="591.50"></text></g><g><title>stellar_coordinates_test::setup (14 samples, 0.03%)</title><rect x="81.8187%" y="565" width="0.0276%" height="15" fill="rgb(209,33,33)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="575.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (14 samples, 0.03%)</title><rect x="81.8187%" y="549" width="0.0276%" height="15" fill="rgb(227,85,29)" fg:x="41451" fg:w="14"/><text x="82.0687%" y="559.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (13 samples, 0.03%)</title><rect x="81.8207%" y="533" width="0.0257%" height="15" fill="rgb(241,53,46)" fg:x="41452" fg:w="13"/><text x="82.0707%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.03%)</title><rect x="81.8207%" y="517" width="0.0257%" height="15" fill="rgb(228,167,53)" fg:x="41452" fg:w="13"/><text x="82.0707%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="81.8207%" y="501" width="0.0257%" height="15" fill="rgb(238,195,45)" fg:x="41452" fg:w="13"/><text x="82.0707%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="81.8207%" y="485" width="0.0257%" height="15" fill="rgb(252,124,45)" fg:x="41452" fg:w="13"/><text x="82.0707%" y="495.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,540 samples, 3.04%)</title><rect x="78.8362%" y="981" width="3.0398%" height="15" fill="rgb(251,38,35)" fg:x="39940" fg:w="1540"/><text x="79.0862%" y="991.50">win..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,540 samples, 3.04%)</title><rect x="78.8362%" y="965" width="3.0398%" height="15" fill="rgb(227,33,2)" fg:x="39940" fg:w="1540"/><text x="79.0862%" y="975.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,540 samples, 3.04%)</title><rect x="78.8362%" y="949" width="3.0398%" height="15" fill="rgb(223,157,46)" fg:x="39940" fg:w="1540"/><text x="79.0862%" y="959.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,540 samples, 3.04%)</title><rect x="78.8362%" y="933" width="3.0398%" height="15" fill="rgb(222,78,41)" fg:x="39940" fg:w="1540"/><text x="79.0862%" y="943.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (15 samples, 0.03%)</title><rect x="81.8464%" y="917" width="0.0296%" height="15" fill="rgb(248,176,11)" fg:x="41465" fg:w="15"/><text x="82.0964%" y="927.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (15 samples, 0.03%)</title><rect x="81.8464%" y="901" width="0.0296%" height="15" fill="rgb(241,221,18)" fg:x="41465" fg:w="15"/><text x="82.0964%" y="911.50"></text></g><g><title>_XimFilterWaitEvent (12 samples, 0.02%)</title><rect x="81.8523%" y="885" width="0.0237%" height="15" fill="rgb(218,85,22)" fg:x="41468" fg:w="12"/><text x="82.1023%" y="895.50"></text></g><g><title>_XimFilterWaitEvent (12 samples, 0.02%)</title><rect x="81.8523%" y="869" width="0.0237%" height="15" fill="rgb(222,223,7)" fg:x="41468" fg:w="12"/><text x="82.1023%" y="879.50"></text></g><g><title>_XimTransRegisterDispatcher (12 samples, 0.02%)</title><rect x="81.8523%" y="853" width="0.0237%" height="15" fill="rgb(254,59,39)" fg:x="41468" fg:w="12"/><text x="82.1023%" y="863.50"></text></g><g><title>_XimTransInternalConnection (12 samples, 0.02%)</title><rect x="81.8523%" y="837" width="0.0237%" height="15" fill="rgb(247,100,27)" fg:x="41468" fg:w="12"/><text x="82.1023%" y="847.50"></text></g><g><title>XGetWindowProperty (12 samples, 0.02%)</title><rect x="81.8523%" y="821" width="0.0237%" height="15" fill="rgb(237,207,10)" fg:x="41468" fg:w="12"/><text x="82.1023%" y="831.50"></text></g><g><title>_XReply (11 samples, 0.02%)</title><rect x="81.8542%" y="805" width="0.0217%" height="15" fill="rgb(220,121,28)" fg:x="41469" fg:w="11"/><text x="82.1042%" y="815.50"></text></g><g><title>core::intrinsics::write_bytes (13 samples, 0.03%)</title><rect x="81.8799%" y="469" width="0.0257%" height="15" fill="rgb(213,223,20)" fg:x="41482" fg:w="13"/><text x="82.1299%" y="479.50"></text></g><g><title>__memset_avx2_unaligned_erms (13 samples, 0.03%)</title><rect x="81.8799%" y="453" width="0.0257%" height="15" fill="rgb(205,121,27)" fg:x="41482" fg:w="13"/><text x="82.1299%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (17 samples, 0.03%)</title><rect x="81.8760%" y="645" width="0.0336%" height="15" fill="rgb(253,24,53)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (17 samples, 0.03%)</title><rect x="81.8760%" y="629" width="0.0336%" height="15" fill="rgb(224,224,47)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.03%)</title><rect x="81.8760%" y="613" width="0.0336%" height="15" fill="rgb(250,125,36)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.03%)</title><rect x="81.8760%" y="597" width="0.0336%" height="15" fill="rgb(240,144,38)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="607.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (17 samples, 0.03%)</title><rect x="81.8760%" y="581" width="0.0336%" height="15" fill="rgb(250,15,50)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="591.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (17 samples, 0.03%)</title><rect x="81.8760%" y="565" width="0.0336%" height="15" fill="rgb(210,24,26)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="575.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (17 samples, 0.03%)</title><rect x="81.8760%" y="549" width="0.0336%" height="15" fill="rgb(234,53,53)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="559.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (17 samples, 0.03%)</title><rect x="81.8760%" y="533" width="0.0336%" height="15" fill="rgb(208,108,28)" fg:x="41480" fg:w="17"/><text x="82.1260%" y="543.50"></text></g><g><title>wgpu::Device::create_buffer (15 samples, 0.03%)</title><rect x="81.8799%" y="517" width="0.0296%" height="15" fill="rgb(227,143,7)" fg:x="41482" fg:w="15"/><text x="82.1299%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="81.8799%" y="501" width="0.0296%" height="15" fill="rgb(238,189,38)" fg:x="41482" fg:w="15"/><text x="82.1299%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (15 samples, 0.03%)</title><rect x="81.8799%" y="485" width="0.0296%" height="15" fill="rgb(222,69,15)" fg:x="41482" fg:w="15"/><text x="82.1299%" y="495.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,QF,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="81.9233%" y="565" width="0.0158%" height="15" fill="rgb(213,169,7)" fg:x="41504" fg:w="8"/><text x="82.1733%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as copyless::vec::VecHelper&lt;T&gt;&gt;::alloc (16 samples, 0.03%)</title><rect x="81.9411%" y="549" width="0.0316%" height="15" fill="rgb(251,219,4)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.03%)</title><rect x="81.9411%" y="533" width="0.0316%" height="15" fill="rgb(241,55,40)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.03%)</title><rect x="81.9411%" y="517" width="0.0316%" height="15" fill="rgb(243,57,30)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.03%)</title><rect x="81.9411%" y="501" width="0.0316%" height="15" fill="rgb(234,50,30)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.03%)</title><rect x="81.9411%" y="485" width="0.0316%" height="15" fill="rgb(239,23,42)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.03%)</title><rect x="81.9411%" y="469" width="0.0316%" height="15" fill="rgb(217,38,19)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.03%)</title><rect x="81.9411%" y="453" width="0.0316%" height="15" fill="rgb(215,179,16)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.03%)</title><rect x="81.9411%" y="437" width="0.0316%" height="15" fill="rgb(254,21,37)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="447.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.03%)</title><rect x="81.9411%" y="421" width="0.0316%" height="15" fill="rgb(219,207,48)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="431.50"></text></g><g><title>__realloc (16 samples, 0.03%)</title><rect x="81.9411%" y="405" width="0.0316%" height="15" fill="rgb(227,225,41)" fg:x="41513" fg:w="16"/><text x="82.1911%" y="415.50"></text></g><g><title>_int_realloc (15 samples, 0.03%)</title><rect x="81.9431%" y="389" width="0.0296%" height="15" fill="rgb(223,130,1)" fg:x="41514" fg:w="15"/><text x="82.1931%" y="399.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="81.9529%" y="373" width="0.0197%" height="15" fill="rgb(249,54,42)" fg:x="41519" fg:w="10"/><text x="82.2029%" y="383.50"></text></g><g><title>bevy_render::render_phase::RenderPhase&lt;I&gt;::add (18 samples, 0.04%)</title><rect x="81.9411%" y="565" width="0.0355%" height="15" fill="rgb(248,69,25)" fg:x="41513" fg:w="18"/><text x="82.1911%" y="575.50"></text></g><g><title>&lt;bevy_render::render_resource::pipeline::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (7 samples, 0.01%)</title><rect x="82.0023%" y="405" width="0.0138%" height="15" fill="rgb(234,21,32)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="415.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (7 samples, 0.01%)</title><rect x="82.0023%" y="389" width="0.0138%" height="15" fill="rgb(252,136,6)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.01%)</title><rect x="82.0023%" y="373" width="0.0138%" height="15" fill="rgb(245,87,12)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.01%)</title><rect x="82.0023%" y="357" width="0.0138%" height="15" fill="rgb(208,12,15)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.01%)</title><rect x="82.0023%" y="341" width="0.0138%" height="15" fill="rgb(250,98,2)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.01%)</title><rect x="82.0023%" y="325" width="0.0138%" height="15" fill="rgb(205,213,15)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (7 samples, 0.01%)</title><rect x="82.0023%" y="309" width="0.0138%" height="15" fill="rgb(248,192,44)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (7 samples, 0.01%)</title><rect x="82.0023%" y="293" width="0.0138%" height="15" fill="rgb(221,89,17)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="82.0023%" y="277" width="0.0138%" height="15" fill="rgb(209,55,3)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="287.50"></text></g><g><title>&lt;wgpu_types::VertexAttribute as core::cmp::PartialEq&gt;::eq (7 samples, 0.01%)</title><rect x="82.0023%" y="261" width="0.0138%" height="15" fill="rgb(247,23,45)" fg:x="41544" fg:w="7"/><text x="82.2523%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.03%)</title><rect x="82.0161%" y="341" width="0.0257%" height="15" fill="rgb(235,152,23)" fg:x="41551" fg:w="13"/><text x="82.2661%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (8 samples, 0.02%)</title><rect x="82.0260%" y="325" width="0.0158%" height="15" fill="rgb(244,63,13)" fg:x="41556" fg:w="8"/><text x="82.2760%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (8 samples, 0.02%)</title><rect x="82.0260%" y="309" width="0.0158%" height="15" fill="rgb(227,30,37)" fg:x="41556" fg:w="8"/><text x="82.2760%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.02%)</title><rect x="82.0260%" y="293" width="0.0158%" height="15" fill="rgb(224,49,42)" fg:x="41556" fg:w="8"/><text x="82.2760%" y="303.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshVertexAttributeId as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="82.0260%" y="277" width="0.0158%" height="15" fill="rgb(218,129,5)" fg:x="41556" fg:w="8"/><text x="82.2760%" y="287.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (14 samples, 0.03%)</title><rect x="82.0161%" y="405" width="0.0276%" height="15" fill="rgb(240,199,54)" fg:x="41551" fg:w="14"/><text x="82.2661%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.03%)</title><rect x="82.0161%" y="389" width="0.0276%" height="15" fill="rgb(234,31,13)" fg:x="41551" fg:w="14"/><text x="82.2661%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.03%)</title><rect x="82.0161%" y="373" width="0.0276%" height="15" fill="rgb(219,73,54)" fg:x="41551" fg:w="14"/><text x="82.2661%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.03%)</title><rect x="82.0161%" y="357" width="0.0276%" height="15" fill="rgb(251,162,10)" fg:x="41551" fg:w="14"/><text x="82.2661%" y="367.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::{{closure}} (27 samples, 0.05%)</title><rect x="81.9924%" y="469" width="0.0533%" height="15" fill="rgb(240,138,47)" fg:x="41539" fg:w="27"/><text x="82.2424%" y="479.50"></text></g><g><title>hashbrown::map::equivalent::{{closure}} (27 samples, 0.05%)</title><rect x="81.9924%" y="453" width="0.0533%" height="15" fill="rgb(216,138,26)" fg:x="41539" fg:w="27"/><text x="82.2424%" y="463.50"></text></g><g><title>&lt;bevy_utils::Hashed&lt;V,H&gt; as core::cmp::PartialEq&gt;::eq (27 samples, 0.05%)</title><rect x="81.9924%" y="437" width="0.0533%" height="15" fill="rgb(243,17,35)" fg:x="41539" fg:w="27"/><text x="82.2424%" y="447.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::InnerMeshVertexBufferLayout as core::cmp::PartialEq&gt;::eq (22 samples, 0.04%)</title><rect x="82.0023%" y="421" width="0.0434%" height="15" fill="rgb(241,60,18)" fg:x="41544" fg:w="22"/><text x="82.2523%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;bevy_utils::Hashed&lt;K&gt;,V,bevy_utils::PassHash&gt; as bevy_utils::PreHashMapExt&lt;K,V&gt;&gt;::get_or_insert_with (38 samples, 0.08%)</title><rect x="81.9786%" y="549" width="0.0750%" height="15" fill="rgb(234,2,44)" fg:x="41532" fg:w="38"/><text x="82.2286%" y="559.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_key_hashed_nocheck (38 samples, 0.08%)</title><rect x="81.9786%" y="533" width="0.0750%" height="15" fill="rgb(225,225,33)" fg:x="41532" fg:w="38"/><text x="82.2286%" y="543.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (38 samples, 0.08%)</title><rect x="81.9786%" y="517" width="0.0750%" height="15" fill="rgb(234,50,31)" fg:x="41532" fg:w="38"/><text x="82.2286%" y="527.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (38 samples, 0.08%)</title><rect x="81.9786%" y="501" width="0.0750%" height="15" fill="rgb(249,6,25)" fg:x="41532" fg:w="38"/><text x="82.2286%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (33 samples, 0.07%)</title><rect x="81.9885%" y="485" width="0.0651%" height="15" fill="rgb(241,5,17)" fg:x="41537" fg:w="33"/><text x="82.2385%" y="495.50"></text></g><g><title>bevy_render::render_resource::pipeline_specializer::SpecializedMeshPipelines&lt;S&gt;::specialize (48 samples, 0.09%)</title><rect x="81.9786%" y="565" width="0.0947%" height="15" fill="rgb(207,116,10)" fg:x="41532" fg:w="48"/><text x="82.2286%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (9 samples, 0.02%)</title><rect x="82.0556%" y="549" width="0.0178%" height="15" fill="rgb(222,128,18)" fg:x="41571" fg:w="9"/><text x="82.3056%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="82.0615%" y="533" width="0.0118%" height="15" fill="rgb(229,109,25)" fg:x="41574" fg:w="6"/><text x="82.3115%" y="543.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="82.0812%" y="501" width="0.0138%" height="15" fill="rgb(222,102,25)" fg:x="41584" fg:w="7"/><text x="82.3312%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.02%)</title><rect x="82.0793%" y="533" width="0.0178%" height="15" fill="rgb(239,211,5)" fg:x="41583" fg:w="9"/><text x="82.3293%" y="543.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="82.0812%" y="517" width="0.0158%" height="15" fill="rgb(223,136,26)" fg:x="41584" fg:w="8"/><text x="82.3312%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.02%)</title><rect x="82.1069%" y="501" width="0.0217%" height="15" fill="rgb(227,30,15)" fg:x="41597" fg:w="11"/><text x="82.3569%" y="511.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.02%)</title><rect x="82.1069%" y="485" width="0.0217%" height="15" fill="rgb(247,76,4)" fg:x="41597" fg:w="11"/><text x="82.3569%" y="495.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.02%)</title><rect x="82.1069%" y="469" width="0.0217%" height="15" fill="rgb(245,38,48)" fg:x="41597" fg:w="11"/><text x="82.3569%" y="479.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="82.1168%" y="453" width="0.0118%" height="15" fill="rgb(210,220,14)" fg:x="41602" fg:w="6"/><text x="82.3668%" y="463.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (6 samples, 0.01%)</title><rect x="82.1168%" y="437" width="0.0118%" height="15" fill="rgb(224,60,51)" fg:x="41602" fg:w="6"/><text x="82.3668%" y="447.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.01%)</title><rect x="82.1168%" y="421" width="0.0118%" height="15" fill="rgb(212,133,49)" fg:x="41602" fg:w="6"/><text x="82.3668%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (109 samples, 0.22%)</title><rect x="81.9154%" y="645" width="0.2152%" height="15" fill="rgb(231,39,22)" fg:x="41500" fg:w="109"/><text x="82.1654%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (109 samples, 0.22%)</title><rect x="81.9154%" y="629" width="0.2152%" height="15" fill="rgb(236,173,22)" fg:x="41500" fg:w="109"/><text x="82.1654%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (109 samples, 0.22%)</title><rect x="81.9154%" y="613" width="0.2152%" height="15" fill="rgb(210,70,0)" fg:x="41500" fg:w="109"/><text x="82.1654%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (109 samples, 0.22%)</title><rect x="81.9154%" y="597" width="0.2152%" height="15" fill="rgb(215,170,11)" fg:x="41500" fg:w="109"/><text x="82.1654%" y="607.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (105 samples, 0.21%)</title><rect x="81.9233%" y="581" width="0.2073%" height="15" fill="rgb(220,154,28)" fg:x="41504" fg:w="105"/><text x="82.1733%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.05%)</title><rect x="82.0793%" y="565" width="0.0513%" height="15" fill="rgb(240,160,41)" fg:x="41583" fg:w="26"/><text x="82.3293%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.05%)</title><rect x="82.0793%" y="549" width="0.0513%" height="15" fill="rgb(243,215,41)" fg:x="41583" fg:w="26"/><text x="82.3293%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (17 samples, 0.03%)</title><rect x="82.0970%" y="533" width="0.0336%" height="15" fill="rgb(214,208,31)" fg:x="41592" fg:w="17"/><text x="82.3470%" y="543.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (16 samples, 0.03%)</title><rect x="82.0990%" y="517" width="0.0316%" height="15" fill="rgb(247,57,22)" fg:x="41593" fg:w="16"/><text x="82.3490%" y="527.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (6 samples, 0.01%)</title><rect x="82.1345%" y="565" width="0.0118%" height="15" fill="rgb(228,73,52)" fg:x="41611" fg:w="6"/><text x="82.3845%" y="575.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (6 samples, 0.01%)</title><rect x="82.1345%" y="549" width="0.0118%" height="15" fill="rgb(252,60,9)" fg:x="41611" fg:w="6"/><text x="82.3845%" y="559.50"></text></g><g><title>bevy_pbr::material::queue_material_meshes (12 samples, 0.02%)</title><rect x="82.1326%" y="581" width="0.0237%" height="15" fill="rgb(233,9,51)" fg:x="41610" fg:w="12"/><text x="82.3826%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10),()&gt;&gt;::run (15 samples, 0.03%)</title><rect x="82.1306%" y="645" width="0.0296%" height="15" fill="rgb(223,67,14)" fg:x="41609" fg:w="15"/><text x="82.3806%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10),()&gt;&gt;::run::call_inner (15 samples, 0.03%)</title><rect x="82.1306%" y="629" width="0.0296%" height="15" fill="rgb(222,86,2)" fg:x="41609" fg:w="15"/><text x="82.3806%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="82.1306%" y="613" width="0.0296%" height="15" fill="rgb(243,58,54)" fg:x="41609" fg:w="15"/><text x="82.3806%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.03%)</title><rect x="82.1326%" y="597" width="0.0276%" height="15" fill="rgb(210,200,39)" fg:x="41610" fg:w="14"/><text x="82.3826%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (147 samples, 0.29%)</title><rect x="81.8760%" y="709" width="0.2902%" height="15" fill="rgb(238,135,9)" fg:x="41480" fg:w="147"/><text x="82.1260%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.29%)</title><rect x="81.8760%" y="693" width="0.2902%" height="15" fill="rgb(232,179,7)" fg:x="41480" fg:w="147"/><text x="82.1260%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (147 samples, 0.29%)</title><rect x="81.8760%" y="677" width="0.2902%" height="15" fill="rgb(245,65,41)" fg:x="41480" fg:w="147"/><text x="82.1260%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (147 samples, 0.29%)</title><rect x="81.8760%" y="661" width="0.2902%" height="15" fill="rgb(227,43,8)" fg:x="41480" fg:w="147"/><text x="82.1260%" y="671.50"></text></g><g><title>ash::device::Device::create_image_view (7 samples, 0.01%)</title><rect x="82.1681%" y="469" width="0.0138%" height="15" fill="rgb(235,91,14)" fg:x="41628" fg:w="7"/><text x="82.4181%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_image_view (7 samples, 0.01%)</title><rect x="82.1681%" y="453" width="0.0138%" height="15" fill="rgb(235,219,31)" fg:x="41628" fg:w="7"/><text x="82.4181%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="82.1681%" y="437" width="0.0138%" height="15" fill="rgb(227,121,25)" fg:x="41628" fg:w="7"/><text x="82.4181%" y="447.50"></text></g><g><title>&lt;bevy_render::render_resource::texture::TextureView as core::convert::From&lt;wgpu::SurfaceTexture&gt;&gt;::from (10 samples, 0.02%)</title><rect x="82.1661%" y="565" width="0.0197%" height="15" fill="rgb(254,129,24)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="575.50"></text></g><g><title>wgpu::Texture::create_view (10 samples, 0.02%)</title><rect x="82.1661%" y="549" width="0.0197%" height="15" fill="rgb(226,144,49)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (10 samples, 0.02%)</title><rect x="82.1661%" y="533" width="0.0197%" height="15" fill="rgb(214,187,32)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (10 samples, 0.02%)</title><rect x="82.1661%" y="517" width="0.0197%" height="15" fill="rgb(243,129,46)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="527.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (10 samples, 0.02%)</title><rect x="82.1661%" y="501" width="0.0197%" height="15" fill="rgb(221,185,35)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (10 samples, 0.02%)</title><rect x="82.1661%" y="485" width="0.0197%" height="15" fill="rgb(205,0,32)" fg:x="41627" fg:w="10"/><text x="82.4161%" y="495.50"></text></g><g><title>ash::device::Device::create_image_view (7 samples, 0.01%)</title><rect x="82.2155%" y="501" width="0.0138%" height="15" fill="rgb(229,179,12)" fg:x="41652" fg:w="7"/><text x="82.4655%" y="511.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_image_view (7 samples, 0.01%)</title><rect x="82.2155%" y="485" width="0.0138%" height="15" fill="rgb(252,107,19)" fg:x="41652" fg:w="7"/><text x="82.4655%" y="495.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (7 samples, 0.01%)</title><rect x="82.2155%" y="469" width="0.0138%" height="15" fill="rgb(220,95,27)" fg:x="41652" fg:w="7"/><text x="82.4655%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (13 samples, 0.03%)</title><rect x="82.2155%" y="517" width="0.0257%" height="15" fill="rgb(240,113,40)" fg:x="41652" fg:w="13"/><text x="82.4655%" y="527.50"></text></g><g><title>_nv011glcore (7 samples, 0.01%)</title><rect x="82.2470%" y="437" width="0.0138%" height="15" fill="rgb(208,4,43)" fg:x="41668" fg:w="7"/><text x="82.4970%" y="447.50"></text></g><g><title>_nv011glcore (6 samples, 0.01%)</title><rect x="82.2707%" y="421" width="0.0118%" height="15" fill="rgb(247,189,30)" fg:x="41680" fg:w="6"/><text x="82.5207%" y="431.50"></text></g><g><title>ash::device::Device::wait_for_fences (28 samples, 0.06%)</title><rect x="82.2451%" y="501" width="0.0553%" height="15" fill="rgb(231,157,17)" fg:x="41667" fg:w="28"/><text x="82.4951%" y="511.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (28 samples, 0.06%)</title><rect x="82.2451%" y="485" width="0.0553%" height="15" fill="rgb(224,139,6)" fg:x="41667" fg:w="28"/><text x="82.4951%" y="495.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.06%)</title><rect x="82.2451%" y="469" width="0.0553%" height="15" fill="rgb(223,83,16)" fg:x="41667" fg:w="28"/><text x="82.4951%" y="479.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.06%)</title><rect x="82.2451%" y="453" width="0.0553%" height="15" fill="rgb(232,211,20)" fg:x="41667" fg:w="28"/><text x="82.4951%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.04%)</title><rect x="82.2609%" y="437" width="0.0395%" height="15" fill="rgb(225,203,35)" fg:x="41675" fg:w="20"/><text x="82.5109%" y="447.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (13 samples, 0.03%)</title><rect x="82.3003%" y="501" width="0.0257%" height="15" fill="rgb(215,211,44)" fg:x="41695" fg:w="13"/><text x="82.5503%" y="511.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::acquire_next_image_khr (12 samples, 0.02%)</title><rect x="82.3023%" y="485" width="0.0237%" height="15" fill="rgb(248,213,26)" fg:x="41696" fg:w="12"/><text x="82.5523%" y="495.50"></text></g><g><title>__glx_Main (12 samples, 0.02%)</title><rect x="82.3023%" y="469" width="0.0237%" height="15" fill="rgb(214,23,52)" fg:x="41696" fg:w="12"/><text x="82.5523%" y="479.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="82.3043%" y="453" width="0.0217%" height="15" fill="rgb(225,173,50)" fg:x="41697" fg:w="11"/><text x="82.5543%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="82.3102%" y="437" width="0.0158%" height="15" fill="rgb(206,150,22)" fg:x="41700" fg:w="8"/><text x="82.5602%" y="447.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (229 samples, 0.45%)</title><rect x="81.8760%" y="837" width="0.4520%" height="15" fill="rgb(239,64,23)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (229 samples, 0.45%)</title><rect x="81.8760%" y="821" width="0.4520%" height="15" fill="rgb(242,50,38)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (229 samples, 0.45%)</title><rect x="81.8760%" y="805" width="0.4520%" height="15" fill="rgb(217,91,15)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (229 samples, 0.45%)</title><rect x="81.8760%" y="789" width="0.4520%" height="15" fill="rgb(230,172,6)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (229 samples, 0.45%)</title><rect x="81.8760%" y="773" width="0.4520%" height="15" fill="rgb(221,98,26)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (229 samples, 0.45%)</title><rect x="81.8760%" y="757" width="0.4520%" height="15" fill="rgb(227,210,45)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (229 samples, 0.45%)</title><rect x="81.8760%" y="741" width="0.4520%" height="15" fill="rgb(206,8,30)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.45%)</title><rect x="81.8760%" y="725" width="0.4520%" height="15" fill="rgb(241,219,17)" fg:x="41480" fg:w="229"/><text x="82.1260%" y="735.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (82 samples, 0.16%)</title><rect x="82.1661%" y="709" width="0.1619%" height="15" fill="rgb(247,121,29)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (82 samples, 0.16%)</title><rect x="82.1661%" y="693" width="0.1619%" height="15" fill="rgb(219,169,49)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (82 samples, 0.16%)</title><rect x="82.1661%" y="677" width="0.1619%" height="15" fill="rgb(253,49,49)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (82 samples, 0.16%)</title><rect x="82.1661%" y="661" width="0.1619%" height="15" fill="rgb(217,178,3)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (82 samples, 0.16%)</title><rect x="82.1661%" y="645" width="0.1619%" height="15" fill="rgb(234,73,37)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (82 samples, 0.16%)</title><rect x="82.1661%" y="629" width="0.1619%" height="15" fill="rgb(250,98,22)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (82 samples, 0.16%)</title><rect x="82.1661%" y="613" width="0.1619%" height="15" fill="rgb(220,108,37)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (82 samples, 0.16%)</title><rect x="82.1661%" y="597" width="0.1619%" height="15" fill="rgb(225,168,10)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="607.50"></text></g><g><title>bevy_render::view::window::prepare_windows (82 samples, 0.16%)</title><rect x="82.1661%" y="581" width="0.1619%" height="15" fill="rgb(247,215,21)" fg:x="41627" fg:w="82"/><text x="82.4161%" y="591.50"></text></g><g><title>wgpu::Surface::get_current_texture (71 samples, 0.14%)</title><rect x="82.1878%" y="565" width="0.1401%" height="15" fill="rgb(253,189,31)" fg:x="41638" fg:w="71"/><text x="82.4378%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (71 samples, 0.14%)</title><rect x="82.1878%" y="549" width="0.1401%" height="15" fill="rgb(241,54,22)" fg:x="41638" fg:w="71"/><text x="82.4378%" y="559.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (71 samples, 0.14%)</title><rect x="82.1878%" y="533" width="0.1401%" height="15" fill="rgb(211,87,4)" fg:x="41638" fg:w="71"/><text x="82.4378%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (44 samples, 0.09%)</title><rect x="82.2411%" y="517" width="0.0869%" height="15" fill="rgb(245,112,24)" fg:x="41665" fg:w="44"/><text x="82.4911%" y="527.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (28 samples, 0.06%)</title><rect x="82.3339%" y="757" width="0.0553%" height="15" fill="rgb(235,190,41)" fg:x="41712" fg:w="28"/><text x="82.5839%" y="767.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (35 samples, 0.07%)</title><rect x="82.3280%" y="789" width="0.0691%" height="15" fill="rgb(214,89,8)" fg:x="41709" fg:w="35"/><text x="82.5780%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (35 samples, 0.07%)</title><rect x="82.3280%" y="773" width="0.0691%" height="15" fill="rgb(249,155,35)" fg:x="41709" fg:w="35"/><text x="82.5780%" y="783.50"></text></g><g><title>__GI___sched_yield (109 samples, 0.22%)</title><rect x="82.5944%" y="517" width="0.2152%" height="15" fill="rgb(249,88,26)" fg:x="41844" fg:w="109"/><text x="82.8444%" y="527.50"></text></g><g><title>_nv011glcore (9 samples, 0.02%)</title><rect x="82.8096%" y="517" width="0.0178%" height="15" fill="rgb(232,56,8)" fg:x="41953" fg:w="9"/><text x="83.0596%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (196 samples, 0.39%)</title><rect x="82.4464%" y="565" width="0.3869%" height="15" fill="rgb(240,95,3)" fg:x="41769" fg:w="196"/><text x="82.6964%" y="575.50"></text></g><g><title>_nv011glcore (196 samples, 0.39%)</title><rect x="82.4464%" y="549" width="0.3869%" height="15" fill="rgb(222,44,28)" fg:x="41769" fg:w="196"/><text x="82.6964%" y="559.50"></text></g><g><title>_nv011glcore (124 samples, 0.24%)</title><rect x="82.5885%" y="533" width="0.2448%" height="15" fill="rgb(234,16,30)" fg:x="41841" fg:w="124"/><text x="82.8385%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.510.60.02] (201 samples, 0.40%)</title><rect x="82.4444%" y="597" width="0.3967%" height="15" fill="rgb(223,26,17)" fg:x="41768" fg:w="201"/><text x="82.6944%" y="607.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (201 samples, 0.40%)</title><rect x="82.4444%" y="581" width="0.3967%" height="15" fill="rgb(239,187,47)" fg:x="41768" fg:w="201"/><text x="82.6944%" y="591.50"></text></g><g><title>_nv009glcore (25 samples, 0.05%)</title><rect x="82.8451%" y="581" width="0.0493%" height="15" fill="rgb(247,102,50)" fg:x="41971" fg:w="25"/><text x="83.0951%" y="591.50"></text></g><g><title>_nv009glcore (29 samples, 0.06%)</title><rect x="82.8412%" y="597" width="0.0572%" height="15" fill="rgb(231,216,22)" fg:x="41969" fg:w="29"/><text x="83.0912%" y="607.50"></text></g><g><title>_nv009glcore (244 samples, 0.48%)</title><rect x="82.4286%" y="613" width="0.4816%" height="15" fill="rgb(216,201,26)" fg:x="41760" fg:w="244"/><text x="82.6786%" y="623.50"></text></g><g><title>_nv012glcore (9 samples, 0.02%)</title><rect x="82.9438%" y="565" width="0.0178%" height="15" fill="rgb(214,186,23)" fg:x="42021" fg:w="9"/><text x="83.1938%" y="575.50"></text></g><g><title>_nv011glcore (34 samples, 0.07%)</title><rect x="82.9103%" y="613" width="0.0671%" height="15" fill="rgb(235,184,4)" fg:x="42004" fg:w="34"/><text x="83.1603%" y="623.50"></text></g><g><title>_nv009glcore (34 samples, 0.07%)</title><rect x="82.9103%" y="597" width="0.0671%" height="15" fill="rgb(244,46,17)" fg:x="42004" fg:w="34"/><text x="83.1603%" y="607.50"></text></g><g><title>_nv041glcore (30 samples, 0.06%)</title><rect x="82.9182%" y="581" width="0.0592%" height="15" fill="rgb(248,74,46)" fg:x="42008" fg:w="30"/><text x="83.1682%" y="591.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="82.9636%" y="565" width="0.0138%" height="15" fill="rgb(243,79,5)" fg:x="42031" fg:w="7"/><text x="83.2136%" y="575.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (304 samples, 0.60%)</title><rect x="82.3971%" y="741" width="0.6001%" height="15" fill="rgb(213,148,1)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="751.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (304 samples, 0.60%)</title><rect x="82.3971%" y="725" width="0.6001%" height="15" fill="rgb(221,30,0)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="735.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (304 samples, 0.60%)</title><rect x="82.3971%" y="709" width="0.6001%" height="15" fill="rgb(207,85,29)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="719.50"></text></g><g><title>__glx_Main (304 samples, 0.60%)</title><rect x="82.3971%" y="693" width="0.6001%" height="15" fill="rgb(239,31,46)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (304 samples, 0.60%)</title><rect x="82.3971%" y="677" width="0.6001%" height="15" fill="rgb(219,6,1)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (304 samples, 0.60%)</title><rect x="82.3971%" y="661" width="0.6001%" height="15" fill="rgb(229,90,29)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (304 samples, 0.60%)</title><rect x="82.3971%" y="645" width="0.6001%" height="15" fill="rgb(242,201,42)" fg:x="41744" fg:w="304"/><text x="82.6471%" y="655.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (292 samples, 0.58%)</title><rect x="82.4207%" y="629" width="0.5764%" height="15" fill="rgb(243,80,54)" fg:x="41756" fg:w="292"/><text x="82.6707%" y="639.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (10 samples, 0.02%)</title><rect x="82.9774%" y="613" width="0.0197%" height="15" fill="rgb(223,166,15)" fg:x="42038" fg:w="10"/><text x="83.2274%" y="623.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (10 samples, 0.02%)</title><rect x="82.9774%" y="597" width="0.0197%" height="15" fill="rgb(238,78,27)" fg:x="42038" fg:w="10"/><text x="83.2274%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (572 samples, 1.13%)</title><rect x="81.8760%" y="853" width="1.1291%" height="15" fill="rgb(235,28,43)" fg:x="41480" fg:w="572"/><text x="82.1260%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (343 samples, 0.68%)</title><rect x="82.3280%" y="837" width="0.6770%" height="15" fill="rgb(240,210,28)" fg:x="41709" fg:w="343"/><text x="82.5780%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (343 samples, 0.68%)</title><rect x="82.3280%" y="821" width="0.6770%" height="15" fill="rgb(253,6,46)" fg:x="41709" fg:w="343"/><text x="82.5780%" y="831.50"></text></g><g><title>bevy_render::renderer::render_system (343 samples, 0.68%)</title><rect x="82.3280%" y="805" width="0.6770%" height="15" fill="rgb(250,159,47)" fg:x="41709" fg:w="343"/><text x="82.5780%" y="815.50"></text></g><g><title>wgpu::SurfaceTexture::present (308 samples, 0.61%)</title><rect x="82.3971%" y="789" width="0.6080%" height="15" fill="rgb(216,139,2)" fg:x="41744" fg:w="308"/><text x="82.6471%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (308 samples, 0.61%)</title><rect x="82.3971%" y="773" width="0.6080%" height="15" fill="rgb(221,124,44)" fg:x="41744" fg:w="308"/><text x="82.6471%" y="783.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (308 samples, 0.61%)</title><rect x="82.3971%" y="757" width="0.6080%" height="15" fill="rgb(205,37,22)" fg:x="41744" fg:w="308"/><text x="82.6471%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.03%)</title><rect x="83.0090%" y="789" width="0.0257%" height="15" fill="rgb(250,55,8)" fg:x="42054" fg:w="13"/><text x="83.2590%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (17 samples, 0.03%)</title><rect x="83.0050%" y="805" width="0.0336%" height="15" fill="rgb(215,83,48)" fg:x="42052" fg:w="17"/><text x="83.2550%" y="815.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (19 samples, 0.04%)</title><rect x="83.0386%" y="805" width="0.0375%" height="15" fill="rgb(253,2,32)" fg:x="42069" fg:w="19"/><text x="83.2886%" y="815.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (19 samples, 0.04%)</title><rect x="83.0386%" y="789" width="0.0375%" height="15" fill="rgb(236,67,28)" fg:x="42069" fg:w="19"/><text x="83.2886%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="83.0840%" y="709" width="0.0178%" height="15" fill="rgb(252,55,15)" fg:x="42092" fg:w="9"/><text x="83.3340%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="83.0879%" y="693" width="0.0138%" height="15" fill="rgb(243,173,17)" fg:x="42094" fg:w="7"/><text x="83.3379%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="83.0879%" y="677" width="0.0138%" height="15" fill="rgb(215,212,13)" fg:x="42094" fg:w="7"/><text x="83.3379%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="83.1195%" y="693" width="0.0138%" height="15" fill="rgb(253,176,6)" fg:x="42110" fg:w="7"/><text x="83.3695%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.01%)</title><rect x="83.1195%" y="677" width="0.0138%" height="15" fill="rgb(236,105,26)" fg:x="42110" fg:w="7"/><text x="83.3695%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.01%)</title><rect x="83.1195%" y="661" width="0.0138%" height="15" fill="rgb(239,226,32)" fg:x="42110" fg:w="7"/><text x="83.3695%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.03%)</title><rect x="83.1471%" y="661" width="0.0276%" height="15" fill="rgb(236,104,51)" fg:x="42124" fg:w="14"/><text x="83.3971%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.03%)</title><rect x="83.1471%" y="645" width="0.0276%" height="15" fill="rgb(220,172,33)" fg:x="42124" fg:w="14"/><text x="83.3971%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.03%)</title><rect x="83.1471%" y="677" width="0.0296%" height="15" fill="rgb(224,182,25)" fg:x="42124" fg:w="15"/><text x="83.3971%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (6 samples, 0.01%)</title><rect x="83.1767%" y="677" width="0.0118%" height="15" fill="rgb(236,184,24)" fg:x="42139" fg:w="6"/><text x="83.4267%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="83.1767%" y="661" width="0.0118%" height="15" fill="rgb(241,221,14)" fg:x="42139" fg:w="6"/><text x="83.4267%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="83.1767%" y="645" width="0.0118%" height="15" fill="rgb(227,146,5)" fg:x="42139" fg:w="6"/><text x="83.4267%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.01%)</title><rect x="83.1886%" y="629" width="0.0118%" height="15" fill="rgb(214,15,23)" fg:x="42145" fg:w="6"/><text x="83.4386%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="83.1886%" y="613" width="0.0118%" height="15" fill="rgb(233,157,31)" fg:x="42145" fg:w="6"/><text x="83.4386%" y="623.50"></text></g><g><title>async_executor::State::notify (7 samples, 0.01%)</title><rect x="83.1886%" y="645" width="0.0138%" height="15" fill="rgb(211,27,52)" fg:x="42145" fg:w="7"/><text x="83.4386%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (18 samples, 0.04%)</title><rect x="83.1886%" y="677" width="0.0355%" height="15" fill="rgb(212,223,15)" fg:x="42145" fg:w="18"/><text x="83.4386%" y="687.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (18 samples, 0.04%)</title><rect x="83.1886%" y="661" width="0.0355%" height="15" fill="rgb(254,211,0)" fg:x="42145" fg:w="18"/><text x="83.4386%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (11 samples, 0.02%)</title><rect x="83.2024%" y="645" width="0.0217%" height="15" fill="rgb(205,43,38)" fg:x="42152" fg:w="11"/><text x="83.4524%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.02%)</title><rect x="83.2024%" y="629" width="0.0217%" height="15" fill="rgb(242,206,46)" fg:x="42152" fg:w="11"/><text x="83.4524%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.01%)</title><rect x="83.2123%" y="613" width="0.0118%" height="15" fill="rgb(220,221,12)" fg:x="42157" fg:w="6"/><text x="83.4623%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.01%)</title><rect x="83.2123%" y="597" width="0.0118%" height="15" fill="rgb(217,156,35)" fg:x="42157" fg:w="6"/><text x="83.4623%" y="607.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="83.2281%" y="629" width="0.0138%" height="15" fill="rgb(207,181,49)" fg:x="42165" fg:w="7"/><text x="83.4781%" y="639.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="83.2281%" y="645" width="0.0158%" height="15" fill="rgb(235,103,47)" fg:x="42165" fg:w="8"/><text x="83.4781%" y="655.50"></text></g><g><title>async_task::runnable::spawn_unchecked (14 samples, 0.03%)</title><rect x="83.2261%" y="677" width="0.0276%" height="15" fill="rgb(222,63,28)" fg:x="42164" fg:w="14"/><text x="83.4761%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (13 samples, 0.03%)</title><rect x="83.2281%" y="661" width="0.0257%" height="15" fill="rgb(244,137,21)" fg:x="42165" fg:w="13"/><text x="83.4781%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (77 samples, 0.15%)</title><rect x="83.1175%" y="709" width="0.1520%" height="15" fill="rgb(228,35,27)" fg:x="42109" fg:w="77"/><text x="83.3675%" y="719.50"></text></g><g><title>async_executor::Executor::spawn (69 samples, 0.14%)</title><rect x="83.1333%" y="693" width="0.1362%" height="15" fill="rgb(226,191,41)" fg:x="42117" fg:w="69"/><text x="83.3833%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (96 samples, 0.19%)</title><rect x="83.0840%" y="725" width="0.1895%" height="15" fill="rgb(210,154,3)" fg:x="42092" fg:w="96"/><text x="83.3340%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (97 samples, 0.19%)</title><rect x="83.0840%" y="741" width="0.1915%" height="15" fill="rgb(216,60,49)" fg:x="42092" fg:w="97"/><text x="83.3340%" y="751.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.02%)</title><rect x="83.2814%" y="725" width="0.0217%" height="15" fill="rgb(226,17,20)" fg:x="42192" fg:w="11"/><text x="83.5314%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (11 samples, 0.02%)</title><rect x="83.2814%" y="709" width="0.0217%" height="15" fill="rgb(206,115,35)" fg:x="42192" fg:w="11"/><text x="83.5314%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="83.2814%" y="693" width="0.0217%" height="15" fill="rgb(227,88,1)" fg:x="42192" fg:w="11"/><text x="83.5314%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (7 samples, 0.01%)</title><rect x="83.3366%" y="581" width="0.0138%" height="15" fill="rgb(230,222,24)" fg:x="42220" fg:w="7"/><text x="83.5866%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (7 samples, 0.01%)</title><rect x="83.3366%" y="565" width="0.0138%" height="15" fill="rgb(214,124,32)" fg:x="42220" fg:w="7"/><text x="83.5866%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.01%)</title><rect x="83.3366%" y="549" width="0.0138%" height="15" fill="rgb(240,41,36)" fg:x="42220" fg:w="7"/><text x="83.5866%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="83.3366%" y="533" width="0.0138%" height="15" fill="rgb(221,17,52)" fg:x="42220" fg:w="7"/><text x="83.5866%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (18 samples, 0.04%)</title><rect x="83.3287%" y="613" width="0.0355%" height="15" fill="rgb(252,70,16)" fg:x="42216" fg:w="18"/><text x="83.5787%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (15 samples, 0.03%)</title><rect x="83.3346%" y="597" width="0.0296%" height="15" fill="rgb(250,177,4)" fg:x="42219" fg:w="15"/><text x="83.5846%" y="607.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (20 samples, 0.04%)</title><rect x="83.3287%" y="629" width="0.0395%" height="15" fill="rgb(240,188,47)" fg:x="42216" fg:w="20"/><text x="83.5787%" y="639.50"></text></g><g><title>event_listener::Event::listen (12 samples, 0.02%)</title><rect x="83.3682%" y="629" width="0.0237%" height="15" fill="rgb(215,92,12)" fg:x="42236" fg:w="12"/><text x="83.6182%" y="639.50"></text></g><g><title>core::hint::spin_loop (10 samples, 0.02%)</title><rect x="83.4037%" y="517" width="0.0197%" height="15" fill="rgb(242,110,29)" fg:x="42254" fg:w="10"/><text x="83.6537%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (10 samples, 0.02%)</title><rect x="83.4037%" y="501" width="0.0197%" height="15" fill="rgb(208,211,26)" fg:x="42254" fg:w="10"/><text x="83.6537%" y="511.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.03%)</title><rect x="83.3939%" y="613" width="0.0316%" height="15" fill="rgb(244,147,6)" fg:x="42249" fg:w="16"/><text x="83.6439%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.03%)</title><rect x="83.3939%" y="597" width="0.0316%" height="15" fill="rgb(211,130,42)" fg:x="42249" fg:w="16"/><text x="83.6439%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.03%)</title><rect x="83.3939%" y="581" width="0.0316%" height="15" fill="rgb(220,63,1)" fg:x="42249" fg:w="16"/><text x="83.6439%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.03%)</title><rect x="83.3939%" y="565" width="0.0316%" height="15" fill="rgb(241,212,30)" fg:x="42249" fg:w="16"/><text x="83.6439%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (15 samples, 0.03%)</title><rect x="83.3958%" y="549" width="0.0296%" height="15" fill="rgb(233,153,17)" fg:x="42250" fg:w="15"/><text x="83.6458%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (11 samples, 0.02%)</title><rect x="83.4037%" y="533" width="0.0217%" height="15" fill="rgb(236,3,10)" fg:x="42254" fg:w="11"/><text x="83.6537%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.11%)</title><rect x="83.3208%" y="645" width="0.1066%" height="15" fill="rgb(232,41,21)" fg:x="42212" fg:w="54"/><text x="83.5708%" y="655.50"></text></g><g><title>event_listener::Event::notify (18 samples, 0.04%)</title><rect x="83.3919%" y="629" width="0.0355%" height="15" fill="rgb(206,63,51)" fg:x="42248" fg:w="18"/><text x="83.6419%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.02%)</title><rect x="83.4452%" y="549" width="0.0217%" height="15" fill="rgb(250,214,3)" fg:x="42275" fg:w="11"/><text x="83.6952%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.02%)</title><rect x="83.4452%" y="533" width="0.0217%" height="15" fill="rgb(254,89,27)" fg:x="42275" fg:w="11"/><text x="83.6952%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="83.4452%" y="517" width="0.0217%" height="15" fill="rgb(249,41,14)" fg:x="42275" fg:w="11"/><text x="83.6952%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (18 samples, 0.04%)</title><rect x="83.4393%" y="581" width="0.0355%" height="15" fill="rgb(221,196,51)" fg:x="42272" fg:w="18"/><text x="83.6893%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (15 samples, 0.03%)</title><rect x="83.4452%" y="565" width="0.0296%" height="15" fill="rgb(214,116,26)" fg:x="42275" fg:w="15"/><text x="83.6952%" y="575.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.01%)</title><rect x="83.4827%" y="565" width="0.0118%" height="15" fill="rgb(236,67,7)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="83.4827%" y="549" width="0.0118%" height="15" fill="rgb(253,179,32)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="83.4827%" y="533" width="0.0118%" height="15" fill="rgb(218,33,15)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="83.4827%" y="517" width="0.0118%" height="15" fill="rgb(217,202,41)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="83.4827%" y="501" width="0.0118%" height="15" fill="rgb(234,133,5)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="83.4827%" y="485" width="0.0118%" height="15" fill="rgb(240,47,40)" fg:x="42294" fg:w="6"/><text x="83.7327%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.02%)</title><rect x="83.5083%" y="453" width="0.0158%" height="15" fill="rgb(234,166,26)" fg:x="42307" fg:w="8"/><text x="83.7583%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.02%)</title><rect x="83.5083%" y="437" width="0.0158%" height="15" fill="rgb(244,125,51)" fg:x="42307" fg:w="8"/><text x="83.7583%" y="447.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (9 samples, 0.02%)</title><rect x="83.5083%" y="501" width="0.0178%" height="15" fill="rgb(229,171,11)" fg:x="42307" fg:w="9"/><text x="83.7583%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (9 samples, 0.02%)</title><rect x="83.5083%" y="485" width="0.0178%" height="15" fill="rgb(224,38,45)" fg:x="42307" fg:w="9"/><text x="83.7583%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (9 samples, 0.02%)</title><rect x="83.5083%" y="469" width="0.0178%" height="15" fill="rgb(237,27,7)" fg:x="42307" fg:w="9"/><text x="83.7583%" y="479.50"></text></g><g><title>event_listener::List::notify (21 samples, 0.04%)</title><rect x="83.4945%" y="565" width="0.0415%" height="15" fill="rgb(216,52,7)" fg:x="42300" fg:w="21"/><text x="83.7445%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (21 samples, 0.04%)</title><rect x="83.4945%" y="549" width="0.0415%" height="15" fill="rgb(243,11,11)" fg:x="42300" fg:w="21"/><text x="83.7445%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (21 samples, 0.04%)</title><rect x="83.4945%" y="533" width="0.0415%" height="15" fill="rgb(253,167,20)" fg:x="42300" fg:w="21"/><text x="83.7445%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (15 samples, 0.03%)</title><rect x="83.5064%" y="517" width="0.0296%" height="15" fill="rgb(215,207,5)" fg:x="42306" fg:w="15"/><text x="83.7564%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.10%)</title><rect x="83.4393%" y="613" width="0.1046%" height="15" fill="rgb(252,127,31)" fg:x="42272" fg:w="53"/><text x="83.6893%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (53 samples, 0.10%)</title><rect x="83.4393%" y="597" width="0.1046%" height="15" fill="rgb(209,106,27)" fg:x="42272" fg:w="53"/><text x="83.6893%" y="607.50"></text></g><g><title>event_listener::Event::notify (35 samples, 0.07%)</title><rect x="83.4748%" y="581" width="0.0691%" height="15" fill="rgb(214,220,18)" fg:x="42290" fg:w="35"/><text x="83.7248%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (6 samples, 0.01%)</title><rect x="83.5459%" y="613" width="0.0118%" height="15" fill="rgb(237,89,12)" fg:x="42326" fg:w="6"/><text x="83.7959%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.14%)</title><rect x="83.4274%" y="645" width="0.1382%" height="15" fill="rgb(209,167,36)" fg:x="42266" fg:w="70"/><text x="83.6774%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (69 samples, 0.14%)</title><rect x="83.4294%" y="629" width="0.1362%" height="15" fill="rgb(243,45,22)" fg:x="42267" fg:w="69"/><text x="83.6794%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (10 samples, 0.02%)</title><rect x="83.5656%" y="629" width="0.0197%" height="15" fill="rgb(239,2,46)" fg:x="42336" fg:w="10"/><text x="83.8156%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (9 samples, 0.02%)</title><rect x="83.5676%" y="613" width="0.0178%" height="15" fill="rgb(241,101,0)" fg:x="42337" fg:w="9"/><text x="83.8176%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (11 samples, 0.02%)</title><rect x="83.5656%" y="645" width="0.0217%" height="15" fill="rgb(244,34,31)" fg:x="42336" fg:w="11"/><text x="83.8156%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (15 samples, 0.03%)</title><rect x="83.5952%" y="645" width="0.0296%" height="15" fill="rgb(248,23,22)" fg:x="42351" fg:w="15"/><text x="83.8452%" y="655.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (10 samples, 0.02%)</title><rect x="83.6051%" y="629" width="0.0197%" height="15" fill="rgb(218,27,48)" fg:x="42356" fg:w="10"/><text x="83.8551%" y="639.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (10 samples, 0.02%)</title><rect x="83.6051%" y="613" width="0.0197%" height="15" fill="rgb(232,78,1)" fg:x="42356" fg:w="10"/><text x="83.8551%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (160 samples, 0.32%)</title><rect x="83.3208%" y="661" width="0.3158%" height="15" fill="rgb(233,169,12)" fg:x="42212" fg:w="160"/><text x="83.5708%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="83.6386%" y="629" width="0.0178%" height="15" fill="rgb(225,222,54)" fg:x="42373" fg:w="9"/><text x="83.8886%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (8 samples, 0.02%)</title><rect x="83.6564%" y="613" width="0.0158%" height="15" fill="rgb(245,126,29)" fg:x="42382" fg:w="8"/><text x="83.9064%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (7 samples, 0.01%)</title><rect x="83.6584%" y="597" width="0.0138%" height="15" fill="rgb(241,63,48)" fg:x="42383" fg:w="7"/><text x="83.9084%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (7 samples, 0.01%)</title><rect x="83.6584%" y="581" width="0.0138%" height="15" fill="rgb(235,126,38)" fg:x="42383" fg:w="7"/><text x="83.9084%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.01%)</title><rect x="83.6584%" y="565" width="0.0138%" height="15" fill="rgb(232,96,49)" fg:x="42383" fg:w="7"/><text x="83.9084%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="83.6584%" y="549" width="0.0138%" height="15" fill="rgb(211,146,40)" fg:x="42383" fg:w="7"/><text x="83.9084%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (10 samples, 0.02%)</title><rect x="83.6564%" y="629" width="0.0197%" height="15" fill="rgb(247,93,44)" fg:x="42382" fg:w="10"/><text x="83.9064%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="83.6367%" y="645" width="0.0533%" height="15" fill="rgb(251,41,49)" fg:x="42372" fg:w="27"/><text x="83.8867%" y="655.50"></text></g><g><title>event_listener::Event::listen (7 samples, 0.01%)</title><rect x="83.6761%" y="629" width="0.0138%" height="15" fill="rgb(218,155,12)" fg:x="42392" fg:w="7"/><text x="83.9261%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="83.6899%" y="613" width="0.0138%" height="15" fill="rgb(221,161,30)" fg:x="42399" fg:w="7"/><text x="83.9399%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="83.6919%" y="597" width="0.0118%" height="15" fill="rgb(221,179,11)" fg:x="42400" fg:w="6"/><text x="83.9419%" y="607.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.01%)</title><rect x="83.7077%" y="597" width="0.0118%" height="15" fill="rgb(224,170,48)" fg:x="42408" fg:w="6"/><text x="83.9577%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="83.7077%" y="581" width="0.0118%" height="15" fill="rgb(223,117,5)" fg:x="42408" fg:w="6"/><text x="83.9577%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (23 samples, 0.05%)</title><rect x="83.6899%" y="629" width="0.0454%" height="15" fill="rgb(209,52,20)" fg:x="42399" fg:w="23"/><text x="83.9399%" y="639.50"></text></g><g><title>event_listener::Event::notify (16 samples, 0.03%)</title><rect x="83.7038%" y="613" width="0.0316%" height="15" fill="rgb(209,19,41)" fg:x="42406" fg:w="16"/><text x="83.9538%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.05%)</title><rect x="83.6899%" y="645" width="0.0513%" height="15" fill="rgb(210,177,12)" fg:x="42399" fg:w="26"/><text x="83.9399%" y="655.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="83.7452%" y="485" width="0.0296%" height="15" fill="rgb(211,159,37)" fg:x="42427" fg:w="15"/><text x="83.9952%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="83.7452%" y="469" width="0.0296%" height="15" fill="rgb(209,20,2)" fg:x="42427" fg:w="15"/><text x="83.9952%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.02%)</title><rect x="83.7531%" y="453" width="0.0217%" height="15" fill="rgb(244,3,46)" fg:x="42431" fg:w="11"/><text x="84.0031%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.02%)</title><rect x="83.7531%" y="437" width="0.0217%" height="15" fill="rgb(220,94,38)" fg:x="42431" fg:w="11"/><text x="84.0031%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.02%)</title><rect x="83.7531%" y="421" width="0.0217%" height="15" fill="rgb(253,14,31)" fg:x="42431" fg:w="11"/><text x="84.0031%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10 samples, 0.02%)</title><rect x="83.7551%" y="405" width="0.0197%" height="15" fill="rgb(234,176,13)" fg:x="42432" fg:w="10"/><text x="84.0051%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="83.7571%" y="389" width="0.0178%" height="15" fill="rgb(218,62,25)" fg:x="42433" fg:w="9"/><text x="84.0071%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="83.7630%" y="373" width="0.0118%" height="15" fill="rgb(216,124,40)" fg:x="42436" fg:w="6"/><text x="84.0130%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.05%)</title><rect x="83.7452%" y="501" width="0.0533%" height="15" fill="rgb(228,170,12)" fg:x="42427" fg:w="27"/><text x="83.9952%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.02%)</title><rect x="83.7807%" y="485" width="0.0178%" height="15" fill="rgb(231,226,5)" fg:x="42445" fg:w="9"/><text x="84.0307%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="83.7452%" y="549" width="0.0572%" height="15" fill="rgb(237,122,22)" fg:x="42427" fg:w="29"/><text x="83.9952%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.06%)</title><rect x="83.7452%" y="533" width="0.0572%" height="15" fill="rgb(209,185,25)" fg:x="42427" fg:w="29"/><text x="83.9952%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.06%)</title><rect x="83.7452%" y="517" width="0.0572%" height="15" fill="rgb(228,200,32)" fg:x="42427" fg:w="29"/><text x="83.9952%" y="527.50"></text></g><g><title>bevy_pbr::render::light::extract_clusters (30 samples, 0.06%)</title><rect x="83.7452%" y="565" width="0.0592%" height="15" fill="rgb(217,140,10)" fg:x="42427" fg:w="30"/><text x="83.9952%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (40 samples, 0.08%)</title><rect x="83.7413%" y="629" width="0.0790%" height="15" fill="rgb(253,17,24)" fg:x="42425" fg:w="40"/><text x="83.9913%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (38 samples, 0.08%)</title><rect x="83.7452%" y="613" width="0.0750%" height="15" fill="rgb(212,61,6)" fg:x="42427" fg:w="38"/><text x="83.9952%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (38 samples, 0.08%)</title><rect x="83.7452%" y="597" width="0.0750%" height="15" fill="rgb(205,14,25)" fg:x="42427" fg:w="38"/><text x="83.9952%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (38 samples, 0.08%)</title><rect x="83.7452%" y="581" width="0.0750%" height="15" fill="rgb(232,69,41)" fg:x="42427" fg:w="38"/><text x="83.9952%" y="591.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::InstanceMaterialDataBuffer as bevy_render::render_component::ExtractComponent&gt;::extract_component (12 samples, 0.02%)</title><rect x="83.8281%" y="549" width="0.0237%" height="15" fill="rgb(241,106,47)" fg:x="42469" fg:w="12"/><text x="84.0781%" y="559.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="83.8281%" y="533" width="0.0237%" height="15" fill="rgb(210,213,53)" fg:x="42469" fg:w="12"/><text x="84.0781%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="83.8281%" y="517" width="0.0237%" height="15" fill="rgb(253,175,27)" fg:x="42469" fg:w="12"/><text x="84.0781%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="83.8281%" y="501" width="0.0237%" height="15" fill="rgb(211,171,24)" fg:x="42469" fg:w="12"/><text x="84.0781%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="83.8281%" y="485" width="0.0237%" height="15" fill="rgb(229,80,7)" fg:x="42469" fg:w="12"/><text x="84.0781%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="83.8518%" y="549" width="0.0158%" height="15" fill="rgb(212,46,39)" fg:x="42481" fg:w="8"/><text x="84.1018%" y="559.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="83.8538%" y="533" width="0.0138%" height="15" fill="rgb(240,80,45)" fg:x="42482" fg:w="7"/><text x="84.1038%" y="543.50"></text></g><g><title>bevy_render::render_component::extract_components (25 samples, 0.05%)</title><rect x="83.8261%" y="565" width="0.0493%" height="15" fill="rgb(253,177,40)" fg:x="42468" fg:w="25"/><text x="84.0761%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (29 samples, 0.06%)</title><rect x="83.8202%" y="629" width="0.0572%" height="15" fill="rgb(249,200,15)" fg:x="42465" fg:w="29"/><text x="84.0702%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (26 samples, 0.05%)</title><rect x="83.8261%" y="613" width="0.0513%" height="15" fill="rgb(217,78,26)" fg:x="42468" fg:w="26"/><text x="84.0761%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.05%)</title><rect x="83.8261%" y="597" width="0.0513%" height="15" fill="rgb(254,151,32)" fg:x="42468" fg:w="26"/><text x="84.0761%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (26 samples, 0.05%)</title><rect x="83.8261%" y="581" width="0.0513%" height="15" fill="rgb(226,165,27)" fg:x="42468" fg:w="26"/><text x="84.0761%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (77 samples, 0.15%)</title><rect x="83.7413%" y="645" width="0.1520%" height="15" fill="rgb(250,206,4)" fg:x="42425" fg:w="77"/><text x="83.9913%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.01%)</title><rect x="83.9011%" y="581" width="0.0138%" height="15" fill="rgb(231,229,27)" fg:x="42506" fg:w="7"/><text x="84.1511%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (7 samples, 0.01%)</title><rect x="83.9011%" y="565" width="0.0138%" height="15" fill="rgb(239,217,8)" fg:x="42506" fg:w="7"/><text x="84.1511%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="83.9011%" y="549" width="0.0138%" height="15" fill="rgb(225,204,27)" fg:x="42506" fg:w="7"/><text x="84.1511%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (6 samples, 0.01%)</title><rect x="83.9031%" y="533" width="0.0118%" height="15" fill="rgb(230,56,32)" fg:x="42507" fg:w="6"/><text x="84.1531%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="83.9031%" y="517" width="0.0118%" height="15" fill="rgb(222,56,27)" fg:x="42507" fg:w="6"/><text x="84.1531%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.01%)</title><rect x="83.9031%" y="501" width="0.0118%" height="15" fill="rgb(253,108,27)" fg:x="42507" fg:w="6"/><text x="84.1531%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="83.9031%" y="485" width="0.0118%" height="15" fill="rgb(212,87,36)" fg:x="42507" fg:w="6"/><text x="84.1531%" y="495.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.01%)</title><rect x="83.9150%" y="581" width="0.0118%" height="15" fill="rgb(247,82,36)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="83.9150%" y="565" width="0.0118%" height="15" fill="rgb(222,143,9)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="83.9150%" y="549" width="0.0118%" height="15" fill="rgb(238,162,48)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="83.9150%" y="533" width="0.0118%" height="15" fill="rgb(221,59,43)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="83.9150%" y="517" width="0.0118%" height="15" fill="rgb(205,166,41)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="83.9150%" y="501" width="0.0118%" height="15" fill="rgb(241,186,40)" fg:x="42513" fg:w="6"/><text x="84.1650%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="83.9011%" y="597" width="0.0296%" height="15" fill="rgb(216,119,35)" fg:x="42506" fg:w="15"/><text x="84.1511%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (16 samples, 0.03%)</title><rect x="83.9011%" y="645" width="0.0316%" height="15" fill="rgb(208,68,38)" fg:x="42506" fg:w="16"/><text x="84.1511%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (16 samples, 0.03%)</title><rect x="83.9011%" y="629" width="0.0316%" height="15" fill="rgb(217,113,1)" fg:x="42506" fg:w="16"/><text x="84.1511%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (16 samples, 0.03%)</title><rect x="83.9011%" y="613" width="0.0316%" height="15" fill="rgb(242,153,3)" fg:x="42506" fg:w="16"/><text x="84.1511%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (314 samples, 0.62%)</title><rect x="83.3208%" y="677" width="0.6198%" height="15" fill="rgb(229,76,35)" fg:x="42212" fg:w="314"/><text x="83.5708%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (154 samples, 0.30%)</title><rect x="83.6367%" y="661" width="0.3040%" height="15" fill="rgb(229,125,34)" fg:x="42372" fg:w="154"/><text x="83.8867%" y="671.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="83.9426%" y="661" width="0.0276%" height="15" fill="rgb(238,179,36)" fg:x="42527" fg:w="14"/><text x="84.1926%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (14 samples, 0.03%)</title><rect x="83.9426%" y="645" width="0.0276%" height="15" fill="rgb(244,183,19)" fg:x="42527" fg:w="14"/><text x="84.1926%" y="655.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (335 samples, 0.66%)</title><rect x="83.3169%" y="693" width="0.6612%" height="15" fill="rgb(216,85,49)" fg:x="42210" fg:w="335"/><text x="83.5669%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (18 samples, 0.04%)</title><rect x="83.9426%" y="677" width="0.0355%" height="15" fill="rgb(208,161,47)" fg:x="42527" fg:w="18"/><text x="84.1926%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.02%)</title><rect x="83.9860%" y="597" width="0.0197%" height="15" fill="rgb(233,210,18)" fg:x="42549" fg:w="10"/><text x="84.2360%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="83.9860%" y="581" width="0.0197%" height="15" fill="rgb(205,104,42)" fg:x="42549" fg:w="10"/><text x="84.2360%" y="591.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="83.9801%" y="629" width="0.0336%" height="15" fill="rgb(248,90,43)" fg:x="42546" fg:w="17"/><text x="84.2301%" y="639.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (17 samples, 0.03%)</title><rect x="83.9801%" y="613" width="0.0336%" height="15" fill="rgb(206,198,11)" fg:x="42546" fg:w="17"/><text x="84.2301%" y="623.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="84.0137%" y="613" width="0.0237%" height="15" fill="rgb(239,165,27)" fg:x="42563" fg:w="12"/><text x="84.2637%" y="623.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (9 samples, 0.02%)</title><rect x="84.0196%" y="597" width="0.0178%" height="15" fill="rgb(246,44,32)" fg:x="42566" fg:w="9"/><text x="84.2696%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="84.0196%" y="581" width="0.0178%" height="15" fill="rgb(252,65,42)" fg:x="42566" fg:w="9"/><text x="84.2696%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="84.0196%" y="565" width="0.0178%" height="15" fill="rgb(246,197,18)" fg:x="42566" fg:w="9"/><text x="84.2696%" y="575.50"></text></g><g><title>__free (12 samples, 0.02%)</title><rect x="84.0373%" y="613" width="0.0237%" height="15" fill="rgb(216,192,4)" fg:x="42575" fg:w="12"/><text x="84.2873%" y="623.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="84.0393%" y="597" width="0.0217%" height="15" fill="rgb(208,117,10)" fg:x="42576" fg:w="11"/><text x="84.2893%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (46 samples, 0.09%)</title><rect x="83.9781%" y="677" width="0.0908%" height="15" fill="rgb(240,61,47)" fg:x="42545" fg:w="46"/><text x="84.2281%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.09%)</title><rect x="83.9781%" y="661" width="0.0908%" height="15" fill="rgb(228,178,21)" fg:x="42545" fg:w="46"/><text x="84.2281%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (46 samples, 0.09%)</title><rect x="83.9781%" y="645" width="0.0908%" height="15" fill="rgb(219,96,54)" fg:x="42545" fg:w="46"/><text x="84.2281%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (28 samples, 0.06%)</title><rect x="84.0137%" y="629" width="0.0553%" height="15" fill="rgb(250,177,24)" fg:x="42563" fg:w="28"/><text x="84.2637%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (383 samples, 0.76%)</title><rect x="83.3149%" y="709" width="0.7560%" height="15" fill="rgb(242,154,46)" fg:x="42209" fg:w="383"/><text x="83.5649%" y="719.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (47 samples, 0.09%)</title><rect x="83.9781%" y="693" width="0.0928%" height="15" fill="rgb(226,176,29)" fg:x="42545" fg:w="47"/><text x="84.2281%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (7 samples, 0.01%)</title><rect x="84.0729%" y="709" width="0.0138%" height="15" fill="rgb(226,29,2)" fg:x="42593" fg:w="7"/><text x="84.3229%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="84.0729%" y="693" width="0.0138%" height="15" fill="rgb(237,104,14)" fg:x="42593" fg:w="7"/><text x="84.3229%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="84.0729%" y="677" width="0.0138%" height="15" fill="rgb(245,207,31)" fg:x="42593" fg:w="7"/><text x="84.3229%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="84.0906%" y="709" width="0.0178%" height="15" fill="rgb(229,211,45)" fg:x="42602" fg:w="9"/><text x="84.3406%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="84.0906%" y="693" width="0.0178%" height="15" fill="rgb(229,113,15)" fg:x="42602" fg:w="9"/><text x="84.3406%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (409 samples, 0.81%)</title><rect x="83.3031%" y="725" width="0.8073%" height="15" fill="rgb(237,147,15)" fg:x="42203" fg:w="409"/><text x="83.5531%" y="735.50"></text></g><g><title>concurrent_queue::full_fence (43 samples, 0.08%)</title><rect x="84.1439%" y="693" width="0.0849%" height="15" fill="rgb(244,120,12)" fg:x="42629" fg:w="43"/><text x="84.3939%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (43 samples, 0.08%)</title><rect x="84.1439%" y="677" width="0.0849%" height="15" fill="rgb(205,120,12)" fg:x="42629" fg:w="43"/><text x="84.3939%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.08%)</title><rect x="84.1439%" y="661" width="0.0849%" height="15" fill="rgb(231,26,45)" fg:x="42629" fg:w="43"/><text x="84.3939%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.08%)</title><rect x="84.1439%" y="645" width="0.0849%" height="15" fill="rgb(246,98,1)" fg:x="42629" fg:w="43"/><text x="84.3939%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (10 samples, 0.02%)</title><rect x="84.2387%" y="693" width="0.0197%" height="15" fill="rgb(207,68,45)" fg:x="42677" fg:w="10"/><text x="84.4887%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="84.2387%" y="677" width="0.0197%" height="15" fill="rgb(231,27,38)" fg:x="42677" fg:w="10"/><text x="84.4887%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.02%)</title><rect x="84.2584%" y="693" width="0.0158%" height="15" fill="rgb(214,223,3)" fg:x="42687" fg:w="8"/><text x="84.5084%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.02%)</title><rect x="84.2584%" y="677" width="0.0158%" height="15" fill="rgb(228,195,46)" fg:x="42687" fg:w="8"/><text x="84.5084%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (518 samples, 1.02%)</title><rect x="83.2754%" y="741" width="1.0225%" height="15" fill="rgb(231,100,42)" fg:x="42189" fg:w="518"/><text x="83.5254%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (95 samples, 0.19%)</title><rect x="84.1104%" y="725" width="0.1875%" height="15" fill="rgb(236,53,4)" fg:x="42612" fg:w="95"/><text x="84.3604%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (86 samples, 0.17%)</title><rect x="84.1281%" y="709" width="0.1698%" height="15" fill="rgb(230,152,12)" fg:x="42621" fg:w="86"/><text x="84.3781%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="84.2742%" y="693" width="0.0237%" height="15" fill="rgb(226,101,19)" fg:x="42695" fg:w="12"/><text x="84.5242%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="84.2742%" y="677" width="0.0237%" height="15" fill="rgb(250,149,32)" fg:x="42695" fg:w="12"/><text x="84.5242%" y="687.50"></text></g><g><title>__tls_get_addr_slow (6 samples, 0.01%)</title><rect x="84.3295%" y="661" width="0.0118%" height="15" fill="rgb(232,178,12)" fg:x="42723" fg:w="6"/><text x="84.5795%" y="671.50"></text></g><g><title>__tls_get_addr (22 samples, 0.04%)</title><rect x="84.3255%" y="677" width="0.0434%" height="15" fill="rgb(246,151,17)" fg:x="42721" fg:w="22"/><text x="84.5755%" y="687.50"></text></g><g><title>update_get_addr (14 samples, 0.03%)</title><rect x="84.3413%" y="661" width="0.0276%" height="15" fill="rgb(252,17,51)" fg:x="42729" fg:w="14"/><text x="84.5913%" y="671.50"></text></g><g><title>_dl_update_slotinfo (11 samples, 0.02%)</title><rect x="84.3472%" y="645" width="0.0217%" height="15" fill="rgb(250,207,23)" fg:x="42732" fg:w="11"/><text x="84.5972%" y="655.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (35 samples, 0.07%)</title><rect x="84.3255%" y="693" width="0.0691%" height="15" fill="rgb(205,27,5)" fg:x="42721" fg:w="35"/><text x="84.5755%" y="703.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.02%)</title><rect x="84.3709%" y="677" width="0.0237%" height="15" fill="rgb(224,32,19)" fg:x="42744" fg:w="12"/><text x="84.6209%" y="687.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.02%)</title><rect x="84.3729%" y="661" width="0.0217%" height="15" fill="rgb(247,214,40)" fg:x="42745" fg:w="11"/><text x="84.6229%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.02%)</title><rect x="84.3729%" y="645" width="0.0217%" height="15" fill="rgb(239,199,17)" fg:x="42745" fg:w="11"/><text x="84.6229%" y="655.50"></text></g><g><title>__tls_get_addr (9 samples, 0.02%)</title><rect x="84.3769%" y="629" width="0.0178%" height="15" fill="rgb(251,159,9)" fg:x="42747" fg:w="9"/><text x="84.6269%" y="639.50"></text></g><g><title>update_get_addr (6 samples, 0.01%)</title><rect x="84.3828%" y="613" width="0.0118%" height="15" fill="rgb(225,78,32)" fg:x="42750" fg:w="6"/><text x="84.6328%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="84.4222%" y="565" width="0.0454%" height="15" fill="rgb(206,97,47)" fg:x="42770" fg:w="23"/><text x="84.6722%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (20 samples, 0.04%)</title><rect x="84.4282%" y="549" width="0.0395%" height="15" fill="rgb(227,107,4)" fg:x="42773" fg:w="20"/><text x="84.6782%" y="559.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="84.4282%" y="533" width="0.0395%" height="15" fill="rgb(241,146,50)" fg:x="42773" fg:w="20"/><text x="84.6782%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="84.4282%" y="517" width="0.0395%" height="15" fill="rgb(232,92,30)" fg:x="42773" fg:w="20"/><text x="84.6782%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.04%)</title><rect x="84.4282%" y="501" width="0.0395%" height="15" fill="rgb(222,0,40)" fg:x="42773" fg:w="20"/><text x="84.6782%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.04%)</title><rect x="84.4282%" y="485" width="0.0395%" height="15" fill="rgb(219,54,33)" fg:x="42773" fg:w="20"/><text x="84.6782%" y="495.50"></text></g><g><title>async_task::utils::abort_on_panic (43 samples, 0.08%)</title><rect x="84.4222%" y="597" width="0.0849%" height="15" fill="rgb(226,209,28)" fg:x="42770" fg:w="43"/><text x="84.6722%" y="607.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (43 samples, 0.08%)</title><rect x="84.4222%" y="581" width="0.0849%" height="15" fill="rgb(254,205,35)" fg:x="42770" fg:w="43"/><text x="84.6722%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (20 samples, 0.04%)</title><rect x="84.4676%" y="565" width="0.0395%" height="15" fill="rgb(230,159,3)" fg:x="42793" fg:w="20"/><text x="84.7176%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (18 samples, 0.04%)</title><rect x="84.4716%" y="549" width="0.0355%" height="15" fill="rgb(232,190,24)" fg:x="42795" fg:w="18"/><text x="84.7216%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="84.4716%" y="533" width="0.0355%" height="15" fill="rgb(217,227,44)" fg:x="42795" fg:w="18"/><text x="84.7216%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (18 samples, 0.04%)</title><rect x="84.4716%" y="517" width="0.0355%" height="15" fill="rgb(236,211,1)" fg:x="42795" fg:w="18"/><text x="84.7216%" y="527.50"></text></g><g><title>core::mem::drop (16 samples, 0.03%)</title><rect x="84.4755%" y="501" width="0.0316%" height="15" fill="rgb(250,127,46)" fg:x="42797" fg:w="16"/><text x="84.7255%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (16 samples, 0.03%)</title><rect x="84.4755%" y="485" width="0.0316%" height="15" fill="rgb(229,213,6)" fg:x="42797" fg:w="16"/><text x="84.7255%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="84.4755%" y="469" width="0.0316%" height="15" fill="rgb(237,15,36)" fg:x="42797" fg:w="16"/><text x="84.7255%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.03%)</title><rect x="84.4755%" y="453" width="0.0316%" height="15" fill="rgb(213,131,41)" fg:x="42797" fg:w="16"/><text x="84.7255%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.03%)</title><rect x="84.4755%" y="437" width="0.0316%" height="15" fill="rgb(225,82,44)" fg:x="42797" fg:w="16"/><text x="84.7255%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (33 samples, 0.07%)</title><rect x="84.5091%" y="597" width="0.0651%" height="15" fill="rgb(249,42,11)" fg:x="42814" fg:w="33"/><text x="84.7591%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.07%)</title><rect x="84.5091%" y="581" width="0.0651%" height="15" fill="rgb(253,11,29)" fg:x="42814" fg:w="33"/><text x="84.7591%" y="591.50"></text></g><g><title>async_task::header::Header::register (88 samples, 0.17%)</title><rect x="84.4025%" y="613" width="0.1737%" height="15" fill="rgb(206,8,54)" fg:x="42760" fg:w="88"/><text x="84.6525%" y="623.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (104 samples, 0.21%)</title><rect x="84.3946%" y="677" width="0.2053%" height="15" fill="rgb(222,186,2)" fg:x="42756" fg:w="104"/><text x="84.6446%" y="687.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (103 samples, 0.20%)</title><rect x="84.3966%" y="661" width="0.2033%" height="15" fill="rgb(221,206,53)" fg:x="42757" fg:w="103"/><text x="84.6466%" y="671.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.20%)</title><rect x="84.3966%" y="645" width="0.2033%" height="15" fill="rgb(230,150,21)" fg:x="42757" fg:w="103"/><text x="84.6466%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (103 samples, 0.20%)</title><rect x="84.3966%" y="629" width="0.2033%" height="15" fill="rgb(253,202,10)" fg:x="42757" fg:w="103"/><text x="84.6466%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="84.5762%" y="613" width="0.0237%" height="15" fill="rgb(238,109,40)" fg:x="42848" fg:w="12"/><text x="84.8262%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="84.5762%" y="597" width="0.0237%" height="15" fill="rgb(247,120,22)" fg:x="42848" fg:w="12"/><text x="84.8262%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (810 samples, 1.60%)</title><rect x="83.0050%" y="837" width="1.5988%" height="15" fill="rgb(207,43,30)" fg:x="42052" fg:w="810"/><text x="83.2550%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (810 samples, 1.60%)</title><rect x="83.0050%" y="821" width="1.5988%" height="15" fill="rgb(213,211,24)" fg:x="42052" fg:w="810"/><text x="83.2550%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (774 samples, 1.53%)</title><rect x="83.0761%" y="805" width="1.5278%" height="15" fill="rgb(239,73,39)" fg:x="42088" fg:w="774"/><text x="83.3261%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (774 samples, 1.53%)</title><rect x="83.0761%" y="789" width="1.5278%" height="15" fill="rgb(245,182,19)" fg:x="42088" fg:w="774"/><text x="83.3261%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (774 samples, 1.53%)</title><rect x="83.0761%" y="773" width="1.5278%" height="15" fill="rgb(247,143,26)" fg:x="42088" fg:w="774"/><text x="83.3261%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (772 samples, 1.52%)</title><rect x="83.0800%" y="757" width="1.5238%" height="15" fill="rgb(228,191,23)" fg:x="42090" fg:w="772"/><text x="83.3300%" y="767.50"></text></g><g><title>futures_lite::future::block_on (146 samples, 0.29%)</title><rect x="84.3157%" y="741" width="0.2882%" height="15" fill="rgb(253,165,31)" fg:x="42716" fg:w="146"/><text x="84.5657%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (143 samples, 0.28%)</title><rect x="84.3216%" y="725" width="0.2823%" height="15" fill="rgb(234,138,20)" fg:x="42719" fg:w="143"/><text x="84.5716%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (141 samples, 0.28%)</title><rect x="84.3255%" y="709" width="0.2783%" height="15" fill="rgb(218,191,29)" fg:x="42721" fg:w="141"/><text x="84.5755%" y="719.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (106 samples, 0.21%)</title><rect x="84.3946%" y="693" width="0.2092%" height="15" fill="rgb(221,157,19)" fg:x="42756" fg:w="106"/><text x="84.6446%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertBundle&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (13 samples, 0.03%)</title><rect x="84.6038%" y="773" width="0.0257%" height="15" fill="rgb(237,26,42)" fg:x="42862" fg:w="13"/><text x="84.8538%" y="783.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (13 samples, 0.03%)</title><rect x="84.6038%" y="757" width="0.0257%" height="15" fill="rgb(220,163,24)" fg:x="42862" fg:w="13"/><text x="84.8538%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.06%)</title><rect x="84.6650%" y="741" width="0.0572%" height="15" fill="rgb(242,115,20)" fg:x="42893" fg:w="29"/><text x="84.9150%" y="751.50"></text></g><g><title>core::ptr::read (27 samples, 0.05%)</title><rect x="84.6690%" y="725" width="0.0533%" height="15" fill="rgb(210,206,9)" fg:x="42895" fg:w="27"/><text x="84.9190%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.04%)</title><rect x="84.6848%" y="709" width="0.0375%" height="15" fill="rgb(208,71,17)" fg:x="42903" fg:w="19"/><text x="84.9348%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (31 samples, 0.06%)</title><rect x="84.7223%" y="741" width="0.0612%" height="15" fill="rgb(233,7,5)" fg:x="42922" fg:w="31"/><text x="84.9723%" y="751.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (13 samples, 0.03%)</title><rect x="84.7835%" y="741" width="0.0257%" height="15" fill="rgb(207,92,33)" fg:x="42953" fg:w="13"/><text x="85.0335%" y="751.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::add_bundle_to_archetype (13 samples, 0.03%)</title><rect x="84.7835%" y="725" width="0.0257%" height="15" fill="rgb(218,87,9)" fg:x="42953" fg:w="13"/><text x="85.0335%" y="735.50"></text></g><g><title>bevy_ecs::archetype::Edges::get_add_bundle (7 samples, 0.01%)</title><rect x="84.7953%" y="709" width="0.0138%" height="15" fill="rgb(219,47,37)" fg:x="42959" fg:w="7"/><text x="85.0453%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (7 samples, 0.01%)</title><rect x="84.7953%" y="693" width="0.0138%" height="15" fill="rgb(221,152,34)" fg:x="42959" fg:w="7"/><text x="85.0453%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_spawner (8 samples, 0.02%)</title><rect x="84.8091%" y="741" width="0.0158%" height="15" fill="rgb(235,176,21)" fg:x="42966" fg:w="8"/><text x="85.0591%" y="751.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::add_bundle_to_archetype (8 samples, 0.02%)</title><rect x="84.8091%" y="725" width="0.0158%" height="15" fill="rgb(232,212,21)" fg:x="42966" fg:w="8"/><text x="85.0591%" y="735.50"></text></g><g><title>bevy_ecs::archetype::Edges::get_add_bundle (6 samples, 0.01%)</title><rect x="84.8131%" y="709" width="0.0118%" height="15" fill="rgb(245,82,39)" fg:x="42968" fg:w="6"/><text x="85.0631%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.01%)</title><rect x="84.8131%" y="693" width="0.0118%" height="15" fill="rgb(241,52,51)" fg:x="42968" fg:w="6"/><text x="85.0631%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (8 samples, 0.02%)</title><rect x="84.9927%" y="661" width="0.0158%" height="15" fill="rgb(219,91,24)" fg:x="43059" fg:w="8"/><text x="85.2427%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (62 samples, 0.12%)</title><rect x="84.9848%" y="693" width="0.1224%" height="15" fill="rgb(241,142,12)" fg:x="43055" fg:w="62"/><text x="85.2348%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (58 samples, 0.11%)</title><rect x="84.9927%" y="677" width="0.1145%" height="15" fill="rgb(230,27,9)" fg:x="43059" fg:w="58"/><text x="85.2427%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.10%)</title><rect x="85.0085%" y="661" width="0.0987%" height="15" fill="rgb(249,181,32)" fg:x="43067" fg:w="50"/><text x="85.2585%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.10%)</title><rect x="85.0085%" y="645" width="0.0987%" height="15" fill="rgb(230,107,3)" fg:x="43067" fg:w="50"/><text x="85.2585%" y="655.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (100 samples, 0.20%)</title><rect x="84.9355%" y="725" width="0.1974%" height="15" fill="rgb(246,204,14)" fg:x="43030" fg:w="100"/><text x="85.1855%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (93 samples, 0.18%)</title><rect x="84.9493%" y="709" width="0.1836%" height="15" fill="rgb(213,192,47)" fg:x="43037" fg:w="93"/><text x="85.1993%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (13 samples, 0.03%)</title><rect x="85.1072%" y="693" width="0.0257%" height="15" fill="rgb(240,44,36)" fg:x="43117" fg:w="13"/><text x="85.3572%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (13 samples, 0.03%)</title><rect x="85.1072%" y="677" width="0.0257%" height="15" fill="rgb(244,209,38)" fg:x="43117" fg:w="13"/><text x="85.3572%" y="687.50"></text></g><g><title>bevy_ecs::archetype::Archetype::allocate (25 samples, 0.05%)</title><rect x="85.1368%" y="725" width="0.0493%" height="15" fill="rgb(219,34,37)" fg:x="43132" fg:w="25"/><text x="85.3868%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.04%)</title><rect x="85.1486%" y="709" width="0.0375%" height="15" fill="rgb(210,28,6)" fg:x="43138" fg:w="19"/><text x="85.3986%" y="719.50"></text></g><g><title>core::ptr::write (12 samples, 0.02%)</title><rect x="85.1624%" y="693" width="0.0237%" height="15" fill="rgb(244,110,52)" fg:x="43145" fg:w="12"/><text x="85.4124%" y="703.50"></text></g><g><title>bevy_ecs::archetype::Archetype::swap_remove (27 samples, 0.05%)</title><rect x="85.1901%" y="725" width="0.0533%" height="15" fill="rgb(254,124,47)" fg:x="43159" fg:w="27"/><text x="85.4401%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (18 samples, 0.04%)</title><rect x="85.2078%" y="709" width="0.0355%" height="15" fill="rgb(254,110,13)" fg:x="43168" fg:w="18"/><text x="85.4578%" y="719.50"></text></g><g><title>core::intrinsics::copy (11 samples, 0.02%)</title><rect x="85.2217%" y="693" width="0.0217%" height="15" fill="rgb(252,57,21)" fg:x="43175" fg:w="11"/><text x="85.4717%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="85.2473%" y="693" width="0.0158%" height="15" fill="rgb(242,60,45)" fg:x="43188" fg:w="8"/><text x="85.4973%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (8 samples, 0.02%)</title><rect x="85.2473%" y="677" width="0.0158%" height="15" fill="rgb(234,49,30)" fg:x="43188" fg:w="8"/><text x="85.4973%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="85.2473%" y="661" width="0.0158%" height="15" fill="rgb(218,98,6)" fg:x="43188" fg:w="8"/><text x="85.4973%" y="671.50"></text></g><g><title>bevy_ecs::archetype::Edges::get_add_bundle (11 samples, 0.02%)</title><rect x="85.2434%" y="725" width="0.0217%" height="15" fill="rgb(220,174,29)" fg:x="43186" fg:w="11"/><text x="85.4934%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (9 samples, 0.02%)</title><rect x="85.2473%" y="709" width="0.0178%" height="15" fill="rgb(236,163,23)" fg:x="43188" fg:w="9"/><text x="85.4973%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (8 samples, 0.02%)</title><rect x="85.2651%" y="725" width="0.0158%" height="15" fill="rgb(242,114,45)" fg:x="43197" fg:w="8"/><text x="85.5151%" y="735.50"></text></g><g><title>bevy_ecs::entity::Entities::get (6 samples, 0.01%)</title><rect x="85.2809%" y="725" width="0.0118%" height="15" fill="rgb(232,10,53)" fg:x="43205" fg:w="6"/><text x="85.5309%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="85.3302%" y="709" width="0.0158%" height="15" fill="rgb(245,108,29)" fg:x="43230" fg:w="8"/><text x="85.5802%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (9 samples, 0.02%)</title><rect x="85.3460%" y="709" width="0.0178%" height="15" fill="rgb(240,89,53)" fg:x="43238" fg:w="9"/><text x="85.5960%" y="719.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (10 samples, 0.02%)</title><rect x="85.3737%" y="677" width="0.0197%" height="15" fill="rgb(226,60,45)" fg:x="43252" fg:w="10"/><text x="85.6237%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="85.3815%" y="661" width="0.0118%" height="15" fill="rgb(230,41,44)" fg:x="43256" fg:w="6"/><text x="85.6315%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (105 samples, 0.21%)</title><rect x="85.3658%" y="709" width="0.2073%" height="15" fill="rgb(230,26,20)" fg:x="43248" fg:w="105"/><text x="85.6158%" y="719.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (101 samples, 0.20%)</title><rect x="85.3737%" y="693" width="0.1994%" height="15" fill="rgb(237,170,32)" fg:x="43252" fg:w="101"/><text x="85.6237%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.18%)</title><rect x="85.3934%" y="677" width="0.1796%" height="15" fill="rgb(212,35,42)" fg:x="43262" fg:w="91"/><text x="85.6434%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (91 samples, 0.18%)</title><rect x="85.3934%" y="661" width="0.1796%" height="15" fill="rgb(227,31,34)" fg:x="43262" fg:w="91"/><text x="85.6434%" y="671.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="85.5829%" y="677" width="0.0138%" height="15" fill="rgb(216,19,18)" fg:x="43358" fg:w="7"/><text x="85.8329%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (17 samples, 0.03%)</title><rect x="85.5730%" y="693" width="0.0336%" height="15" fill="rgb(211,133,42)" fg:x="43353" fg:w="17"/><text x="85.8230%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (11 samples, 0.02%)</title><rect x="85.6184%" y="677" width="0.0217%" height="15" fill="rgb(244,66,13)" fg:x="43376" fg:w="11"/><text x="85.8684%" y="687.50"></text></g><g><title>core::intrinsics::copy (41 samples, 0.08%)</title><rect x="85.6401%" y="677" width="0.0809%" height="15" fill="rgb(218,185,50)" fg:x="43387" fg:w="41"/><text x="85.8901%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.07%)</title><rect x="85.6480%" y="661" width="0.0730%" height="15" fill="rgb(219,149,13)" fg:x="43391" fg:w="37"/><text x="85.8980%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (116 samples, 0.23%)</title><rect x="85.5730%" y="709" width="0.2290%" height="15" fill="rgb(221,125,0)" fg:x="43353" fg:w="116"/><text x="85.8230%" y="719.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (99 samples, 0.20%)</title><rect x="85.6066%" y="693" width="0.1954%" height="15" fill="rgb(247,126,27)" fg:x="43370" fg:w="99"/><text x="85.8566%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.08%)</title><rect x="85.7211%" y="677" width="0.0809%" height="15" fill="rgb(250,138,30)" fg:x="43428" fg:w="41"/><text x="85.9711%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.08%)</title><rect x="85.7230%" y="661" width="0.0790%" height="15" fill="rgb(230,151,9)" fg:x="43429" fg:w="40"/><text x="85.9730%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="85.8257%" y="693" width="0.0118%" height="15" fill="rgb(233,80,38)" fg:x="43481" fg:w="6"/><text x="86.0757%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.05%)</title><rect x="85.8375%" y="693" width="0.0474%" height="15" fill="rgb(232,68,43)" fg:x="43487" fg:w="24"/><text x="86.0875%" y="703.50"></text></g><g><title>core::ptr::write (15 samples, 0.03%)</title><rect x="85.8553%" y="677" width="0.0296%" height="15" fill="rgb(254,5,50)" fg:x="43496" fg:w="15"/><text x="86.1053%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_len (6 samples, 0.01%)</title><rect x="85.8849%" y="693" width="0.0118%" height="15" fill="rgb(225,45,5)" fg:x="43511" fg:w="6"/><text x="86.1349%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (55 samples, 0.11%)</title><rect x="85.8020%" y="709" width="0.1086%" height="15" fill="rgb(239,22,3)" fg:x="43469" fg:w="55"/><text x="86.0520%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="85.9105%" y="661" width="0.0178%" height="15" fill="rgb(243,129,0)" fg:x="43524" fg:w="9"/><text x="86.1605%" y="671.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (9 samples, 0.02%)</title><rect x="85.9105%" y="645" width="0.0178%" height="15" fill="rgb(223,164,0)" fg:x="43524" fg:w="9"/><text x="86.1605%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="85.9105%" y="629" width="0.0178%" height="15" fill="rgb(221,46,29)" fg:x="43524" fg:w="9"/><text x="86.1605%" y="639.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (14 samples, 0.03%)</title><rect x="85.9105%" y="677" width="0.0276%" height="15" fill="rgb(205,97,47)" fg:x="43524" fg:w="14"/><text x="86.1605%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (340 samples, 0.67%)</title><rect x="85.2927%" y="725" width="0.6711%" height="15" fill="rgb(249,14,8)" fg:x="43211" fg:w="340"/><text x="85.5427%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (27 samples, 0.05%)</title><rect x="85.9105%" y="709" width="0.0533%" height="15" fill="rgb(216,77,3)" fg:x="43524" fg:w="27"/><text x="86.1605%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (27 samples, 0.05%)</title><rect x="85.9105%" y="693" width="0.0533%" height="15" fill="rgb(206,168,54)" fg:x="43524" fg:w="27"/><text x="86.1605%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="85.9461%" y="677" width="0.0178%" height="15" fill="rgb(236,3,41)" fg:x="43542" fg:w="9"/><text x="86.1961%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (579 samples, 1.14%)</title><rect x="84.8249%" y="741" width="1.1429%" height="15" fill="rgb(231,132,24)" fg:x="42974" fg:w="579"/><text x="85.0749%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.09%)</title><rect x="86.0329%" y="693" width="0.0888%" height="15" fill="rgb(227,221,40)" fg:x="43586" fg:w="45"/><text x="86.2829%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::_{{closure}} (7 samples, 0.01%)</title><rect x="86.1217%" y="693" width="0.0138%" height="15" fill="rgb(233,151,11)" fg:x="43631" fg:w="7"/><text x="86.3717%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (6 samples, 0.01%)</title><rect x="86.1652%" y="645" width="0.0118%" height="15" fill="rgb(247,81,35)" fg:x="43653" fg:w="6"/><text x="86.4152%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (35 samples, 0.07%)</title><rect x="86.1593%" y="677" width="0.0691%" height="15" fill="rgb(243,128,48)" fg:x="43650" fg:w="35"/><text x="86.4093%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (32 samples, 0.06%)</title><rect x="86.1652%" y="661" width="0.0632%" height="15" fill="rgb(253,16,10)" fg:x="43653" fg:w="32"/><text x="86.4152%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.05%)</title><rect x="86.1770%" y="645" width="0.0513%" height="15" fill="rgb(228,67,27)" fg:x="43659" fg:w="26"/><text x="86.4270%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.05%)</title><rect x="86.1770%" y="629" width="0.0513%" height="15" fill="rgb(231,105,25)" fg:x="43659" fg:w="26"/><text x="86.4270%" y="639.50"></text></g><g><title>&lt;(C0,C1) as bevy_ecs::bundle::Bundle&gt;::get_components (106 samples, 0.21%)</title><rect x="86.0290%" y="709" width="0.2092%" height="15" fill="rgb(213,166,47)" fg:x="43584" fg:w="106"/><text x="86.2790%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (52 samples, 0.10%)</title><rect x="86.1356%" y="693" width="0.1026%" height="15" fill="rgb(209,27,10)" fg:x="43638" fg:w="52"/><text x="86.3856%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (131 samples, 0.26%)</title><rect x="86.0171%" y="725" width="0.2586%" height="15" fill="rgb(241,44,30)" fg:x="43578" fg:w="131"/><text x="86.2671%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="86.2422%" y="709" width="0.0336%" height="15" fill="rgb(223,216,15)" fg:x="43692" fg:w="17"/><text x="86.4922%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.02%)</title><rect x="86.2816%" y="709" width="0.0197%" height="15" fill="rgb(227,14,7)" fg:x="43712" fg:w="10"/><text x="86.5316%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (172 samples, 0.34%)</title><rect x="85.9678%" y="741" width="0.3395%" height="15" fill="rgb(237,14,5)" fg:x="43553" fg:w="172"/><text x="86.2178%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (15 samples, 0.03%)</title><rect x="86.2777%" y="725" width="0.0296%" height="15" fill="rgb(232,14,36)" fg:x="43710" fg:w="15"/><text x="86.5277%" y="735.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.01%)</title><rect x="86.3112%" y="693" width="0.0118%" height="15" fill="rgb(234,0,38)" fg:x="43727" fg:w="6"/><text x="86.5612%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="86.3112%" y="677" width="0.0118%" height="15" fill="rgb(207,170,14)" fg:x="43727" fg:w="6"/><text x="86.5612%" y="687.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (11 samples, 0.02%)</title><rect x="86.3073%" y="741" width="0.0217%" height="15" fill="rgb(252,45,13)" fg:x="43725" fg:w="11"/><text x="86.5573%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.02%)</title><rect x="86.3112%" y="725" width="0.0178%" height="15" fill="rgb(213,142,7)" fg:x="43727" fg:w="9"/><text x="86.5612%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.02%)</title><rect x="86.3112%" y="709" width="0.0178%" height="15" fill="rgb(216,157,23)" fg:x="43727" fg:w="9"/><text x="86.5612%" y="719.50"></text></g><g><title>bevy_ecs::entity::Entities::alloc_at_without_replacement (10 samples, 0.02%)</title><rect x="86.3290%" y="741" width="0.0197%" height="15" fill="rgb(212,145,33)" fg:x="43736" fg:w="10"/><text x="86.5790%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2,274 samples, 4.49%)</title><rect x="81.8760%" y="885" width="4.4886%" height="15" fill="rgb(233,26,13)" fg:x="41480" fg:w="2274"/><text x="82.1260%" y="895.50">&lt;allo..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (2,274 samples, 4.49%)</title><rect x="81.8760%" y="869" width="4.4886%" height="15" fill="rgb(219,196,19)" fg:x="41480" fg:w="2274"/><text x="82.1260%" y="879.50">&lt;bevy..</text></g><g><title>bevy_render::extract (1,702 samples, 3.36%)</title><rect x="83.0050%" y="853" width="3.3595%" height="15" fill="rgb(246,56,21)" fg:x="42052" fg:w="1702"/><text x="83.2550%" y="863.50">bev..</text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (892 samples, 1.76%)</title><rect x="84.6038%" y="837" width="1.7607%" height="15" fill="rgb(222,28,53)" fg:x="42862" fg:w="892"/><text x="84.8538%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (892 samples, 1.76%)</title><rect x="84.6038%" y="821" width="1.7607%" height="15" fill="rgb(224,5,27)" fg:x="42862" fg:w="892"/><text x="84.8538%" y="831.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (892 samples, 1.76%)</title><rect x="84.6038%" y="805" width="1.7607%" height="15" fill="rgb(220,153,33)" fg:x="42862" fg:w="892"/><text x="84.8538%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (892 samples, 1.76%)</title><rect x="84.6038%" y="789" width="1.7607%" height="15" fill="rgb(226,58,19)" fg:x="42862" fg:w="892"/><text x="84.8538%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (879 samples, 1.74%)</title><rect x="84.6295%" y="773" width="1.7350%" height="15" fill="rgb(239,112,23)" fg:x="42875" fg:w="879"/><text x="84.8795%" y="783.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (879 samples, 1.74%)</title><rect x="84.6295%" y="757" width="1.7350%" height="15" fill="rgb(251,213,20)" fg:x="42875" fg:w="879"/><text x="84.8795%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (7 samples, 0.01%)</title><rect x="86.3645%" y="869" width="0.0138%" height="15" fill="rgb(215,181,21)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (7 samples, 0.01%)</title><rect x="86.3645%" y="853" width="0.0138%" height="15" fill="rgb(240,8,35)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (7 samples, 0.01%)</title><rect x="86.3645%" y="837" width="0.0138%" height="15" fill="rgb(232,203,3)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="86.3645%" y="821" width="0.0138%" height="15" fill="rgb(214,202,43)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="86.3645%" y="805" width="0.0138%" height="15" fill="rgb(254,35,11)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (7 samples, 0.01%)</title><rect x="86.3645%" y="789" width="0.0138%" height="15" fill="rgb(239,173,13)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (7 samples, 0.01%)</title><rect x="86.3645%" y="773" width="0.0138%" height="15" fill="rgb(220,141,0)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 0.01%)</title><rect x="86.3645%" y="757" width="0.0138%" height="15" fill="rgb(210,98,12)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="86.3645%" y="741" width="0.0138%" height="15" fill="rgb(254,153,22)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.01%)</title><rect x="86.3645%" y="725" width="0.0138%" height="15" fill="rgb(247,223,17)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="86.3645%" y="709" width="0.0138%" height="15" fill="rgb(246,56,7)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (7 samples, 0.01%)</title><rect x="86.3645%" y="693" width="0.0138%" height="15" fill="rgb(240,226,12)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (7 samples, 0.01%)</title><rect x="86.3645%" y="677" width="0.0138%" height="15" fill="rgb(205,87,46)" fg:x="43754" fg:w="7"/><text x="86.6145%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="86.4553%" y="421" width="0.0158%" height="15" fill="rgb(245,214,51)" fg:x="43800" fg:w="8"/><text x="86.7053%" y="431.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="86.4553%" y="405" width="0.0158%" height="15" fill="rgb(223,172,33)" fg:x="43800" fg:w="8"/><text x="86.7053%" y="415.50"></text></g><g><title>bevy_render::color::Color::as_rgba_f32 (9 samples, 0.02%)</title><rect x="86.4711%" y="421" width="0.0178%" height="15" fill="rgb(227,203,34)" fg:x="43808" fg:w="9"/><text x="86.7211%" y="431.50"></text></g><g><title>bevy_render::color::Color::hex (26 samples, 0.05%)</title><rect x="86.4889%" y="421" width="0.0513%" height="15" fill="rgb(248,143,44)" fg:x="43817" fg:w="26"/><text x="86.7389%" y="431.50"></text></g><g><title>bevy_render::color::decode_rgb (22 samples, 0.04%)</title><rect x="86.4968%" y="405" width="0.0434%" height="15" fill="rgb(226,162,5)" fg:x="43821" fg:w="22"/><text x="86.7468%" y="415.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (101 samples, 0.20%)</title><rect x="86.3784%" y="437" width="0.1994%" height="15" fill="rgb(211,143,1)" fg:x="43761" fg:w="101"/><text x="86.6284%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (16 samples, 0.03%)</title><rect x="86.5461%" y="421" width="0.0316%" height="15" fill="rgb(224,96,15)" fg:x="43846" fg:w="16"/><text x="86.7961%" y="431.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (102 samples, 0.20%)</title><rect x="86.3784%" y="565" width="0.2013%" height="15" fill="rgb(222,4,38)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="575.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (102 samples, 0.20%)</title><rect x="86.3784%" y="549" width="0.2013%" height="15" fill="rgb(253,228,15)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="559.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (102 samples, 0.20%)</title><rect x="86.3784%" y="533" width="0.2013%" height="15" fill="rgb(242,194,12)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="543.50"></text></g><g><title>std::sync::once::Once::call_once (102 samples, 0.20%)</title><rect x="86.3784%" y="517" width="0.2013%" height="15" fill="rgb(214,177,31)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="527.50"></text></g><g><title>std::sync::once::Once::call_inner (102 samples, 0.20%)</title><rect x="86.3784%" y="501" width="0.2013%" height="15" fill="rgb(226,58,51)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="511.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (102 samples, 0.20%)</title><rect x="86.3784%" y="485" width="0.2013%" height="15" fill="rgb(250,119,16)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="495.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (102 samples, 0.20%)</title><rect x="86.3784%" y="469" width="0.2013%" height="15" fill="rgb(223,128,53)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (102 samples, 0.20%)</title><rect x="86.3784%" y="453" width="0.2013%" height="15" fill="rgb(251,199,15)" fg:x="43761" fg:w="102"/><text x="86.6284%" y="463.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,384 samples, 4.71%)</title><rect x="81.8760%" y="933" width="4.7057%" height="15" fill="rgb(235,168,42)" fg:x="41480" fg:w="2384"/><text x="82.1260%" y="943.50">winit..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,384 samples, 4.71%)</title><rect x="81.8760%" y="917" width="4.7057%" height="15" fill="rgb(250,210,17)" fg:x="41480" fg:w="2384"/><text x="82.1260%" y="927.50">bevy_..</text></g><g><title>bevy_app::app::App::update (2,384 samples, 4.71%)</title><rect x="81.8760%" y="901" width="4.7057%" height="15" fill="rgb(226,36,41)" fg:x="41480" fg:w="2384"/><text x="82.1260%" y="911.50">bevy_..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (110 samples, 0.22%)</title><rect x="86.3645%" y="885" width="0.2171%" height="15" fill="rgb(225,87,10)" fg:x="43754" fg:w="110"/><text x="86.6145%" y="895.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (103 samples, 0.20%)</title><rect x="86.3784%" y="869" width="0.2033%" height="15" fill="rgb(228,83,9)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (103 samples, 0.20%)</title><rect x="86.3784%" y="853" width="0.2033%" height="15" fill="rgb(225,16,36)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (103 samples, 0.20%)</title><rect x="86.3784%" y="837" width="0.2033%" height="15" fill="rgb(242,198,13)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (103 samples, 0.20%)</title><rect x="86.3784%" y="821" width="0.2033%" height="15" fill="rgb(239,25,51)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (103 samples, 0.20%)</title><rect x="86.3784%" y="805" width="0.2033%" height="15" fill="rgb(239,28,37)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (103 samples, 0.20%)</title><rect x="86.3784%" y="789" width="0.2033%" height="15" fill="rgb(234,70,17)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (103 samples, 0.20%)</title><rect x="86.3784%" y="773" width="0.2033%" height="15" fill="rgb(231,215,53)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (103 samples, 0.20%)</title><rect x="86.3784%" y="757" width="0.2033%" height="15" fill="rgb(218,140,42)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (103 samples, 0.20%)</title><rect x="86.3784%" y="741" width="0.2033%" height="15" fill="rgb(233,227,45)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.20%)</title><rect x="86.3784%" y="725" width="0.2033%" height="15" fill="rgb(225,189,21)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (103 samples, 0.20%)</title><rect x="86.3784%" y="709" width="0.2033%" height="15" fill="rgb(237,176,54)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.20%)</title><rect x="86.3784%" y="693" width="0.2033%" height="15" fill="rgb(215,131,46)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (103 samples, 0.20%)</title><rect x="86.3784%" y="677" width="0.2033%" height="15" fill="rgb(218,95,20)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (103 samples, 0.20%)</title><rect x="86.3784%" y="661" width="0.2033%" height="15" fill="rgb(208,198,12)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (103 samples, 0.20%)</title><rect x="86.3784%" y="645" width="0.2033%" height="15" fill="rgb(239,107,50)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (103 samples, 0.20%)</title><rect x="86.3784%" y="629" width="0.2033%" height="15" fill="rgb(240,217,37)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (103 samples, 0.20%)</title><rect x="86.3784%" y="613" width="0.2033%" height="15" fill="rgb(242,197,49)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (103 samples, 0.20%)</title><rect x="86.3784%" y="597" width="0.2033%" height="15" fill="rgb(219,171,17)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="607.50"></text></g><g><title>stellar_coordinates_test::setup (103 samples, 0.20%)</title><rect x="86.3784%" y="581" width="0.2033%" height="15" fill="rgb(209,81,40)" fg:x="43761" fg:w="103"/><text x="86.6284%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (2,395 samples, 4.73%)</title><rect x="81.8760%" y="981" width="4.7274%" height="15" fill="rgb(237,156,30)" fg:x="41480" fg:w="2395"/><text x="82.1260%" y="991.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,395 samples, 4.73%)</title><rect x="81.8760%" y="965" width="4.7274%" height="15" fill="rgb(212,127,16)" fg:x="41480" fg:w="2395"/><text x="82.1260%" y="975.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,395 samples, 4.73%)</title><rect x="81.8760%" y="949" width="4.7274%" height="15" fill="rgb(226,66,32)" fg:x="41480" fg:w="2395"/><text x="82.1260%" y="959.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (11 samples, 0.02%)</title><rect x="86.5817%" y="933" width="0.0217%" height="15" fill="rgb(245,22,46)" fg:x="43864" fg:w="11"/><text x="86.8317%" y="943.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (11 samples, 0.02%)</title><rect x="86.5817%" y="917" width="0.0217%" height="15" fill="rgb(210,112,21)" fg:x="43864" fg:w="11"/><text x="86.8317%" y="927.50"></text></g><g><title>_XimCbDispatch (11 samples, 0.02%)</title><rect x="86.5817%" y="901" width="0.0217%" height="15" fill="rgb(207,118,39)" fg:x="43864" fg:w="11"/><text x="86.8317%" y="911.50"></text></g><g><title>_XimSync (11 samples, 0.02%)</title><rect x="86.5817%" y="885" width="0.0217%" height="15" fill="rgb(205,206,35)" fg:x="43864" fg:w="11"/><text x="86.8317%" y="895.50"></text></g><g><title>_XimTransInternalConnection (7 samples, 0.01%)</title><rect x="86.5896%" y="869" width="0.0138%" height="15" fill="rgb(222,120,2)" fg:x="43868" fg:w="7"/><text x="86.8396%" y="879.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (7 samples, 0.01%)</title><rect x="86.6290%" y="485" width="0.0138%" height="15" fill="rgb(205,38,18)" fg:x="43888" fg:w="7"/><text x="86.8790%" y="495.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (7 samples, 0.01%)</title><rect x="86.6290%" y="469" width="0.0138%" height="15" fill="rgb(226,61,2)" fg:x="43888" fg:w="7"/><text x="86.8790%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (7 samples, 0.01%)</title><rect x="86.6290%" y="453" width="0.0138%" height="15" fill="rgb(242,161,23)" fg:x="43888" fg:w="7"/><text x="86.8790%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (7 samples, 0.01%)</title><rect x="86.6290%" y="437" width="0.0138%" height="15" fill="rgb(213,13,52)" fg:x="43888" fg:w="7"/><text x="86.8790%" y="447.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (7 samples, 0.01%)</title><rect x="86.6290%" y="421" width="0.0138%" height="15" fill="rgb(246,209,47)" fg:x="43888" fg:w="7"/><text x="86.8790%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (20 samples, 0.04%)</title><rect x="86.6053%" y="661" width="0.0395%" height="15" fill="rgb(214,41,3)" fg:x="43876" fg:w="20"/><text x="86.8553%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (20 samples, 0.04%)</title><rect x="86.6053%" y="645" width="0.0395%" height="15" fill="rgb(236,119,38)" fg:x="43876" fg:w="20"/><text x="86.8553%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.04%)</title><rect x="86.6053%" y="629" width="0.0395%" height="15" fill="rgb(218,50,11)" fg:x="43876" fg:w="20"/><text x="86.8553%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (20 samples, 0.04%)</title><rect x="86.6053%" y="613" width="0.0395%" height="15" fill="rgb(228,38,11)" fg:x="43876" fg:w="20"/><text x="86.8553%" y="623.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (18 samples, 0.04%)</title><rect x="86.6093%" y="597" width="0.0355%" height="15" fill="rgb(212,13,9)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="607.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (18 samples, 0.04%)</title><rect x="86.6093%" y="581" width="0.0355%" height="15" fill="rgb(208,211,9)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="591.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (18 samples, 0.04%)</title><rect x="86.6093%" y="565" width="0.0355%" height="15" fill="rgb(239,39,32)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="575.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (18 samples, 0.04%)</title><rect x="86.6093%" y="549" width="0.0355%" height="15" fill="rgb(254,179,26)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="559.50"></text></g><g><title>wgpu::Device::create_buffer (18 samples, 0.04%)</title><rect x="86.6093%" y="533" width="0.0355%" height="15" fill="rgb(249,165,28)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (18 samples, 0.04%)</title><rect x="86.6093%" y="517" width="0.0355%" height="15" fill="rgb(225,59,50)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (18 samples, 0.04%)</title><rect x="86.6093%" y="501" width="0.0355%" height="15" fill="rgb(209,122,5)" fg:x="43878" fg:w="18"/><text x="86.8593%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (11 samples, 0.02%)</title><rect x="86.6448%" y="661" width="0.0217%" height="15" fill="rgb(214,65,34)" fg:x="43896" fg:w="11"/><text x="86.8948%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (11 samples, 0.02%)</title><rect x="86.6448%" y="645" width="0.0217%" height="15" fill="rgb(249,183,32)" fg:x="43896" fg:w="11"/><text x="86.8948%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.02%)</title><rect x="86.6448%" y="629" width="0.0217%" height="15" fill="rgb(218,122,24)" fg:x="43896" fg:w="11"/><text x="86.8948%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.02%)</title><rect x="86.6448%" y="613" width="0.0217%" height="15" fill="rgb(224,109,18)" fg:x="43896" fg:w="11"/><text x="86.8948%" y="623.50"></text></g><g><title>bevy_sprite::mesh2d::mesh::queue_mesh2d_view_bind_groups (7 samples, 0.01%)</title><rect x="86.6527%" y="597" width="0.0138%" height="15" fill="rgb(210,68,50)" fg:x="43900" fg:w="7"/><text x="86.9027%" y="607.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_bind_group (7 samples, 0.01%)</title><rect x="86.6527%" y="581" width="0.0138%" height="15" fill="rgb(212,184,34)" fg:x="43900" fg:w="7"/><text x="86.9027%" y="591.50"></text></g><g><title>wgpu::Device::create_bind_group (7 samples, 0.01%)</title><rect x="86.6527%" y="565" width="0.0138%" height="15" fill="rgb(238,105,48)" fg:x="43900" fg:w="7"/><text x="86.9027%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (7 samples, 0.01%)</title><rect x="86.6527%" y="549" width="0.0138%" height="15" fill="rgb(222,134,54)" fg:x="43900" fg:w="7"/><text x="86.9027%" y="559.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (7 samples, 0.01%)</title><rect x="86.6527%" y="533" width="0.0138%" height="15" fill="rgb(246,24,43)" fg:x="43900" fg:w="7"/><text x="86.9027%" y="543.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (36 samples, 0.07%)</title><rect x="86.6053%" y="725" width="0.0711%" height="15" fill="rgb(227,169,22)" fg:x="43876" fg:w="36"/><text x="86.8553%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.07%)</title><rect x="86.6053%" y="709" width="0.0711%" height="15" fill="rgb(253,152,4)" fg:x="43876" fg:w="36"/><text x="86.8553%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (36 samples, 0.07%)</title><rect x="86.6053%" y="693" width="0.0711%" height="15" fill="rgb(219,158,36)" fg:x="43876" fg:w="36"/><text x="86.8553%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (36 samples, 0.07%)</title><rect x="86.6053%" y="677" width="0.0711%" height="15" fill="rgb(251,128,40)" fg:x="43876" fg:w="36"/><text x="86.8553%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (42 samples, 0.08%)</title><rect x="86.6053%" y="853" width="0.0829%" height="15" fill="rgb(254,101,39)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (42 samples, 0.08%)</title><rect x="86.6053%" y="837" width="0.0829%" height="15" fill="rgb(221,168,40)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (42 samples, 0.08%)</title><rect x="86.6053%" y="821" width="0.0829%" height="15" fill="rgb(221,14,27)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (42 samples, 0.08%)</title><rect x="86.6053%" y="805" width="0.0829%" height="15" fill="rgb(207,36,43)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (42 samples, 0.08%)</title><rect x="86.6053%" y="789" width="0.0829%" height="15" fill="rgb(240,172,53)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (42 samples, 0.08%)</title><rect x="86.6053%" y="773" width="0.0829%" height="15" fill="rgb(241,138,43)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (42 samples, 0.08%)</title><rect x="86.6053%" y="757" width="0.0829%" height="15" fill="rgb(227,78,19)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.08%)</title><rect x="86.6053%" y="741" width="0.0829%" height="15" fill="rgb(215,127,44)" fg:x="43876" fg:w="42"/><text x="86.8553%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (6 samples, 0.01%)</title><rect x="86.6764%" y="725" width="0.0118%" height="15" fill="rgb(227,13,10)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="86.6764%" y="709" width="0.0118%" height="15" fill="rgb(249,177,6)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (6 samples, 0.01%)</title><rect x="86.6764%" y="693" width="0.0118%" height="15" fill="rgb(215,154,26)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6 samples, 0.01%)</title><rect x="86.6764%" y="677" width="0.0118%" height="15" fill="rgb(250,168,20)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (6 samples, 0.01%)</title><rect x="86.6764%" y="661" width="0.0118%" height="15" fill="rgb(222,53,38)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (6 samples, 0.01%)</title><rect x="86.6764%" y="645" width="0.0118%" height="15" fill="rgb(245,154,5)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="86.6764%" y="629" width="0.0118%" height="15" fill="rgb(214,89,50)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (6 samples, 0.01%)</title><rect x="86.6764%" y="613" width="0.0118%" height="15" fill="rgb(232,73,14)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="623.50"></text></g><g><title>bevy_render::view::window::prepare_windows (6 samples, 0.01%)</title><rect x="86.6764%" y="597" width="0.0118%" height="15" fill="rgb(230,101,20)" fg:x="43912" fg:w="6"/><text x="86.9264%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.01%)</title><rect x="86.6882%" y="741" width="0.0138%" height="15" fill="rgb(208,56,28)" fg:x="43918" fg:w="7"/><text x="86.9382%" y="751.50"></text></g><g><title>bevy_render::color::&lt;impl core::convert::From&lt;bevy_render::color::Color&gt; for wgpu_types::Color&gt;::from (7 samples, 0.01%)</title><rect x="86.6882%" y="725" width="0.0138%" height="15" fill="rgb(247,205,22)" fg:x="43918" fg:w="7"/><text x="86.9382%" y="735.50"></text></g><g><title>bevy_render::color::Color::as_rgba_linear (7 samples, 0.01%)</title><rect x="86.6882%" y="709" width="0.0138%" height="15" fill="rgb(252,109,51)" fg:x="43918" fg:w="7"/><text x="86.9382%" y="719.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (6 samples, 0.01%)</title><rect x="86.6902%" y="693" width="0.0118%" height="15" fill="rgb(220,40,24)" fg:x="43919" fg:w="6"/><text x="86.9402%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (6 samples, 0.01%)</title><rect x="86.6902%" y="677" width="0.0118%" height="15" fill="rgb(251,108,7)" fg:x="43919" fg:w="6"/><text x="86.9402%" y="687.50"></text></g><g><title>f64xsubf128 (6 samples, 0.01%)</title><rect x="86.6902%" y="661" width="0.0118%" height="15" fill="rgb(238,102,51)" fg:x="43919" fg:w="6"/><text x="86.9402%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.01%)</title><rect x="86.7277%" y="741" width="0.0138%" height="15" fill="rgb(219,149,34)" fg:x="43938" fg:w="7"/><text x="86.9777%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="86.7277%" y="725" width="0.0138%" height="15" fill="rgb(239,70,0)" fg:x="43938" fg:w="7"/><text x="86.9777%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="86.7277%" y="709" width="0.0138%" height="15" fill="rgb(246,214,23)" fg:x="43938" fg:w="7"/><text x="86.9777%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.01%)</title><rect x="86.7297%" y="693" width="0.0118%" height="15" fill="rgb(239,221,51)" fg:x="43939" fg:w="6"/><text x="86.9797%" y="703.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (28 samples, 0.06%)</title><rect x="86.6882%" y="757" width="0.0553%" height="15" fill="rgb(254,62,14)" fg:x="43918" fg:w="28"/><text x="86.9382%" y="767.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (37 samples, 0.07%)</title><rect x="86.6882%" y="789" width="0.0730%" height="15" fill="rgb(253,57,33)" fg:x="43918" fg:w="37"/><text x="86.9382%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (37 samples, 0.07%)</title><rect x="86.6882%" y="773" width="0.0730%" height="15" fill="rgb(229,34,6)" fg:x="43918" fg:w="37"/><text x="86.9382%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="86.7455%" y="757" width="0.0158%" height="15" fill="rgb(235,191,23)" fg:x="43947" fg:w="8"/><text x="86.9955%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (8 samples, 0.02%)</title><rect x="86.7455%" y="741" width="0.0158%" height="15" fill="rgb(217,207,27)" fg:x="43947" fg:w="8"/><text x="86.9955%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="86.7455%" y="725" width="0.0158%" height="15" fill="rgb(232,41,44)" fg:x="43947" fg:w="8"/><text x="86.9955%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="86.7455%" y="709" width="0.0158%" height="15" fill="rgb(221,188,19)" fg:x="43947" fg:w="8"/><text x="86.9955%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (7 samples, 0.01%)</title><rect x="86.7475%" y="693" width="0.0138%" height="15" fill="rgb(245,180,45)" fg:x="43948" fg:w="7"/><text x="86.9975%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (6 samples, 0.01%)</title><rect x="86.7494%" y="677" width="0.0118%" height="15" fill="rgb(250,220,42)" fg:x="43949" fg:w="6"/><text x="86.9994%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (6 samples, 0.01%)</title><rect x="86.7494%" y="661" width="0.0118%" height="15" fill="rgb(234,16,34)" fg:x="43949" fg:w="6"/><text x="86.9994%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (6 samples, 0.01%)</title><rect x="86.7494%" y="645" width="0.0118%" height="15" fill="rgb(233,217,23)" fg:x="43949" fg:w="6"/><text x="86.9994%" y="655.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (45 samples, 0.09%)</title><rect x="86.6882%" y="805" width="0.0888%" height="15" fill="rgb(209,22,46)" fg:x="43918" fg:w="45"/><text x="86.9382%" y="815.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_command_encoder (8 samples, 0.02%)</title><rect x="86.7613%" y="789" width="0.0158%" height="15" fill="rgb(213,101,18)" fg:x="43955" fg:w="8"/><text x="87.0113%" y="799.50"></text></g><g><title>wgpu::Device::create_command_encoder (8 samples, 0.02%)</title><rect x="86.7613%" y="773" width="0.0158%" height="15" fill="rgb(215,179,52)" fg:x="43955" fg:w="8"/><text x="87.0113%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (8 samples, 0.02%)</title><rect x="86.7613%" y="757" width="0.0158%" height="15" fill="rgb(223,50,25)" fg:x="43955" fg:w="8"/><text x="87.0113%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (8 samples, 0.02%)</title><rect x="86.7613%" y="741" width="0.0158%" height="15" fill="rgb(224,51,44)" fg:x="43955" fg:w="8"/><text x="87.0113%" y="751.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (93 samples, 0.18%)</title><rect x="86.6053%" y="869" width="0.1836%" height="15" fill="rgb(224,13,54)" fg:x="43876" fg:w="93"/><text x="86.8553%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (51 samples, 0.10%)</title><rect x="86.6882%" y="853" width="0.1007%" height="15" fill="rgb(219,58,47)" fg:x="43918" fg:w="51"/><text x="86.9382%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (51 samples, 0.10%)</title><rect x="86.6882%" y="837" width="0.1007%" height="15" fill="rgb(246,124,34)" fg:x="43918" fg:w="51"/><text x="86.9382%" y="847.50"></text></g><g><title>bevy_render::renderer::render_system (51 samples, 0.10%)</title><rect x="86.6882%" y="821" width="0.1007%" height="15" fill="rgb(245,109,25)" fg:x="43918" fg:w="51"/><text x="86.9382%" y="831.50"></text></g><g><title>wgpu::SurfaceTexture::present (6 samples, 0.01%)</title><rect x="86.7771%" y="805" width="0.0118%" height="15" fill="rgb(235,48,23)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (6 samples, 0.01%)</title><rect x="86.7771%" y="789" width="0.0118%" height="15" fill="rgb(229,203,36)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="799.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (6 samples, 0.01%)</title><rect x="86.7771%" y="773" width="0.0118%" height="15" fill="rgb(234,180,9)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="783.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (6 samples, 0.01%)</title><rect x="86.7771%" y="757" width="0.0118%" height="15" fill="rgb(228,98,45)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="767.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (6 samples, 0.01%)</title><rect x="86.7771%" y="741" width="0.0118%" height="15" fill="rgb(240,24,36)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="751.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (6 samples, 0.01%)</title><rect x="86.7771%" y="725" width="0.0118%" height="15" fill="rgb(227,154,19)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="735.50"></text></g><g><title>__glx_Main (6 samples, 0.01%)</title><rect x="86.7771%" y="709" width="0.0118%" height="15" fill="rgb(231,2,48)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="86.7771%" y="693" width="0.0118%" height="15" fill="rgb(219,216,0)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="86.7771%" y="677" width="0.0118%" height="15" fill="rgb(251,88,0)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="86.7771%" y="661" width="0.0118%" height="15" fill="rgb(242,45,45)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="86.7771%" y="645" width="0.0118%" height="15" fill="rgb(218,149,45)" fg:x="43963" fg:w="6"/><text x="87.0271%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (13 samples, 0.03%)</title><rect x="86.7889%" y="757" width="0.0257%" height="15" fill="rgb(247,194,10)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (13 samples, 0.03%)</title><rect x="86.7889%" y="741" width="0.0257%" height="15" fill="rgb(234,33,37)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (13 samples, 0.03%)</title><rect x="86.7889%" y="725" width="0.0257%" height="15" fill="rgb(218,61,13)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="735.50"></text></g><g><title>async_executor::Executor::spawn (13 samples, 0.03%)</title><rect x="86.7889%" y="709" width="0.0257%" height="15" fill="rgb(210,80,52)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="719.50"></text></g><g><title>async_task::runnable::spawn_unchecked (13 samples, 0.03%)</title><rect x="86.7889%" y="693" width="0.0257%" height="15" fill="rgb(218,203,27)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (13 samples, 0.03%)</title><rect x="86.7889%" y="677" width="0.0257%" height="15" fill="rgb(209,126,33)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="687.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.03%)</title><rect x="86.7889%" y="661" width="0.0257%" height="15" fill="rgb(234,173,41)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="671.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.03%)</title><rect x="86.7889%" y="645" width="0.0257%" height="15" fill="rgb(228,166,9)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="655.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="86.7889%" y="629" width="0.0257%" height="15" fill="rgb(208,124,43)" fg:x="43969" fg:w="13"/><text x="87.0389%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (6 samples, 0.01%)</title><rect x="86.8027%" y="613" width="0.0118%" height="15" fill="rgb(212,154,38)" fg:x="43976" fg:w="6"/><text x="87.0527%" y="623.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="86.8165%" y="501" width="0.0395%" height="15" fill="rgb(246,179,35)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="511.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="86.8165%" y="485" width="0.0395%" height="15" fill="rgb(251,3,50)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="86.8165%" y="469" width="0.0395%" height="15" fill="rgb(219,96,8)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.04%)</title><rect x="86.8165%" y="453" width="0.0395%" height="15" fill="rgb(251,216,33)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.04%)</title><rect x="86.8165%" y="437" width="0.0395%" height="15" fill="rgb(243,145,29)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.04%)</title><rect x="86.8165%" y="421" width="0.0395%" height="15" fill="rgb(210,75,20)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.04%)</title><rect x="86.8165%" y="405" width="0.0395%" height="15" fill="rgb(235,56,8)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.04%)</title><rect x="86.8165%" y="389" width="0.0395%" height="15" fill="rgb(226,175,49)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="86.8165%" y="373" width="0.0395%" height="15" fill="rgb(242,204,23)" fg:x="43983" fg:w="20"/><text x="87.0665%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (22 samples, 0.04%)</title><rect x="86.8165%" y="565" width="0.0434%" height="15" fill="rgb(225,104,24)" fg:x="43983" fg:w="22"/><text x="87.0665%" y="575.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="86.8165%" y="549" width="0.0434%" height="15" fill="rgb(253,34,1)" fg:x="43983" fg:w="22"/><text x="87.0665%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="86.8165%" y="533" width="0.0434%" height="15" fill="rgb(233,199,23)" fg:x="43983" fg:w="22"/><text x="87.0665%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (22 samples, 0.04%)</title><rect x="86.8165%" y="517" width="0.0434%" height="15" fill="rgb(247,7,51)" fg:x="43983" fg:w="22"/><text x="87.0665%" y="527.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (30 samples, 0.06%)</title><rect x="86.8165%" y="581" width="0.0592%" height="15" fill="rgb(214,146,12)" fg:x="43983" fg:w="30"/><text x="87.0665%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (34 samples, 0.07%)</title><rect x="86.8165%" y="645" width="0.0671%" height="15" fill="rgb(234,181,43)" fg:x="43983" fg:w="34"/><text x="87.0665%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (34 samples, 0.07%)</title><rect x="86.8165%" y="629" width="0.0671%" height="15" fill="rgb(239,148,6)" fg:x="43983" fg:w="34"/><text x="87.0665%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.07%)</title><rect x="86.8165%" y="613" width="0.0671%" height="15" fill="rgb(206,151,17)" fg:x="43983" fg:w="34"/><text x="87.0665%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.07%)</title><rect x="86.8165%" y="597" width="0.0671%" height="15" fill="rgb(213,215,10)" fg:x="43983" fg:w="34"/><text x="87.0665%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="86.9014%" y="565" width="0.0237%" height="15" fill="rgb(215,220,44)" fg:x="44026" fg:w="12"/><text x="87.1514%" y="575.50"></text></g><g><title>core::ptr::write (11 samples, 0.02%)</title><rect x="86.9034%" y="549" width="0.0217%" height="15" fill="rgb(245,205,37)" fg:x="44027" fg:w="11"/><text x="87.1534%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="86.9034%" y="533" width="0.0217%" height="15" fill="rgb(245,130,43)" fg:x="44027" fg:w="11"/><text x="87.1534%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.02%)</title><rect x="86.9251%" y="565" width="0.0158%" height="15" fill="rgb(231,227,38)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="86.9251%" y="549" width="0.0158%" height="15" fill="rgb(233,185,4)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="86.9251%" y="533" width="0.0158%" height="15" fill="rgb(224,154,43)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="86.9251%" y="517" width="0.0158%" height="15" fill="rgb(235,156,15)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="86.9251%" y="501" width="0.0158%" height="15" fill="rgb(211,55,43)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="86.9251%" y="485" width="0.0158%" height="15" fill="rgb(247,149,40)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="495.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="86.9251%" y="469" width="0.0158%" height="15" fill="rgb(232,171,16)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="479.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="86.9251%" y="453" width="0.0158%" height="15" fill="rgb(215,117,49)" fg:x="44038" fg:w="8"/><text x="87.1751%" y="463.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="86.9271%" y="437" width="0.0138%" height="15" fill="rgb(246,194,11)" fg:x="44039" fg:w="7"/><text x="87.1771%" y="447.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="86.9291%" y="421" width="0.0118%" height="15" fill="rgb(242,101,44)" fg:x="44040" fg:w="6"/><text x="87.1791%" y="431.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (9 samples, 0.02%)</title><rect x="86.9508%" y="565" width="0.0178%" height="15" fill="rgb(226,174,6)" fg:x="44051" fg:w="9"/><text x="87.2008%" y="575.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (9 samples, 0.02%)</title><rect x="86.9508%" y="549" width="0.0178%" height="15" fill="rgb(213,150,20)" fg:x="44051" fg:w="9"/><text x="87.2008%" y="559.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (9 samples, 0.02%)</title><rect x="86.9508%" y="533" width="0.0178%" height="15" fill="rgb(222,124,42)" fg:x="44051" fg:w="9"/><text x="87.2008%" y="543.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (9 samples, 0.02%)</title><rect x="86.9508%" y="517" width="0.0178%" height="15" fill="rgb(250,19,47)" fg:x="44051" fg:w="9"/><text x="87.2008%" y="527.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (9 samples, 0.02%)</title><rect x="86.9863%" y="533" width="0.0178%" height="15" fill="rgb(241,217,19)" fg:x="44069" fg:w="9"/><text x="87.2363%" y="543.50"></text></g><g><title>glam::mat4::Mat4::inverse (30 samples, 0.06%)</title><rect x="86.9685%" y="565" width="0.0592%" height="15" fill="rgb(207,210,34)" fg:x="44060" fg:w="30"/><text x="87.2185%" y="575.50"></text></g><g><title>glam::core::sse2::matrix::&lt;impl glam::core::traits::matrix::FloatMatrix4x4&lt;f32,core::core_arch::x86::__m128&gt; for glam::core::storage::Columns4&lt;core::core_arch::x86::__m128&gt;&gt;::inverse (27 samples, 0.05%)</title><rect x="86.9745%" y="549" width="0.0533%" height="15" fill="rgb(244,45,4)" fg:x="44063" fg:w="27"/><text x="87.2245%" y="559.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector4&lt;f32&gt; for core::core_arch::x86::__m128&gt;::dot (8 samples, 0.02%)</title><rect x="87.0120%" y="533" width="0.0158%" height="15" fill="rgb(252,134,50)" fg:x="44082" fg:w="8"/><text x="87.2620%" y="543.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes (75 samples, 0.15%)</title><rect x="86.8837%" y="581" width="0.1480%" height="15" fill="rgb(238,74,2)" fg:x="44017" fg:w="75"/><text x="87.1337%" y="591.50"></text></g><g><title>&lt;bevy_render::view::visibility::VisibleEntities as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="87.0356%" y="565" width="0.0197%" height="15" fill="rgb(226,58,46)" fg:x="44094" fg:w="10"/><text x="87.2856%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="87.0356%" y="549" width="0.0197%" height="15" fill="rgb(232,83,35)" fg:x="44094" fg:w="10"/><text x="87.2856%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="87.0376%" y="533" width="0.0178%" height="15" fill="rgb(212,148,47)" fg:x="44095" fg:w="9"/><text x="87.2876%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="87.0376%" y="517" width="0.0178%" height="15" fill="rgb(235,29,1)" fg:x="44095" fg:w="9"/><text x="87.2876%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="87.0376%" y="501" width="0.0178%" height="15" fill="rgb(247,55,37)" fg:x="44095" fg:w="9"/><text x="87.2876%" y="511.50"></text></g><g><title>bevy_render::camera::camera::extract_cameras (14 samples, 0.03%)</title><rect x="87.0317%" y="581" width="0.0276%" height="15" fill="rgb(222,48,3)" fg:x="44092" fg:w="14"/><text x="87.2817%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (93 samples, 0.18%)</title><rect x="86.8837%" y="645" width="0.1836%" height="15" fill="rgb(234,21,33)" fg:x="44017" fg:w="93"/><text x="87.1337%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (93 samples, 0.18%)</title><rect x="86.8837%" y="629" width="0.1836%" height="15" fill="rgb(247,178,53)" fg:x="44017" fg:w="93"/><text x="87.1337%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (93 samples, 0.18%)</title><rect x="86.8837%" y="613" width="0.1836%" height="15" fill="rgb(225,75,7)" fg:x="44017" fg:w="93"/><text x="87.1337%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (93 samples, 0.18%)</title><rect x="86.8837%" y="597" width="0.1836%" height="15" fill="rgb(219,199,7)" fg:x="44017" fg:w="93"/><text x="87.1337%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (237 samples, 0.47%)</title><rect x="86.6053%" y="901" width="0.4678%" height="15" fill="rgb(209,93,42)" fg:x="43876" fg:w="237"/><text x="86.8553%" y="911.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (237 samples, 0.47%)</title><rect x="86.6053%" y="885" width="0.4678%" height="15" fill="rgb(240,175,17)" fg:x="43876" fg:w="237"/><text x="86.8553%" y="895.50"></text></g><g><title>bevy_render::extract (144 samples, 0.28%)</title><rect x="86.7889%" y="869" width="0.2842%" height="15" fill="rgb(232,106,7)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (144 samples, 0.28%)</title><rect x="86.7889%" y="853" width="0.2842%" height="15" fill="rgb(242,106,43)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (144 samples, 0.28%)</title><rect x="86.7889%" y="837" width="0.2842%" height="15" fill="rgb(242,61,37)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (144 samples, 0.28%)</title><rect x="86.7889%" y="821" width="0.2842%" height="15" fill="rgb(205,72,10)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (144 samples, 0.28%)</title><rect x="86.7889%" y="805" width="0.2842%" height="15" fill="rgb(214,184,36)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (144 samples, 0.28%)</title><rect x="86.7889%" y="789" width="0.2842%" height="15" fill="rgb(206,107,18)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (144 samples, 0.28%)</title><rect x="86.7889%" y="773" width="0.2842%" height="15" fill="rgb(210,75,5)" fg:x="43969" fg:w="144"/><text x="87.0389%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (131 samples, 0.26%)</title><rect x="86.8146%" y="757" width="0.2586%" height="15" fill="rgb(205,3,19)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (131 samples, 0.26%)</title><rect x="86.8146%" y="741" width="0.2586%" height="15" fill="rgb(207,181,42)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (131 samples, 0.26%)</title><rect x="86.8146%" y="725" width="0.2586%" height="15" fill="rgb(229,179,43)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (131 samples, 0.26%)</title><rect x="86.8146%" y="709" width="0.2586%" height="15" fill="rgb(246,95,30)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (131 samples, 0.26%)</title><rect x="86.8146%" y="693" width="0.2586%" height="15" fill="rgb(234,144,45)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (131 samples, 0.26%)</title><rect x="86.8146%" y="677" width="0.2586%" height="15" fill="rgb(250,54,25)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (131 samples, 0.26%)</title><rect x="86.8146%" y="661" width="0.2586%" height="15" fill="rgb(215,195,40)" fg:x="43982" fg:w="131"/><text x="87.0646%" y="671.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (29 samples, 0.06%)</title><rect x="87.1442%" y="373" width="0.0572%" height="15" fill="rgb(233,188,42)" fg:x="44149" fg:w="29"/><text x="87.3942%" y="383.50"></text></g><g><title>core::slice::ascii::is_ascii (29 samples, 0.06%)</title><rect x="87.1442%" y="357" width="0.0572%" height="15" fill="rgb(247,227,35)" fg:x="44149" fg:w="29"/><text x="87.3942%" y="367.50"></text></g><g><title>core::slice::ascii::contains_nonascii (27 samples, 0.05%)</title><rect x="87.1482%" y="341" width="0.0533%" height="15" fill="rgb(249,124,27)" fg:x="44151" fg:w="27"/><text x="87.3982%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="87.2015%" y="357" width="0.0118%" height="15" fill="rgb(219,207,25)" fg:x="44178" fg:w="6"/><text x="87.4515%" y="367.50"></text></g><g><title>csv::byte_record::Bounds::end (8 samples, 0.02%)</title><rect x="87.2015%" y="373" width="0.0158%" height="15" fill="rgb(241,216,47)" fg:x="44178" fg:w="8"/><text x="87.4515%" y="383.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (43 samples, 0.08%)</title><rect x="87.1383%" y="389" width="0.0849%" height="15" fill="rgb(233,82,50)" fg:x="44146" fg:w="43"/><text x="87.3883%" y="399.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (6 samples, 0.01%)</title><rect x="87.2488%" y="357" width="0.0118%" height="15" fill="rgb(232,63,2)" fg:x="44202" fg:w="6"/><text x="87.4988%" y="367.50"></text></g><g><title>csv::reader::ReaderState::add_record (6 samples, 0.01%)</title><rect x="87.2705%" y="357" width="0.0118%" height="15" fill="rgb(236,184,28)" fg:x="44213" fg:w="6"/><text x="87.5205%" y="367.50"></text></g><g><title>csv_core::reader::Dfa::get_output (120 samples, 0.24%)</title><rect x="87.6377%" y="325" width="0.2369%" height="15" fill="rgb(254,63,27)" fg:x="44399" fg:w="120"/><text x="87.8877%" y="335.50"></text></g><g><title>csv_core::reader::Dfa::new_read_record_result (18 samples, 0.04%)</title><rect x="87.8745%" y="325" width="0.0355%" height="15" fill="rgb(253,106,28)" fg:x="44519" fg:w="18"/><text x="88.1245%" y="335.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (829 samples, 1.64%)</title><rect x="87.3001%" y="341" width="1.6363%" height="15" fill="rgb(225,141,39)" fg:x="44228" fg:w="829"/><text x="87.5501%" y="351.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (520 samples, 1.03%)</title><rect x="87.9101%" y="325" width="1.0264%" height="15" fill="rgb(222,157,20)" fg:x="44537" fg:w="520"/><text x="88.1601%" y="335.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (924 samples, 1.82%)</title><rect x="87.1166%" y="421" width="1.8239%" height="15" fill="rgb(210,190,9)" fg:x="44135" fg:w="924"/><text x="87.3666%" y="431.50">c..</text></g><g><title>csv::string_record::StringRecord::read (918 samples, 1.81%)</title><rect x="87.1284%" y="405" width="1.8120%" height="15" fill="rgb(242,167,7)" fg:x="44141" fg:w="918"/><text x="87.3784%" y="415.50">c..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (870 samples, 1.72%)</title><rect x="87.2232%" y="389" width="1.7173%" height="15" fill="rgb(227,82,41)" fg:x="44189" fg:w="870"/><text x="87.4732%" y="399.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (860 samples, 1.70%)</title><rect x="87.2429%" y="373" width="1.6975%" height="15" fill="rgb(222,131,13)" fg:x="44199" fg:w="860"/><text x="87.4929%" y="383.50"></text></g><g><title>csv_core::reader::Reader::read_record (840 samples, 1.66%)</title><rect x="87.2824%" y="357" width="1.6580%" height="15" fill="rgb(221,98,26)" fg:x="44219" fg:w="840"/><text x="87.5324%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (16 samples, 0.03%)</title><rect x="88.9542%" y="389" width="0.0316%" height="15" fill="rgb(251,63,52)" fg:x="45066" fg:w="16"/><text x="89.2042%" y="399.50"></text></g><g><title>csv::string_record::StringRecord::iter (8 samples, 0.02%)</title><rect x="88.9858%" y="389" width="0.0158%" height="15" fill="rgb(246,25,43)" fg:x="45082" fg:w="8"/><text x="89.2358%" y="399.50"></text></g><g><title>&lt;&amp;csv::string_record::StringRecord as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.02%)</title><rect x="88.9858%" y="373" width="0.0158%" height="15" fill="rgb(247,167,15)" fg:x="45082" fg:w="8"/><text x="89.2358%" y="383.50"></text></g><g><title>csv::byte_record::ByteRecord::iter (8 samples, 0.02%)</title><rect x="88.9858%" y="357" width="0.0158%" height="15" fill="rgb(240,104,42)" fg:x="45082" fg:w="8"/><text x="89.2358%" y="367.50"></text></g><g><title>&lt;&amp;csv::byte_record::ByteRecord as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.02%)</title><rect x="88.9858%" y="341" width="0.0158%" height="15" fill="rgb(224,54,6)" fg:x="45082" fg:w="8"/><text x="89.2358%" y="351.50"></text></g><g><title>csv::byte_record::ByteRecord::as_slice (8 samples, 0.02%)</title><rect x="88.9858%" y="325" width="0.0158%" height="15" fill="rgb(244,108,35)" fg:x="45082" fg:w="8"/><text x="89.2358%" y="335.50"></text></g><g><title>csv::byte_record::Bounds::end (7 samples, 0.01%)</title><rect x="88.9878%" y="309" width="0.0138%" height="15" fill="rgb(216,154,2)" fg:x="45083" fg:w="7"/><text x="89.2378%" y="319.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (6 samples, 0.01%)</title><rect x="89.0174%" y="357" width="0.0118%" height="15" fill="rgb(222,8,47)" fg:x="45098" fg:w="6"/><text x="89.2674%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="89.0529%" y="309" width="0.0237%" height="15" fill="rgb(252,93,1)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="319.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (12 samples, 0.02%)</title><rect x="89.0529%" y="293" width="0.0237%" height="15" fill="rgb(223,226,51)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="303.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (12 samples, 0.02%)</title><rect x="89.0529%" y="277" width="0.0237%" height="15" fill="rgb(206,147,9)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="287.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.02%)</title><rect x="89.0529%" y="261" width="0.0237%" height="15" fill="rgb(248,180,41)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="271.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (12 samples, 0.02%)</title><rect x="89.0529%" y="245" width="0.0237%" height="15" fill="rgb(209,47,50)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="255.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (12 samples, 0.02%)</title><rect x="89.0529%" y="229" width="0.0237%" height="15" fill="rgb(243,65,31)" fg:x="45116" fg:w="12"/><text x="89.3029%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.01%)</title><rect x="89.1832%" y="197" width="0.0138%" height="15" fill="rgb(228,128,1)" fg:x="45182" fg:w="7"/><text x="89.4332%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="89.1832%" y="181" width="0.0138%" height="15" fill="rgb(231,192,16)" fg:x="45182" fg:w="7"/><text x="89.4332%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="89.1832%" y="165" width="0.0138%" height="15" fill="rgb(224,26,40)" fg:x="45182" fg:w="7"/><text x="89.4332%" y="175.50"></text></g><g><title>serde::de::MapAccess::next_key (86 samples, 0.17%)</title><rect x="89.0529%" y="341" width="0.1698%" height="15" fill="rgb(214,192,17)" fg:x="45116" fg:w="86"/><text x="89.3029%" y="351.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (86 samples, 0.17%)</title><rect x="89.0529%" y="325" width="0.1698%" height="15" fill="rgb(225,147,18)" fg:x="45116" fg:w="86"/><text x="89.3029%" y="335.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (69 samples, 0.14%)</title><rect x="89.0865%" y="309" width="0.1362%" height="15" fill="rgb(205,35,11)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="319.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (69 samples, 0.14%)</title><rect x="89.0865%" y="293" width="0.1362%" height="15" fill="rgb(242,40,42)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="303.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (69 samples, 0.14%)</title><rect x="89.0865%" y="277" width="0.1362%" height="15" fill="rgb(250,170,13)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (69 samples, 0.14%)</title><rect x="89.0865%" y="261" width="0.1362%" height="15" fill="rgb(240,161,28)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (69 samples, 0.14%)</title><rect x="89.0865%" y="245" width="0.1362%" height="15" fill="rgb(245,179,12)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="255.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.14%)</title><rect x="89.0865%" y="229" width="0.1362%" height="15" fill="rgb(250,92,32)" fg:x="45133" fg:w="69"/><text x="89.3365%" y="239.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.13%)</title><rect x="89.0944%" y="213" width="0.1283%" height="15" fill="rgb(233,10,40)" fg:x="45137" fg:w="65"/><text x="89.3444%" y="223.50"></text></g><g><title>csv::byte_record::Bounds::ends (13 samples, 0.03%)</title><rect x="89.1970%" y="197" width="0.0257%" height="15" fill="rgb(217,98,1)" fg:x="45189" fg:w="13"/><text x="89.4470%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="89.2108%" y="181" width="0.0118%" height="15" fill="rgb(238,202,7)" fg:x="45196" fg:w="6"/><text x="89.4608%" y="191.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.10%)</title><rect x="89.2365%" y="197" width="0.1007%" height="15" fill="rgb(222,91,3)" fg:x="45209" fg:w="51"/><text x="89.4865%" y="207.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.09%)</title><rect x="89.2464%" y="181" width="0.0908%" height="15" fill="rgb(211,170,49)" fg:x="45214" fg:w="46"/><text x="89.4964%" y="191.50"></text></g><g><title>csv::byte_record::Bounds::ends (9 samples, 0.02%)</title><rect x="89.3194%" y="165" width="0.0178%" height="15" fill="rgb(253,139,18)" fg:x="45251" fg:w="9"/><text x="89.5694%" y="175.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (57 samples, 0.11%)</title><rect x="89.2286%" y="293" width="0.1125%" height="15" fill="rgb(222,4,43)" fg:x="45205" fg:w="57"/><text x="89.4786%" y="303.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (57 samples, 0.11%)</title><rect x="89.2286%" y="277" width="0.1125%" height="15" fill="rgb(207,205,12)" fg:x="45205" fg:w="57"/><text x="89.4786%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field_bytes (57 samples, 0.11%)</title><rect x="89.2286%" y="261" width="0.1125%" height="15" fill="rgb(216,159,46)" fg:x="45205" fg:w="57"/><text x="89.4786%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field_bytes (57 samples, 0.11%)</title><rect x="89.2286%" y="245" width="0.1125%" height="15" fill="rgb(236,115,1)" fg:x="45205" fg:w="57"/><text x="89.4786%" y="255.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (57 samples, 0.11%)</title><rect x="89.2286%" y="229" width="0.1125%" height="15" fill="rgb(251,35,33)" fg:x="45205" fg:w="57"/><text x="89.4786%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.10%)</title><rect x="89.2365%" y="213" width="0.1046%" height="15" fill="rgb(248,62,51)" fg:x="45209" fg:w="53"/><text x="89.4865%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="89.3885%" y="181" width="0.0158%" height="15" fill="rgb(254,180,19)" fg:x="45286" fg:w="8"/><text x="89.6385%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.02%)</title><rect x="89.3885%" y="165" width="0.0158%" height="15" fill="rgb(217,100,32)" fg:x="45286" fg:w="8"/><text x="89.6385%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="89.3885%" y="149" width="0.0158%" height="15" fill="rgb(224,71,22)" fg:x="45286" fg:w="8"/><text x="89.6385%" y="159.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.07%)</title><rect x="89.3470%" y="213" width="0.0651%" height="15" fill="rgb(251,185,33)" fg:x="45265" fg:w="33"/><text x="89.5970%" y="223.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.06%)</title><rect x="89.3510%" y="197" width="0.0612%" height="15" fill="rgb(209,75,48)" fg:x="45267" fg:w="31"/><text x="89.6010%" y="207.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (39 samples, 0.08%)</title><rect x="89.3411%" y="261" width="0.0770%" height="15" fill="rgb(253,190,16)" fg:x="45262" fg:w="39"/><text x="89.5911%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (39 samples, 0.08%)</title><rect x="89.3411%" y="245" width="0.0770%" height="15" fill="rgb(226,140,1)" fg:x="45262" fg:w="39"/><text x="89.5911%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.08%)</title><rect x="89.3411%" y="229" width="0.0770%" height="15" fill="rgb(206,75,30)" fg:x="45262" fg:w="39"/><text x="89.5911%" y="239.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_f32 (6 samples, 0.01%)</title><rect x="89.4181%" y="261" width="0.0118%" height="15" fill="rgb(231,208,37)" fg:x="45301" fg:w="6"/><text x="89.6681%" y="271.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.03%)</title><rect x="89.4299%" y="229" width="0.0316%" height="15" fill="rgb(238,136,40)" fg:x="45307" fg:w="16"/><text x="89.6799%" y="239.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (41 samples, 0.08%)</title><rect x="89.8681%" y="197" width="0.0809%" height="15" fill="rgb(247,137,17)" fg:x="45529" fg:w="41"/><text x="90.1181%" y="207.50"></text></g><g><title>core::num::dec2flt::lemire::full_multiplication (19 samples, 0.04%)</title><rect x="89.9116%" y="181" width="0.0375%" height="15" fill="rgb(240,60,40)" fg:x="45551" fg:w="19"/><text x="90.1616%" y="191.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (128 samples, 0.25%)</title><rect x="89.7023%" y="213" width="0.2527%" height="15" fill="rgb(236,68,50)" fg:x="45445" fg:w="128"/><text x="89.9523%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (21 samples, 0.04%)</title><rect x="90.0201%" y="197" width="0.0415%" height="15" fill="rgb(230,42,12)" fg:x="45606" fg:w="21"/><text x="90.2701%" y="207.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::first_is (13 samples, 0.03%)</title><rect x="90.0892%" y="181" width="0.0257%" height="15" fill="rgb(219,16,16)" fg:x="45641" fg:w="13"/><text x="90.3392%" y="191.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.03%)</title><rect x="90.0892%" y="165" width="0.0257%" height="15" fill="rgb(220,38,35)" fg:x="45641" fg:w="13"/><text x="90.3392%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.03%)</title><rect x="90.0892%" y="149" width="0.0257%" height="15" fill="rgb(228,33,1)" fg:x="45641" fg:w="13"/><text x="90.3392%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (13 samples, 0.03%)</title><rect x="90.0892%" y="133" width="0.0257%" height="15" fill="rgb(241,46,31)" fg:x="45641" fg:w="13"/><text x="90.3392%" y="143.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::read_u64 (10 samples, 0.02%)</title><rect x="90.1307%" y="165" width="0.0197%" height="15" fill="rgb(232,58,20)" fg:x="45662" fg:w="10"/><text x="90.3807%" y="175.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::read_u64_unchecked (8 samples, 0.02%)</title><rect x="90.1346%" y="149" width="0.0158%" height="15" fill="rgb(206,228,53)" fg:x="45664" fg:w="8"/><text x="90.3846%" y="159.50"></text></g><g><title>core::ptr::read_unaligned (8 samples, 0.02%)</title><rect x="90.1346%" y="133" width="0.0158%" height="15" fill="rgb(206,88,33)" fg:x="45664" fg:w="8"/><text x="90.3846%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="90.1346%" y="117" width="0.0158%" height="15" fill="rgb(238,69,7)" fg:x="45664" fg:w="8"/><text x="90.3846%" y="127.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (19 samples, 0.04%)</title><rect x="90.1544%" y="165" width="0.0375%" height="15" fill="rgb(250,21,46)" fg:x="45674" fg:w="19"/><text x="90.4044%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (6 samples, 0.01%)</title><rect x="90.1800%" y="149" width="0.0118%" height="15" fill="rgb(215,212,21)" fg:x="45687" fg:w="6"/><text x="90.4300%" y="159.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_8digits (40 samples, 0.08%)</title><rect x="90.1208%" y="181" width="0.0790%" height="15" fill="rgb(211,35,12)" fg:x="45657" fg:w="40"/><text x="90.3708%" y="191.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (11 samples, 0.02%)</title><rect x="90.2925%" y="149" width="0.0217%" height="15" fill="rgb(231,184,16)" fg:x="45744" fg:w="11"/><text x="90.5425%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.02%)</title><rect x="90.3261%" y="133" width="0.0197%" height="15" fill="rgb(242,140,15)" fg:x="45761" fg:w="10"/><text x="90.5761%" y="143.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::{{closure}} (28 samples, 0.06%)</title><rect x="90.3182%" y="149" width="0.0553%" height="15" fill="rgb(220,37,14)" fg:x="45757" fg:w="28"/><text x="90.5682%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (14 samples, 0.03%)</title><rect x="90.3458%" y="133" width="0.0276%" height="15" fill="rgb(223,146,22)" fg:x="45771" fg:w="14"/><text x="90.5958%" y="143.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::parse_digits (92 samples, 0.18%)</title><rect x="90.1998%" y="165" width="0.1816%" height="15" fill="rgb(216,132,15)" fg:x="45697" fg:w="92"/><text x="90.4498%" y="175.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (215 samples, 0.42%)</title><rect x="89.9629%" y="213" width="0.4244%" height="15" fill="rgb(248,83,5)" fg:x="45577" fg:w="215"/><text x="90.2129%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (165 samples, 0.33%)</title><rect x="90.0616%" y="197" width="0.3257%" height="15" fill="rgb(231,206,48)" fg:x="45627" fg:w="165"/><text x="90.3116%" y="207.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (95 samples, 0.19%)</title><rect x="90.1998%" y="181" width="0.1875%" height="15" fill="rgb(253,185,37)" fg:x="45697" fg:w="95"/><text x="90.4498%" y="191.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,710 samples, 3.38%)</title><rect x="87.0732%" y="437" width="3.3753%" height="15" fill="rgb(208,21,44)" fg:x="44113" fg:w="1710"/><text x="87.3232%" y="447.50">&lt;cs..</text></g><g><title>csv::string_record::StringRecord::deserialize (764 samples, 1.51%)</title><rect x="88.9404%" y="421" width="1.5080%" height="15" fill="rgb(236,125,4)" fg:x="45059" fg:w="764"/><text x="89.1904%" y="431.50"></text></g><g><title>csv::deserializer::deserialize_string_record (764 samples, 1.51%)</title><rect x="88.9404%" y="405" width="1.5080%" height="15" fill="rgb(226,134,25)" fg:x="45059" fg:w="764"/><text x="89.1904%" y="415.50"></text></g><g><title>stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize (733 samples, 1.45%)</title><rect x="89.0016%" y="389" width="1.4468%" height="15" fill="rgb(250,201,12)" fg:x="45090" fg:w="733"/><text x="89.2516%" y="399.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (733 samples, 1.45%)</title><rect x="89.0016%" y="373" width="1.4468%" height="15" fill="rgb(225,92,18)" fg:x="45090" fg:w="733"/><text x="89.2516%" y="383.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (719 samples, 1.42%)</title><rect x="89.0293%" y="357" width="1.4192%" height="15" fill="rgb(227,35,22)" fg:x="45104" fg:w="719"/><text x="89.2793%" y="367.50"></text></g><g><title>serde::de::MapAccess::next_value (621 samples, 1.23%)</title><rect x="89.2227%" y="341" width="1.2258%" height="15" fill="rgb(214,180,52)" fg:x="45202" fg:w="621"/><text x="89.4727%" y="351.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed (621 samples, 1.23%)</title><rect x="89.2227%" y="325" width="1.2258%" height="15" fill="rgb(233,55,38)" fg:x="45202" fg:w="621"/><text x="89.4727%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (619 samples, 1.22%)</title><rect x="89.2266%" y="309" width="1.2218%" height="15" fill="rgb(249,171,43)" fg:x="45204" fg:w="619"/><text x="89.4766%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (561 samples, 1.11%)</title><rect x="89.3411%" y="293" width="1.1073%" height="15" fill="rgb(239,87,2)" fg:x="45262" fg:w="561"/><text x="89.5911%" y="303.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (561 samples, 1.11%)</title><rect x="89.3411%" y="277" width="1.1073%" height="15" fill="rgb(248,141,5)" fg:x="45262" fg:w="561"/><text x="89.5911%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (516 samples, 1.02%)</title><rect x="89.4299%" y="261" width="1.0185%" height="15" fill="rgb(238,33,42)" fg:x="45307" fg:w="516"/><text x="89.6799%" y="271.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (516 samples, 1.02%)</title><rect x="89.4299%" y="245" width="1.0185%" height="15" fill="rgb(231,57,19)" fg:x="45307" fg:w="516"/><text x="89.6799%" y="255.50"></text></g><g><title>core::num::dec2flt::dec2flt (500 samples, 0.99%)</title><rect x="89.4615%" y="229" width="0.9869%" height="15" fill="rgb(214,78,53)" fg:x="45323" fg:w="500"/><text x="89.7115%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (31 samples, 0.06%)</title><rect x="90.3873%" y="213" width="0.0612%" height="15" fill="rgb(206,132,29)" fg:x="45792" fg:w="31"/><text x="90.6373%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.02%)</title><rect x="90.4899%" y="389" width="0.0178%" height="15" fill="rgb(248,174,31)" fg:x="45844" fg:w="9"/><text x="90.7399%" y="399.50"></text></g><g><title>bevy_render::color::Color::hex (41 samples, 0.08%)</title><rect x="90.4524%" y="437" width="0.0809%" height="15" fill="rgb(221,87,13)" fg:x="45825" fg:w="41"/><text x="90.7024%" y="447.50"></text></g><g><title>bevy_render::color::decode_rgb (41 samples, 0.08%)</title><rect x="90.4524%" y="421" width="0.0809%" height="15" fill="rgb(223,197,17)" fg:x="45825" fg:w="41"/><text x="90.7024%" y="431.50"></text></g><g><title>hex::decode_to_slice (41 samples, 0.08%)</title><rect x="90.4524%" y="405" width="0.0809%" height="15" fill="rgb(220,144,50)" fg:x="45825" fg:w="41"/><text x="90.7024%" y="415.50"></text></g><g><title>hex::val (13 samples, 0.03%)</title><rect x="90.5077%" y="389" width="0.0257%" height="15" fill="rgb(244,201,11)" fg:x="45853" fg:w="13"/><text x="90.7577%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.04%)</title><rect x="90.5491%" y="277" width="0.0395%" height="15" fill="rgb(249,81,34)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.04%)</title><rect x="90.5491%" y="261" width="0.0395%" height="15" fill="rgb(205,161,12)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.04%)</title><rect x="90.5491%" y="245" width="0.0395%" height="15" fill="rgb(252,139,50)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.04%)</title><rect x="90.5491%" y="229" width="0.0395%" height="15" fill="rgb(205,169,14)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.04%)</title><rect x="90.5491%" y="213" width="0.0395%" height="15" fill="rgb(248,198,33)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="223.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.04%)</title><rect x="90.5491%" y="197" width="0.0395%" height="15" fill="rgb(236,23,21)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="207.50"></text></g><g><title>__realloc (20 samples, 0.04%)</title><rect x="90.5491%" y="181" width="0.0395%" height="15" fill="rgb(231,13,38)" fg:x="45874" fg:w="20"/><text x="90.7991%" y="191.50"></text></g><g><title>_int_realloc (19 samples, 0.04%)</title><rect x="90.5511%" y="165" width="0.0375%" height="15" fill="rgb(239,139,21)" fg:x="45875" fg:w="19"/><text x="90.8011%" y="175.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.04%)</title><rect x="90.5511%" y="149" width="0.0375%" height="15" fill="rgb(222,164,45)" fg:x="45875" fg:w="19"/><text x="90.8011%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.06%)</title><rect x="90.5452%" y="293" width="0.0612%" height="15" fill="rgb(230,52,27)" fg:x="45872" fg:w="31"/><text x="90.7952%" y="303.50"></text></g><g><title>core::ptr::write (9 samples, 0.02%)</title><rect x="90.5886%" y="277" width="0.0178%" height="15" fill="rgb(227,143,42)" fg:x="45894" fg:w="9"/><text x="90.8386%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.05%)</title><rect x="90.6182%" y="277" width="0.0513%" height="15" fill="rgb(249,127,1)" fg:x="45909" fg:w="26"/><text x="90.8682%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="90.7110%" y="165" width="0.0158%" height="15" fill="rgb(243,107,26)" fg:x="45956" fg:w="8"/><text x="90.9610%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="90.6814%" y="229" width="0.0612%" height="15" fill="rgb(225,7,45)" fg:x="45941" fg:w="31"/><text x="90.9314%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="90.6814%" y="213" width="0.0612%" height="15" fill="rgb(241,88,38)" fg:x="45941" fg:w="31"/><text x="90.9314%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="90.6814%" y="197" width="0.0612%" height="15" fill="rgb(226,121,9)" fg:x="45941" fg:w="31"/><text x="90.9314%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.04%)</title><rect x="90.7011%" y="181" width="0.0415%" height="15" fill="rgb(253,60,29)" fg:x="45951" fg:w="21"/><text x="90.9511%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.02%)</title><rect x="90.7268%" y="165" width="0.0158%" height="15" fill="rgb(244,181,39)" fg:x="45964" fg:w="8"/><text x="90.9768%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="90.7485%" y="101" width="0.0217%" height="15" fill="rgb(252,203,31)" fg:x="45975" fg:w="11"/><text x="90.9985%" y="111.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (16 samples, 0.03%)</title><rect x="90.7426%" y="165" width="0.0316%" height="15" fill="rgb(224,120,8)" fg:x="45972" fg:w="16"/><text x="90.9926%" y="175.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.03%)</title><rect x="90.7426%" y="149" width="0.0316%" height="15" fill="rgb(205,171,54)" fg:x="45972" fg:w="16"/><text x="90.9926%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="90.7485%" y="133" width="0.0257%" height="15" fill="rgb(235,89,11)" fg:x="45975" fg:w="13"/><text x="90.9985%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="90.7485%" y="117" width="0.0257%" height="15" fill="rgb(212,180,28)" fg:x="45975" fg:w="13"/><text x="90.9985%" y="127.50"></text></g><g><title>hashbrown::map::make_insert_hash (62 samples, 0.12%)</title><rect x="90.6814%" y="261" width="0.1224%" height="15" fill="rgb(247,84,49)" fg:x="45941" fg:w="62"/><text x="90.9314%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (62 samples, 0.12%)</title><rect x="90.6814%" y="245" width="0.1224%" height="15" fill="rgb(236,187,52)" fg:x="45941" fg:w="62"/><text x="90.9314%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.06%)</title><rect x="90.7426%" y="229" width="0.0612%" height="15" fill="rgb(227,24,15)" fg:x="45972" fg:w="31"/><text x="90.9926%" y="239.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::hash::Hash&gt;::hash (31 samples, 0.06%)</title><rect x="90.7426%" y="213" width="0.0612%" height="15" fill="rgb(227,211,13)" fg:x="45972" fg:w="31"/><text x="90.9926%" y="223.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (31 samples, 0.06%)</title><rect x="90.7426%" y="197" width="0.0612%" height="15" fill="rgb(245,52,14)" fg:x="45972" fg:w="31"/><text x="90.9926%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (31 samples, 0.06%)</title><rect x="90.7426%" y="181" width="0.0612%" height="15" fill="rgb(225,185,13)" fg:x="45972" fg:w="31"/><text x="90.9926%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash_slice (15 samples, 0.03%)</title><rect x="90.7742%" y="165" width="0.0296%" height="15" fill="rgb(217,160,29)" fg:x="45988" fg:w="15"/><text x="91.0242%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="90.7742%" y="149" width="0.0296%" height="15" fill="rgb(216,115,53)" fg:x="45988" fg:w="15"/><text x="91.0242%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="90.7742%" y="133" width="0.0296%" height="15" fill="rgb(236,99,5)" fg:x="45988" fg:w="15"/><text x="91.0242%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="90.7742%" y="117" width="0.0296%" height="15" fill="rgb(222,60,38)" fg:x="45988" fg:w="15"/><text x="91.0242%" y="127.50"></text></g><g><title>glam::vec3::IVec3::cmpeq (23 samples, 0.05%)</title><rect x="90.8156%" y="181" width="0.0454%" height="15" fill="rgb(212,82,22)" fg:x="46009" fg:w="23"/><text x="91.0656%" y="191.50"></text></g><g><title>glam::core::scalar::vector::&lt;impl glam::core::traits::vector::Vector&lt;T&gt; for glam::core::storage::XYZ&lt;T&gt;&gt;::cmpeq (23 samples, 0.05%)</title><rect x="90.8156%" y="165" width="0.0454%" height="15" fill="rgb(214,48,28)" fg:x="46009" fg:w="23"/><text x="91.0656%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (18 samples, 0.04%)</title><rect x="90.8255%" y="149" width="0.0355%" height="15" fill="rgb(245,196,50)" fg:x="46014" fg:w="18"/><text x="91.0755%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (26 samples, 0.05%)</title><rect x="90.8117%" y="229" width="0.0513%" height="15" fill="rgb(225,159,46)" fg:x="46007" fg:w="26"/><text x="91.0617%" y="239.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (24 samples, 0.05%)</title><rect x="90.8156%" y="213" width="0.0474%" height="15" fill="rgb(207,195,48)" fg:x="46009" fg:w="24"/><text x="91.0656%" y="223.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::cmp::PartialEq&gt;::eq (24 samples, 0.05%)</title><rect x="90.8156%" y="197" width="0.0474%" height="15" fill="rgb(240,73,3)" fg:x="46009" fg:w="24"/><text x="91.0656%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (171 samples, 0.34%)</title><rect x="90.5452%" y="325" width="0.3375%" height="15" fill="rgb(245,57,23)" fg:x="45872" fg:w="171"/><text x="90.7952%" y="335.50"></text></g><g><title>itertools::group_map::into_group_map::{{closure}} (171 samples, 0.34%)</title><rect x="90.5452%" y="309" width="0.3375%" height="15" fill="rgb(240,75,18)" fg:x="45872" fg:w="171"/><text x="90.7952%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (140 samples, 0.28%)</title><rect x="90.6064%" y="293" width="0.2763%" height="15" fill="rgb(238,168,12)" fg:x="45903" fg:w="140"/><text x="90.8564%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (108 samples, 0.21%)</title><rect x="90.6695%" y="277" width="0.2132%" height="15" fill="rgb(226,20,40)" fg:x="45935" fg:w="108"/><text x="90.9195%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.08%)</title><rect x="90.8038%" y="261" width="0.0790%" height="15" fill="rgb(224,130,35)" fg:x="46003" fg:w="40"/><text x="91.0538%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.08%)</title><rect x="90.8038%" y="245" width="0.0790%" height="15" fill="rgb(225,63,41)" fg:x="46003" fg:w="40"/><text x="91.0538%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="90.8689%" y="229" width="0.0138%" height="15" fill="rgb(219,3,3)" fg:x="46036" fg:w="7"/><text x="91.1189%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="90.8689%" y="213" width="0.0138%" height="15" fill="rgb(218,157,4)" fg:x="46036" fg:w="7"/><text x="91.1189%" y="223.50"></text></g><g><title>glam::vec3::Vec3::as_ivec3 (11 samples, 0.02%)</title><rect x="90.8886%" y="293" width="0.0217%" height="15" fill="rgb(232,76,36)" fg:x="46046" fg:w="11"/><text x="91.1386%" y="303.50"></text></g><g><title>itertools::Itertools::into_group_map_by (200 samples, 0.39%)</title><rect x="90.5333%" y="437" width="0.3948%" height="15" fill="rgb(247,36,0)" fg:x="45866" fg:w="200"/><text x="90.7833%" y="447.50"></text></g><g><title>itertools::group_map::into_group_map_by (200 samples, 0.39%)</title><rect x="90.5333%" y="421" width="0.3948%" height="15" fill="rgb(205,2,34)" fg:x="45866" fg:w="200"/><text x="90.7833%" y="431.50"></text></g><g><title>itertools::group_map::into_group_map (200 samples, 0.39%)</title><rect x="90.5333%" y="405" width="0.3948%" height="15" fill="rgb(239,136,13)" fg:x="45866" fg:w="200"/><text x="90.7833%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (200 samples, 0.39%)</title><rect x="90.5333%" y="389" width="0.3948%" height="15" fill="rgb(253,122,12)" fg:x="45866" fg:w="200"/><text x="90.7833%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (200 samples, 0.39%)</title><rect x="90.5333%" y="373" width="0.3948%" height="15" fill="rgb(222,174,7)" fg:x="45866" fg:w="200"/><text x="90.7833%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (199 samples, 0.39%)</title><rect x="90.5353%" y="357" width="0.3928%" height="15" fill="rgb(208,191,42)" fg:x="45867" fg:w="199"/><text x="90.7853%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (194 samples, 0.38%)</title><rect x="90.5452%" y="341" width="0.3829%" height="15" fill="rgb(237,212,15)" fg:x="45872" fg:w="194"/><text x="90.7952%" y="351.50"></text></g><g><title>itertools::group_map::into_group_map_by::{{closure}} (23 samples, 0.05%)</title><rect x="90.8827%" y="325" width="0.0454%" height="15" fill="rgb(215,65,20)" fg:x="46043" fg:w="23"/><text x="91.1327%" y="335.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize::{{closure}} (23 samples, 0.05%)</title><rect x="90.8827%" y="309" width="0.0454%" height="15" fill="rgb(232,103,11)" fg:x="46043" fg:w="23"/><text x="91.1327%" y="319.50"></text></g><g><title>glam::vec3::Vec3::floor (9 samples, 0.02%)</title><rect x="90.9103%" y="293" width="0.0178%" height="15" fill="rgb(235,148,18)" fg:x="46057" fg:w="9"/><text x="91.1603%" y="303.50"></text></g><g><title>glam::core::traits::vector::FloatVector3::floor (9 samples, 0.02%)</title><rect x="90.9103%" y="277" width="0.0178%" height="15" fill="rgb(240,173,7)" fg:x="46057" fg:w="9"/><text x="91.1603%" y="287.50"></text></g><g><title>&lt;f32 as glam::core::traits::scalar::Float&gt;::floor (9 samples, 0.02%)</title><rect x="90.9103%" y="261" width="0.0178%" height="15" fill="rgb(228,182,25)" fg:x="46057" fg:w="9"/><text x="91.1603%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (59 samples, 0.12%)</title><rect x="91.0722%" y="373" width="0.1165%" height="15" fill="rgb(247,3,52)" fg:x="46139" fg:w="59"/><text x="91.3222%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (59 samples, 0.12%)</title><rect x="91.0722%" y="357" width="0.1165%" height="15" fill="rgb(226,155,8)" fg:x="46139" fg:w="59"/><text x="91.3222%" y="367.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.12%)</title><rect x="91.0722%" y="341" width="0.1165%" height="15" fill="rgb(243,195,38)" fg:x="46139" fg:w="59"/><text x="91.3222%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (53 samples, 0.10%)</title><rect x="91.0840%" y="325" width="0.1046%" height="15" fill="rgb(254,181,33)" fg:x="46145" fg:w="53"/><text x="91.3340%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (53 samples, 0.10%)</title><rect x="91.0840%" y="309" width="0.1046%" height="15" fill="rgb(232,98,23)" fg:x="46145" fg:w="53"/><text x="91.3340%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.10%)</title><rect x="91.0840%" y="293" width="0.1046%" height="15" fill="rgb(205,23,10)" fg:x="46145" fg:w="53"/><text x="91.3340%" y="303.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (10 samples, 0.02%)</title><rect x="91.3288%" y="261" width="0.0197%" height="15" fill="rgb(212,124,38)" fg:x="46269" fg:w="10"/><text x="91.5788%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (10 samples, 0.02%)</title><rect x="91.3288%" y="245" width="0.0197%" height="15" fill="rgb(228,207,2)" fg:x="46269" fg:w="10"/><text x="91.5788%" y="255.50"></text></g><g><title>__GI___write (14 samples, 0.03%)</title><rect x="91.3505%" y="181" width="0.0276%" height="15" fill="rgb(215,120,22)" fg:x="46280" fg:w="14"/><text x="91.6005%" y="191.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (17 samples, 0.03%)</title><rect x="91.3505%" y="229" width="0.0336%" height="15" fill="rgb(251,172,33)" fg:x="46280" fg:w="17"/><text x="91.6005%" y="239.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (17 samples, 0.03%)</title><rect x="91.3505%" y="213" width="0.0336%" height="15" fill="rgb(250,83,2)" fg:x="46280" fg:w="17"/><text x="91.6005%" y="223.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (17 samples, 0.03%)</title><rect x="91.3505%" y="197" width="0.0336%" height="15" fill="rgb(210,132,53)" fg:x="46280" fg:w="17"/><text x="91.6005%" y="207.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (18 samples, 0.04%)</title><rect x="91.3505%" y="245" width="0.0355%" height="15" fill="rgb(221,208,36)" fg:x="46280" fg:w="18"/><text x="91.6005%" y="255.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (22 samples, 0.04%)</title><rect x="91.3485%" y="261" width="0.0434%" height="15" fill="rgb(205,192,46)" fg:x="46279" fg:w="22"/><text x="91.5985%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="91.3999%" y="245" width="0.0257%" height="15" fill="rgb(223,163,14)" fg:x="46305" fg:w="13"/><text x="91.6499%" y="255.50"></text></g><g><title>__memmove_sse2_unaligned_erms (11 samples, 0.02%)</title><rect x="91.4038%" y="229" width="0.0217%" height="15" fill="rgb(218,41,28)" fg:x="46307" fg:w="11"/><text x="91.6538%" y="239.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (54 samples, 0.11%)</title><rect x="91.3229%" y="277" width="0.1066%" height="15" fill="rgb(235,104,10)" fg:x="46266" fg:w="54"/><text x="91.5729%" y="287.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (19 samples, 0.04%)</title><rect x="91.3920%" y="261" width="0.0375%" height="15" fill="rgb(246,17,4)" fg:x="46301" fg:w="19"/><text x="91.6420%" y="271.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (12 samples, 0.02%)</title><rect x="91.4295%" y="277" width="0.0237%" height="15" fill="rgb(240,7,16)" fg:x="46320" fg:w="12"/><text x="91.6795%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (11 samples, 0.02%)</title><rect x="91.4314%" y="261" width="0.0217%" height="15" fill="rgb(213,160,23)" fg:x="46321" fg:w="11"/><text x="91.6814%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (142 samples, 0.28%)</title><rect x="91.3229%" y="309" width="0.2803%" height="15" fill="rgb(251,179,49)" fg:x="46266" fg:w="142"/><text x="91.5729%" y="319.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (142 samples, 0.28%)</title><rect x="91.3229%" y="293" width="0.2803%" height="15" fill="rgb(247,198,10)" fg:x="46266" fg:w="142"/><text x="91.5729%" y="303.50"></text></g><g><title>std::sys_common::memchr::memrchr (76 samples, 0.15%)</title><rect x="91.4532%" y="277" width="0.1500%" height="15" fill="rgb(220,65,29)" fg:x="46332" fg:w="76"/><text x="91.7032%" y="287.50"></text></g><g><title>std::sys::unix::memchr::memrchr (76 samples, 0.15%)</title><rect x="91.4532%" y="261" width="0.1500%" height="15" fill="rgb(237,171,28)" fg:x="46332" fg:w="76"/><text x="91.7032%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (76 samples, 0.15%)</title><rect x="91.4532%" y="245" width="0.1500%" height="15" fill="rgb(228,44,26)" fg:x="46332" fg:w="76"/><text x="91.7032%" y="255.50"></text></g><g><title>__memrchr_avx2 (65 samples, 0.13%)</title><rect x="91.4749%" y="229" width="0.1283%" height="15" fill="rgb(216,210,27)" fg:x="46343" fg:w="65"/><text x="91.7249%" y="239.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.01%)</title><rect x="91.6032%" y="277" width="0.0138%" height="15" fill="rgb(252,10,17)" fg:x="46408" fg:w="7"/><text x="91.8532%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (11 samples, 0.02%)</title><rect x="91.6032%" y="309" width="0.0217%" height="15" fill="rgb(214,172,30)" fg:x="46408" fg:w="11"/><text x="91.8532%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (11 samples, 0.02%)</title><rect x="91.6032%" y="293" width="0.0217%" height="15" fill="rgb(253,130,48)" fg:x="46408" fg:w="11"/><text x="91.8532%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (171 samples, 0.34%)</title><rect x="91.2893%" y="341" width="0.3375%" height="15" fill="rgb(226,99,43)" fg:x="46249" fg:w="171"/><text x="91.5393%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (157 samples, 0.31%)</title><rect x="91.3170%" y="325" width="0.3099%" height="15" fill="rgb(239,111,26)" fg:x="46263" fg:w="157"/><text x="91.5670%" y="335.50"></text></g><g><title>core::fmt::getcount (12 samples, 0.02%)</title><rect x="91.6703%" y="325" width="0.0237%" height="15" fill="rgb(240,27,53)" fg:x="46442" fg:w="12"/><text x="91.9203%" y="335.50"></text></g><g><title>core::fmt::write (6 samples, 0.01%)</title><rect x="91.6821%" y="309" width="0.0118%" height="15" fill="rgb(254,163,12)" fg:x="46448" fg:w="6"/><text x="91.9321%" y="319.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (17 samples, 0.03%)</title><rect x="91.7946%" y="229" width="0.0336%" height="15" fill="rgb(225,51,48)" fg:x="46505" fg:w="17"/><text x="92.0446%" y="239.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (10 samples, 0.02%)</title><rect x="91.8085%" y="213" width="0.0197%" height="15" fill="rgb(205,19,32)" fg:x="46512" fg:w="10"/><text x="92.0585%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="91.8144%" y="197" width="0.0138%" height="15" fill="rgb(218,119,26)" fg:x="46515" fg:w="7"/><text x="92.0644%" y="207.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (7 samples, 0.01%)</title><rect x="91.8282%" y="229" width="0.0138%" height="15" fill="rgb(231,173,33)" fg:x="46522" fg:w="7"/><text x="92.0782%" y="239.50"></text></g><g><title>__memrchr_avx2 (15 samples, 0.03%)</title><rect x="91.8499%" y="181" width="0.0296%" height="15" fill="rgb(241,100,29)" fg:x="46533" fg:w="15"/><text x="92.0999%" y="191.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (44 samples, 0.09%)</title><rect x="91.7946%" y="261" width="0.0869%" height="15" fill="rgb(250,194,34)" fg:x="46505" fg:w="44"/><text x="92.0446%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (44 samples, 0.09%)</title><rect x="91.7946%" y="245" width="0.0869%" height="15" fill="rgb(215,23,50)" fg:x="46505" fg:w="44"/><text x="92.0446%" y="255.50"></text></g><g><title>std::sys_common::memchr::memrchr (20 samples, 0.04%)</title><rect x="91.8420%" y="229" width="0.0395%" height="15" fill="rgb(206,49,37)" fg:x="46529" fg:w="20"/><text x="92.0920%" y="239.50"></text></g><g><title>std::sys::unix::memchr::memrchr (20 samples, 0.04%)</title><rect x="91.8420%" y="213" width="0.0395%" height="15" fill="rgb(247,39,21)" fg:x="46529" fg:w="20"/><text x="92.0920%" y="223.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (20 samples, 0.04%)</title><rect x="91.8420%" y="197" width="0.0395%" height="15" fill="rgb(209,220,15)" fg:x="46529" fg:w="20"/><text x="92.0920%" y="207.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (49 samples, 0.10%)</title><rect x="91.7887%" y="293" width="0.0967%" height="15" fill="rgb(206,41,33)" fg:x="46502" fg:w="49"/><text x="92.0387%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (47 samples, 0.09%)</title><rect x="91.7927%" y="277" width="0.0928%" height="15" fill="rgb(221,225,45)" fg:x="46504" fg:w="47"/><text x="92.0427%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (15 samples, 0.03%)</title><rect x="91.8854%" y="293" width="0.0296%" height="15" fill="rgb(216,27,18)" fg:x="46551" fg:w="15"/><text x="92.1354%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.04%)</title><rect x="91.9150%" y="293" width="0.0375%" height="15" fill="rgb(250,193,34)" fg:x="46566" fg:w="19"/><text x="92.1650%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (133 samples, 0.26%)</title><rect x="91.6940%" y="325" width="0.2625%" height="15" fill="rgb(227,215,20)" fg:x="46454" fg:w="133"/><text x="91.9440%" y="335.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (127 samples, 0.25%)</title><rect x="91.7058%" y="309" width="0.2507%" height="15" fill="rgb(242,211,27)" fg:x="46460" fg:w="127"/><text x="91.9558%" y="319.50"></text></g><g><title>core::fmt::run (167 samples, 0.33%)</title><rect x="91.6308%" y="341" width="0.3296%" height="15" fill="rgb(229,190,30)" fg:x="46422" fg:w="167"/><text x="91.8808%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (10 samples, 0.02%)</title><rect x="91.9624%" y="341" width="0.0197%" height="15" fill="rgb(253,31,29)" fg:x="46590" fg:w="10"/><text x="92.2124%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (10 samples, 0.02%)</title><rect x="91.9624%" y="325" width="0.0197%" height="15" fill="rgb(229,177,52)" fg:x="46590" fg:w="10"/><text x="92.2124%" y="335.50"></text></g><g><title>core::fmt::write (392 samples, 0.77%)</title><rect x="91.2123%" y="357" width="0.7738%" height="15" fill="rgb(226,88,8)" fg:x="46210" fg:w="392"/><text x="91.4623%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (405 samples, 0.80%)</title><rect x="91.1887%" y="373" width="0.7994%" height="15" fill="rgb(214,55,27)" fg:x="46198" fg:w="405"/><text x="91.4387%" y="383.50"></text></g><g><title>__tls_get_addr_slow (7 samples, 0.01%)</title><rect x="92.0058%" y="325" width="0.0138%" height="15" fill="rgb(233,202,5)" fg:x="46612" fg:w="7"/><text x="92.2558%" y="335.50"></text></g><g><title>__tls_get_addr (26 samples, 0.05%)</title><rect x="91.9940%" y="341" width="0.0513%" height="15" fill="rgb(251,49,30)" fg:x="46606" fg:w="26"/><text x="92.2440%" y="351.50"></text></g><g><title>update_get_addr (13 samples, 0.03%)</title><rect x="92.0197%" y="325" width="0.0257%" height="15" fill="rgb(235,18,52)" fg:x="46619" fg:w="13"/><text x="92.2697%" y="335.50"></text></g><g><title>_dl_update_slotinfo (7 samples, 0.01%)</title><rect x="92.0315%" y="309" width="0.0138%" height="15" fill="rgb(250,111,51)" fg:x="46625" fg:w="7"/><text x="92.2815%" y="319.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (557 samples, 1.10%)</title><rect x="91.0465%" y="405" width="1.0994%" height="15" fill="rgb(218,13,25)" fg:x="46126" fg:w="557"/><text x="91.2965%" y="415.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (550 samples, 1.09%)</title><rect x="91.0604%" y="389" width="1.0856%" height="15" fill="rgb(248,96,7)" fg:x="46133" fg:w="550"/><text x="91.3104%" y="399.50"></text></g><g><title>std::io::stdio::Stdout::lock (80 samples, 0.16%)</title><rect x="91.9881%" y="373" width="0.1579%" height="15" fill="rgb(217,31,15)" fg:x="46603" fg:w="80"/><text x="92.2381%" y="383.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (80 samples, 0.16%)</title><rect x="91.9881%" y="357" width="0.1579%" height="15" fill="rgb(228,59,49)" fg:x="46603" fg:w="80"/><text x="92.2381%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (50 samples, 0.10%)</title><rect x="92.0473%" y="341" width="0.0987%" height="15" fill="rgb(210,152,38)" fg:x="46633" fg:w="50"/><text x="92.2973%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (49 samples, 0.10%)</title><rect x="92.0493%" y="325" width="0.0967%" height="15" fill="rgb(206,71,11)" fg:x="46634" fg:w="49"/><text x="92.2993%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.10%)</title><rect x="92.0493%" y="309" width="0.0967%" height="15" fill="rgb(244,199,5)" fg:x="46634" fg:w="49"/><text x="92.2993%" y="319.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (2,572 samples, 5.08%)</title><rect x="87.0732%" y="581" width="5.0768%" height="15" fill="rgb(253,49,1)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="591.50">&lt;stell..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (2,572 samples, 5.08%)</title><rect x="87.0732%" y="565" width="5.0768%" height="15" fill="rgb(225,206,40)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="575.50">&lt;stell..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2,572 samples, 5.08%)</title><rect x="87.0732%" y="549" width="5.0768%" height="15" fill="rgb(243,116,47)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="559.50">lazy_s..</text></g><g><title>std::sync::once::Once::call_once (2,572 samples, 5.08%)</title><rect x="87.0732%" y="533" width="5.0768%" height="15" fill="rgb(219,225,16)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="543.50">std::s..</text></g><g><title>std::sync::once::Once::call_inner (2,572 samples, 5.08%)</title><rect x="87.0732%" y="517" width="5.0768%" height="15" fill="rgb(233,29,47)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="527.50">std::s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2,572 samples, 5.08%)</title><rect x="87.0732%" y="501" width="5.0768%" height="15" fill="rgb(250,179,18)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="511.50">std::s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (2,572 samples, 5.08%)</title><rect x="87.0732%" y="485" width="5.0768%" height="15" fill="rgb(215,176,6)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="495.50">lazy_s..</text></g><g><title>core::ops::function::FnOnce::call_once (2,572 samples, 5.08%)</title><rect x="87.0732%" y="469" width="5.0768%" height="15" fill="rgb(214,117,39)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="479.50">core::..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (2,572 samples, 5.08%)</title><rect x="87.0732%" y="453" width="5.0768%" height="15" fill="rgb(247,183,36)" fg:x="44113" fg:w="2572"/><text x="87.3232%" y="463.50">&lt;stell..</text></g><g><title>std::io::stdio::_print (619 samples, 1.22%)</title><rect x="90.9281%" y="437" width="1.2218%" height="15" fill="rgb(237,200,3)" fg:x="46066" fg:w="619"/><text x="91.1781%" y="447.50"></text></g><g><title>std::io::stdio::print_to (562 samples, 1.11%)</title><rect x="91.0406%" y="421" width="1.1093%" height="15" fill="rgb(212,220,24)" fg:x="46123" fg:w="562"/><text x="91.2906%" y="431.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,825 samples, 5.58%)</title><rect x="86.6053%" y="949" width="5.5762%" height="15" fill="rgb(245,216,20)" fg:x="43876" fg:w="2825"/><text x="86.8553%" y="959.50">winit::..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,825 samples, 5.58%)</title><rect x="86.6053%" y="933" width="5.5762%" height="15" fill="rgb(219,124,7)" fg:x="43876" fg:w="2825"/><text x="86.8553%" y="943.50">bevy_wi..</text></g><g><title>bevy_app::app::App::update (2,825 samples, 5.58%)</title><rect x="86.6053%" y="917" width="5.5762%" height="15" fill="rgb(227,167,8)" fg:x="43876" fg:w="2825"/><text x="86.8553%" y="927.50">bevy_ap..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,588 samples, 5.11%)</title><rect x="87.0732%" y="901" width="5.1084%" height="15" fill="rgb(241,37,2)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="911.50">bevy_e..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,588 samples, 5.11%)</title><rect x="87.0732%" y="885" width="5.1084%" height="15" fill="rgb(238,134,33)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="895.50">bevy_e..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,588 samples, 5.11%)</title><rect x="87.0732%" y="869" width="5.1084%" height="15" fill="rgb(248,48,27)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="879.50">&lt;bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,588 samples, 5.11%)</title><rect x="87.0732%" y="853" width="5.1084%" height="15" fill="rgb(212,14,16)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="863.50">&lt;bevy_..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,588 samples, 5.11%)</title><rect x="87.0732%" y="837" width="5.1084%" height="15" fill="rgb(217,205,37)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="847.50">bevy_t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,588 samples, 5.11%)</title><rect x="87.0732%" y="821" width="5.1084%" height="15" fill="rgb(233,185,47)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="831.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,588 samples, 5.11%)</title><rect x="87.0732%" y="805" width="5.1084%" height="15" fill="rgb(244,88,8)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="815.50">std::t..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,588 samples, 5.11%)</title><rect x="87.0732%" y="789" width="5.1084%" height="15" fill="rgb(213,0,20)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="799.50">bevy_t..</text></g><g><title>async_executor::Executor::try_tick (2,588 samples, 5.11%)</title><rect x="87.0732%" y="773" width="5.1084%" height="15" fill="rgb(238,159,36)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="783.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,588 samples, 5.11%)</title><rect x="87.0732%" y="757" width="5.1084%" height="15" fill="rgb(253,173,17)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="767.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,588 samples, 5.11%)</title><rect x="87.0732%" y="741" width="5.1084%" height="15" fill="rgb(221,23,28)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="751.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,588 samples, 5.11%)</title><rect x="87.0732%" y="725" width="5.1084%" height="15" fill="rgb(218,113,15)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="735.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,588 samples, 5.11%)</title><rect x="87.0732%" y="709" width="5.1084%" height="15" fill="rgb(233,58,3)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="719.50">&lt;core:..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,588 samples, 5.11%)</title><rect x="87.0732%" y="693" width="5.1084%" height="15" fill="rgb(250,46,35)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="703.50">bevy_e..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,588 samples, 5.11%)</title><rect x="87.0732%" y="677" width="5.1084%" height="15" fill="rgb(210,169,11)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="687.50">&lt;bevy_..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,588 samples, 5.11%)</title><rect x="87.0732%" y="661" width="5.1084%" height="15" fill="rgb(246,88,19)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="671.50">&lt;Func ..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,588 samples, 5.11%)</title><rect x="87.0732%" y="645" width="5.1084%" height="15" fill="rgb(206,81,49)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="655.50">&lt;Func ..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,588 samples, 5.11%)</title><rect x="87.0732%" y="629" width="5.1084%" height="15" fill="rgb(232,144,18)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="639.50">core::..</text></g><g><title>core::ops::function::FnMut::call_mut (2,588 samples, 5.11%)</title><rect x="87.0732%" y="613" width="5.1084%" height="15" fill="rgb(235,2,27)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="623.50">core::..</text></g><g><title>stellar_coordinates_test::setup (2,588 samples, 5.11%)</title><rect x="87.0732%" y="597" width="5.1084%" height="15" fill="rgb(239,157,39)" fg:x="44113" fg:w="2588"/><text x="87.3232%" y="607.50">stella..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (16 samples, 0.03%)</title><rect x="92.1499%" y="581" width="0.0316%" height="15" fill="rgb(220,11,17)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="591.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (16 samples, 0.03%)</title><rect x="92.1499%" y="565" width="0.0316%" height="15" fill="rgb(243,94,50)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="575.50"></text></g><g><title>wgpu::Device::create_buffer (16 samples, 0.03%)</title><rect x="92.1499%" y="549" width="0.0316%" height="15" fill="rgb(218,22,0)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (16 samples, 0.03%)</title><rect x="92.1499%" y="533" width="0.0316%" height="15" fill="rgb(249,70,21)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (16 samples, 0.03%)</title><rect x="92.1499%" y="517" width="0.0316%" height="15" fill="rgb(245,111,46)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="527.50"></text></g><g><title>core::intrinsics::write_bytes (16 samples, 0.03%)</title><rect x="92.1499%" y="501" width="0.0316%" height="15" fill="rgb(244,183,12)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="511.50"></text></g><g><title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="92.1499%" y="485" width="0.0316%" height="15" fill="rgb(207,117,0)" fg:x="46685" fg:w="16"/><text x="92.3999%" y="495.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,829 samples, 5.58%)</title><rect x="86.6053%" y="981" width="5.5841%" height="15" fill="rgb(206,20,43)" fg:x="43876" fg:w="2829"/><text x="86.8553%" y="991.50">winit::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,829 samples, 5.58%)</title><rect x="86.6053%" y="965" width="5.5841%" height="15" fill="rgb(221,104,11)" fg:x="43876" fg:w="2829"/><text x="86.8553%" y="975.50">winit::..</text></g><g><title>ash::device::Device::bind_buffer_memory (6 samples, 0.01%)</title><rect x="92.1894%" y="469" width="0.0118%" height="15" fill="rgb(254,36,50)" fg:x="46705" fg:w="6"/><text x="92.4394%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (6 samples, 0.01%)</title><rect x="92.1894%" y="453" width="0.0118%" height="15" fill="rgb(252,17,15)" fg:x="46705" fg:w="6"/><text x="92.4394%" y="463.50"></text></g><g><title>__glx_Main (6 samples, 0.01%)</title><rect x="92.1894%" y="437" width="0.0118%" height="15" fill="rgb(219,129,43)" fg:x="46705" fg:w="6"/><text x="92.4394%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (11 samples, 0.02%)</title><rect x="92.1894%" y="677" width="0.0217%" height="15" fill="rgb(205,34,45)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (11 samples, 0.02%)</title><rect x="92.1894%" y="661" width="0.0217%" height="15" fill="rgb(251,201,32)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.02%)</title><rect x="92.1894%" y="645" width="0.0217%" height="15" fill="rgb(205,56,0)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="655.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.02%)</title><rect x="92.1894%" y="629" width="0.0217%" height="15" fill="rgb(211,193,27)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="639.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (11 samples, 0.02%)</title><rect x="92.1894%" y="613" width="0.0217%" height="15" fill="rgb(231,100,42)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="623.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (11 samples, 0.02%)</title><rect x="92.1894%" y="597" width="0.0217%" height="15" fill="rgb(245,85,27)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="607.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (11 samples, 0.02%)</title><rect x="92.1894%" y="581" width="0.0217%" height="15" fill="rgb(241,76,24)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="591.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (11 samples, 0.02%)</title><rect x="92.1894%" y="565" width="0.0217%" height="15" fill="rgb(249,157,15)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="575.50"></text></g><g><title>wgpu::Device::create_buffer (11 samples, 0.02%)</title><rect x="92.1894%" y="549" width="0.0217%" height="15" fill="rgb(222,218,25)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (11 samples, 0.02%)</title><rect x="92.1894%" y="533" width="0.0217%" height="15" fill="rgb(252,156,52)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (11 samples, 0.02%)</title><rect x="92.1894%" y="517" width="0.0217%" height="15" fill="rgb(211,185,7)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="527.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (11 samples, 0.02%)</title><rect x="92.1894%" y="501" width="0.0217%" height="15" fill="rgb(234,108,24)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.02%)</title><rect x="92.1894%" y="485" width="0.0217%" height="15" fill="rgb(227,218,2)" fg:x="46705" fg:w="11"/><text x="92.4394%" y="495.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (20 samples, 0.04%)</title><rect x="92.1894%" y="741" width="0.0395%" height="15" fill="rgb(224,0,36)" fg:x="46705" fg:w="20"/><text x="92.4394%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.04%)</title><rect x="92.1894%" y="725" width="0.0395%" height="15" fill="rgb(233,201,10)" fg:x="46705" fg:w="20"/><text x="92.4394%" y="735.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (20 samples, 0.04%)</title><rect x="92.1894%" y="709" width="0.0395%" height="15" fill="rgb(252,209,14)" fg:x="46705" fg:w="20"/><text x="92.4394%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (20 samples, 0.04%)</title><rect x="92.1894%" y="693" width="0.0395%" height="15" fill="rgb(205,93,49)" fg:x="46705" fg:w="20"/><text x="92.4394%" y="703.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::configure_surface (6 samples, 0.01%)</title><rect x="92.2289%" y="597" width="0.0118%" height="15" fill="rgb(234,116,45)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_configure (6 samples, 0.01%)</title><rect x="92.2289%" y="581" width="0.0118%" height="15" fill="rgb(248,89,35)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="591.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (6 samples, 0.01%)</title><rect x="92.2289%" y="565" width="0.0118%" height="15" fill="rgb(233,167,45)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (6 samples, 0.01%)</title><rect x="92.2289%" y="549" width="0.0118%" height="15" fill="rgb(248,228,14)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (6 samples, 0.01%)</title><rect x="92.2289%" y="533" width="0.0118%" height="15" fill="rgb(246,91,14)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="543.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (6 samples, 0.01%)</title><rect x="92.2289%" y="517" width="0.0118%" height="15" fill="rgb(227,142,5)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="527.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (6 samples, 0.01%)</title><rect x="92.2289%" y="501" width="0.0118%" height="15" fill="rgb(221,63,33)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="511.50"></text></g><g><title>vkEnumeratePhysicalDeviceGroups (6 samples, 0.01%)</title><rect x="92.2289%" y="485" width="0.0118%" height="15" fill="rgb(233,49,0)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="495.50"></text></g><g><title>__glx_Main (6 samples, 0.01%)</title><rect x="92.2289%" y="469" width="0.0118%" height="15" fill="rgb(251,115,38)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="479.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="453" width="0.0118%" height="15" fill="rgb(231,214,32)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="437" width="0.0118%" height="15" fill="rgb(248,73,46)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="421" width="0.0118%" height="15" fill="rgb(237,156,4)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="431.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="405" width="0.0118%" height="15" fill="rgb(227,132,2)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="415.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="389" width="0.0118%" height="15" fill="rgb(248,161,9)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="399.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="373" width="0.0118%" height="15" fill="rgb(238,77,38)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="383.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="92.2289%" y="357" width="0.0118%" height="15" fill="rgb(222,166,40)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="367.50"></text></g><g><title>__glx_Main (6 samples, 0.01%)</title><rect x="92.2289%" y="341" width="0.0118%" height="15" fill="rgb(214,168,45)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="351.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (6 samples, 0.01%)</title><rect x="92.2289%" y="325" width="0.0118%" height="15" fill="rgb(226,64,37)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="335.50"></text></g><g><title>_XReply (6 samples, 0.01%)</title><rect x="92.2289%" y="309" width="0.0118%" height="15" fill="rgb(232,210,43)" fg:x="46725" fg:w="6"/><text x="92.4789%" y="319.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (27 samples, 0.05%)</title><rect x="92.1894%" y="869" width="0.0533%" height="15" fill="rgb(214,76,33)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="879.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (27 samples, 0.05%)</title><rect x="92.1894%" y="853" width="0.0533%" height="15" fill="rgb(210,78,5)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.05%)</title><rect x="92.1894%" y="837" width="0.0533%" height="15" fill="rgb(211,107,37)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.05%)</title><rect x="92.1894%" y="821" width="0.0533%" height="15" fill="rgb(249,67,16)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (27 samples, 0.05%)</title><rect x="92.1894%" y="805" width="0.0533%" height="15" fill="rgb(222,114,31)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="815.50"></text></g><g><title>async_executor::Executor::try_tick (27 samples, 0.05%)</title><rect x="92.1894%" y="789" width="0.0533%" height="15" fill="rgb(242,118,19)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27 samples, 0.05%)</title><rect x="92.1894%" y="773" width="0.0533%" height="15" fill="rgb(223,115,1)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.05%)</title><rect x="92.1894%" y="757" width="0.0533%" height="15" fill="rgb(241,182,54)" fg:x="46705" fg:w="27"/><text x="92.4394%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (7 samples, 0.01%)</title><rect x="92.2289%" y="741" width="0.0138%" height="15" fill="rgb(244,166,36)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="92.2289%" y="725" width="0.0138%" height="15" fill="rgb(241,52,43)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="735.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (7 samples, 0.01%)</title><rect x="92.2289%" y="709" width="0.0138%" height="15" fill="rgb(236,82,9)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (7 samples, 0.01%)</title><rect x="92.2289%" y="693" width="0.0138%" height="15" fill="rgb(241,119,0)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="703.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (7 samples, 0.01%)</title><rect x="92.2289%" y="677" width="0.0138%" height="15" fill="rgb(221,19,22)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (7 samples, 0.01%)</title><rect x="92.2289%" y="661" width="0.0138%" height="15" fill="rgb(254,144,35)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="92.2289%" y="645" width="0.0138%" height="15" fill="rgb(246,132,30)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="655.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.01%)</title><rect x="92.2289%" y="629" width="0.0138%" height="15" fill="rgb(234,69,28)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="639.50"></text></g><g><title>bevy_render::view::window::prepare_windows (7 samples, 0.01%)</title><rect x="92.2289%" y="613" width="0.0138%" height="15" fill="rgb(219,106,47)" fg:x="46725" fg:w="7"/><text x="92.4789%" y="623.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::DrawMesh as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (13 samples, 0.03%)</title><rect x="92.2644%" y="709" width="0.0257%" height="15" fill="rgb(218,79,24)" fg:x="46743" fg:w="13"/><text x="92.5144%" y="719.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (14 samples, 0.03%)</title><rect x="92.3177%" y="661" width="0.0276%" height="15" fill="rgb(225,26,21)" fg:x="46770" fg:w="14"/><text x="92.5677%" y="671.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (10 samples, 0.02%)</title><rect x="92.3256%" y="645" width="0.0197%" height="15" fill="rgb(217,68,49)" fg:x="46774" fg:w="10"/><text x="92.5756%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (6 samples, 0.01%)</title><rect x="92.3335%" y="629" width="0.0118%" height="15" fill="rgb(220,204,28)" fg:x="46778" fg:w="6"/><text x="92.5835%" y="639.50"></text></g><g><title>bevy_ecs::entity::Entities::get (12 samples, 0.02%)</title><rect x="92.3453%" y="661" width="0.0237%" height="15" fill="rgb(237,208,43)" fg:x="46784" fg:w="12"/><text x="92.5953%" y="671.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (34 samples, 0.07%)</title><rect x="92.3078%" y="693" width="0.0671%" height="15" fill="rgb(213,97,42)" fg:x="46765" fg:w="34"/><text x="92.5578%" y="703.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (33 samples, 0.07%)</title><rect x="92.3098%" y="677" width="0.0651%" height="15" fill="rgb(238,96,52)" fg:x="46766" fg:w="33"/><text x="92.5598%" y="687.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::SetMeshBindGroup&lt;_&gt; as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (45 samples, 0.09%)</title><rect x="92.2901%" y="709" width="0.0888%" height="15" fill="rgb(228,14,13)" fg:x="46756" fg:w="45"/><text x="92.5401%" y="719.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (8 samples, 0.02%)</title><rect x="92.4282%" y="661" width="0.0158%" height="15" fill="rgb(219,123,13)" fg:x="46826" fg:w="8"/><text x="92.6782%" y="671.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get_inner (35 samples, 0.07%)</title><rect x="92.3888%" y="693" width="0.0691%" height="15" fill="rgb(216,144,17)" fg:x="46806" fg:w="35"/><text x="92.6388%" y="703.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (35 samples, 0.07%)</title><rect x="92.3888%" y="677" width="0.0691%" height="15" fill="rgb(230,228,29)" fg:x="46806" fg:w="35"/><text x="92.6388%" y="687.50"></text></g><g><title>bevy_render::render_phase::draw_state::DrawState::is_bind_group_set (20 samples, 0.04%)</title><rect x="92.4658%" y="677" width="0.0395%" height="15" fill="rgb(233,18,5)" fg:x="46845" fg:w="20"/><text x="92.7158%" y="687.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for &amp;[T]&gt;::eq (17 samples, 0.03%)</title><rect x="92.4717%" y="661" width="0.0336%" height="15" fill="rgb(233,197,12)" fg:x="46848" fg:w="17"/><text x="92.7217%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.03%)</title><rect x="92.4717%" y="645" width="0.0336%" height="15" fill="rgb(234,140,29)" fg:x="46848" fg:w="17"/><text x="92.7217%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.03%)</title><rect x="92.4717%" y="629" width="0.0336%" height="15" fill="rgb(233,113,19)" fg:x="46848" fg:w="17"/><text x="92.7217%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (16 samples, 0.03%)</title><rect x="92.4736%" y="613" width="0.0316%" height="15" fill="rgb(246,209,13)" fg:x="46849" fg:w="16"/><text x="92.7236%" y="623.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (29 samples, 0.06%)</title><rect x="92.4579%" y="693" width="0.0572%" height="15" fill="rgb(242,79,54)" fg:x="46841" fg:w="29"/><text x="92.7079%" y="703.50"></text></g><g><title>&lt;bevy_pbr::render::mesh::SetMeshViewBindGroup&lt;_&gt; as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (71 samples, 0.14%)</title><rect x="92.3789%" y="709" width="0.1401%" height="15" fill="rgb(219,73,16)" fg:x="46801" fg:w="71"/><text x="92.6289%" y="719.50"></text></g><g><title>bevy_render::render_phase::draw_state::DrawState::is_bind_group_set (30 samples, 0.06%)</title><rect x="92.5329%" y="677" width="0.0592%" height="15" fill="rgb(224,52,10)" fg:x="46879" fg:w="30"/><text x="92.7829%" y="687.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for &amp;[T]&gt;::eq (28 samples, 0.06%)</title><rect x="92.5368%" y="661" width="0.0553%" height="15" fill="rgb(237,179,5)" fg:x="46881" fg:w="28"/><text x="92.7868%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (28 samples, 0.06%)</title><rect x="92.5368%" y="645" width="0.0553%" height="15" fill="rgb(231,20,6)" fg:x="46881" fg:w="28"/><text x="92.7868%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (28 samples, 0.06%)</title><rect x="92.5368%" y="629" width="0.0553%" height="15" fill="rgb(253,171,45)" fg:x="46881" fg:w="28"/><text x="92.7868%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (28 samples, 0.06%)</title><rect x="92.5368%" y="613" width="0.0553%" height="15" fill="rgb(230,75,49)" fg:x="46881" fg:w="28"/><text x="92.7868%" y="623.50"></text></g><g><title>bevy_render::render_phase::draw_state::DrawState::set_bind_group (9 samples, 0.02%)</title><rect x="92.5921%" y="677" width="0.0178%" height="15" fill="rgb(216,83,46)" fg:x="46909" fg:w="9"/><text x="92.8421%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.02%)</title><rect x="92.6177%" y="661" width="0.0178%" height="15" fill="rgb(236,56,9)" fg:x="46922" fg:w="9"/><text x="92.8677%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="92.6177%" y="645" width="0.0178%" height="15" fill="rgb(215,28,34)" fg:x="46922" fg:w="9"/><text x="92.8677%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.02%)</title><rect x="92.6177%" y="629" width="0.0178%" height="15" fill="rgb(230,222,20)" fg:x="46922" fg:w="9"/><text x="92.8677%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="92.6217%" y="613" width="0.0138%" height="15" fill="rgb(235,209,51)" fg:x="46924" fg:w="7"/><text x="92.8717%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="92.6217%" y="597" width="0.0138%" height="15" fill="rgb(235,167,1)" fg:x="46924" fg:w="7"/><text x="92.8717%" y="607.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (61 samples, 0.12%)</title><rect x="92.5190%" y="709" width="0.1204%" height="15" fill="rgb(248,220,0)" fg:x="46872" fg:w="61"/><text x="92.7690%" y="719.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (59 samples, 0.12%)</title><rect x="92.5230%" y="693" width="0.1165%" height="15" fill="rgb(239,0,18)" fg:x="46874" fg:w="59"/><text x="92.7730%" y="703.50"></text></g><g><title>wgpu_render_pass_set_bind_group (14 samples, 0.03%)</title><rect x="92.6118%" y="677" width="0.0276%" height="15" fill="rgb(229,179,11)" fg:x="46919" fg:w="14"/><text x="92.8618%" y="687.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (21 samples, 0.04%)</title><rect x="92.6434%" y="693" width="0.0415%" height="15" fill="rgb(226,116,53)" fg:x="46935" fg:w="21"/><text x="92.8934%" y="703.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (20 samples, 0.04%)</title><rect x="92.6454%" y="677" width="0.0395%" height="15" fill="rgb(218,1,49)" fg:x="46936" fg:w="20"/><text x="92.8954%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (6 samples, 0.01%)</title><rect x="92.7026%" y="645" width="0.0118%" height="15" fill="rgb(208,184,47)" fg:x="46965" fg:w="6"/><text x="92.9526%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (6 samples, 0.01%)</title><rect x="92.7026%" y="629" width="0.0118%" height="15" fill="rgb(238,174,3)" fg:x="46965" fg:w="6"/><text x="92.9526%" y="639.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (6 samples, 0.01%)</title><rect x="92.7026%" y="613" width="0.0118%" height="15" fill="rgb(247,188,6)" fg:x="46965" fg:w="6"/><text x="92.9526%" y="623.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::OptionFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (11 samples, 0.02%)</title><rect x="92.7006%" y="661" width="0.0217%" height="15" fill="rgb(211,165,46)" fg:x="46964" fg:w="11"/><text x="92.9506%" y="671.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get_inner (27 samples, 0.05%)</title><rect x="92.6849%" y="693" width="0.0533%" height="15" fill="rgb(222,190,10)" fg:x="46956" fg:w="27"/><text x="92.9349%" y="703.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (27 samples, 0.05%)</title><rect x="92.6849%" y="677" width="0.0533%" height="15" fill="rgb(206,185,3)" fg:x="46956" fg:w="27"/><text x="92.9349%" y="687.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_index_buffer (6 samples, 0.01%)</title><rect x="92.7381%" y="693" width="0.0118%" height="15" fill="rgb(244,125,37)" fg:x="46983" fg:w="6"/><text x="92.9881%" y="703.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (64 samples, 0.13%)</title><rect x="92.7835%" y="677" width="0.1263%" height="15" fill="rgb(211,43,7)" fg:x="47006" fg:w="64"/><text x="93.0335%" y="687.50"></text></g><g><title>wgpu::backend::direct::pass_impl::&lt;impl wgpu::RenderInner&lt;wgpu::backend::direct::Context&gt; for wgpu_core::command::render::RenderPass&gt;::set_vertex_buffer (64 samples, 0.13%)</title><rect x="92.7835%" y="661" width="0.1263%" height="15" fill="rgb(250,41,42)" fg:x="47006" fg:w="64"/><text x="93.0335%" y="671.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_vertex_buffer (85 samples, 0.17%)</title><rect x="92.7500%" y="693" width="0.1678%" height="15" fill="rgb(254,54,42)" fg:x="46989" fg:w="85"/><text x="93.0000%" y="703.50"></text></g><g><title>bevy_render::render_resource::buffer::Buffer::slice (6 samples, 0.01%)</title><rect x="92.9178%" y="693" width="0.0118%" height="15" fill="rgb(213,71,43)" fg:x="47074" fg:w="6"/><text x="93.1678%" y="703.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="92.9454%" y="613" width="0.0138%" height="15" fill="rgb(249,3,44)" fg:x="47088" fg:w="7"/><text x="93.1954%" y="623.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.01%)</title><rect x="92.9454%" y="597" width="0.0138%" height="15" fill="rgb(229,80,41)" fg:x="47088" fg:w="7"/><text x="93.1954%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.01%)</title><rect x="92.9454%" y="581" width="0.0138%" height="15" fill="rgb(231,25,28)" fg:x="47088" fg:w="7"/><text x="93.1954%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.01%)</title><rect x="92.9474%" y="565" width="0.0118%" height="15" fill="rgb(208,79,48)" fg:x="47089" fg:w="6"/><text x="93.1974%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="92.9474%" y="549" width="0.0118%" height="15" fill="rgb(207,196,38)" fg:x="47089" fg:w="6"/><text x="93.1974%" y="559.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="92.9454%" y="629" width="0.0158%" height="15" fill="rgb(228,105,49)" fg:x="47088" fg:w="8"/><text x="93.1954%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.03%)</title><rect x="92.9336%" y="661" width="0.0316%" height="15" fill="rgb(237,99,15)" fg:x="47082" fg:w="16"/><text x="93.1836%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="92.9454%" y="645" width="0.0197%" height="15" fill="rgb(224,207,46)" fg:x="47088" fg:w="10"/><text x="93.1954%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="92.9691%" y="629" width="0.0118%" height="15" fill="rgb(249,117,50)" fg:x="47100" fg:w="6"/><text x="93.2191%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (17 samples, 0.03%)</title><rect x="92.9809%" y="629" width="0.0336%" height="15" fill="rgb(248,17,13)" fg:x="47106" fg:w="17"/><text x="93.2309%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17 samples, 0.03%)</title><rect x="92.9809%" y="613" width="0.0336%" height="15" fill="rgb(228,187,36)" fg:x="47106" fg:w="17"/><text x="93.2309%" y="623.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (17 samples, 0.03%)</title><rect x="92.9809%" y="597" width="0.0336%" height="15" fill="rgb(234,132,20)" fg:x="47106" fg:w="17"/><text x="93.2309%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (46 samples, 0.09%)</title><rect x="92.9336%" y="693" width="0.0908%" height="15" fill="rgb(209,170,46)" fg:x="47082" fg:w="46"/><text x="93.1836%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 0.09%)</title><rect x="92.9336%" y="677" width="0.0908%" height="15" fill="rgb(237,23,19)" fg:x="47082" fg:w="46"/><text x="93.1836%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (30 samples, 0.06%)</title><rect x="92.9651%" y="661" width="0.0592%" height="15" fill="rgb(227,21,26)" fg:x="47098" fg:w="30"/><text x="93.2151%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (30 samples, 0.06%)</title><rect x="92.9651%" y="645" width="0.0592%" height="15" fill="rgb(222,220,48)" fg:x="47098" fg:w="30"/><text x="93.2151%" y="655.50"></text></g><g><title>&lt;E as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (391 samples, 0.77%)</title><rect x="92.2644%" y="725" width="0.7718%" height="15" fill="rgb(214,9,16)" fg:x="46743" fg:w="391"/><text x="92.5144%" y="735.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::DrawMeshInstanced as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (201 samples, 0.40%)</title><rect x="92.6395%" y="709" width="0.3967%" height="15" fill="rgb(209,73,30)" fg:x="46933" fg:w="201"/><text x="92.8895%" y="719.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (402 samples, 0.79%)</title><rect x="92.2644%" y="741" width="0.7935%" height="15" fill="rgb(207,20,33)" fg:x="46743" fg:w="402"/><text x="92.5144%" y="751.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::SetItemPipeline as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (11 samples, 0.02%)</title><rect x="93.0362%" y="725" width="0.0217%" height="15" fill="rgb(219,153,12)" fg:x="47134" fg:w="11"/><text x="93.2862%" y="735.50"></text></g><g><title>bevy_render::render_resource::pipeline_cache::PipelineCache::get_render_pipeline (6 samples, 0.01%)</title><rect x="93.0461%" y="709" width="0.0118%" height="15" fill="rgb(235,97,25)" fg:x="47139" fg:w="6"/><text x="93.2961%" y="719.50"></text></g><g><title>&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (11 samples, 0.02%)</title><rect x="93.0579%" y="709" width="0.0217%" height="15" fill="rgb(244,30,34)" fg:x="47145" fg:w="11"/><text x="93.3079%" y="719.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get_unchecked_manual (37 samples, 0.07%)</title><rect x="93.0579%" y="725" width="0.0730%" height="15" fill="rgb(214,106,45)" fg:x="47145" fg:w="37"/><text x="93.3079%" y="735.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (26 samples, 0.05%)</title><rect x="93.0796%" y="709" width="0.0513%" height="15" fill="rgb(226,41,9)" fg:x="47156" fg:w="26"/><text x="93.3296%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (26 samples, 0.05%)</title><rect x="93.0796%" y="693" width="0.0513%" height="15" fill="rgb(253,139,29)" fg:x="47156" fg:w="26"/><text x="93.3296%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.05%)</title><rect x="93.0796%" y="677" width="0.0513%" height="15" fill="rgb(213,205,39)" fg:x="47156" fg:w="26"/><text x="93.3296%" y="687.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (447 samples, 0.88%)</title><rect x="92.2585%" y="757" width="0.8823%" height="15" fill="rgb(209,27,10)" fg:x="46740" fg:w="447"/><text x="92.5085%" y="767.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get (42 samples, 0.08%)</title><rect x="93.0579%" y="741" width="0.0829%" height="15" fill="rgb(249,142,16)" fg:x="47145" fg:w="42"/><text x="93.3079%" y="751.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (473 samples, 0.93%)</title><rect x="92.2447%" y="773" width="0.9336%" height="15" fill="rgb(242,65,12)" fg:x="46733" fg:w="473"/><text x="92.4947%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (7 samples, 0.01%)</title><rect x="93.1645%" y="757" width="0.0138%" height="15" fill="rgb(232,48,10)" fg:x="47199" fg:w="7"/><text x="93.4145%" y="767.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (477 samples, 0.94%)</title><rect x="92.2427%" y="805" width="0.9415%" height="15" fill="rgb(253,67,19)" fg:x="46732" fg:w="477"/><text x="92.4927%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (477 samples, 0.94%)</title><rect x="92.2427%" y="789" width="0.9415%" height="15" fill="rgb(227,93,29)" fg:x="46732" fg:w="477"/><text x="92.4927%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="93.2020%" y="757" width="0.0197%" height="15" fill="rgb(226,189,53)" fg:x="47218" fg:w="10"/><text x="93.4520%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="93.2020%" y="741" width="0.0197%" height="15" fill="rgb(223,224,1)" fg:x="47218" fg:w="10"/><text x="93.4520%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.02%)</title><rect x="93.2020%" y="725" width="0.0197%" height="15" fill="rgb(221,84,32)" fg:x="47218" fg:w="10"/><text x="93.4520%" y="735.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::IndexMut&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index_mut (28 samples, 0.06%)</title><rect x="93.2257%" y="757" width="0.0553%" height="15" fill="rgb(214,189,28)" fg:x="47230" fg:w="28"/><text x="93.4757%" y="767.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (28 samples, 0.06%)</title><rect x="93.2257%" y="741" width="0.0553%" height="15" fill="rgb(234,7,52)" fg:x="47230" fg:w="28"/><text x="93.4757%" y="751.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (11 samples, 0.02%)</title><rect x="93.2810%" y="757" width="0.0217%" height="15" fill="rgb(249,73,31)" fg:x="47258" fg:w="11"/><text x="93.5310%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (33 samples, 0.07%)</title><rect x="93.3540%" y="645" width="0.0651%" height="15" fill="rgb(253,153,41)" fg:x="47295" fg:w="33"/><text x="93.6040%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (33 samples, 0.07%)</title><rect x="93.3540%" y="629" width="0.0651%" height="15" fill="rgb(249,52,34)" fg:x="47295" fg:w="33"/><text x="93.6040%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;)&gt; (33 samples, 0.07%)</title><rect x="93.3540%" y="613" width="0.0651%" height="15" fill="rgb(236,177,47)" fg:x="47295" fg:w="33"/><text x="93.6040%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (33 samples, 0.07%)</title><rect x="93.3540%" y="597" width="0.0651%" height="15" fill="rgb(252,185,45)" fg:x="47295" fg:w="33"/><text x="93.6040%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (33 samples, 0.07%)</title><rect x="93.3540%" y="581" width="0.0651%" height="15" fill="rgb(251,15,30)" fg:x="47295" fg:w="33"/><text x="93.6040%" y="591.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (32 samples, 0.06%)</title><rect x="93.3560%" y="565" width="0.0632%" height="15" fill="rgb(233,31,4)" fg:x="47296" fg:w="32"/><text x="93.6060%" y="575.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (32 samples, 0.06%)</title><rect x="93.3560%" y="549" width="0.0632%" height="15" fill="rgb(254,44,24)" fg:x="47296" fg:w="32"/><text x="93.6060%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.06%)</title><rect x="93.3560%" y="533" width="0.0632%" height="15" fill="rgb(218,54,1)" fg:x="47296" fg:w="32"/><text x="93.6060%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.06%)</title><rect x="93.3560%" y="517" width="0.0632%" height="15" fill="rgb(243,209,39)" fg:x="47296" fg:w="32"/><text x="93.6060%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (37 samples, 0.07%)</title><rect x="93.3481%" y="661" width="0.0730%" height="15" fill="rgb(206,75,33)" fg:x="47292" fg:w="37"/><text x="93.5981%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (38 samples, 0.08%)</title><rect x="93.3481%" y="741" width="0.0750%" height="15" fill="rgb(223,108,18)" fg:x="47292" fg:w="38"/><text x="93.5981%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (38 samples, 0.08%)</title><rect x="93.3481%" y="725" width="0.0750%" height="15" fill="rgb(244,89,31)" fg:x="47292" fg:w="38"/><text x="93.5981%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (38 samples, 0.08%)</title><rect x="93.3481%" y="709" width="0.0750%" height="15" fill="rgb(222,167,27)" fg:x="47292" fg:w="38"/><text x="93.5981%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;)&gt;&gt; (38 samples, 0.08%)</title><rect x="93.3481%" y="693" width="0.0750%" height="15" fill="rgb(247,41,16)" fg:x="47292" fg:w="38"/><text x="93.5981%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.08%)</title><rect x="93.3481%" y="677" width="0.0750%" height="15" fill="rgb(233,168,40)" fg:x="47292" fg:w="38"/><text x="93.5981%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (43 samples, 0.08%)</title><rect x="93.3421%" y="757" width="0.0849%" height="15" fill="rgb(205,211,8)" fg:x="47289" fg:w="43"/><text x="93.5921%" y="767.50"></text></g><g><title>wgpu_core::LifeGuard::use_at (11 samples, 0.02%)</title><rect x="93.4310%" y="757" width="0.0217%" height="15" fill="rgb(238,105,11)" fg:x="47334" fg:w="11"/><text x="93.6810%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.02%)</title><rect x="93.4310%" y="741" width="0.0217%" height="15" fill="rgb(223,142,52)" fg:x="47334" fg:w="11"/><text x="93.6810%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.02%)</title><rect x="93.4882%" y="661" width="0.0217%" height="15" fill="rgb(238,51,33)" fg:x="47363" fg:w="11"/><text x="93.7382%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (11 samples, 0.02%)</title><rect x="93.4882%" y="645" width="0.0217%" height="15" fill="rgb(231,188,43)" fg:x="47363" fg:w="11"/><text x="93.7382%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (11 samples, 0.02%)</title><rect x="93.4882%" y="629" width="0.0217%" height="15" fill="rgb(216,92,17)" fg:x="47363" fg:w="11"/><text x="93.7382%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (18 samples, 0.04%)</title><rect x="93.4823%" y="725" width="0.0355%" height="15" fill="rgb(228,2,40)" fg:x="47360" fg:w="18"/><text x="93.7323%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.04%)</title><rect x="93.4823%" y="709" width="0.0355%" height="15" fill="rgb(226,73,15)" fg:x="47360" fg:w="18"/><text x="93.7323%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.04%)</title><rect x="93.4823%" y="693" width="0.0355%" height="15" fill="rgb(227,66,46)" fg:x="47360" fg:w="18"/><text x="93.7323%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.04%)</title><rect x="93.4823%" y="677" width="0.0355%" height="15" fill="rgb(209,71,6)" fg:x="47360" fg:w="18"/><text x="93.7323%" y="687.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (39 samples, 0.08%)</title><rect x="93.4547%" y="741" width="0.0770%" height="15" fill="rgb(246,100,25)" fg:x="47346" fg:w="39"/><text x="93.7047%" y="751.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;::merge (7 samples, 0.01%)</title><rect x="93.5178%" y="725" width="0.0138%" height="15" fill="rgb(248,185,27)" fg:x="47378" fg:w="7"/><text x="93.7678%" y="735.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (51 samples, 0.10%)</title><rect x="93.4527%" y="757" width="0.1007%" height="15" fill="rgb(225,118,47)" fg:x="47345" fg:w="51"/><text x="93.7027%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (7 samples, 0.01%)</title><rect x="93.5395%" y="741" width="0.0138%" height="15" fill="rgb(220,185,44)" fg:x="47389" fg:w="7"/><text x="93.7895%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (11 samples, 0.02%)</title><rect x="93.5691%" y="709" width="0.0217%" height="15" fill="rgb(227,95,24)" fg:x="47404" fg:w="11"/><text x="93.8191%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (8 samples, 0.02%)</title><rect x="93.5751%" y="693" width="0.0158%" height="15" fill="rgb(252,84,24)" fg:x="47407" fg:w="8"/><text x="93.8251%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_bind_group (6 samples, 0.01%)</title><rect x="93.5909%" y="709" width="0.0118%" height="15" fill="rgb(240,34,44)" fg:x="47415" fg:w="6"/><text x="93.8409%" y="719.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (6 samples, 0.01%)</title><rect x="93.5909%" y="693" width="0.0118%" height="15" fill="rgb(209,72,54)" fg:x="47415" fg:w="6"/><text x="93.8409%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.01%)</title><rect x="93.5909%" y="677" width="0.0118%" height="15" fill="rgb(226,19,45)" fg:x="47415" fg:w="6"/><text x="93.8409%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.01%)</title><rect x="93.5909%" y="661" width="0.0118%" height="15" fill="rgb(246,7,45)" fg:x="47415" fg:w="6"/><text x="93.8409%" y="671.50"></text></g><g><title>_nv011glcore (8 samples, 0.02%)</title><rect x="93.6323%" y="677" width="0.0158%" height="15" fill="rgb(225,45,2)" fg:x="47436" fg:w="8"/><text x="93.8823%" y="687.50"></text></g><g><title>__free (8 samples, 0.02%)</title><rect x="93.6323%" y="661" width="0.0158%" height="15" fill="rgb(221,80,29)" fg:x="47436" fg:w="8"/><text x="93.8823%" y="671.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="93.6363%" y="645" width="0.0118%" height="15" fill="rgb(228,11,19)" fg:x="47438" fg:w="6"/><text x="93.8863%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (32 samples, 0.06%)</title><rect x="93.6027%" y="709" width="0.0632%" height="15" fill="rgb(243,17,21)" fg:x="47421" fg:w="32"/><text x="93.8527%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (26 samples, 0.05%)</title><rect x="93.6145%" y="693" width="0.0513%" height="15" fill="rgb(243,88,8)" fg:x="47427" fg:w="26"/><text x="93.8645%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="93.6481%" y="677" width="0.0178%" height="15" fill="rgb(214,17,9)" fg:x="47444" fg:w="9"/><text x="93.8981%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (53 samples, 0.10%)</title><rect x="93.5632%" y="741" width="0.1046%" height="15" fill="rgb(232,169,15)" fg:x="47401" fg:w="53"/><text x="93.8132%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (53 samples, 0.10%)</title><rect x="93.5632%" y="725" width="0.1046%" height="15" fill="rgb(232,86,53)" fg:x="47401" fg:w="53"/><text x="93.8132%" y="735.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (64 samples, 0.13%)</title><rect x="93.5612%" y="757" width="0.1263%" height="15" fill="rgb(222,100,4)" fg:x="47400" fg:w="64"/><text x="93.8112%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (9 samples, 0.02%)</title><rect x="93.6698%" y="741" width="0.0178%" height="15" fill="rgb(253,151,38)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::Fence::get_latest (9 samples, 0.02%)</title><rect x="93.6698%" y="725" width="0.0178%" height="15" fill="rgb(238,215,29)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="735.50"></text></g><g><title>ash::device::Device::get_semaphore_counter_value (9 samples, 0.02%)</title><rect x="93.6698%" y="709" width="0.0178%" height="15" fill="rgb(205,128,53)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="719.50"></text></g><g><title>ash::vk::features::DeviceFnV1_2::get_semaphore_counter_value (9 samples, 0.02%)</title><rect x="93.6698%" y="693" width="0.0178%" height="15" fill="rgb(248,183,14)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="93.6698%" y="677" width="0.0178%" height="15" fill="rgb(244,172,35)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="93.6698%" y="661" width="0.0178%" height="15" fill="rgb(234,93,19)" fg:x="47455" fg:w="9"/><text x="93.9198%" y="671.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (6 samples, 0.01%)</title><rect x="93.6915%" y="757" width="0.0118%" height="15" fill="rgb(227,109,7)" fg:x="47466" fg:w="6"/><text x="93.9415%" y="767.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (8 samples, 0.02%)</title><rect x="93.7034%" y="757" width="0.0158%" height="15" fill="rgb(233,136,54)" fg:x="47472" fg:w="8"/><text x="93.9534%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (6 samples, 0.01%)</title><rect x="93.7073%" y="741" width="0.0118%" height="15" fill="rgb(233,19,40)" fg:x="47474" fg:w="6"/><text x="93.9573%" y="751.50"></text></g><g><title>ash::device::Device::end_command_buffer (6 samples, 0.01%)</title><rect x="93.7073%" y="725" width="0.0118%" height="15" fill="rgb(247,41,18)" fg:x="47474" fg:w="6"/><text x="93.9573%" y="735.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (6 samples, 0.01%)</title><rect x="93.7073%" y="709" width="0.0118%" height="15" fill="rgb(220,34,34)" fg:x="47474" fg:w="6"/><text x="93.9573%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (6 samples, 0.01%)</title><rect x="93.7073%" y="693" width="0.0118%" height="15" fill="rgb(222,135,32)" fg:x="47474" fg:w="6"/><text x="93.9573%" y="703.50"></text></g><g><title>wgpu_core::track::TrackerSet::optimize (6 samples, 0.01%)</title><rect x="93.7527%" y="757" width="0.0118%" height="15" fill="rgb(214,80,19)" fg:x="47497" fg:w="6"/><text x="94.0027%" y="767.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::optimize (6 samples, 0.01%)</title><rect x="93.7527%" y="741" width="0.0118%" height="15" fill="rgb(234,54,46)" fg:x="47497" fg:w="6"/><text x="94.0027%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (16 samples, 0.03%)</title><rect x="93.7646%" y="757" width="0.0316%" height="15" fill="rgb(251,48,23)" fg:x="47503" fg:w="16"/><text x="94.0146%" y="767.50"></text></g><g><title>ash::device::Device::begin_command_buffer (16 samples, 0.03%)</title><rect x="93.7646%" y="741" width="0.0316%" height="15" fill="rgb(254,109,52)" fg:x="47503" fg:w="16"/><text x="94.0146%" y="751.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (16 samples, 0.03%)</title><rect x="93.7646%" y="725" width="0.0316%" height="15" fill="rgb(240,186,19)" fg:x="47503" fg:w="16"/><text x="94.0146%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.03%)</title><rect x="93.7646%" y="709" width="0.0316%" height="15" fill="rgb(246,187,17)" fg:x="47503" fg:w="16"/><text x="94.0146%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (15 samples, 0.03%)</title><rect x="93.7665%" y="693" width="0.0296%" height="15" fill="rgb(212,21,5)" fg:x="47504" fg:w="15"/><text x="94.0165%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (9 samples, 0.02%)</title><rect x="93.7784%" y="677" width="0.0178%" height="15" fill="rgb(225,185,18)" fg:x="47510" fg:w="9"/><text x="94.0284%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (821 samples, 1.62%)</title><rect x="92.1894%" y="885" width="1.6205%" height="15" fill="rgb(245,114,17)" fg:x="46705" fg:w="821"/><text x="92.4394%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (794 samples, 1.57%)</title><rect x="92.2427%" y="869" width="1.5672%" height="15" fill="rgb(223,164,24)" fg:x="46732" fg:w="794"/><text x="92.4927%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (794 samples, 1.57%)</title><rect x="92.2427%" y="853" width="1.5672%" height="15" fill="rgb(211,228,3)" fg:x="46732" fg:w="794"/><text x="92.4927%" y="863.50"></text></g><g><title>bevy_render::renderer::render_system (794 samples, 1.57%)</title><rect x="92.2427%" y="837" width="1.5672%" height="15" fill="rgb(223,16,38)" fg:x="46732" fg:w="794"/><text x="92.4927%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (794 samples, 1.57%)</title><rect x="92.2427%" y="821" width="1.5672%" height="15" fill="rgb(207,31,54)" fg:x="46732" fg:w="794"/><text x="92.4927%" y="831.50"></text></g><g><title>wgpu::Queue::submit (317 samples, 0.63%)</title><rect x="93.1842%" y="805" width="0.6257%" height="15" fill="rgb(220,39,11)" fg:x="47209" fg:w="317"/><text x="93.4342%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (317 samples, 0.63%)</title><rect x="93.1842%" y="789" width="0.6257%" height="15" fill="rgb(235,185,0)" fg:x="47209" fg:w="317"/><text x="93.4342%" y="799.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (317 samples, 0.63%)</title><rect x="93.1842%" y="773" width="0.6257%" height="15" fill="rgb(249,39,18)" fg:x="47209" fg:w="317"/><text x="93.4342%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (822 samples, 1.62%)</title><rect x="92.1894%" y="917" width="1.6225%" height="15" fill="rgb(240,110,33)" fg:x="46705" fg:w="822"/><text x="92.4394%" y="927.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (822 samples, 1.62%)</title><rect x="92.1894%" y="901" width="1.6225%" height="15" fill="rgb(210,92,42)" fg:x="46705" fg:w="822"/><text x="92.4394%" y="911.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (183 samples, 0.36%)</title><rect x="94.0606%" y="133" width="0.3612%" height="15" fill="rgb(218,215,28)" fg:x="47653" fg:w="183"/><text x="94.3106%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned_erms (275 samples, 0.54%)</title><rect x="95.9950%" y="117" width="0.5428%" height="15" fill="rgb(238,215,36)" fg:x="48633" fg:w="275"/><text x="96.2450%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (239 samples, 0.47%)</title><rect x="96.7036%" y="101" width="0.4718%" height="15" fill="rgb(220,31,10)" fg:x="48992" fg:w="239"/><text x="96.9536%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (324 samples, 0.64%)</title><rect x="96.5378%" y="117" width="0.6395%" height="15" fill="rgb(212,93,14)" fg:x="48908" fg:w="324"/><text x="96.7878%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (19 samples, 0.04%)</title><rect x="97.5070%" y="101" width="0.0375%" height="15" fill="rgb(254,207,2)" fg:x="49399" fg:w="19"/><text x="97.7570%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (11 samples, 0.02%)</title><rect x="97.5445%" y="101" width="0.0217%" height="15" fill="rgb(205,57,44)" fg:x="49418" fg:w="11"/><text x="97.7945%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.03%)</title><rect x="97.5662%" y="85" width="0.0336%" height="15" fill="rgb(226,151,19)" fg:x="49429" fg:w="17"/><text x="97.8162%" y="95.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.04%)</title><rect x="97.5662%" y="101" width="0.0395%" height="15" fill="rgb(230,72,30)" fg:x="49429" fg:w="20"/><text x="97.8162%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (220 samples, 0.43%)</title><rect x="97.1774%" y="117" width="0.4343%" height="15" fill="rgb(244,0,8)" fg:x="49232" fg:w="220"/><text x="97.4274%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (8 samples, 0.02%)</title><rect x="97.6116%" y="117" width="0.0158%" height="15" fill="rgb(230,192,6)" fg:x="49452" fg:w="8"/><text x="97.8616%" y="127.50"></text></g><g><title>&lt;&amp;mut T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (67 samples, 0.13%)</title><rect x="97.6945%" y="85" width="0.1322%" height="15" fill="rgb(233,207,13)" fg:x="49494" fg:w="67"/><text x="97.9445%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (67 samples, 0.13%)</title><rect x="97.6945%" y="69" width="0.1322%" height="15" fill="rgb(206,227,7)" fg:x="49494" fg:w="67"/><text x="97.9445%" y="79.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (67 samples, 0.13%)</title><rect x="97.6945%" y="53" width="0.1322%" height="15" fill="rgb(213,217,25)" fg:x="49494" fg:w="67"/><text x="97.9445%" y="63.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (67 samples, 0.13%)</title><rect x="97.6945%" y="37" width="0.1322%" height="15" fill="rgb(249,75,4)" fg:x="49494" fg:w="67"/><text x="97.9445%" y="47.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (32 samples, 0.06%)</title><rect x="97.8268%" y="85" width="0.0632%" height="15" fill="rgb(225,114,18)" fg:x="49561" fg:w="32"/><text x="98.0768%" y="95.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (32 samples, 0.06%)</title><rect x="97.8268%" y="69" width="0.0632%" height="15" fill="rgb(211,162,40)" fg:x="49561" fg:w="32"/><text x="98.0768%" y="79.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (32 samples, 0.06%)</title><rect x="97.8268%" y="53" width="0.0632%" height="15" fill="rgb(206,49,29)" fg:x="49561" fg:w="32"/><text x="98.0768%" y="63.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (32 samples, 0.06%)</title><rect x="97.8268%" y="37" width="0.0632%" height="15" fill="rgb(244,8,6)" fg:x="49561" fg:w="32"/><text x="98.0768%" y="47.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (142 samples, 0.28%)</title><rect x="97.6274%" y="117" width="0.2803%" height="15" fill="rgb(231,194,28)" fg:x="49460" fg:w="142"/><text x="97.8774%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::read_u32_le (108 samples, 0.21%)</title><rect x="97.6945%" y="101" width="0.2132%" height="15" fill="rgb(210,69,5)" fg:x="49494" fg:w="108"/><text x="97.9445%" y="111.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.02%)</title><rect x="97.8919%" y="85" width="0.0158%" height="15" fill="rgb(216,186,12)" fg:x="49594" fg:w="8"/><text x="98.1419%" y="95.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="97.8919%" y="69" width="0.0158%" height="15" fill="rgb(238,61,15)" fg:x="49594" fg:w="8"/><text x="98.1419%" y="79.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="97.8919%" y="53" width="0.0158%" height="15" fill="rgb(226,104,1)" fg:x="49594" fg:w="8"/><text x="98.1419%" y="63.50"></text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left (35 samples, 0.07%)</title><rect x="97.9077%" y="117" width="0.0691%" height="15" fill="rgb(229,128,15)" fg:x="49602" fg:w="35"/><text x="98.1577%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (1,867 samples, 3.69%)</title><rect x="94.4219%" y="133" width="3.6852%" height="15" fill="rgb(247,110,15)" fg:x="47836" fg:w="1867"/><text x="94.6719%" y="143.50">mini..</text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte (66 samples, 0.13%)</title><rect x="97.9768%" y="117" width="0.1303%" height="15" fill="rgb(210,74,48)" fg:x="49637" fg:w="66"/><text x="98.2268%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (2,178 samples, 4.30%)</title><rect x="93.8179%" y="149" width="4.2991%" height="15" fill="rgb(246,121,10)" fg:x="47530" fg:w="2178"/><text x="94.0679%" y="159.50">miniz..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (2,179 samples, 4.30%)</title><rect x="93.8179%" y="165" width="4.3011%" height="15" fill="rgb(214,156,37)" fg:x="47530" fg:w="2179"/><text x="94.0679%" y="175.50">miniz..</text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (2,187 samples, 4.32%)</title><rect x="93.8139%" y="261" width="4.3168%" height="15" fill="rgb(214,210,34)" fg:x="47528" fg:w="2187"/><text x="94.0639%" y="271.50">&lt;flat..</text></g><g><title>flate2::zio::read (2,187 samples, 4.32%)</title><rect x="93.8139%" y="245" width="4.3168%" height="15" fill="rgb(237,93,35)" fg:x="47528" fg:w="2187"/><text x="94.0639%" y="255.50">flate..</text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (2,185 samples, 4.31%)</title><rect x="93.8179%" y="229" width="4.3129%" height="15" fill="rgb(206,36,8)" fg:x="47530" fg:w="2185"/><text x="94.0679%" y="239.50">&lt;flat..</text></g><g><title>flate2::mem::Decompress::decompress (2,185 samples, 4.31%)</title><rect x="93.8179%" y="213" width="4.3129%" height="15" fill="rgb(208,151,12)" fg:x="47530" fg:w="2185"/><text x="94.0679%" y="223.50">flate..</text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2,185 samples, 4.31%)</title><rect x="93.8179%" y="197" width="4.3129%" height="15" fill="rgb(225,133,52)" fg:x="47530" fg:w="2185"/><text x="94.0679%" y="207.50">&lt;flat..</text></g><g><title>miniz_oxide::inflate::stream::inflate (2,185 samples, 4.31%)</title><rect x="93.8179%" y="181" width="4.3129%" height="15" fill="rgb(231,71,53)" fg:x="47530" fg:w="2185"/><text x="94.0679%" y="191.50">miniz..</text></g><g><title>miniz_oxide::inflate::stream::push_dict_out (6 samples, 0.01%)</title><rect x="98.1189%" y="165" width="0.0118%" height="15" fill="rgb(243,76,21)" fg:x="49709" fg:w="6"/><text x="98.3689%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="98.1189%" y="149" width="0.0118%" height="15" fill="rgb(252,144,3)" fg:x="49709" fg:w="6"/><text x="98.3689%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="98.1189%" y="133" width="0.0118%" height="15" fill="rgb(231,199,10)" fg:x="49709" fg:w="6"/><text x="98.3689%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="98.1189%" y="117" width="0.0118%" height="15" fill="rgb(215,18,11)" fg:x="49709" fg:w="6"/><text x="98.3689%" y="127.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (11 samples, 0.02%)</title><rect x="98.1465%" y="197" width="0.0217%" height="15" fill="rgb(241,65,24)" fg:x="49723" fg:w="11"/><text x="98.3965%" y="207.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,212 samples, 4.37%)</title><rect x="93.8119%" y="453" width="4.3662%" height="15" fill="rgb(251,192,38)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="463.50">&lt;csv:..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (2,212 samples, 4.37%)</title><rect x="93.8119%" y="437" width="4.3662%" height="15" fill="rgb(205,9,35)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="447.50">csv::..</text></g><g><title>csv::string_record::StringRecord::read (2,212 samples, 4.37%)</title><rect x="93.8119%" y="421" width="4.3662%" height="15" fill="rgb(229,225,49)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="431.50">csv::..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (2,212 samples, 4.37%)</title><rect x="93.8119%" y="405" width="4.3662%" height="15" fill="rgb(207,125,39)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="415.50">csv::..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (2,212 samples, 4.37%)</title><rect x="93.8119%" y="389" width="4.3662%" height="15" fill="rgb(222,78,19)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="399.50">csv::..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2,212 samples, 4.37%)</title><rect x="93.8119%" y="373" width="4.3662%" height="15" fill="rgb(248,207,20)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="383.50">&lt;std:..</text></g><g><title>std::io::Read::read_buf (2,212 samples, 4.37%)</title><rect x="93.8119%" y="357" width="4.3662%" height="15" fill="rgb(205,103,49)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="367.50">std::..</text></g><g><title>std::io::default_read_buf (2,212 samples, 4.37%)</title><rect x="93.8119%" y="341" width="4.3662%" height="15" fill="rgb(216,42,28)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="351.50">std::..</text></g><g><title>std::io::Read::read_buf::{{closure}} (2,212 samples, 4.37%)</title><rect x="93.8119%" y="325" width="4.3662%" height="15" fill="rgb(213,205,53)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="335.50">std::..</text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (2,212 samples, 4.37%)</title><rect x="93.8119%" y="309" width="4.3662%" height="15" fill="rgb(239,140,53)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="319.50">&lt;flat..</text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (2,212 samples, 4.37%)</title><rect x="93.8119%" y="293" width="4.3662%" height="15" fill="rgb(248,95,9)" fg:x="47527" fg:w="2212"/><text x="94.0619%" y="303.50">&lt;flat..</text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (2,211 samples, 4.36%)</title><rect x="93.8139%" y="277" width="4.3642%" height="15" fill="rgb(254,58,47)" fg:x="47528" fg:w="2211"/><text x="94.0639%" y="287.50">&lt;flat..</text></g><g><title>crc32fast::Hasher::update (24 samples, 0.05%)</title><rect x="98.1307%" y="261" width="0.0474%" height="15" fill="rgb(234,227,14)" fg:x="49715" fg:w="24"/><text x="98.3807%" y="271.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (24 samples, 0.05%)</title><rect x="98.1307%" y="245" width="0.0474%" height="15" fill="rgb(205,192,45)" fg:x="49715" fg:w="24"/><text x="98.3807%" y="255.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (24 samples, 0.05%)</title><rect x="98.1307%" y="229" width="0.0474%" height="15" fill="rgb(253,187,31)" fg:x="49715" fg:w="24"/><text x="98.3807%" y="239.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (16 samples, 0.03%)</title><rect x="98.1465%" y="213" width="0.0316%" height="15" fill="rgb(222,6,32)" fg:x="49723" fg:w="16"/><text x="98.3965%" y="223.50"></text></g><g><title>core::num::flt2dec::decoder::decode (7 samples, 0.01%)</title><rect x="98.2255%" y="309" width="0.0138%" height="15" fill="rgb(249,190,19)" fg:x="49763" fg:w="7"/><text x="98.4755%" y="319.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (12 samples, 0.02%)</title><rect x="98.2413%" y="309" width="0.0237%" height="15" fill="rgb(251,28,20)" fg:x="49771" fg:w="12"/><text x="98.4913%" y="319.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (3,104 samples, 6.13%)</title><rect x="92.1894%" y="981" width="6.1269%" height="15" fill="rgb(210,223,40)" fg:x="46705" fg:w="3104"/><text x="92.4394%" y="991.50">winit::p..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (3,104 samples, 6.13%)</title><rect x="92.1894%" y="965" width="6.1269%" height="15" fill="rgb(216,137,22)" fg:x="46705" fg:w="3104"/><text x="92.4394%" y="975.50">winit::p..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (3,104 samples, 6.13%)</title><rect x="92.1894%" y="949" width="6.1269%" height="15" fill="rgb(247,39,34)" fg:x="46705" fg:w="3104"/><text x="92.4394%" y="959.50">bevy_win..</text></g><g><title>bevy_app::app::App::update (3,104 samples, 6.13%)</title><rect x="92.1894%" y="933" width="6.1269%" height="15" fill="rgb(239,43,50)" fg:x="46705" fg:w="3104"/><text x="92.4394%" y="943.50">bevy_app..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,282 samples, 4.50%)</title><rect x="93.8119%" y="917" width="4.5044%" height="15" fill="rgb(241,212,9)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="927.50">bevy_..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,282 samples, 4.50%)</title><rect x="93.8119%" y="901" width="4.5044%" height="15" fill="rgb(205,8,2)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="911.50">bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,282 samples, 4.50%)</title><rect x="93.8119%" y="885" width="4.5044%" height="15" fill="rgb(217,173,54)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="895.50">&lt;bevy..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,282 samples, 4.50%)</title><rect x="93.8119%" y="869" width="4.5044%" height="15" fill="rgb(208,149,52)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="879.50">&lt;bevy..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,282 samples, 4.50%)</title><rect x="93.8119%" y="853" width="4.5044%" height="15" fill="rgb(239,99,40)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="863.50">bevy_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,282 samples, 4.50%)</title><rect x="93.8119%" y="837" width="4.5044%" height="15" fill="rgb(233,214,26)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="847.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,282 samples, 4.50%)</title><rect x="93.8119%" y="821" width="4.5044%" height="15" fill="rgb(231,225,37)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="831.50">std::..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,282 samples, 4.50%)</title><rect x="93.8119%" y="805" width="4.5044%" height="15" fill="rgb(252,55,35)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="815.50">bevy_..</text></g><g><title>async_executor::Executor::try_tick (2,282 samples, 4.50%)</title><rect x="93.8119%" y="789" width="4.5044%" height="15" fill="rgb(239,43,18)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="799.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,282 samples, 4.50%)</title><rect x="93.8119%" y="773" width="4.5044%" height="15" fill="rgb(251,125,49)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="783.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,282 samples, 4.50%)</title><rect x="93.8119%" y="757" width="4.5044%" height="15" fill="rgb(212,83,54)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="767.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,282 samples, 4.50%)</title><rect x="93.8119%" y="741" width="4.5044%" height="15" fill="rgb(250,75,6)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="751.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,282 samples, 4.50%)</title><rect x="93.8119%" y="725" width="4.5044%" height="15" fill="rgb(252,36,40)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="735.50">&lt;core..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,282 samples, 4.50%)</title><rect x="93.8119%" y="709" width="4.5044%" height="15" fill="rgb(230,91,51)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="719.50">bevy_..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,282 samples, 4.50%)</title><rect x="93.8119%" y="693" width="4.5044%" height="15" fill="rgb(212,92,28)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="703.50">&lt;bevy..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,282 samples, 4.50%)</title><rect x="93.8119%" y="677" width="4.5044%" height="15" fill="rgb(227,13,22)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="687.50">&lt;Func..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,282 samples, 4.50%)</title><rect x="93.8119%" y="661" width="4.5044%" height="15" fill="rgb(239,204,32)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="671.50">&lt;Func..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,282 samples, 4.50%)</title><rect x="93.8119%" y="645" width="4.5044%" height="15" fill="rgb(228,49,41)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="655.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (2,282 samples, 4.50%)</title><rect x="93.8119%" y="629" width="4.5044%" height="15" fill="rgb(206,95,6)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="639.50">core:..</text></g><g><title>stellar_coordinates_test::setup (2,282 samples, 4.50%)</title><rect x="93.8119%" y="613" width="4.5044%" height="15" fill="rgb(251,20,14)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="623.50">stell..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (2,282 samples, 4.50%)</title><rect x="93.8119%" y="597" width="4.5044%" height="15" fill="rgb(214,99,28)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="607.50">&lt;stel..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (2,282 samples, 4.50%)</title><rect x="93.8119%" y="581" width="4.5044%" height="15" fill="rgb(239,122,54)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="591.50">&lt;stel..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2,282 samples, 4.50%)</title><rect x="93.8119%" y="565" width="4.5044%" height="15" fill="rgb(218,217,46)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="575.50">lazy_..</text></g><g><title>std::sync::once::Once::call_once (2,282 samples, 4.50%)</title><rect x="93.8119%" y="549" width="4.5044%" height="15" fill="rgb(249,106,28)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="559.50">std::..</text></g><g><title>std::sync::once::Once::call_inner (2,282 samples, 4.50%)</title><rect x="93.8119%" y="533" width="4.5044%" height="15" fill="rgb(250,158,18)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="543.50">std::..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2,282 samples, 4.50%)</title><rect x="93.8119%" y="517" width="4.5044%" height="15" fill="rgb(226,137,29)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="527.50">std::..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (2,282 samples, 4.50%)</title><rect x="93.8119%" y="501" width="4.5044%" height="15" fill="rgb(210,188,1)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="511.50">lazy_..</text></g><g><title>core::ops::function::FnOnce::call_once (2,282 samples, 4.50%)</title><rect x="93.8119%" y="485" width="4.5044%" height="15" fill="rgb(227,84,42)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="495.50">core:..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (2,282 samples, 4.50%)</title><rect x="93.8119%" y="469" width="4.5044%" height="15" fill="rgb(222,147,48)" fg:x="47527" fg:w="2282"/><text x="94.0619%" y="479.50">&lt;stel..</text></g><g><title>std::io::stdio::_print (70 samples, 0.14%)</title><rect x="98.1781%" y="453" width="0.1382%" height="15" fill="rgb(241,150,43)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="463.50"></text></g><g><title>std::io::stdio::print_to (70 samples, 0.14%)</title><rect x="98.1781%" y="437" width="0.1382%" height="15" fill="rgb(206,139,52)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (70 samples, 0.14%)</title><rect x="98.1781%" y="421" width="0.1382%" height="15" fill="rgb(230,63,14)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (70 samples, 0.14%)</title><rect x="98.1781%" y="405" width="0.1382%" height="15" fill="rgb(247,8,20)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (70 samples, 0.14%)</title><rect x="98.1781%" y="389" width="0.1382%" height="15" fill="rgb(213,115,4)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="399.50"></text></g><g><title>core::fmt::write (70 samples, 0.14%)</title><rect x="98.1781%" y="373" width="0.1382%" height="15" fill="rgb(241,79,49)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="383.50"></text></g><g><title>core::fmt::run (70 samples, 0.14%)</title><rect x="98.1781%" y="357" width="0.1382%" height="15" fill="rgb(222,42,35)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="367.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (70 samples, 0.14%)</title><rect x="98.1781%" y="341" width="0.1382%" height="15" fill="rgb(247,59,23)" fg:x="49739" fg:w="70"/><text x="98.4281%" y="351.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (63 samples, 0.12%)</title><rect x="98.1919%" y="325" width="0.1244%" height="15" fill="rgb(247,93,18)" fg:x="49746" fg:w="63"/><text x="98.4419%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (23 samples, 0.05%)</title><rect x="98.2709%" y="309" width="0.0454%" height="15" fill="rgb(249,107,47)" fg:x="49786" fg:w="23"/><text x="98.5209%" y="319.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (23 samples, 0.05%)</title><rect x="98.2709%" y="293" width="0.0454%" height="15" fill="rgb(219,27,1)" fg:x="49786" fg:w="23"/><text x="98.5209%" y="303.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::new (10 samples, 0.02%)</title><rect x="98.3242%" y="981" width="0.0197%" height="15" fill="rgb(217,82,32)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="991.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::create_context (10 samples, 0.02%)</title><rect x="98.3242%" y="965" width="0.0197%" height="15" fill="rgb(250,129,47)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="975.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::context::ImeContext::new (10 samples, 0.02%)</title><rect x="98.3242%" y="949" width="0.0197%" height="15" fill="rgb(253,88,35)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="959.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::context::ImeContext::create_ic (10 samples, 0.02%)</title><rect x="98.3242%" y="933" width="0.0197%" height="15" fill="rgb(245,221,14)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="943.50"></text></g><g><title>XCreateIC (10 samples, 0.02%)</title><rect x="98.3242%" y="917" width="0.0197%" height="15" fill="rgb(217,119,54)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="927.50"></text></g><g><title>_XimProtoCreateIC (10 samples, 0.02%)</title><rect x="98.3242%" y="901" width="0.0197%" height="15" fill="rgb(247,128,31)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="911.50"></text></g><g><title>_XimRead (10 samples, 0.02%)</title><rect x="98.3242%" y="885" width="0.0197%" height="15" fill="rgb(211,99,22)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="895.50"></text></g><g><title>_XimTransRegisterDispatcher (10 samples, 0.02%)</title><rect x="98.3242%" y="869" width="0.0197%" height="15" fill="rgb(212,20,17)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="879.50"></text></g><g><title>_XimTransInternalConnection (10 samples, 0.02%)</title><rect x="98.3242%" y="853" width="0.0197%" height="15" fill="rgb(209,159,29)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="863.50"></text></g><g><title>XIfEvent (10 samples, 0.02%)</title><rect x="98.3242%" y="837" width="0.0197%" height="15" fill="rgb(222,177,53)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="847.50"></text></g><g><title>_XReadEvents (10 samples, 0.02%)</title><rect x="98.3242%" y="821" width="0.0197%" height="15" fill="rgb(234,46,43)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="831.50"></text></g><g><title>xcb_wait_for_event (10 samples, 0.02%)</title><rect x="98.3242%" y="805" width="0.0197%" height="15" fill="rgb(208,108,14)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="815.50"></text></g><g><title>xcb_connect_to_fd (10 samples, 0.02%)</title><rect x="98.3242%" y="789" width="0.0197%" height="15" fill="rgb(226,78,53)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="799.50"></text></g><g><title>__libc_poll (10 samples, 0.02%)</title><rect x="98.3242%" y="773" width="0.0197%" height="15" fill="rgb(230,20,41)" fg:x="49813" fg:w="10"/><text x="98.5742%" y="783.50"></text></g><g><title>[unknown] (35,839 samples, 70.74%)</title><rect x="27.6144%" y="997" width="70.7414%" height="15" fill="rgb(213,195,35)" fg:x="13990" fg:w="35839"/><text x="27.8644%" y="1007.50">[unknown]</text></g><g><title>__futex_abstimed_wait_common (14 samples, 0.03%)</title><rect x="98.5591%" y="901" width="0.0276%" height="15" fill="rgb(242,62,36)" fg:x="49932" fg:w="14"/><text x="98.8091%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (16 samples, 0.03%)</title><rect x="98.5571%" y="917" width="0.0316%" height="15" fill="rgb(222,210,37)" fg:x="49931" fg:w="16"/><text x="98.8071%" y="927.50"></text></g><g><title>_nv011glcore (19 samples, 0.04%)</title><rect x="98.5571%" y="965" width="0.0375%" height="15" fill="rgb(232,107,19)" fg:x="49931" fg:w="19"/><text x="98.8071%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="98.5571%" y="949" width="0.0375%" height="15" fill="rgb(235,85,17)" fg:x="49931" fg:w="19"/><text x="98.8071%" y="959.50"></text></g><g><title>_nv011glcore (19 samples, 0.04%)</title><rect x="98.5571%" y="933" width="0.0375%" height="15" fill="rgb(219,195,31)" fg:x="49931" fg:w="19"/><text x="98.8071%" y="943.50"></text></g><g><title>std::thread::sleep (16 samples, 0.03%)</title><rect x="98.6124%" y="757" width="0.0316%" height="15" fill="rgb(231,183,30)" fg:x="49959" fg:w="16"/><text x="98.8624%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (16 samples, 0.03%)</title><rect x="98.6124%" y="741" width="0.0316%" height="15" fill="rgb(212,0,11)" fg:x="49959" fg:w="16"/><text x="98.8624%" y="751.50"></text></g><g><title>__GI___nanosleep (16 samples, 0.03%)</title><rect x="98.6124%" y="725" width="0.0316%" height="15" fill="rgb(249,53,54)" fg:x="49959" fg:w="16"/><text x="98.8624%" y="735.50"></text></g><g><title>__clock_nanosleep (16 samples, 0.03%)</title><rect x="98.6124%" y="709" width="0.0316%" height="15" fill="rgb(211,118,13)" fg:x="49959" fg:w="16"/><text x="98.8624%" y="719.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.05%)</title><rect x="98.5946%" y="885" width="0.0513%" height="15" fill="rgb(237,42,9)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="895.50"></text></g><g><title>std::panicking::try (26 samples, 0.05%)</title><rect x="98.5946%" y="869" width="0.0513%" height="15" fill="rgb(227,68,32)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="879.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.05%)</title><rect x="98.5946%" y="853" width="0.0513%" height="15" fill="rgb(238,10,7)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.05%)</title><rect x="98.5946%" y="837" width="0.0513%" height="15" fill="rgb(224,42,12)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.05%)</title><rect x="98.5946%" y="821" width="0.0513%" height="15" fill="rgb(252,190,5)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.05%)</title><rect x="98.5946%" y="805" width="0.0513%" height="15" fill="rgb(220,214,39)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="815.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (26 samples, 0.05%)</title><rect x="98.5946%" y="789" width="0.0513%" height="15" fill="rgb(247,98,4)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="799.50"></text></g><g><title>gilrs::ff::server::run (26 samples, 0.05%)</title><rect x="98.5946%" y="773" width="0.0513%" height="15" fill="rgb(211,60,12)" fg:x="49950" fg:w="26"/><text x="98.8446%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.05%)</title><rect x="98.5946%" y="949" width="0.0533%" height="15" fill="rgb(224,42,10)" fg:x="49950" fg:w="27"/><text x="98.8446%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.05%)</title><rect x="98.5946%" y="933" width="0.0533%" height="15" fill="rgb(217,167,4)" fg:x="49950" fg:w="27"/><text x="98.8446%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.05%)</title><rect x="98.5946%" y="917" width="0.0533%" height="15" fill="rgb(253,18,17)" fg:x="49950" fg:w="27"/><text x="98.8446%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27 samples, 0.05%)</title><rect x="98.5946%" y="901" width="0.0533%" height="15" fill="rgb(249,186,44)" fg:x="49950" fg:w="27"/><text x="98.8446%" y="911.50"></text></g><g><title>__GI___clone (142 samples, 0.28%)</title><rect x="98.3696%" y="997" width="0.2803%" height="15" fill="rgb(254,124,54)" fg:x="49836" fg:w="142"/><text x="98.6196%" y="1007.50"></text></g><g><title>start_thread (52 samples, 0.10%)</title><rect x="98.5472%" y="981" width="0.1026%" height="15" fill="rgb(220,124,39)" fg:x="49926" fg:w="52"/><text x="98.7972%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (28 samples, 0.06%)</title><rect x="98.5946%" y="965" width="0.0553%" height="15" fill="rgb(225,96,46)" fg:x="49950" fg:w="28"/><text x="98.8446%" y="975.50"></text></g><g><title>__memmove_chk_avx_unaligned_erms (18 samples, 0.04%)</title><rect x="98.6558%" y="997" width="0.0355%" height="15" fill="rgb(221,106,12)" fg:x="49981" fg:w="18"/><text x="98.9058%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.03%)</title><rect x="98.6933%" y="997" width="0.0296%" height="15" fill="rgb(227,133,23)" fg:x="50000" fg:w="15"/><text x="98.9433%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (14 samples, 0.03%)</title><rect x="98.6953%" y="981" width="0.0276%" height="15" fill="rgb(216,44,52)" fg:x="50001" fg:w="14"/><text x="98.9453%" y="991.50"></text></g><g><title>_init (6 samples, 0.01%)</title><rect x="98.7229%" y="997" width="0.0118%" height="15" fill="rgb(239,149,7)" fg:x="50015" fg:w="6"/><text x="98.9729%" y="1007.50"></text></g><g><title>_nv011glcore (125 samples, 0.25%)</title><rect x="98.7387%" y="997" width="0.2467%" height="15" fill="rgb(211,157,31)" fg:x="50023" fg:w="125"/><text x="98.9887%" y="1007.50"></text></g><g><title>_nv041glcore (7 samples, 0.01%)</title><rect x="98.9914%" y="997" width="0.0138%" height="15" fill="rgb(206,215,22)" fg:x="50151" fg:w="7"/><text x="99.2414%" y="1007.50"></text></g><g><title>&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (7 samples, 0.01%)</title><rect x="99.0170%" y="693" width="0.0138%" height="15" fill="rgb(208,113,15)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="703.50"></text></g><g><title>bevy_app::app::App::init_non_send_resource (7 samples, 0.01%)</title><rect x="99.0170%" y="677" width="0.0138%" height="15" fill="rgb(207,189,15)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="687.50"></text></g><g><title>bevy_ecs::world::World::init_non_send_resource (7 samples, 0.01%)</title><rect x="99.0170%" y="661" width="0.0138%" height="15" fill="rgb(231,115,4)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="671.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (7 samples, 0.01%)</title><rect x="99.0170%" y="645" width="0.0138%" height="15" fill="rgb(253,117,2)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="655.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;Source&gt; as core::default::Default&gt;::default (7 samples, 0.01%)</title><rect x="99.0170%" y="629" width="0.0138%" height="15" fill="rgb(248,48,24)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="639.50"></text></g><g><title>rodio::stream::OutputStream::try_default (7 samples, 0.01%)</title><rect x="99.0170%" y="613" width="0.0138%" height="15" fill="rgb(241,28,46)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="623.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (7 samples, 0.01%)</title><rect x="99.0170%" y="597" width="0.0138%" height="15" fill="rgb(216,165,52)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="607.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (7 samples, 0.01%)</title><rect x="99.0170%" y="581" width="0.0138%" height="15" fill="rgb(220,222,34)" fg:x="50164" fg:w="7"/><text x="99.2670%" y="591.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format (6 samples, 0.01%)</title><rect x="99.0190%" y="565" width="0.0118%" height="15" fill="rgb(247,222,49)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="575.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream (6 samples, 0.01%)</title><rect x="99.0190%" y="549" width="0.0118%" height="15" fill="rgb(240,10,31)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="559.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (6 samples, 0.01%)</title><rect x="99.0190%" y="533" width="0.0118%" height="15" fill="rgb(221,199,35)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="543.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (6 samples, 0.01%)</title><rect x="99.0190%" y="517" width="0.0118%" height="15" fill="rgb(230,223,11)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="527.50"></text></g><g><title>cpal::host::alsa::Device::build_stream_inner (6 samples, 0.01%)</title><rect x="99.0190%" y="501" width="0.0118%" height="15" fill="rgb(218,82,45)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="511.50"></text></g><g><title>cpal::host::alsa::set_hw_params_from_format (6 samples, 0.01%)</title><rect x="99.0190%" y="485" width="0.0118%" height="15" fill="rgb(233,213,33)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="495.50"></text></g><g><title>alsa::pcm::PCM::hw_params (6 samples, 0.01%)</title><rect x="99.0190%" y="469" width="0.0118%" height="15" fill="rgb(210,143,52)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="479.50"></text></g><g><title>snd_pcm_prepare (6 samples, 0.01%)</title><rect x="99.0190%" y="453" width="0.0118%" height="15" fill="rgb(206,95,4)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="463.50"></text></g><g><title>snd_pcm_extplug_set_param_link (6 samples, 0.01%)</title><rect x="99.0190%" y="437" width="0.0118%" height="15" fill="rgb(246,164,46)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="447.50"></text></g><g><title>pulse_check_connection (6 samples, 0.01%)</title><rect x="99.0190%" y="421" width="0.0118%" height="15" fill="rgb(213,210,47)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="431.50"></text></g><g><title>pulse_check_connection (6 samples, 0.01%)</title><rect x="99.0190%" y="405" width="0.0118%" height="15" fill="rgb(210,12,38)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="415.50"></text></g><g><title>pa_threaded_mainloop_wait (6 samples, 0.01%)</title><rect x="99.0190%" y="389" width="0.0118%" height="15" fill="rgb(252,192,54)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="399.50"></text></g><g><title>__GI___pthread_cond_wait (6 samples, 0.01%)</title><rect x="99.0190%" y="373" width="0.0118%" height="15" fill="rgb(242,92,6)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="383.50"></text></g><g><title>__futex_abstimed_wait_common (6 samples, 0.01%)</title><rect x="99.0190%" y="357" width="0.0118%" height="15" fill="rgb(253,154,15)" fg:x="50165" fg:w="6"/><text x="99.2690%" y="367.50"></text></g><g><title>[libudev.so.1.7.3] (17 samples, 0.03%)</title><rect x="99.0565%" y="501" width="0.0336%" height="15" fill="rgb(209,20,43)" fg:x="50184" fg:w="17"/><text x="99.3065%" y="511.50"></text></g><g><title>[libudev.so.1.7.3] (31 samples, 0.06%)</title><rect x="99.0446%" y="517" width="0.0612%" height="15" fill="rgb(232,28,49)" fg:x="50178" fg:w="31"/><text x="99.2946%" y="527.50"></text></g><g><title>[libudev.so.1.7.3] (46 samples, 0.09%)</title><rect x="99.0387%" y="533" width="0.0908%" height="15" fill="rgb(248,131,53)" fg:x="50175" fg:w="46"/><text x="99.2887%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (51 samples, 0.10%)</title><rect x="99.0387%" y="549" width="0.1007%" height="15" fill="rgb(214,16,30)" fg:x="50175" fg:w="51"/><text x="99.2887%" y="559.50"></text></g><g><title>udev_device_new_from_environment (6 samples, 0.01%)</title><rect x="99.1433%" y="549" width="0.0118%" height="15" fill="rgb(245,16,0)" fg:x="50228" fg:w="6"/><text x="99.3933%" y="559.50"></text></g><g><title>udev_device_new_from_environment (6 samples, 0.01%)</title><rect x="99.1433%" y="533" width="0.0118%" height="15" fill="rgb(245,17,35)" fg:x="50228" fg:w="6"/><text x="99.3933%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (6 samples, 0.01%)</title><rect x="99.1552%" y="533" width="0.0118%" height="15" fill="rgb(249,27,53)" fg:x="50234" fg:w="6"/><text x="99.4052%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (67 samples, 0.13%)</title><rect x="99.0368%" y="565" width="0.1322%" height="15" fill="rgb(214,73,24)" fg:x="50174" fg:w="67"/><text x="99.2868%" y="575.50"></text></g><g><title>udev_enumerate_scan_subsystems (7 samples, 0.01%)</title><rect x="99.1552%" y="549" width="0.0138%" height="15" fill="rgb(223,84,37)" fg:x="50234" fg:w="7"/><text x="99.4052%" y="559.50"></text></g><g><title>__fnmatch (6 samples, 0.01%)</title><rect x="99.1710%" y="549" width="0.0118%" height="15" fill="rgb(210,109,28)" fg:x="50242" fg:w="6"/><text x="99.4210%" y="559.50"></text></g><g><title>fnmatch_convert_to_wide (6 samples, 0.01%)</title><rect x="99.1710%" y="533" width="0.0118%" height="15" fill="rgb(208,186,6)" fg:x="50242" fg:w="6"/><text x="99.4210%" y="543.50"></text></g><g><title>__mbsrtowcs_l (6 samples, 0.01%)</title><rect x="99.1710%" y="517" width="0.0118%" height="15" fill="rgb(235,201,30)" fg:x="50242" fg:w="6"/><text x="99.4210%" y="527.50"></text></g><g><title>udev_device_get_properties_list_entry (10 samples, 0.02%)</title><rect x="99.1710%" y="565" width="0.0197%" height="15" fill="rgb(216,198,48)" fg:x="50242" fg:w="10"/><text x="99.4210%" y="575.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (82 samples, 0.16%)</title><rect x="99.0308%" y="693" width="0.1619%" height="15" fill="rgb(254,186,25)" fg:x="50171" fg:w="82"/><text x="99.2808%" y="703.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (82 samples, 0.16%)</title><rect x="99.0308%" y="677" width="0.1619%" height="15" fill="rgb(227,87,5)" fg:x="50171" fg:w="82"/><text x="99.2808%" y="687.50"></text></g><g><title>gilrs_core::Gilrs::new (79 samples, 0.16%)</title><rect x="99.0368%" y="661" width="0.1559%" height="15" fill="rgb(236,205,25)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="671.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (79 samples, 0.16%)</title><rect x="99.0368%" y="645" width="0.1559%" height="15" fill="rgb(229,99,32)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (79 samples, 0.16%)</title><rect x="99.0368%" y="629" width="0.1559%" height="15" fill="rgb(231,177,31)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="639.50"></text></g><g><title>udev_enumerate_scan_devices (79 samples, 0.16%)</title><rect x="99.0368%" y="613" width="0.1559%" height="15" fill="rgb(246,15,2)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="623.50"></text></g><g><title>udev_device_get_properties_list_entry (79 samples, 0.16%)</title><rect x="99.0368%" y="597" width="0.1559%" height="15" fill="rgb(207,39,15)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="607.50"></text></g><g><title>udev_device_get_properties_list_entry (79 samples, 0.16%)</title><rect x="99.0368%" y="581" width="0.1559%" height="15" fill="rgb(207,44,9)" fg:x="50174" fg:w="79"/><text x="99.2868%" y="591.50"></text></g><g><title>__libc_start_main_alias_2 (93 samples, 0.18%)</title><rect x="99.0150%" y="981" width="0.1836%" height="15" fill="rgb(225,224,33)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="991.50"></text></g><g><title>__libc_start_call_main (93 samples, 0.18%)</title><rect x="99.0150%" y="965" width="0.1836%" height="15" fill="rgb(252,151,3)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="975.50"></text></g><g><title>main (93 samples, 0.18%)</title><rect x="99.0150%" y="949" width="0.1836%" height="15" fill="rgb(211,140,13)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="959.50"></text></g><g><title>std::rt::lang_start_internal (93 samples, 0.18%)</title><rect x="99.0150%" y="933" width="0.1836%" height="15" fill="rgb(239,225,17)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="943.50"></text></g><g><title>std::panic::catch_unwind (93 samples, 0.18%)</title><rect x="99.0150%" y="917" width="0.1836%" height="15" fill="rgb(223,170,52)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="927.50"></text></g><g><title>std::panicking::try (93 samples, 0.18%)</title><rect x="99.0150%" y="901" width="0.1836%" height="15" fill="rgb(212,64,21)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="911.50"></text></g><g><title>std::panicking::try::do_call (93 samples, 0.18%)</title><rect x="99.0150%" y="885" width="0.1836%" height="15" fill="rgb(236,126,48)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="895.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (93 samples, 0.18%)</title><rect x="99.0150%" y="869" width="0.1836%" height="15" fill="rgb(209,135,11)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="879.50"></text></g><g><title>std::panic::catch_unwind (93 samples, 0.18%)</title><rect x="99.0150%" y="853" width="0.1836%" height="15" fill="rgb(228,126,40)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="863.50"></text></g><g><title>std::panicking::try (93 samples, 0.18%)</title><rect x="99.0150%" y="837" width="0.1836%" height="15" fill="rgb(205,196,36)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="847.50"></text></g><g><title>std::panicking::try::do_call (93 samples, 0.18%)</title><rect x="99.0150%" y="821" width="0.1836%" height="15" fill="rgb(243,160,33)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (93 samples, 0.18%)</title><rect x="99.0150%" y="805" width="0.1836%" height="15" fill="rgb(210,84,20)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}} (93 samples, 0.18%)</title><rect x="99.0150%" y="789" width="0.1836%" height="15" fill="rgb(228,213,30)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (93 samples, 0.18%)</title><rect x="99.0150%" y="773" width="0.1836%" height="15" fill="rgb(252,33,45)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (93 samples, 0.18%)</title><rect x="99.0150%" y="757" width="0.1836%" height="15" fill="rgb(254,227,20)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="767.50"></text></g><g><title>stellar_coordinates_test::main (93 samples, 0.18%)</title><rect x="99.0150%" y="741" width="0.1836%" height="15" fill="rgb(228,192,2)" fg:x="50163" fg:w="93"/><text x="99.2650%" y="751.50"></text></g><g><title>bevy_app::app::App::add_plugins (92 samples, 0.18%)</title><rect x="99.0170%" y="725" width="0.1816%" height="15" fill="rgb(233,32,8)" fg:x="50164" fg:w="92"/><text x="99.2670%" y="735.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (92 samples, 0.18%)</title><rect x="99.0170%" y="709" width="0.1816%" height="15" fill="rgb(220,146,47)" fg:x="50164" fg:w="92"/><text x="99.2670%" y="719.50"></text></g><g><title>_start (101 samples, 0.20%)</title><rect x="99.0052%" y="997" width="0.1994%" height="15" fill="rgb(246,194,1)" fg:x="50158" fg:w="101"/><text x="99.2552%" y="1007.50"></text></g><g><title>anon.07dcbd4221c3a843a4fcb3844686bd7f.17.llvm.270710100272613310 (13 samples, 0.03%)</title><rect x="99.2144%" y="997" width="0.0257%" height="15" fill="rgb(218,203,9)" fg:x="50264" fg:w="13"/><text x="99.4644%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (16 samples, 0.03%)</title><rect x="99.2480%" y="981" width="0.0316%" height="15" fill="rgb(237,97,14)" fg:x="50281" fg:w="16"/><text x="99.4980%" y="991.50"></text></g><g><title>anon.1c8df38dee137f9605a876c2b1290a8c.31.llvm.6233612184483873324 (22 samples, 0.04%)</title><rect x="99.2480%" y="997" width="0.0434%" height="15" fill="rgb(239,76,15)" fg:x="50281" fg:w="22"/><text x="99.4980%" y="1007.50"></text></g><g><title>anon.1c8df38dee137f9605a876c2b1290a8c.33.llvm.6233612184483873324 (11 samples, 0.02%)</title><rect x="99.2914%" y="997" width="0.0217%" height="15" fill="rgb(222,53,45)" fg:x="50303" fg:w="11"/><text x="99.5414%" y="1007.50"></text></g><g><title>async_executor::Executor::is_empty (11 samples, 0.02%)</title><rect x="99.4197%" y="997" width="0.0217%" height="15" fill="rgb(237,88,5)" fg:x="50368" fg:w="11"/><text x="99.6697%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (11 samples, 0.02%)</title><rect x="99.4197%" y="981" width="0.0217%" height="15" fill="rgb(218,223,35)" fg:x="50368" fg:w="11"/><text x="99.6697%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::is_empty (6 samples, 0.01%)</title><rect x="99.4453%" y="997" width="0.0118%" height="15" fill="rgb(243,229,38)" fg:x="50381" fg:w="6"/><text x="99.6953%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (6 samples, 0.01%)</title><rect x="99.4453%" y="981" width="0.0118%" height="15" fill="rgb(240,75,41)" fg:x="50381" fg:w="6"/><text x="99.6953%" y="991.50"></text></g><g><title>bevy_ecs::world::World::flush (8 samples, 0.02%)</title><rect x="99.4769%" y="997" width="0.0158%" height="15" fill="rgb(209,110,37)" fg:x="50397" fg:w="8"/><text x="99.7269%" y="1007.50"></text></g><g><title>completed.0 (7 samples, 0.01%)</title><rect x="99.5046%" y="997" width="0.0138%" height="15" fill="rgb(221,130,46)" fg:x="50411" fg:w="7"/><text x="99.7546%" y="1007.50"></text></g><g><title>std::io::stdio::_print (6 samples, 0.01%)</title><rect x="99.5065%" y="981" width="0.0118%" height="15" fill="rgb(237,160,20)" fg:x="50412" fg:w="6"/><text x="99.7565%" y="991.50"></text></g><g><title>core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS (7 samples, 0.01%)</title><rect x="99.5302%" y="997" width="0.0138%" height="15" fill="rgb(234,126,24)" fg:x="50424" fg:w="7"/><text x="99.7802%" y="1007.50"></text></g><g><title>std::thread::current (8 samples, 0.02%)</title><rect x="99.5697%" y="997" width="0.0158%" height="15" fill="rgb(207,177,9)" fg:x="50444" fg:w="8"/><text x="99.8197%" y="1007.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.04%)</title><rect x="99.5875%" y="997" width="0.0375%" height="15" fill="rgb(231,191,33)" fg:x="50453" fg:w="19"/><text x="99.8375%" y="1007.50"></text></g><g><title>stellar_coordin (39,132 samples, 77.24%)</title><rect x="22.4073%" y="1013" width="77.2413%" height="15" fill="rgb(207,42,1)" fg:x="11352" fg:w="39132"/><text x="22.6573%" y="1023.50">stellar_coordin</text></g><g><title>[anon] (19 samples, 0.04%)</title><rect x="99.6506%" y="997" width="0.0375%" height="15" fill="rgb(218,34,50)" fg:x="50485" fg:w="19"/><text x="99.9006%" y="1007.50"></text></g><g><title>pa_pstream_register_memfd_mempool (15 samples, 0.03%)</title><rect x="99.7098%" y="885" width="0.0296%" height="15" fill="rgb(254,126,39)" fg:x="50515" fg:w="15"/><text x="99.9598%" y="895.50"></text></g><g><title>pa_common_command_register_memfd_shmid (15 samples, 0.03%)</title><rect x="99.7098%" y="869" width="0.0296%" height="15" fill="rgb(251,17,26)" fg:x="50515" fg:w="15"/><text x="99.9598%" y="879.50"></text></g><g><title>pa_stream_connect_upload (12 samples, 0.02%)</title><rect x="99.7888%" y="789" width="0.0237%" height="15" fill="rgb(252,215,34)" fg:x="50555" fg:w="12"/><text x="100.0388%" y="799.50"></text></g><g><title>pulse_poll_deactivate (7 samples, 0.01%)</title><rect x="99.7987%" y="773" width="0.0138%" height="15" fill="rgb(217,120,44)" fg:x="50560" fg:w="7"/><text x="100.0487%" y="783.50"></text></g><g><title>pa_context_disconnect (17 samples, 0.03%)</title><rect x="99.7829%" y="821" width="0.0336%" height="15" fill="rgb(211,31,11)" fg:x="50552" fg:w="17"/><text x="100.0329%" y="831.50"></text></g><g><title>pa_pdispatch_run (17 samples, 0.03%)</title><rect x="99.7829%" y="805" width="0.0336%" height="15" fill="rgb(222,69,51)" fg:x="50552" fg:w="17"/><text x="100.0329%" y="815.50"></text></g><g><title>pa_memexport_process_release (6 samples, 0.01%)</title><rect x="99.8164%" y="821" width="0.0118%" height="15" fill="rgb(215,229,42)" fg:x="50569" fg:w="6"/><text x="100.0664%" y="831.50"></text></g><g><title>pa_pstream_register_memfd_mempool (39 samples, 0.08%)</title><rect x="99.7651%" y="853" width="0.0770%" height="15" fill="rgb(212,102,15)" fg:x="50543" fg:w="39"/><text x="100.0151%" y="863.50"></text></g><g><title>pa_pstream_set_srbchannel (31 samples, 0.06%)</title><rect x="99.7809%" y="837" width="0.0612%" height="15" fill="rgb(205,179,41)" fg:x="50551" fg:w="31"/><text x="100.0309%" y="847.50"></text></g><g><title>pa_srbchannel_read (47 samples, 0.09%)</title><rect x="99.7513%" y="885" width="0.0928%" height="15" fill="rgb(219,148,46)" fg:x="50536" fg:w="47"/><text x="100.0013%" y="895.50"></text></g><g><title>pa_pstream_register_memfd_mempool (40 samples, 0.08%)</title><rect x="99.7651%" y="869" width="0.0790%" height="15" fill="rgb(243,40,19)" fg:x="50543" fg:w="40"/><text x="100.0151%" y="879.50"></text></g><g><title>pa_mainloop_dispatch (71 samples, 0.14%)</title><rect x="99.7059%" y="901" width="0.1401%" height="15" fill="rgb(208,206,34)" fg:x="50513" fg:w="71"/><text x="99.9559%" y="911.50"></text></g><g><title>__libc_poll (56 samples, 0.11%)</title><rect x="99.8599%" y="869" width="0.1105%" height="15" fill="rgb(244,184,38)" fg:x="50591" fg:w="56"/><text x="100.1099%" y="879.50"></text></g><g><title>pa_mainloop_poll (74 samples, 0.15%)</title><rect x="99.8460%" y="901" width="0.1461%" height="15" fill="rgb(244,151,47)" fg:x="50584" fg:w="74"/><text x="100.0960%" y="911.50"></text></g><g><title>pa_stream_set_name (73 samples, 0.14%)</title><rect x="99.8480%" y="885" width="0.1441%" height="15" fill="rgb(236,134,42)" fg:x="50585" fg:w="73"/><text x="100.0980%" y="895.50"></text></g><g><title>pa_mutex_lock (10 samples, 0.02%)</title><rect x="99.9724%" y="869" width="0.0197%" height="15" fill="rgb(233,93,22)" fg:x="50648" fg:w="10"/><text x="100.2224%" y="879.50"></text></g><g><title>___pthread_mutex_lock (8 samples, 0.02%)</title><rect x="99.9763%" y="853" width="0.0158%" height="15" fill="rgb(211,202,10)" fg:x="50650" fg:w="8"/><text x="100.2263%" y="863.50"></text></g><g><title>__GI___clone (151 samples, 0.30%)</title><rect x="99.7000%" y="997" width="0.2981%" height="15" fill="rgb(240,63,8)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="1007.50"></text></g><g><title>start_thread (151 samples, 0.30%)</title><rect x="99.7000%" y="981" width="0.2981%" height="15" fill="rgb(214,9,4)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="991.50"></text></g><g><title>pa_mutex_unlock (151 samples, 0.30%)</title><rect x="99.7000%" y="965" width="0.2981%" height="15" fill="rgb(243,66,45)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="975.50"></text></g><g><title>pa_stream_update_sample_rate (151 samples, 0.30%)</title><rect x="99.7000%" y="949" width="0.2981%" height="15" fill="rgb(220,50,42)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="959.50"></text></g><g><title>pa_mainloop_run (151 samples, 0.30%)</title><rect x="99.7000%" y="933" width="0.2981%" height="15" fill="rgb(220,134,27)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="943.50"></text></g><g><title>pa_mainloop_iterate (151 samples, 0.30%)</title><rect x="99.7000%" y="917" width="0.2981%" height="15" fill="rgb(246,151,50)" fg:x="50510" fg:w="151"/><text x="99.9500%" y="927.50"></text></g><g><title>all (50,662 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(238,216,27)" fg:x="0" fg:w="50662"/><text x="0.2500%" y="1039.50"></text></g><g><title>threaded-ml (178 samples, 0.35%)</title><rect x="99.6487%" y="1013" width="0.3513%" height="15" fill="rgb(250,92,11)" fg:x="50484" fg:w="178"/><text x="99.8987%" y="1023.50"></text></g></svg></svg>