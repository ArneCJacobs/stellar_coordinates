<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1061.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="110603"><g><title>[[heap]] (48 samples, 0.04%)</title><rect x="0.0099%" y="997" width="0.0434%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="48"/><text x="0.2599%" y="1007.50"></text></g><g><title>[anon] (44 samples, 0.04%)</title><rect x="0.0561%" y="997" width="0.0398%" height="15" fill="rgb(217,0,24)" fg:x="62" fg:w="44"/><text x="0.3061%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (14 samples, 0.01%)</title><rect x="0.1040%" y="981" width="0.0127%" height="15" fill="rgb(221,193,54)" fg:x="115" fg:w="14"/><text x="0.3540%" y="991.50"></text></g><g><title>[unknown] (109 samples, 0.10%)</title><rect x="0.0958%" y="997" width="0.0986%" height="15" fill="rgb(248,212,6)" fg:x="106" fg:w="109"/><text x="0.3458%" y="1007.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.2070%" y="645" width="0.0136%" height="15" fill="rgb(208,68,35)" fg:x="229" fg:w="15"/><text x="0.4570%" y="655.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="0.2070%" y="661" width="0.0226%" height="15" fill="rgb(232,128,0)" fg:x="229" fg:w="25"/><text x="0.4570%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (22 samples, 0.02%)</title><rect x="0.2740%" y="485" width="0.0199%" height="15" fill="rgb(207,160,47)" fg:x="303" fg:w="22"/><text x="0.5240%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="0.2785%" y="469" width="0.0154%" height="15" fill="rgb(228,23,34)" fg:x="308" fg:w="17"/><text x="0.5285%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="0.2785%" y="453" width="0.0154%" height="15" fill="rgb(218,30,26)" fg:x="308" fg:w="17"/><text x="0.5285%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (38 samples, 0.03%)</title><rect x="0.2613%" y="501" width="0.0344%" height="15" fill="rgb(220,122,19)" fg:x="289" fg:w="38"/><text x="0.5113%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (27 samples, 0.02%)</title><rect x="0.2957%" y="501" width="0.0244%" height="15" fill="rgb(250,228,42)" fg:x="327" fg:w="27"/><text x="0.5457%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="0.2966%" y="485" width="0.0235%" height="15" fill="rgb(240,193,28)" fg:x="328" fg:w="26"/><text x="0.5466%" y="495.50"></text></g><g><title>async_executor::steal (69 samples, 0.06%)</title><rect x="0.2604%" y="517" width="0.0624%" height="15" fill="rgb(216,20,37)" fg:x="288" fg:w="69"/><text x="0.5104%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="0.3273%" y="501" width="0.0289%" height="15" fill="rgb(206,188,39)" fg:x="362" fg:w="32"/><text x="0.5773%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (69 samples, 0.06%)</title><rect x="0.3228%" y="517" width="0.0624%" height="15" fill="rgb(217,207,13)" fg:x="357" fg:w="69"/><text x="0.5728%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="0.3562%" y="501" width="0.0289%" height="15" fill="rgb(231,73,38)" fg:x="394" fg:w="32"/><text x="0.6062%" y="511.50"></text></g><g><title>__tls_get_addr (25 samples, 0.02%)</title><rect x="0.3906%" y="405" width="0.0226%" height="15" fill="rgb(225,20,46)" fg:x="432" fg:w="25"/><text x="0.6406%" y="415.50"></text></g><g><title>fastrand::usize (33 samples, 0.03%)</title><rect x="0.3879%" y="517" width="0.0298%" height="15" fill="rgb(210,31,41)" fg:x="429" fg:w="33"/><text x="0.6379%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="0.3879%" y="501" width="0.0298%" height="15" fill="rgb(221,200,47)" fg:x="429" fg:w="33"/><text x="0.6379%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="0.3879%" y="485" width="0.0298%" height="15" fill="rgb(226,26,5)" fg:x="429" fg:w="33"/><text x="0.6379%" y="495.50"></text></g><g><title>fastrand::RNG::__getit (33 samples, 0.03%)</title><rect x="0.3879%" y="469" width="0.0298%" height="15" fill="rgb(249,33,26)" fg:x="429" fg:w="33"/><text x="0.6379%" y="479.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (31 samples, 0.03%)</title><rect x="0.3897%" y="453" width="0.0280%" height="15" fill="rgb(235,183,28)" fg:x="431" fg:w="31"/><text x="0.6397%" y="463.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (31 samples, 0.03%)</title><rect x="0.3897%" y="437" width="0.0280%" height="15" fill="rgb(221,5,38)" fg:x="431" fg:w="31"/><text x="0.6397%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (31 samples, 0.03%)</title><rect x="0.3897%" y="421" width="0.0280%" height="15" fill="rgb(247,18,42)" fg:x="431" fg:w="31"/><text x="0.6397%" y="431.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (194 samples, 0.18%)</title><rect x="0.2468%" y="533" width="0.1754%" height="15" fill="rgb(241,131,45)" fg:x="273" fg:w="194"/><text x="0.4968%" y="543.50"></text></g><g><title>async_executor::State::notify (32 samples, 0.03%)</title><rect x="0.4222%" y="533" width="0.0289%" height="15" fill="rgb(249,31,29)" fg:x="467" fg:w="32"/><text x="0.6722%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (25 samples, 0.02%)</title><rect x="0.4512%" y="533" width="0.0226%" height="15" fill="rgb(225,111,53)" fg:x="499" fg:w="25"/><text x="0.7012%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (276 samples, 0.25%)</title><rect x="0.2432%" y="597" width="0.2495%" height="15" fill="rgb(238,160,17)" fg:x="269" fg:w="276"/><text x="0.4932%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (276 samples, 0.25%)</title><rect x="0.2432%" y="581" width="0.2495%" height="15" fill="rgb(214,148,48)" fg:x="269" fg:w="276"/><text x="0.4932%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (276 samples, 0.25%)</title><rect x="0.2432%" y="565" width="0.2495%" height="15" fill="rgb(232,36,49)" fg:x="269" fg:w="276"/><text x="0.4932%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (276 samples, 0.25%)</title><rect x="0.2432%" y="549" width="0.2495%" height="15" fill="rgb(209,103,24)" fg:x="269" fg:w="276"/><text x="0.4932%" y="559.50"></text></g><g><title>async_executor::Ticker::wake (21 samples, 0.02%)</title><rect x="0.4738%" y="533" width="0.0190%" height="15" fill="rgb(229,88,8)" fg:x="524" fg:w="21"/><text x="0.7238%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (288 samples, 0.26%)</title><rect x="0.2378%" y="629" width="0.2604%" height="15" fill="rgb(213,181,19)" fg:x="263" fg:w="288"/><text x="0.4878%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (287 samples, 0.26%)</title><rect x="0.2387%" y="613" width="0.2595%" height="15" fill="rgb(254,191,54)" fg:x="264" fg:w="287"/><text x="0.4887%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="0.5172%" y="533" width="0.0136%" height="15" fill="rgb(241,83,37)" fg:x="572" fg:w="15"/><text x="0.7672%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="0.5190%" y="517" width="0.0118%" height="15" fill="rgb(233,36,39)" fg:x="574" fg:w="13"/><text x="0.7690%" y="527.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.5154%" y="549" width="0.0190%" height="15" fill="rgb(226,3,54)" fg:x="570" fg:w="21"/><text x="0.7654%" y="559.50"></text></g><g><title>event_listener::List::notify (14 samples, 0.01%)</title><rect x="0.5434%" y="469" width="0.0127%" height="15" fill="rgb(245,192,40)" fg:x="601" fg:w="14"/><text x="0.7934%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (14 samples, 0.01%)</title><rect x="0.5434%" y="453" width="0.0127%" height="15" fill="rgb(238,167,29)" fg:x="601" fg:w="14"/><text x="0.7934%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (14 samples, 0.01%)</title><rect x="0.5434%" y="437" width="0.0127%" height="15" fill="rgb(232,182,51)" fg:x="601" fg:w="14"/><text x="0.7934%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (12 samples, 0.01%)</title><rect x="0.5452%" y="421" width="0.0108%" height="15" fill="rgb(231,60,39)" fg:x="603" fg:w="12"/><text x="0.7952%" y="431.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (24 samples, 0.02%)</title><rect x="0.5371%" y="501" width="0.0217%" height="15" fill="rgb(208,69,12)" fg:x="594" fg:w="24"/><text x="0.7871%" y="511.50"></text></g><g><title>event_listener::Event::notify (21 samples, 0.02%)</title><rect x="0.5398%" y="485" width="0.0190%" height="15" fill="rgb(235,93,37)" fg:x="597" fg:w="21"/><text x="0.7898%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="0.5371%" y="517" width="0.0226%" height="15" fill="rgb(213,116,39)" fg:x="594" fg:w="25"/><text x="0.7871%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.5343%" y="549" width="0.0344%" height="15" fill="rgb(222,207,29)" fg:x="591" fg:w="38"/><text x="0.7843%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (37 samples, 0.03%)</title><rect x="0.5352%" y="533" width="0.0335%" height="15" fill="rgb(206,96,30)" fg:x="592" fg:w="37"/><text x="0.7852%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="0.5687%" y="533" width="0.0118%" height="15" fill="rgb(218,138,4)" fg:x="629" fg:w="13"/><text x="0.8187%" y="543.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="0.5687%" y="549" width="0.0136%" height="15" fill="rgb(250,191,14)" fg:x="629" fg:w="15"/><text x="0.8187%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (95 samples, 0.09%)</title><rect x="0.5135%" y="565" width="0.0859%" height="15" fill="rgb(239,60,40)" fg:x="568" fg:w="95"/><text x="0.7635%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="0.6130%" y="485" width="0.0127%" height="15" fill="rgb(206,27,48)" fg:x="678" fg:w="14"/><text x="0.8630%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="0.6130%" y="469" width="0.0127%" height="15" fill="rgb(225,35,8)" fg:x="678" fg:w="14"/><text x="0.8630%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="0.6130%" y="453" width="0.0127%" height="15" fill="rgb(250,213,24)" fg:x="678" fg:w="14"/><text x="0.8630%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (27 samples, 0.02%)</title><rect x="0.6076%" y="517" width="0.0244%" height="15" fill="rgb(247,123,22)" fg:x="672" fg:w="27"/><text x="0.8576%" y="527.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (21 samples, 0.02%)</title><rect x="0.6130%" y="501" width="0.0190%" height="15" fill="rgb(231,138,38)" fg:x="678" fg:w="21"/><text x="0.8630%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (29 samples, 0.03%)</title><rect x="0.6076%" y="533" width="0.0262%" height="15" fill="rgb(231,145,46)" fg:x="672" fg:w="29"/><text x="0.8576%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.04%)</title><rect x="0.6031%" y="549" width="0.0380%" height="15" fill="rgb(251,118,11)" fg:x="667" fg:w="42"/><text x="0.8531%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.02%)</title><rect x="0.6582%" y="485" width="0.0154%" height="15" fill="rgb(217,147,25)" fg:x="728" fg:w="17"/><text x="0.9082%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.02%)</title><rect x="0.6582%" y="469" width="0.0154%" height="15" fill="rgb(247,81,37)" fg:x="728" fg:w="17"/><text x="0.9082%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (45 samples, 0.04%)</title><rect x="0.6428%" y="517" width="0.0407%" height="15" fill="rgb(209,12,38)" fg:x="711" fg:w="45"/><text x="0.8928%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (35 samples, 0.03%)</title><rect x="0.6519%" y="501" width="0.0316%" height="15" fill="rgb(227,1,9)" fg:x="721" fg:w="35"/><text x="0.9019%" y="511.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (15 samples, 0.01%)</title><rect x="0.7034%" y="437" width="0.0136%" height="15" fill="rgb(248,47,43)" fg:x="778" fg:w="15"/><text x="0.9534%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="0.7034%" y="421" width="0.0136%" height="15" fill="rgb(221,10,30)" fg:x="778" fg:w="15"/><text x="0.9534%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="0.7043%" y="405" width="0.0127%" height="15" fill="rgb(210,229,1)" fg:x="779" fg:w="14"/><text x="0.9543%" y="415.50"></text></g><g><title>event_listener::List::notify (38 samples, 0.03%)</title><rect x="0.6935%" y="501" width="0.0344%" height="15" fill="rgb(222,148,37)" fg:x="767" fg:w="38"/><text x="0.9435%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (35 samples, 0.03%)</title><rect x="0.6962%" y="485" width="0.0316%" height="15" fill="rgb(234,67,33)" fg:x="770" fg:w="35"/><text x="0.9462%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (35 samples, 0.03%)</title><rect x="0.6962%" y="469" width="0.0316%" height="15" fill="rgb(247,98,35)" fg:x="770" fg:w="35"/><text x="0.9462%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (27 samples, 0.02%)</title><rect x="0.7034%" y="453" width="0.0244%" height="15" fill="rgb(247,138,52)" fg:x="778" fg:w="27"/><text x="0.9534%" y="463.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (105 samples, 0.09%)</title><rect x="0.6419%" y="533" width="0.0949%" height="15" fill="rgb(213,79,30)" fg:x="710" fg:w="105"/><text x="0.8919%" y="543.50"></text></g><g><title>event_listener::Event::notify (59 samples, 0.05%)</title><rect x="0.6835%" y="517" width="0.0533%" height="15" fill="rgb(246,177,23)" fg:x="756" fg:w="59"/><text x="0.9335%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 0.10%)</title><rect x="0.6410%" y="549" width="0.1040%" height="15" fill="rgb(230,62,27)" fg:x="709" fg:w="115"/><text x="0.8910%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (14 samples, 0.01%)</title><rect x="0.7468%" y="533" width="0.0127%" height="15" fill="rgb(216,154,8)" fg:x="826" fg:w="14"/><text x="0.9968%" y="543.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (13 samples, 0.01%)</title><rect x="0.7595%" y="517" width="0.0118%" height="15" fill="rgb(244,35,45)" fg:x="840" fg:w="13"/><text x="1.0095%" y="527.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (17 samples, 0.02%)</title><rect x="0.7839%" y="437" width="0.0154%" height="15" fill="rgb(251,115,12)" fg:x="867" fg:w="17"/><text x="1.0339%" y="447.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (35 samples, 0.03%)</title><rect x="0.7739%" y="469" width="0.0316%" height="15" fill="rgb(240,54,50)" fg:x="856" fg:w="35"/><text x="1.0239%" y="479.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (34 samples, 0.03%)</title><rect x="0.7748%" y="453" width="0.0307%" height="15" fill="rgb(233,84,52)" fg:x="857" fg:w="34"/><text x="1.0248%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="0.8137%" y="357" width="0.0145%" height="15" fill="rgb(207,117,47)" fg:x="900" fg:w="16"/><text x="1.0637%" y="367.50"></text></g><g><title>&lt;bevy_pbr::light::VisiblePointLights as core::clone::Clone&gt;::clone (38 samples, 0.03%)</title><rect x="0.8137%" y="389" width="0.0344%" height="15" fill="rgb(249,43,39)" fg:x="900" fg:w="38"/><text x="1.0637%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.03%)</title><rect x="0.8137%" y="373" width="0.0344%" height="15" fill="rgb(209,38,44)" fg:x="900" fg:w="38"/><text x="1.0637%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="0.8282%" y="357" width="0.0199%" height="15" fill="rgb(236,212,23)" fg:x="916" fg:w="22"/><text x="1.0782%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="0.8282%" y="341" width="0.0199%" height="15" fill="rgb(242,79,21)" fg:x="916" fg:w="22"/><text x="1.0782%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="0.8282%" y="325" width="0.0199%" height="15" fill="rgb(211,96,35)" fg:x="916" fg:w="22"/><text x="1.0782%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="0.8327%" y="309" width="0.0154%" height="15" fill="rgb(253,215,40)" fg:x="921" fg:w="17"/><text x="1.0827%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="0.8336%" y="293" width="0.0145%" height="15" fill="rgb(211,81,21)" fg:x="922" fg:w="16"/><text x="1.0836%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="0.8363%" y="277" width="0.0118%" height="15" fill="rgb(208,190,38)" fg:x="925" fg:w="13"/><text x="1.0863%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72 samples, 0.07%)</title><rect x="0.8119%" y="405" width="0.0651%" height="15" fill="rgb(235,213,38)" fg:x="898" fg:w="72"/><text x="1.0619%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.02%)</title><rect x="0.8535%" y="389" width="0.0235%" height="15" fill="rgb(237,122,38)" fg:x="944" fg:w="26"/><text x="1.1035%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.07%)</title><rect x="0.8119%" y="453" width="0.0660%" height="15" fill="rgb(244,218,35)" fg:x="898" fg:w="73"/><text x="1.0619%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73 samples, 0.07%)</title><rect x="0.8119%" y="437" width="0.0660%" height="15" fill="rgb(240,68,47)" fg:x="898" fg:w="73"/><text x="1.0619%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (73 samples, 0.07%)</title><rect x="0.8119%" y="421" width="0.0660%" height="15" fill="rgb(210,16,53)" fg:x="898" fg:w="73"/><text x="1.0619%" y="431.50"></text></g><g><title>bevy_pbr::render::light::extract_clusters (74 samples, 0.07%)</title><rect x="0.8119%" y="469" width="0.0669%" height="15" fill="rgb(235,124,12)" fg:x="898" fg:w="74"/><text x="1.0619%" y="479.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (41 samples, 0.04%)</title><rect x="0.8797%" y="469" width="0.0371%" height="15" fill="rgb(224,169,11)" fg:x="973" fg:w="41"/><text x="1.1297%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="0.9810%" y="405" width="0.0154%" height="15" fill="rgb(250,166,2)" fg:x="1085" fg:w="17"/><text x="1.2310%" y="415.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (116 samples, 0.10%)</title><rect x="1.0777%" y="389" width="0.1049%" height="15" fill="rgb(242,216,29)" fg:x="1192" fg:w="116"/><text x="1.3277%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (106 samples, 0.10%)</title><rect x="1.0868%" y="373" width="0.0958%" height="15" fill="rgb(230,116,27)" fg:x="1202" fg:w="106"/><text x="1.3368%" y="383.50"></text></g><g><title>f64xsubf128 (101 samples, 0.09%)</title><rect x="1.0913%" y="357" width="0.0913%" height="15" fill="rgb(228,99,48)" fg:x="1207" fg:w="101"/><text x="1.3413%" y="367.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (285 samples, 0.26%)</title><rect x="0.9285%" y="437" width="0.2577%" height="15" fill="rgb(253,11,6)" fg:x="1027" fg:w="285"/><text x="1.1785%" y="447.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (244 samples, 0.22%)</title><rect x="0.9656%" y="421" width="0.2206%" height="15" fill="rgb(247,143,39)" fg:x="1068" fg:w="244"/><text x="1.2156%" y="431.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (207 samples, 0.19%)</title><rect x="0.9991%" y="405" width="0.1872%" height="15" fill="rgb(236,97,10)" fg:x="1105" fg:w="207"/><text x="1.2491%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (487 samples, 0.44%)</title><rect x="0.7595%" y="533" width="0.4403%" height="15" fill="rgb(233,208,19)" fg:x="840" fg:w="487"/><text x="1.0095%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (474 samples, 0.43%)</title><rect x="0.7712%" y="517" width="0.4286%" height="15" fill="rgb(216,164,2)" fg:x="853" fg:w="474"/><text x="1.0212%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (474 samples, 0.43%)</title><rect x="0.7712%" y="501" width="0.4286%" height="15" fill="rgb(220,129,5)" fg:x="853" fg:w="474"/><text x="1.0212%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (474 samples, 0.43%)</title><rect x="0.7712%" y="485" width="0.4286%" height="15" fill="rgb(242,17,10)" fg:x="853" fg:w="474"/><text x="1.0212%" y="495.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (306 samples, 0.28%)</title><rect x="0.9231%" y="469" width="0.2767%" height="15" fill="rgb(242,107,0)" fg:x="1021" fg:w="306"/><text x="1.1731%" y="479.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (303 samples, 0.27%)</title><rect x="0.9258%" y="453" width="0.2740%" height="15" fill="rgb(251,28,31)" fg:x="1024" fg:w="303"/><text x="1.1758%" y="463.50"></text></g><g><title>glam::vec3::Vec3::select (15 samples, 0.01%)</title><rect x="1.1862%" y="437" width="0.0136%" height="15" fill="rgb(233,223,10)" fg:x="1312" fg:w="15"/><text x="1.4362%" y="447.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="1.2034%" y="389" width="0.0244%" height="15" fill="rgb(215,21,27)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="1.2034%" y="373" width="0.0244%" height="15" fill="rgb(232,23,21)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="1.2034%" y="357" width="0.0244%" height="15" fill="rgb(244,5,23)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="1.2034%" y="341" width="0.0244%" height="15" fill="rgb(226,81,46)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="1.2034%" y="325" width="0.0244%" height="15" fill="rgb(247,70,30)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="1.2034%" y="309" width="0.0244%" height="15" fill="rgb(212,68,19)" fg:x="1331" fg:w="27"/><text x="1.4534%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.02%)</title><rect x="1.2052%" y="293" width="0.0226%" height="15" fill="rgb(240,187,13)" fg:x="1333" fg:w="25"/><text x="1.4552%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="1.2052%" y="277" width="0.0226%" height="15" fill="rgb(223,113,26)" fg:x="1333" fg:w="25"/><text x="1.4552%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="1.2052%" y="261" width="0.0226%" height="15" fill="rgb(206,192,2)" fg:x="1333" fg:w="25"/><text x="1.4552%" y="271.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (31 samples, 0.03%)</title><rect x="1.2034%" y="453" width="0.0280%" height="15" fill="rgb(241,108,4)" fg:x="1331" fg:w="31"/><text x="1.4534%" y="463.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="1.2034%" y="437" width="0.0280%" height="15" fill="rgb(247,173,49)" fg:x="1331" fg:w="31"/><text x="1.4534%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="1.2034%" y="421" width="0.0280%" height="15" fill="rgb(224,114,35)" fg:x="1331" fg:w="31"/><text x="1.4534%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (31 samples, 0.03%)</title><rect x="1.2034%" y="405" width="0.0280%" height="15" fill="rgb(245,159,27)" fg:x="1331" fg:w="31"/><text x="1.4534%" y="415.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (41 samples, 0.04%)</title><rect x="1.2034%" y="469" width="0.0371%" height="15" fill="rgb(245,172,44)" fg:x="1331" fg:w="41"/><text x="1.4534%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (62 samples, 0.06%)</title><rect x="1.1998%" y="533" width="0.0561%" height="15" fill="rgb(236,23,11)" fg:x="1327" fg:w="62"/><text x="1.4498%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (58 samples, 0.05%)</title><rect x="1.2034%" y="517" width="0.0524%" height="15" fill="rgb(205,117,38)" fg:x="1331" fg:w="58"/><text x="1.4534%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58 samples, 0.05%)</title><rect x="1.2034%" y="501" width="0.0524%" height="15" fill="rgb(237,72,25)" fg:x="1331" fg:w="58"/><text x="1.4534%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (58 samples, 0.05%)</title><rect x="1.2034%" y="485" width="0.0524%" height="15" fill="rgb(244,70,9)" fg:x="1331" fg:w="58"/><text x="1.4534%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (30 samples, 0.03%)</title><rect x="1.2604%" y="453" width="0.0271%" height="15" fill="rgb(217,125,39)" fg:x="1394" fg:w="30"/><text x="1.5104%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.03%)</title><rect x="1.2604%" y="437" width="0.0271%" height="15" fill="rgb(235,36,10)" fg:x="1394" fg:w="30"/><text x="1.5104%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.03%)</title><rect x="1.2604%" y="421" width="0.0271%" height="15" fill="rgb(251,123,47)" fg:x="1394" fg:w="30"/><text x="1.5104%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.03%)</title><rect x="1.2604%" y="405" width="0.0271%" height="15" fill="rgb(221,13,13)" fg:x="1394" fg:w="30"/><text x="1.5104%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="1.2604%" y="389" width="0.0271%" height="15" fill="rgb(238,131,9)" fg:x="1394" fg:w="30"/><text x="1.5104%" y="399.50"></text></g><g><title>core::intrinsics::copy (19 samples, 0.02%)</title><rect x="1.3481%" y="405" width="0.0172%" height="15" fill="rgb(211,50,8)" fg:x="1491" fg:w="19"/><text x="1.5981%" y="415.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (110 samples, 0.10%)</title><rect x="1.2920%" y="453" width="0.0995%" height="15" fill="rgb(245,182,24)" fg:x="1429" fg:w="110"/><text x="1.5420%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (58 samples, 0.05%)</title><rect x="1.3390%" y="437" width="0.0524%" height="15" fill="rgb(242,14,37)" fg:x="1481" fg:w="58"/><text x="1.5890%" y="447.50"></text></g><g><title>core::ptr::swap (50 samples, 0.05%)</title><rect x="1.3463%" y="421" width="0.0452%" height="15" fill="rgb(246,228,12)" fg:x="1489" fg:w="50"/><text x="1.5963%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="1.3652%" y="405" width="0.0262%" height="15" fill="rgb(213,55,15)" fg:x="1510" fg:w="29"/><text x="1.6152%" y="415.50"></text></g><g><title>bevy_prototype_debug_lines::update (163 samples, 0.15%)</title><rect x="1.2595%" y="469" width="0.1474%" height="15" fill="rgb(209,9,3)" fg:x="1393" fg:w="163"/><text x="1.5095%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="1.3915%" y="453" width="0.0154%" height="15" fill="rgb(230,59,30)" fg:x="1539" fg:w="17"/><text x="1.6415%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (168 samples, 0.15%)</title><rect x="1.2558%" y="533" width="0.1519%" height="15" fill="rgb(209,121,21)" fg:x="1389" fg:w="168"/><text x="1.5058%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (168 samples, 0.15%)</title><rect x="1.2558%" y="517" width="0.1519%" height="15" fill="rgb(220,109,13)" fg:x="1389" fg:w="168"/><text x="1.5058%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (168 samples, 0.15%)</title><rect x="1.2558%" y="501" width="0.1519%" height="15" fill="rgb(232,18,1)" fg:x="1389" fg:w="168"/><text x="1.5058%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (168 samples, 0.15%)</title><rect x="1.2558%" y="485" width="0.1519%" height="15" fill="rgb(215,41,42)" fg:x="1389" fg:w="168"/><text x="1.5058%" y="495.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes (38 samples, 0.03%)</title><rect x="1.4104%" y="469" width="0.0344%" height="15" fill="rgb(224,123,36)" fg:x="1560" fg:w="38"/><text x="1.6604%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (47 samples, 0.04%)</title><rect x="1.4077%" y="533" width="0.0425%" height="15" fill="rgb(240,125,3)" fg:x="1557" fg:w="47"/><text x="1.6577%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (44 samples, 0.04%)</title><rect x="1.4104%" y="517" width="0.0398%" height="15" fill="rgb(205,98,50)" fg:x="1560" fg:w="44"/><text x="1.6604%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.04%)</title><rect x="1.4104%" y="501" width="0.0398%" height="15" fill="rgb(205,185,37)" fg:x="1560" fg:w="44"/><text x="1.6604%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (44 samples, 0.04%)</title><rect x="1.4104%" y="485" width="0.0398%" height="15" fill="rgb(238,207,15)" fg:x="1560" fg:w="44"/><text x="1.6604%" y="495.50"></text></g><g><title>bevy_pbr::render::mesh::extract_skinned_meshes (12 samples, 0.01%)</title><rect x="1.4566%" y="469" width="0.0108%" height="15" fill="rgb(213,199,42)" fg:x="1611" fg:w="12"/><text x="1.7066%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (28 samples, 0.03%)</title><rect x="1.4502%" y="533" width="0.0253%" height="15" fill="rgb(235,201,11)" fg:x="1604" fg:w="28"/><text x="1.7002%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (21 samples, 0.02%)</title><rect x="1.4566%" y="517" width="0.0190%" height="15" fill="rgb(207,46,11)" fg:x="1611" fg:w="21"/><text x="1.7066%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="1.4566%" y="501" width="0.0190%" height="15" fill="rgb(241,35,35)" fg:x="1611" fg:w="21"/><text x="1.7066%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (21 samples, 0.02%)</title><rect x="1.4566%" y="485" width="0.0190%" height="15" fill="rgb(243,32,47)" fg:x="1611" fg:w="21"/><text x="1.7066%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (14 samples, 0.01%)</title><rect x="1.4927%" y="453" width="0.0127%" height="15" fill="rgb(247,202,23)" fg:x="1651" fg:w="14"/><text x="1.7427%" y="463.50"></text></g><g><title>bevy_pbr::light::assign_lights_to_clusters (26 samples, 0.02%)</title><rect x="1.4864%" y="469" width="0.0235%" height="15" fill="rgb(219,102,11)" fg:x="1644" fg:w="26"/><text x="1.7364%" y="479.50"></text></g><g><title>bevy_ui::flex::flex_node_system (12 samples, 0.01%)</title><rect x="1.5099%" y="469" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="1670" fg:w="12"/><text x="1.7599%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (53 samples, 0.05%)</title><rect x="1.4792%" y="533" width="0.0479%" height="15" fill="rgb(222,74,54)" fg:x="1636" fg:w="53"/><text x="1.7292%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (45 samples, 0.04%)</title><rect x="1.4864%" y="517" width="0.0407%" height="15" fill="rgb(216,99,12)" fg:x="1644" fg:w="45"/><text x="1.7364%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (45 samples, 0.04%)</title><rect x="1.4864%" y="501" width="0.0407%" height="15" fill="rgb(226,22,26)" fg:x="1644" fg:w="45"/><text x="1.7364%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (45 samples, 0.04%)</title><rect x="1.4864%" y="485" width="0.0407%" height="15" fill="rgb(217,163,10)" fg:x="1644" fg:w="45"/><text x="1.7364%" y="495.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (881 samples, 0.80%)</title><rect x="0.7450%" y="549" width="0.7965%" height="15" fill="rgb(213,25,53)" fg:x="824" fg:w="881"/><text x="0.9950%" y="559.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="1.5515%" y="485" width="0.0136%" height="15" fill="rgb(252,105,26)" fg:x="1716" fg:w="15"/><text x="1.8015%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="1.5515%" y="469" width="0.0136%" height="15" fill="rgb(220,39,43)" fg:x="1716" fg:w="15"/><text x="1.8015%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="1.5524%" y="453" width="0.0127%" height="15" fill="rgb(229,68,48)" fg:x="1717" fg:w="14"/><text x="1.8024%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (14 samples, 0.01%)</title><rect x="1.5524%" y="437" width="0.0127%" height="15" fill="rgb(252,8,32)" fg:x="1717" fg:w="14"/><text x="1.8024%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.01%)</title><rect x="1.5524%" y="421" width="0.0127%" height="15" fill="rgb(223,20,43)" fg:x="1717" fg:w="14"/><text x="1.8024%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="1.5524%" y="405" width="0.0127%" height="15" fill="rgb(229,81,49)" fg:x="1717" fg:w="14"/><text x="1.8024%" y="415.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="1.5470%" y="501" width="0.0199%" height="15" fill="rgb(236,28,36)" fg:x="1711" fg:w="22"/><text x="1.7970%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (26 samples, 0.02%)</title><rect x="1.5470%" y="549" width="0.0235%" height="15" fill="rgb(249,185,26)" fg:x="1711" fg:w="26"/><text x="1.7970%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (26 samples, 0.02%)</title><rect x="1.5470%" y="533" width="0.0235%" height="15" fill="rgb(249,174,33)" fg:x="1711" fg:w="26"/><text x="1.7970%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (26 samples, 0.02%)</title><rect x="1.5470%" y="517" width="0.0235%" height="15" fill="rgb(233,201,37)" fg:x="1711" fg:w="26"/><text x="1.7970%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (12 samples, 0.01%)</title><rect x="1.5705%" y="549" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="1737" fg:w="12"/><text x="1.8205%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,183 samples, 1.07%)</title><rect x="0.5126%" y="581" width="1.0696%" height="15" fill="rgb(250,127,30)" fg:x="567" fg:w="1183"/><text x="0.7626%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,086 samples, 0.98%)</title><rect x="0.6003%" y="565" width="0.9819%" height="15" fill="rgb(230,49,44)" fg:x="664" fg:w="1086"/><text x="0.8503%" y="575.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="1.5831%" y="565" width="0.0271%" height="15" fill="rgb(229,67,23)" fg:x="1751" fg:w="30"/><text x="1.8331%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (30 samples, 0.03%)</title><rect x="1.5831%" y="549" width="0.0271%" height="15" fill="rgb(249,83,47)" fg:x="1751" fg:w="30"/><text x="1.8331%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="1.5985%" y="533" width="0.0118%" height="15" fill="rgb(215,43,3)" fg:x="1768" fg:w="13"/><text x="1.8485%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="1.5994%" y="517" width="0.0108%" height="15" fill="rgb(238,154,13)" fg:x="1769" fg:w="12"/><text x="1.8494%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (12 samples, 0.01%)</title><rect x="1.5994%" y="501" width="0.0108%" height="15" fill="rgb(219,56,2)" fg:x="1769" fg:w="12"/><text x="1.8494%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,224 samples, 1.11%)</title><rect x="0.5054%" y="613" width="1.1067%" height="15" fill="rgb(233,0,4)" fg:x="559" fg:w="1224"/><text x="0.7554%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,223 samples, 1.11%)</title><rect x="0.5063%" y="597" width="1.1058%" height="15" fill="rgb(235,30,7)" fg:x="560" fg:w="1223"/><text x="0.7563%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="1.5831%" y="581" width="0.0289%" height="15" fill="rgb(250,79,13)" fg:x="1751" fg:w="32"/><text x="1.8331%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (22 samples, 0.02%)</title><rect x="1.6238%" y="565" width="0.0199%" height="15" fill="rgb(211,146,34)" fg:x="1796" fg:w="22"/><text x="1.8738%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (19 samples, 0.02%)</title><rect x="1.6265%" y="549" width="0.0172%" height="15" fill="rgb(228,22,38)" fg:x="1799" fg:w="19"/><text x="1.8765%" y="559.50"></text></g><g><title>async_task::utils::abort_on_panic (24 samples, 0.02%)</title><rect x="1.6238%" y="613" width="0.0217%" height="15" fill="rgb(235,168,5)" fg:x="1796" fg:w="24"/><text x="1.8738%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (24 samples, 0.02%)</title><rect x="1.6238%" y="597" width="0.0217%" height="15" fill="rgb(221,155,16)" fg:x="1796" fg:w="24"/><text x="1.8738%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="1.6238%" y="581" width="0.0217%" height="15" fill="rgb(215,215,53)" fg:x="1796" fg:w="24"/><text x="1.8738%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.02%)</title><rect x="1.6455%" y="613" width="0.0181%" height="15" fill="rgb(223,4,10)" fg:x="1820" fg:w="20"/><text x="1.8955%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="1.6455%" y="597" width="0.0181%" height="15" fill="rgb(234,103,6)" fg:x="1820" fg:w="20"/><text x="1.8955%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,289 samples, 1.17%)</title><rect x="0.5000%" y="629" width="1.1654%" height="15" fill="rgb(227,97,0)" fg:x="553" fg:w="1289"/><text x="0.7500%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (14 samples, 0.01%)</title><rect x="1.6654%" y="629" width="0.0127%" height="15" fill="rgb(234,150,53)" fg:x="1842" fg:w="14"/><text x="1.9154%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,634 samples, 1.48%)</title><rect x="0.2016%" y="709" width="1.4774%" height="15" fill="rgb(228,201,54)" fg:x="223" fg:w="1634"/><text x="0.4516%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,634 samples, 1.48%)</title><rect x="0.2016%" y="693" width="1.4774%" height="15" fill="rgb(222,22,37)" fg:x="223" fg:w="1634"/><text x="0.4516%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,628 samples, 1.47%)</title><rect x="0.2070%" y="677" width="1.4719%" height="15" fill="rgb(237,53,32)" fg:x="229" fg:w="1628"/><text x="0.4570%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,603 samples, 1.45%)</title><rect x="0.2297%" y="661" width="1.4493%" height="15" fill="rgb(233,25,53)" fg:x="254" fg:w="1603"/><text x="0.4797%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,603 samples, 1.45%)</title><rect x="0.2297%" y="645" width="1.4493%" height="15" fill="rgb(210,40,34)" fg:x="254" fg:w="1603"/><text x="0.4797%" y="655.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (39 samples, 0.04%)</title><rect x="1.7007%" y="597" width="0.0353%" height="15" fill="rgb(241,220,44)" fg:x="1881" fg:w="39"/><text x="1.9507%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (305 samples, 0.28%)</title><rect x="1.6971%" y="613" width="0.2758%" height="15" fill="rgb(235,28,35)" fg:x="1877" fg:w="305"/><text x="1.9471%" y="623.50"></text></g><g><title>syscall (261 samples, 0.24%)</title><rect x="1.7368%" y="597" width="0.2360%" height="15" fill="rgb(210,56,17)" fg:x="1921" fg:w="261"/><text x="1.9868%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (316 samples, 0.29%)</title><rect x="1.6916%" y="645" width="0.2857%" height="15" fill="rgb(224,130,29)" fg:x="1871" fg:w="316"/><text x="1.9416%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (316 samples, 0.29%)</title><rect x="1.6916%" y="629" width="0.2857%" height="15" fill="rgb(235,212,8)" fg:x="1871" fg:w="316"/><text x="1.9416%" y="639.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1,972 samples, 1.78%)</title><rect x="0.1953%" y="725" width="1.7830%" height="15" fill="rgb(223,33,50)" fg:x="216" fg:w="1972"/><text x="0.4453%" y="735.50">f..</text></g><g><title>parking::Parker::park (331 samples, 0.30%)</title><rect x="1.6790%" y="709" width="0.2993%" height="15" fill="rgb(219,149,13)" fg:x="1857" fg:w="331"/><text x="1.9290%" y="719.50"></text></g><g><title>parking::Inner::park (331 samples, 0.30%)</title><rect x="1.6790%" y="693" width="0.2993%" height="15" fill="rgb(250,156,29)" fg:x="1857" fg:w="331"/><text x="1.9290%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (317 samples, 0.29%)</title><rect x="1.6916%" y="677" width="0.2866%" height="15" fill="rgb(216,193,19)" fg:x="1871" fg:w="317"/><text x="1.9416%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (317 samples, 0.29%)</title><rect x="1.6916%" y="661" width="0.2866%" height="15" fill="rgb(216,135,14)" fg:x="1871" fg:w="317"/><text x="1.9416%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1,976 samples, 1.79%)</title><rect x="0.1944%" y="885" width="1.7866%" height="15" fill="rgb(241,47,5)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="895.50">s..</text></g><g><title>std::panicking::try (1,976 samples, 1.79%)</title><rect x="0.1944%" y="869" width="1.7866%" height="15" fill="rgb(233,42,35)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="879.50">s..</text></g><g><title>std::panicking::try::do_call (1,976 samples, 1.79%)</title><rect x="0.1944%" y="853" width="1.7866%" height="15" fill="rgb(231,13,6)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="863.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,976 samples, 1.79%)</title><rect x="0.1944%" y="837" width="1.7866%" height="15" fill="rgb(207,181,40)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="847.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,976 samples, 1.79%)</title><rect x="0.1944%" y="821" width="1.7866%" height="15" fill="rgb(254,173,49)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="831.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,976 samples, 1.79%)</title><rect x="0.1944%" y="805" width="1.7866%" height="15" fill="rgb(221,1,38)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="815.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1,976 samples, 1.79%)</title><rect x="0.1944%" y="789" width="1.7866%" height="15" fill="rgb(206,124,46)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="799.50">b..</text></g><g><title>futures_lite::future::block_on (1,976 samples, 1.79%)</title><rect x="0.1944%" y="773" width="1.7866%" height="15" fill="rgb(249,21,11)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="783.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,976 samples, 1.79%)</title><rect x="0.1944%" y="757" width="1.7866%" height="15" fill="rgb(222,201,40)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="767.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,976 samples, 1.79%)</title><rect x="0.1944%" y="741" width="1.7866%" height="15" fill="rgb(235,61,29)" fg:x="215" fg:w="1976"/><text x="0.4444%" y="751.50">s..</text></g><g><title>__GI___clone (1,977 samples, 1.79%)</title><rect x="0.1944%" y="997" width="1.7875%" height="15" fill="rgb(219,207,3)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="1007.50">_..</text></g><g><title>start_thread (1,977 samples, 1.79%)</title><rect x="0.1944%" y="981" width="1.7875%" height="15" fill="rgb(222,56,46)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="991.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,977 samples, 1.79%)</title><rect x="0.1944%" y="965" width="1.7875%" height="15" fill="rgb(239,76,54)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="975.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,977 samples, 1.79%)</title><rect x="0.1944%" y="949" width="1.7875%" height="15" fill="rgb(231,124,27)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="959.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,977 samples, 1.79%)</title><rect x="0.1944%" y="933" width="1.7875%" height="15" fill="rgb(249,195,6)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="943.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,977 samples, 1.79%)</title><rect x="0.1944%" y="917" width="1.7875%" height="15" fill="rgb(237,174,47)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="927.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,977 samples, 1.79%)</title><rect x="0.1944%" y="901" width="1.7875%" height="15" fill="rgb(206,201,31)" fg:x="215" fg:w="1977"/><text x="0.4444%" y="911.50">s..</text></g><g><title>Compute_Task_Po (2,203 samples, 1.99%)</title><rect x="0.0027%" y="1013" width="1.9918%" height="15" fill="rgb(231,57,52)" fg:x="3" fg:w="2203"/><text x="0.2527%" y="1023.50">C..</text></g><g><title>[[heap]] (15 samples, 0.01%)</title><rect x="2.0045%" y="997" width="0.0136%" height="15" fill="rgb(248,177,22)" fg:x="2217" fg:w="15"/><text x="2.2545%" y="1007.50"></text></g><g><title>[anon] (29 samples, 0.03%)</title><rect x="2.0180%" y="997" width="0.0262%" height="15" fill="rgb(215,211,37)" fg:x="2232" fg:w="29"/><text x="2.2680%" y="1007.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="2.0442%" y="997" width="0.0262%" height="15" fill="rgb(241,128,51)" fg:x="2261" fg:w="29"/><text x="2.2942%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (23 samples, 0.02%)</title><rect x="2.0786%" y="533" width="0.0208%" height="15" fill="rgb(227,165,31)" fg:x="2299" fg:w="23"/><text x="2.3286%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="2.0759%" y="629" width="0.0307%" height="15" fill="rgb(228,167,24)" fg:x="2296" fg:w="34"/><text x="2.3259%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (34 samples, 0.03%)</title><rect x="2.0759%" y="613" width="0.0307%" height="15" fill="rgb(228,143,12)" fg:x="2296" fg:w="34"/><text x="2.3259%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="2.0777%" y="597" width="0.0289%" height="15" fill="rgb(249,149,8)" fg:x="2298" fg:w="32"/><text x="2.3277%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (32 samples, 0.03%)</title><rect x="2.0777%" y="581" width="0.0289%" height="15" fill="rgb(243,35,44)" fg:x="2298" fg:w="32"/><text x="2.3277%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="2.0777%" y="565" width="0.0289%" height="15" fill="rgb(246,89,9)" fg:x="2298" fg:w="32"/><text x="2.3277%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (32 samples, 0.03%)</title><rect x="2.0777%" y="549" width="0.0289%" height="15" fill="rgb(233,213,13)" fg:x="2298" fg:w="32"/><text x="2.3277%" y="559.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="2.1247%" y="341" width="0.0108%" height="15" fill="rgb(233,141,41)" fg:x="2350" fg:w="12"/><text x="2.3747%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="2.1247%" y="421" width="0.0118%" height="15" fill="rgb(239,167,4)" fg:x="2350" fg:w="13"/><text x="2.3747%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="2.1247%" y="405" width="0.0118%" height="15" fill="rgb(209,217,16)" fg:x="2350" fg:w="13"/><text x="2.3747%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="2.1247%" y="389" width="0.0118%" height="15" fill="rgb(219,88,35)" fg:x="2350" fg:w="13"/><text x="2.3747%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="2.1247%" y="373" width="0.0118%" height="15" fill="rgb(220,193,23)" fg:x="2350" fg:w="13"/><text x="2.3747%" y="383.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="2.1247%" y="357" width="0.0118%" height="15" fill="rgb(230,90,52)" fg:x="2350" fg:w="13"/><text x="2.3747%" y="367.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::convert::From&lt;wgpu::Buffer&gt;&gt;::from (19 samples, 0.02%)</title><rect x="2.1247%" y="437" width="0.0172%" height="15" fill="rgb(252,106,19)" fg:x="2350" fg:w="19"/><text x="2.3747%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (20 samples, 0.02%)</title><rect x="2.1546%" y="373" width="0.0181%" height="15" fill="rgb(206,74,20)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (20 samples, 0.02%)</title><rect x="2.1546%" y="357" width="0.0181%" height="15" fill="rgb(230,138,44)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (20 samples, 0.02%)</title><rect x="2.1546%" y="341" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (20 samples, 0.02%)</title><rect x="2.1546%" y="325" width="0.0181%" height="15" fill="rgb(242,16,51)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (20 samples, 0.02%)</title><rect x="2.1546%" y="309" width="0.0181%" height="15" fill="rgb(248,9,4)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (20 samples, 0.02%)</title><rect x="2.1546%" y="293" width="0.0181%" height="15" fill="rgb(210,31,22)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (20 samples, 0.02%)</title><rect x="2.1546%" y="277" width="0.0181%" height="15" fill="rgb(239,54,39)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (20 samples, 0.02%)</title><rect x="2.1546%" y="261" width="0.0181%" height="15" fill="rgb(230,99,41)" fg:x="2383" fg:w="20"/><text x="2.4046%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.02%)</title><rect x="2.1555%" y="245" width="0.0172%" height="15" fill="rgb(253,106,12)" fg:x="2384" fg:w="19"/><text x="2.4055%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="2.1582%" y="229" width="0.0145%" height="15" fill="rgb(213,46,41)" fg:x="2387" fg:w="16"/><text x="2.4082%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (14 samples, 0.01%)</title><rect x="2.1744%" y="357" width="0.0127%" height="15" fill="rgb(215,133,35)" fg:x="2405" fg:w="14"/><text x="2.4244%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (14 samples, 0.01%)</title><rect x="2.1744%" y="341" width="0.0127%" height="15" fill="rgb(213,28,5)" fg:x="2405" fg:w="14"/><text x="2.4244%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="2.1744%" y="325" width="0.0127%" height="15" fill="rgb(215,77,49)" fg:x="2405" fg:w="14"/><text x="2.4244%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="2.1763%" y="309" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="2407" fg:w="12"/><text x="2.4263%" y="319.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (56 samples, 0.05%)</title><rect x="2.1419%" y="421" width="0.0506%" height="15" fill="rgb(208,67,9)" fg:x="2369" fg:w="56"/><text x="2.3919%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (55 samples, 0.05%)</title><rect x="2.1428%" y="405" width="0.0497%" height="15" fill="rgb(219,133,21)" fg:x="2370" fg:w="55"/><text x="2.3928%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (55 samples, 0.05%)</title><rect x="2.1428%" y="389" width="0.0497%" height="15" fill="rgb(246,46,29)" fg:x="2370" fg:w="55"/><text x="2.3928%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (22 samples, 0.02%)</title><rect x="2.1726%" y="373" width="0.0199%" height="15" fill="rgb(246,185,52)" fg:x="2403" fg:w="22"/><text x="2.4226%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,528 samples, 1.38%)</title><rect x="2.1989%" y="421" width="1.3815%" height="15" fill="rgb(252,136,11)" fg:x="2432" fg:w="1528"/><text x="2.4489%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,528 samples, 1.38%)</title><rect x="2.1989%" y="405" width="1.3815%" height="15" fill="rgb(219,138,53)" fg:x="2432" fg:w="1528"/><text x="2.4489%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,528 samples, 1.38%)</title><rect x="2.1989%" y="389" width="1.3815%" height="15" fill="rgb(211,51,23)" fg:x="2432" fg:w="1528"/><text x="2.4489%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (834 samples, 0.75%)</title><rect x="3.5948%" y="373" width="0.7540%" height="15" fill="rgb(247,221,28)" fg:x="3976" fg:w="834"/><text x="3.8448%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (834 samples, 0.75%)</title><rect x="3.5948%" y="357" width="0.7540%" height="15" fill="rgb(251,222,45)" fg:x="3976" fg:w="834"/><text x="3.8448%" y="367.50"></text></g><g><title>glXCreateGLXPbufferSGIX (13 samples, 0.01%)</title><rect x="4.3769%" y="293" width="0.0118%" height="15" fill="rgb(217,162,53)" fg:x="4841" fg:w="13"/><text x="4.6269%" y="303.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (27 samples, 0.02%)</title><rect x="4.3742%" y="341" width="0.0244%" height="15" fill="rgb(229,93,14)" fg:x="4838" fg:w="27"/><text x="4.6242%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (27 samples, 0.02%)</title><rect x="4.3742%" y="325" width="0.0244%" height="15" fill="rgb(209,67,49)" fg:x="4838" fg:w="27"/><text x="4.6242%" y="335.50"></text></g><g><title>__glx_Main (27 samples, 0.02%)</title><rect x="4.3742%" y="309" width="0.0244%" height="15" fill="rgb(213,87,29)" fg:x="4838" fg:w="27"/><text x="4.6242%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (17 samples, 0.02%)</title><rect x="4.3986%" y="341" width="0.0154%" height="15" fill="rgb(205,151,52)" fg:x="4865" fg:w="17"/><text x="4.6486%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (17 samples, 0.02%)</title><rect x="4.3986%" y="325" width="0.0154%" height="15" fill="rgb(253,215,39)" fg:x="4865" fg:w="17"/><text x="4.6486%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="4.3986%" y="309" width="0.0154%" height="15" fill="rgb(221,220,41)" fg:x="4865" fg:w="17"/><text x="4.6486%" y="319.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (12 samples, 0.01%)</title><rect x="4.4212%" y="309" width="0.0108%" height="15" fill="rgb(218,133,21)" fg:x="4890" fg:w="12"/><text x="4.6712%" y="319.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (83 samples, 0.08%)</title><rect x="4.3661%" y="373" width="0.0750%" height="15" fill="rgb(221,193,43)" fg:x="4829" fg:w="83"/><text x="4.6161%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (76 samples, 0.07%)</title><rect x="4.3724%" y="357" width="0.0687%" height="15" fill="rgb(240,128,52)" fg:x="4836" fg:w="76"/><text x="4.6224%" y="367.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (26 samples, 0.02%)</title><rect x="4.4176%" y="341" width="0.0235%" height="15" fill="rgb(253,114,12)" fg:x="4886" fg:w="26"/><text x="4.6676%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (25 samples, 0.02%)</title><rect x="4.4185%" y="325" width="0.0226%" height="15" fill="rgb(215,223,47)" fg:x="4887" fg:w="25"/><text x="4.6685%" y="335.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,576 samples, 2.33%)</title><rect x="2.1202%" y="533" width="2.3291%" height="15" fill="rgb(248,225,23)" fg:x="2345" fg:w="2576"/><text x="2.3702%" y="543.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,576 samples, 2.33%)</title><rect x="2.1202%" y="517" width="2.3291%" height="15" fill="rgb(250,108,0)" fg:x="2345" fg:w="2576"/><text x="2.3702%" y="527.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,576 samples, 2.33%)</title><rect x="2.1202%" y="501" width="2.3291%" height="15" fill="rgb(228,208,7)" fg:x="2345" fg:w="2576"/><text x="2.3702%" y="511.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,576 samples, 2.33%)</title><rect x="2.1202%" y="485" width="2.3291%" height="15" fill="rgb(244,45,10)" fg:x="2345" fg:w="2576"/><text x="2.3702%" y="495.50">c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,576 samples, 2.33%)</title><rect x="2.1202%" y="469" width="2.3291%" height="15" fill="rgb(207,125,25)" fg:x="2345" fg:w="2576"/><text x="2.3702%" y="479.50">s..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,571 samples, 2.32%)</title><rect x="2.1247%" y="453" width="2.3245%" height="15" fill="rgb(210,195,18)" fg:x="2350" fg:w="2571"/><text x="2.3747%" y="463.50">b..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,552 samples, 2.31%)</title><rect x="2.1419%" y="437" width="2.3074%" height="15" fill="rgb(249,80,12)" fg:x="2369" fg:w="2552"/><text x="2.3919%" y="447.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (954 samples, 0.86%)</title><rect x="3.5867%" y="421" width="0.8625%" height="15" fill="rgb(221,65,9)" fg:x="3967" fg:w="954"/><text x="3.8367%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (954 samples, 0.86%)</title><rect x="3.5867%" y="405" width="0.8625%" height="15" fill="rgb(235,49,36)" fg:x="3967" fg:w="954"/><text x="3.8367%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (953 samples, 0.86%)</title><rect x="3.5876%" y="389" width="0.8616%" height="15" fill="rgb(225,32,20)" fg:x="3968" fg:w="953"/><text x="3.8376%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (18 samples, 0.02%)</title><rect x="4.4547%" y="437" width="0.0163%" height="15" fill="rgb(215,141,46)" fg:x="4927" fg:w="18"/><text x="4.7047%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (18 samples, 0.02%)</title><rect x="4.4547%" y="421" width="0.0163%" height="15" fill="rgb(250,160,47)" fg:x="4927" fg:w="18"/><text x="4.7047%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (28 samples, 0.03%)</title><rect x="4.4511%" y="469" width="0.0253%" height="15" fill="rgb(216,222,40)" fg:x="4923" fg:w="28"/><text x="4.7011%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (24 samples, 0.02%)</title><rect x="4.4547%" y="453" width="0.0217%" height="15" fill="rgb(234,217,39)" fg:x="4927" fg:w="24"/><text x="4.7047%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (40 samples, 0.04%)</title><rect x="4.4764%" y="437" width="0.0362%" height="15" fill="rgb(207,178,40)" fg:x="4951" fg:w="40"/><text x="4.7264%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.02%)</title><rect x="4.4926%" y="421" width="0.0199%" height="15" fill="rgb(221,136,13)" fg:x="4969" fg:w="22"/><text x="4.7426%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="4.4926%" y="405" width="0.0199%" height="15" fill="rgb(249,199,10)" fg:x="4969" fg:w="22"/><text x="4.7426%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="4.4935%" y="389" width="0.0190%" height="15" fill="rgb(249,222,13)" fg:x="4970" fg:w="21"/><text x="4.7435%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (66 samples, 0.06%)</title><rect x="4.4764%" y="453" width="0.0597%" height="15" fill="rgb(244,185,38)" fg:x="4951" fg:w="66"/><text x="4.7264%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (26 samples, 0.02%)</title><rect x="4.5125%" y="437" width="0.0235%" height="15" fill="rgb(236,202,9)" fg:x="4991" fg:w="26"/><text x="4.7625%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (24 samples, 0.02%)</title><rect x="4.5143%" y="421" width="0.0217%" height="15" fill="rgb(250,229,37)" fg:x="4993" fg:w="24"/><text x="4.7643%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (16 samples, 0.01%)</title><rect x="4.5216%" y="405" width="0.0145%" height="15" fill="rgb(206,174,23)" fg:x="5001" fg:w="16"/><text x="4.7716%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (16 samples, 0.01%)</title><rect x="4.5216%" y="389" width="0.0145%" height="15" fill="rgb(211,33,43)" fg:x="5001" fg:w="16"/><text x="4.7716%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (16 samples, 0.01%)</title><rect x="4.5216%" y="373" width="0.0145%" height="15" fill="rgb(245,58,50)" fg:x="5001" fg:w="16"/><text x="4.7716%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (103 samples, 0.09%)</title><rect x="4.4492%" y="533" width="0.0931%" height="15" fill="rgb(244,68,36)" fg:x="4921" fg:w="103"/><text x="4.6992%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (102 samples, 0.09%)</title><rect x="4.4502%" y="517" width="0.0922%" height="15" fill="rgb(232,229,15)" fg:x="4922" fg:w="102"/><text x="4.7002%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (102 samples, 0.09%)</title><rect x="4.4502%" y="501" width="0.0922%" height="15" fill="rgb(254,30,23)" fg:x="4922" fg:w="102"/><text x="4.7002%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (102 samples, 0.09%)</title><rect x="4.4502%" y="485" width="0.0922%" height="15" fill="rgb(235,160,14)" fg:x="4922" fg:w="102"/><text x="4.7002%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (73 samples, 0.07%)</title><rect x="4.4764%" y="469" width="0.0660%" height="15" fill="rgb(212,155,44)" fg:x="4951" fg:w="73"/><text x="4.7264%" y="479.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (33 samples, 0.03%)</title><rect x="4.5487%" y="389" width="0.0298%" height="15" fill="rgb(226,2,50)" fg:x="5031" fg:w="33"/><text x="4.7987%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (30 samples, 0.03%)</title><rect x="4.5514%" y="373" width="0.0271%" height="15" fill="rgb(234,177,6)" fg:x="5034" fg:w="30"/><text x="4.8014%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (27 samples, 0.02%)</title><rect x="4.5541%" y="357" width="0.0244%" height="15" fill="rgb(217,24,9)" fg:x="5037" fg:w="27"/><text x="4.8041%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (27 samples, 0.02%)</title><rect x="4.5541%" y="341" width="0.0244%" height="15" fill="rgb(220,13,46)" fg:x="5037" fg:w="27"/><text x="4.8041%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.01%)</title><rect x="4.5659%" y="325" width="0.0127%" height="15" fill="rgb(239,221,27)" fg:x="5050" fg:w="14"/><text x="4.8159%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="4.5659%" y="309" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="5050" fg:w="14"/><text x="4.8159%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (13 samples, 0.01%)</title><rect x="4.5668%" y="293" width="0.0118%" height="15" fill="rgb(211,99,13)" fg:x="5051" fg:w="13"/><text x="4.8168%" y="303.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (34 samples, 0.03%)</title><rect x="4.5487%" y="421" width="0.0307%" height="15" fill="rgb(232,111,31)" fg:x="5031" fg:w="34"/><text x="4.7987%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (34 samples, 0.03%)</title><rect x="4.5487%" y="405" width="0.0307%" height="15" fill="rgb(245,82,37)" fg:x="5031" fg:w="34"/><text x="4.7987%" y="415.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (37 samples, 0.03%)</title><rect x="4.5469%" y="453" width="0.0335%" height="15" fill="rgb(227,149,46)" fg:x="5029" fg:w="37"/><text x="4.7969%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (37 samples, 0.03%)</title><rect x="4.5469%" y="437" width="0.0335%" height="15" fill="rgb(218,36,50)" fg:x="5029" fg:w="37"/><text x="4.7969%" y="447.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (47 samples, 0.04%)</title><rect x="4.5469%" y="469" width="0.0425%" height="15" fill="rgb(226,80,48)" fg:x="5029" fg:w="47"/><text x="4.7969%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (59 samples, 0.05%)</title><rect x="4.5424%" y="533" width="0.0533%" height="15" fill="rgb(238,224,15)" fg:x="5024" fg:w="59"/><text x="4.7924%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (58 samples, 0.05%)</title><rect x="4.5433%" y="517" width="0.0524%" height="15" fill="rgb(241,136,10)" fg:x="5025" fg:w="58"/><text x="4.7933%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58 samples, 0.05%)</title><rect x="4.5433%" y="501" width="0.0524%" height="15" fill="rgb(208,32,45)" fg:x="5025" fg:w="58"/><text x="4.7933%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (58 samples, 0.05%)</title><rect x="4.5433%" y="485" width="0.0524%" height="15" fill="rgb(207,135,9)" fg:x="5025" fg:w="58"/><text x="4.7933%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (14 samples, 0.01%)</title><rect x="4.5984%" y="453" width="0.0127%" height="15" fill="rgb(206,86,44)" fg:x="5086" fg:w="14"/><text x="4.8484%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (14 samples, 0.01%)</title><rect x="4.5984%" y="437" width="0.0127%" height="15" fill="rgb(245,177,15)" fg:x="5086" fg:w="14"/><text x="4.8484%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="4.5984%" y="421" width="0.0127%" height="15" fill="rgb(206,64,50)" fg:x="5086" fg:w="14"/><text x="4.8484%" y="431.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (17 samples, 0.02%)</title><rect x="4.6138%" y="421" width="0.0154%" height="15" fill="rgb(234,36,40)" fg:x="5103" fg:w="17"/><text x="4.8638%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (17 samples, 0.02%)</title><rect x="4.6138%" y="405" width="0.0154%" height="15" fill="rgb(213,64,8)" fg:x="5103" fg:w="17"/><text x="4.8638%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (17 samples, 0.02%)</title><rect x="4.6138%" y="389" width="0.0154%" height="15" fill="rgb(210,75,36)" fg:x="5103" fg:w="17"/><text x="4.8638%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (15 samples, 0.01%)</title><rect x="4.6156%" y="373" width="0.0136%" height="15" fill="rgb(229,88,21)" fg:x="5105" fg:w="15"/><text x="4.8656%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (14 samples, 0.01%)</title><rect x="4.6165%" y="357" width="0.0127%" height="15" fill="rgb(252,204,47)" fg:x="5106" fg:w="14"/><text x="4.8665%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (14 samples, 0.01%)</title><rect x="4.6165%" y="341" width="0.0127%" height="15" fill="rgb(208,77,27)" fg:x="5106" fg:w="14"/><text x="4.8665%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.01%)</title><rect x="4.6174%" y="325" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="5107" fg:w="13"/><text x="4.8674%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="4.6174%" y="309" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="5107" fg:w="13"/><text x="4.8674%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="4.6174%" y="293" width="0.0118%" height="15" fill="rgb(230,137,11)" fg:x="5107" fg:w="13"/><text x="4.8674%" y="303.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (46 samples, 0.04%)</title><rect x="4.5957%" y="533" width="0.0416%" height="15" fill="rgb(212,28,1)" fg:x="5083" fg:w="46"/><text x="4.8457%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (46 samples, 0.04%)</title><rect x="4.5957%" y="517" width="0.0416%" height="15" fill="rgb(248,164,17)" fg:x="5083" fg:w="46"/><text x="4.8457%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.04%)</title><rect x="4.5957%" y="501" width="0.0416%" height="15" fill="rgb(222,171,42)" fg:x="5083" fg:w="46"/><text x="4.8457%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (46 samples, 0.04%)</title><rect x="4.5957%" y="485" width="0.0416%" height="15" fill="rgb(243,84,45)" fg:x="5083" fg:w="46"/><text x="4.8457%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (46 samples, 0.04%)</title><rect x="4.5957%" y="469" width="0.0416%" height="15" fill="rgb(252,49,23)" fg:x="5083" fg:w="46"/><text x="4.8457%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (29 samples, 0.03%)</title><rect x="4.6111%" y="453" width="0.0262%" height="15" fill="rgb(215,19,7)" fg:x="5100" fg:w="29"/><text x="4.8611%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (29 samples, 0.03%)</title><rect x="4.6111%" y="437" width="0.0262%" height="15" fill="rgb(238,81,41)" fg:x="5100" fg:w="29"/><text x="4.8611%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,792 samples, 2.52%)</title><rect x="2.1193%" y="549" width="2.5243%" height="15" fill="rgb(210,199,37)" fg:x="2344" fg:w="2792"/><text x="2.3693%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,807 samples, 2.54%)</title><rect x="2.1066%" y="581" width="2.5379%" height="15" fill="rgb(244,192,49)" fg:x="2330" fg:w="2807"/><text x="2.3566%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,798 samples, 2.53%)</title><rect x="2.1148%" y="565" width="2.5298%" height="15" fill="rgb(226,211,11)" fg:x="2339" fg:w="2798"/><text x="2.3648%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,809 samples, 2.54%)</title><rect x="2.1066%" y="613" width="2.5397%" height="15" fill="rgb(236,162,54)" fg:x="2330" fg:w="2809"/><text x="2.3566%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,809 samples, 2.54%)</title><rect x="2.1066%" y="597" width="2.5397%" height="15" fill="rgb(220,229,9)" fg:x="2330" fg:w="2809"/><text x="2.3566%" y="607.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,810 samples, 2.54%)</title><rect x="2.1066%" y="629" width="2.5406%" height="15" fill="rgb(250,87,22)" fg:x="2330" fg:w="2810"/><text x="2.3566%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,851 samples, 2.58%)</title><rect x="2.0714%" y="709" width="2.5777%" height="15" fill="rgb(239,43,17)" fg:x="2291" fg:w="2851"/><text x="2.3214%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,851 samples, 2.58%)</title><rect x="2.0714%" y="693" width="2.5777%" height="15" fill="rgb(231,177,25)" fg:x="2291" fg:w="2851"/><text x="2.3214%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,851 samples, 2.58%)</title><rect x="2.0714%" y="677" width="2.5777%" height="15" fill="rgb(219,179,1)" fg:x="2291" fg:w="2851"/><text x="2.3214%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,847 samples, 2.57%)</title><rect x="2.0750%" y="661" width="2.5741%" height="15" fill="rgb(238,219,53)" fg:x="2295" fg:w="2847"/><text x="2.3250%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,847 samples, 2.57%)</title><rect x="2.0750%" y="645" width="2.5741%" height="15" fill="rgb(232,167,36)" fg:x="2295" fg:w="2847"/><text x="2.3250%" y="655.50">as..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,880 samples, 2.60%)</title><rect x="2.0705%" y="725" width="2.6039%" height="15" fill="rgb(244,19,51)" fg:x="2290" fg:w="2880"/><text x="2.3205%" y="735.50">fu..</text></g><g><title>parking::Parker::park (28 samples, 0.03%)</title><rect x="4.6491%" y="709" width="0.0253%" height="15" fill="rgb(224,6,22)" fg:x="5142" fg:w="28"/><text x="4.8991%" y="719.50"></text></g><g><title>parking::Inner::park (28 samples, 0.03%)</title><rect x="4.6491%" y="693" width="0.0253%" height="15" fill="rgb(224,145,5)" fg:x="5142" fg:w="28"/><text x="4.8991%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (27 samples, 0.02%)</title><rect x="4.6500%" y="677" width="0.0244%" height="15" fill="rgb(234,130,49)" fg:x="5143" fg:w="27"/><text x="4.9000%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (27 samples, 0.02%)</title><rect x="4.6500%" y="661" width="0.0244%" height="15" fill="rgb(254,6,2)" fg:x="5143" fg:w="27"/><text x="4.9000%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (27 samples, 0.02%)</title><rect x="4.6500%" y="645" width="0.0244%" height="15" fill="rgb(208,96,46)" fg:x="5143" fg:w="27"/><text x="4.9000%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (27 samples, 0.02%)</title><rect x="4.6500%" y="629" width="0.0244%" height="15" fill="rgb(239,3,39)" fg:x="5143" fg:w="27"/><text x="4.9000%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (27 samples, 0.02%)</title><rect x="4.6500%" y="613" width="0.0244%" height="15" fill="rgb(233,210,1)" fg:x="5143" fg:w="27"/><text x="4.9000%" y="623.50"></text></g><g><title>syscall (23 samples, 0.02%)</title><rect x="4.6536%" y="597" width="0.0208%" height="15" fill="rgb(244,137,37)" fg:x="5147" fg:w="23"/><text x="4.9036%" y="607.50"></text></g><g><title>__GI___clone (2,881 samples, 2.60%)</title><rect x="2.0705%" y="997" width="2.6048%" height="15" fill="rgb(240,136,2)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="1007.50">__..</text></g><g><title>start_thread (2,881 samples, 2.60%)</title><rect x="2.0705%" y="981" width="2.6048%" height="15" fill="rgb(239,18,37)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,881 samples, 2.60%)</title><rect x="2.0705%" y="965" width="2.6048%" height="15" fill="rgb(218,185,22)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,881 samples, 2.60%)</title><rect x="2.0705%" y="949" width="2.6048%" height="15" fill="rgb(225,218,4)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,881 samples, 2.60%)</title><rect x="2.0705%" y="933" width="2.6048%" height="15" fill="rgb(230,182,32)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,881 samples, 2.60%)</title><rect x="2.0705%" y="917" width="2.6048%" height="15" fill="rgb(242,56,43)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,881 samples, 2.60%)</title><rect x="2.0705%" y="901" width="2.6048%" height="15" fill="rgb(233,99,24)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (2,881 samples, 2.60%)</title><rect x="2.0705%" y="885" width="2.6048%" height="15" fill="rgb(234,209,42)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="895.50">st..</text></g><g><title>std::panicking::try (2,881 samples, 2.60%)</title><rect x="2.0705%" y="869" width="2.6048%" height="15" fill="rgb(227,7,12)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (2,881 samples, 2.60%)</title><rect x="2.0705%" y="853" width="2.6048%" height="15" fill="rgb(245,203,43)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,881 samples, 2.60%)</title><rect x="2.0705%" y="837" width="2.6048%" height="15" fill="rgb(238,205,33)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,881 samples, 2.60%)</title><rect x="2.0705%" y="821" width="2.6048%" height="15" fill="rgb(231,56,7)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,881 samples, 2.60%)</title><rect x="2.0705%" y="805" width="2.6048%" height="15" fill="rgb(244,186,29)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,881 samples, 2.60%)</title><rect x="2.0705%" y="789" width="2.6048%" height="15" fill="rgb(234,111,31)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (2,881 samples, 2.60%)</title><rect x="2.0705%" y="773" width="2.6048%" height="15" fill="rgb(241,149,10)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,881 samples, 2.60%)</title><rect x="2.0705%" y="757" width="2.6048%" height="15" fill="rgb(249,206,44)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,881 samples, 2.60%)</title><rect x="2.0705%" y="741" width="2.6048%" height="15" fill="rgb(251,153,30)" fg:x="2290" fg:w="2881"/><text x="2.3205%" y="751.50">st..</text></g><g><title>TaskPool_(10) (2,957 samples, 2.67%)</title><rect x="2.0045%" y="1013" width="2.6735%" height="15" fill="rgb(239,152,38)" fg:x="2217" fg:w="2957"/><text x="2.2545%" y="1023.50">Ta..</text></g><g><title>[[heap]] (35 samples, 0.03%)</title><rect x="4.6798%" y="997" width="0.0316%" height="15" fill="rgb(249,139,47)" fg:x="5176" fg:w="35"/><text x="4.9298%" y="1007.50"></text></g><g><title>[anon] (31 samples, 0.03%)</title><rect x="4.7114%" y="997" width="0.0280%" height="15" fill="rgb(244,64,35)" fg:x="5211" fg:w="31"/><text x="4.9614%" y="1007.50"></text></g><g><title>[unknown] (32 samples, 0.03%)</title><rect x="4.7395%" y="997" width="0.0289%" height="15" fill="rgb(216,46,15)" fg:x="5242" fg:w="32"/><text x="4.9895%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="4.7747%" y="533" width="0.0190%" height="15" fill="rgb(250,74,19)" fg:x="5281" fg:w="21"/><text x="5.0247%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="4.7747%" y="629" width="0.0244%" height="15" fill="rgb(249,42,33)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (27 samples, 0.02%)</title><rect x="4.7747%" y="613" width="0.0244%" height="15" fill="rgb(242,149,17)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="4.7747%" y="597" width="0.0244%" height="15" fill="rgb(244,29,21)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (27 samples, 0.02%)</title><rect x="4.7747%" y="581" width="0.0244%" height="15" fill="rgb(220,130,37)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="4.7747%" y="565" width="0.0244%" height="15" fill="rgb(211,67,2)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27 samples, 0.02%)</title><rect x="4.7747%" y="549" width="0.0244%" height="15" fill="rgb(235,68,52)" fg:x="5281" fg:w="27"/><text x="5.0247%" y="559.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::convert::From&lt;wgpu::Buffer&gt;&gt;::from (17 samples, 0.02%)</title><rect x="4.8172%" y="437" width="0.0154%" height="15" fill="rgb(246,142,3)" fg:x="5328" fg:w="17"/><text x="5.0672%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (34 samples, 0.03%)</title><rect x="4.8444%" y="373" width="0.0307%" height="15" fill="rgb(241,25,7)" fg:x="5358" fg:w="34"/><text x="5.0944%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (34 samples, 0.03%)</title><rect x="4.8444%" y="357" width="0.0307%" height="15" fill="rgb(242,119,39)" fg:x="5358" fg:w="34"/><text x="5.0944%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (32 samples, 0.03%)</title><rect x="4.8462%" y="341" width="0.0289%" height="15" fill="rgb(241,98,45)" fg:x="5360" fg:w="32"/><text x="5.0962%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (32 samples, 0.03%)</title><rect x="4.8462%" y="325" width="0.0289%" height="15" fill="rgb(254,28,30)" fg:x="5360" fg:w="32"/><text x="5.0962%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (31 samples, 0.03%)</title><rect x="4.8471%" y="309" width="0.0280%" height="15" fill="rgb(241,142,54)" fg:x="5361" fg:w="31"/><text x="5.0971%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (31 samples, 0.03%)</title><rect x="4.8471%" y="293" width="0.0280%" height="15" fill="rgb(222,85,15)" fg:x="5361" fg:w="31"/><text x="5.0971%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (31 samples, 0.03%)</title><rect x="4.8471%" y="277" width="0.0280%" height="15" fill="rgb(210,85,47)" fg:x="5361" fg:w="31"/><text x="5.0971%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (31 samples, 0.03%)</title><rect x="4.8471%" y="261" width="0.0280%" height="15" fill="rgb(224,206,25)" fg:x="5361" fg:w="31"/><text x="5.0971%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (29 samples, 0.03%)</title><rect x="4.8489%" y="245" width="0.0262%" height="15" fill="rgb(243,201,19)" fg:x="5363" fg:w="29"/><text x="5.0989%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (27 samples, 0.02%)</title><rect x="4.8507%" y="229" width="0.0244%" height="15" fill="rgb(236,59,4)" fg:x="5365" fg:w="27"/><text x="5.1007%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (16 samples, 0.01%)</title><rect x="4.8760%" y="357" width="0.0145%" height="15" fill="rgb(254,179,45)" fg:x="5393" fg:w="16"/><text x="5.1260%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (16 samples, 0.01%)</title><rect x="4.8760%" y="341" width="0.0145%" height="15" fill="rgb(226,14,10)" fg:x="5393" fg:w="16"/><text x="5.1260%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="4.8760%" y="325" width="0.0145%" height="15" fill="rgb(244,27,41)" fg:x="5393" fg:w="16"/><text x="5.1260%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="4.8796%" y="309" width="0.0108%" height="15" fill="rgb(235,35,32)" fg:x="5397" fg:w="12"/><text x="5.1296%" y="319.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (68 samples, 0.06%)</title><rect x="4.8326%" y="421" width="0.0615%" height="15" fill="rgb(218,68,31)" fg:x="5345" fg:w="68"/><text x="5.0826%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (67 samples, 0.06%)</title><rect x="4.8335%" y="405" width="0.0606%" height="15" fill="rgb(207,120,37)" fg:x="5346" fg:w="67"/><text x="5.0835%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (67 samples, 0.06%)</title><rect x="4.8335%" y="389" width="0.0606%" height="15" fill="rgb(227,98,0)" fg:x="5346" fg:w="67"/><text x="5.0835%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (21 samples, 0.02%)</title><rect x="4.8751%" y="373" width="0.0190%" height="15" fill="rgb(207,7,3)" fg:x="5392" fg:w="21"/><text x="5.1251%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,725 samples, 1.56%)</title><rect x="4.9031%" y="421" width="1.5596%" height="15" fill="rgb(206,98,19)" fg:x="5423" fg:w="1725"/><text x="5.1531%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,725 samples, 1.56%)</title><rect x="4.9031%" y="405" width="1.5596%" height="15" fill="rgb(217,5,26)" fg:x="5423" fg:w="1725"/><text x="5.1531%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,725 samples, 1.56%)</title><rect x="4.9031%" y="389" width="1.5596%" height="15" fill="rgb(235,190,38)" fg:x="5423" fg:w="1725"/><text x="5.1531%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (925 samples, 0.84%)</title><rect x="6.4826%" y="373" width="0.8363%" height="15" fill="rgb(247,86,24)" fg:x="7170" fg:w="925"/><text x="6.7326%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (925 samples, 0.84%)</title><rect x="6.4826%" y="357" width="0.8363%" height="15" fill="rgb(205,101,16)" fg:x="7170" fg:w="925"/><text x="6.7326%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (18 samples, 0.02%)</title><rect x="7.3542%" y="341" width="0.0163%" height="15" fill="rgb(246,168,33)" fg:x="8134" fg:w="18"/><text x="7.6042%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (18 samples, 0.02%)</title><rect x="7.3542%" y="325" width="0.0163%" height="15" fill="rgb(231,114,1)" fg:x="8134" fg:w="18"/><text x="7.6042%" y="335.50"></text></g><g><title>__glx_Main (18 samples, 0.02%)</title><rect x="7.3542%" y="309" width="0.0163%" height="15" fill="rgb(207,184,53)" fg:x="8134" fg:w="18"/><text x="7.6042%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (12 samples, 0.01%)</title><rect x="7.3705%" y="341" width="0.0108%" height="15" fill="rgb(224,95,51)" fg:x="8152" fg:w="12"/><text x="7.6205%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (12 samples, 0.01%)</title><rect x="7.3705%" y="325" width="0.0108%" height="15" fill="rgb(212,188,45)" fg:x="8152" fg:w="12"/><text x="7.6205%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="7.3705%" y="309" width="0.0108%" height="15" fill="rgb(223,154,38)" fg:x="8152" fg:w="12"/><text x="7.6205%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (17 samples, 0.02%)</title><rect x="7.3850%" y="341" width="0.0154%" height="15" fill="rgb(251,22,52)" fg:x="8168" fg:w="17"/><text x="7.6350%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (15 samples, 0.01%)</title><rect x="7.3868%" y="325" width="0.0136%" height="15" fill="rgb(229,209,22)" fg:x="8170" fg:w="15"/><text x="7.6368%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (65 samples, 0.06%)</title><rect x="7.3425%" y="373" width="0.0588%" height="15" fill="rgb(234,138,34)" fg:x="8121" fg:w="65"/><text x="7.5925%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (58 samples, 0.05%)</title><rect x="7.3488%" y="357" width="0.0524%" height="15" fill="rgb(212,95,11)" fg:x="8128" fg:w="58"/><text x="7.5988%" y="367.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (12 samples, 0.01%)</title><rect x="7.4012%" y="373" width="0.0108%" height="15" fill="rgb(240,179,47)" fg:x="8186" fg:w="12"/><text x="7.6512%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,887 samples, 2.61%)</title><rect x="4.8109%" y="533" width="2.6102%" height="15" fill="rgb(240,163,11)" fg:x="5321" fg:w="2887"/><text x="5.0609%" y="543.50">&lt;F..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,887 samples, 2.61%)</title><rect x="4.8109%" y="517" width="2.6102%" height="15" fill="rgb(236,37,12)" fg:x="5321" fg:w="2887"/><text x="5.0609%" y="527.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,887 samples, 2.61%)</title><rect x="4.8109%" y="501" width="2.6102%" height="15" fill="rgb(232,164,16)" fg:x="5321" fg:w="2887"/><text x="5.0609%" y="511.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (2,887 samples, 2.61%)</title><rect x="4.8109%" y="485" width="2.6102%" height="15" fill="rgb(244,205,15)" fg:x="5321" fg:w="2887"/><text x="5.0609%" y="495.50">co..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,887 samples, 2.61%)</title><rect x="4.8109%" y="469" width="2.6102%" height="15" fill="rgb(223,117,47)" fg:x="5321" fg:w="2887"/><text x="5.0609%" y="479.50">st..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,880 samples, 2.60%)</title><rect x="4.8172%" y="453" width="2.6039%" height="15" fill="rgb(244,107,35)" fg:x="5328" fg:w="2880"/><text x="5.0672%" y="463.50">be..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,863 samples, 2.59%)</title><rect x="4.8326%" y="437" width="2.5885%" height="15" fill="rgb(205,140,8)" fg:x="5345" fg:w="2863"/><text x="5.0826%" y="447.50">&lt;w..</text></g><g><title>wgpu::Device::create_buffer (1,049 samples, 0.95%)</title><rect x="6.4727%" y="421" width="0.9484%" height="15" fill="rgb(228,84,46)" fg:x="7159" fg:w="1049"/><text x="6.7227%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1,046 samples, 0.95%)</title><rect x="6.4754%" y="405" width="0.9457%" height="15" fill="rgb(254,188,9)" fg:x="7162" fg:w="1046"/><text x="6.7254%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1,046 samples, 0.95%)</title><rect x="6.4754%" y="389" width="0.9457%" height="15" fill="rgb(206,112,54)" fg:x="7162" fg:w="1046"/><text x="6.7254%" y="399.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (23 samples, 0.02%)</title><rect x="7.4229%" y="469" width="0.0208%" height="15" fill="rgb(216,84,49)" fg:x="8210" fg:w="23"/><text x="7.6729%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (17 samples, 0.02%)</title><rect x="7.4284%" y="453" width="0.0154%" height="15" fill="rgb(214,194,35)" fg:x="8216" fg:w="17"/><text x="7.6784%" y="463.50"></text></g><g><title>alloc::vec::from_elem (12 samples, 0.01%)</title><rect x="7.4546%" y="421" width="0.0108%" height="15" fill="rgb(249,28,3)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (12 samples, 0.01%)</title><rect x="7.4546%" y="405" width="0.0108%" height="15" fill="rgb(222,56,52)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (12 samples, 0.01%)</title><rect x="7.4546%" y="389" width="0.0108%" height="15" fill="rgb(245,217,50)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="7.4546%" y="373" width="0.0108%" height="15" fill="rgb(213,201,24)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (12 samples, 0.01%)</title><rect x="7.4546%" y="357" width="0.0108%" height="15" fill="rgb(248,116,28)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="7.4546%" y="341" width="0.0108%" height="15" fill="rgb(219,72,43)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (12 samples, 0.01%)</title><rect x="7.4546%" y="325" width="0.0108%" height="15" fill="rgb(209,138,14)" fg:x="8245" fg:w="12"/><text x="7.7046%" y="335.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (42 samples, 0.04%)</title><rect x="7.4474%" y="437" width="0.0380%" height="15" fill="rgb(222,18,33)" fg:x="8237" fg:w="42"/><text x="7.6974%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.02%)</title><rect x="7.4654%" y="421" width="0.0199%" height="15" fill="rgb(213,199,7)" fg:x="8257" fg:w="22"/><text x="7.7154%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="7.4654%" y="405" width="0.0199%" height="15" fill="rgb(250,110,10)" fg:x="8257" fg:w="22"/><text x="7.7154%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="7.4672%" y="389" width="0.0181%" height="15" fill="rgb(248,123,6)" fg:x="8259" fg:w="20"/><text x="7.7172%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (22 samples, 0.02%)</title><rect x="7.4853%" y="437" width="0.0199%" height="15" fill="rgb(206,91,31)" fg:x="8279" fg:w="22"/><text x="7.7353%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (22 samples, 0.02%)</title><rect x="7.4853%" y="421" width="0.0199%" height="15" fill="rgb(211,154,13)" fg:x="8279" fg:w="22"/><text x="7.7353%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (13 samples, 0.01%)</title><rect x="7.4935%" y="405" width="0.0118%" height="15" fill="rgb(225,148,7)" fg:x="8288" fg:w="13"/><text x="7.7435%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (12 samples, 0.01%)</title><rect x="7.4944%" y="389" width="0.0108%" height="15" fill="rgb(220,160,43)" fg:x="8289" fg:w="12"/><text x="7.7444%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (12 samples, 0.01%)</title><rect x="7.4944%" y="373" width="0.0108%" height="15" fill="rgb(213,52,39)" fg:x="8289" fg:w="12"/><text x="7.7444%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (69 samples, 0.06%)</title><rect x="7.4437%" y="453" width="0.0624%" height="15" fill="rgb(243,137,7)" fg:x="8233" fg:w="69"/><text x="7.6937%" y="463.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (71 samples, 0.06%)</title><rect x="7.4437%" y="469" width="0.0642%" height="15" fill="rgb(230,79,13)" fg:x="8233" fg:w="71"/><text x="7.6937%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (98 samples, 0.09%)</title><rect x="7.4211%" y="533" width="0.0886%" height="15" fill="rgb(247,105,23)" fg:x="8208" fg:w="98"/><text x="7.6711%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (97 samples, 0.09%)</title><rect x="7.4220%" y="517" width="0.0877%" height="15" fill="rgb(223,179,41)" fg:x="8209" fg:w="97"/><text x="7.6720%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (97 samples, 0.09%)</title><rect x="7.4220%" y="501" width="0.0877%" height="15" fill="rgb(218,9,34)" fg:x="8209" fg:w="97"/><text x="7.6720%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (97 samples, 0.09%)</title><rect x="7.4220%" y="485" width="0.0877%" height="15" fill="rgb(222,106,8)" fg:x="8209" fg:w="97"/><text x="7.6720%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.01%)</title><rect x="7.5305%" y="325" width="0.0118%" height="15" fill="rgb(211,220,0)" fg:x="8329" fg:w="13"/><text x="7.7805%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="7.5305%" y="309" width="0.0118%" height="15" fill="rgb(229,52,16)" fg:x="8329" fg:w="13"/><text x="7.7805%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (13 samples, 0.01%)</title><rect x="7.5305%" y="293" width="0.0118%" height="15" fill="rgb(212,155,18)" fg:x="8329" fg:w="13"/><text x="7.7805%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (37 samples, 0.03%)</title><rect x="7.5125%" y="453" width="0.0335%" height="15" fill="rgb(242,21,14)" fg:x="8309" fg:w="37"/><text x="7.7625%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (37 samples, 0.03%)</title><rect x="7.5125%" y="437" width="0.0335%" height="15" fill="rgb(222,19,48)" fg:x="8309" fg:w="37"/><text x="7.7625%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (31 samples, 0.03%)</title><rect x="7.5179%" y="421" width="0.0280%" height="15" fill="rgb(232,45,27)" fg:x="8315" fg:w="31"/><text x="7.7679%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (31 samples, 0.03%)</title><rect x="7.5179%" y="405" width="0.0280%" height="15" fill="rgb(249,103,42)" fg:x="8315" fg:w="31"/><text x="7.7679%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (31 samples, 0.03%)</title><rect x="7.5179%" y="389" width="0.0280%" height="15" fill="rgb(246,81,33)" fg:x="8315" fg:w="31"/><text x="7.7679%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (31 samples, 0.03%)</title><rect x="7.5179%" y="373" width="0.0280%" height="15" fill="rgb(252,33,42)" fg:x="8315" fg:w="31"/><text x="7.7679%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (29 samples, 0.03%)</title><rect x="7.5197%" y="357" width="0.0262%" height="15" fill="rgb(209,212,41)" fg:x="8317" fg:w="29"/><text x="7.7697%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (29 samples, 0.03%)</title><rect x="7.5197%" y="341" width="0.0262%" height="15" fill="rgb(207,154,6)" fg:x="8317" fg:w="29"/><text x="7.7697%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (50 samples, 0.05%)</title><rect x="7.5116%" y="469" width="0.0452%" height="15" fill="rgb(223,64,47)" fg:x="8308" fg:w="50"/><text x="7.7616%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="7.5459%" y="453" width="0.0108%" height="15" fill="rgb(211,161,38)" fg:x="8346" fg:w="12"/><text x="7.7959%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="7.5459%" y="437" width="0.0108%" height="15" fill="rgb(219,138,40)" fg:x="8346" fg:w="12"/><text x="7.7959%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="7.5459%" y="421" width="0.0108%" height="15" fill="rgb(241,228,46)" fg:x="8346" fg:w="12"/><text x="7.7959%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (56 samples, 0.05%)</title><rect x="7.5097%" y="533" width="0.0506%" height="15" fill="rgb(223,209,38)" fg:x="8306" fg:w="56"/><text x="7.7597%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (56 samples, 0.05%)</title><rect x="7.5097%" y="517" width="0.0506%" height="15" fill="rgb(236,164,45)" fg:x="8306" fg:w="56"/><text x="7.7597%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (56 samples, 0.05%)</title><rect x="7.5097%" y="501" width="0.0506%" height="15" fill="rgb(231,15,5)" fg:x="8306" fg:w="56"/><text x="7.7597%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (56 samples, 0.05%)</title><rect x="7.5097%" y="485" width="0.0506%" height="15" fill="rgb(252,35,15)" fg:x="8306" fg:w="56"/><text x="7.7597%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="7.5694%" y="405" width="0.0108%" height="15" fill="rgb(248,181,18)" fg:x="8372" fg:w="12"/><text x="7.8194%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="7.5694%" y="389" width="0.0108%" height="15" fill="rgb(233,39,42)" fg:x="8372" fg:w="12"/><text x="7.8194%" y="399.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (18 samples, 0.02%)</title><rect x="7.5676%" y="453" width="0.0163%" height="15" fill="rgb(238,110,33)" fg:x="8370" fg:w="18"/><text x="7.8176%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (18 samples, 0.02%)</title><rect x="7.5676%" y="437" width="0.0163%" height="15" fill="rgb(233,195,10)" fg:x="8370" fg:w="18"/><text x="7.8176%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="7.5676%" y="421" width="0.0163%" height="15" fill="rgb(254,105,3)" fg:x="8370" fg:w="18"/><text x="7.8176%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.01%)</title><rect x="7.5974%" y="325" width="0.0136%" height="15" fill="rgb(221,225,9)" fg:x="8403" fg:w="15"/><text x="7.8474%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="7.5974%" y="309" width="0.0136%" height="15" fill="rgb(224,227,45)" fg:x="8403" fg:w="15"/><text x="7.8474%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="7.5974%" y="293" width="0.0136%" height="15" fill="rgb(229,198,43)" fg:x="8403" fg:w="15"/><text x="7.8474%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (21 samples, 0.02%)</title><rect x="7.5929%" y="389" width="0.0190%" height="15" fill="rgb(206,209,35)" fg:x="8398" fg:w="21"/><text x="7.8429%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (21 samples, 0.02%)</title><rect x="7.5929%" y="373" width="0.0190%" height="15" fill="rgb(245,195,53)" fg:x="8398" fg:w="21"/><text x="7.8429%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (17 samples, 0.02%)</title><rect x="7.5965%" y="357" width="0.0154%" height="15" fill="rgb(240,92,26)" fg:x="8402" fg:w="17"/><text x="7.8465%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (17 samples, 0.02%)</title><rect x="7.5965%" y="341" width="0.0154%" height="15" fill="rgb(207,40,23)" fg:x="8402" fg:w="17"/><text x="7.8465%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (23 samples, 0.02%)</title><rect x="7.5920%" y="421" width="0.0208%" height="15" fill="rgb(223,111,35)" fg:x="8397" fg:w="23"/><text x="7.8420%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (23 samples, 0.02%)</title><rect x="7.5920%" y="405" width="0.0208%" height="15" fill="rgb(229,147,28)" fg:x="8397" fg:w="23"/><text x="7.8420%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (73 samples, 0.07%)</title><rect x="7.5604%" y="533" width="0.0660%" height="15" fill="rgb(211,29,28)" fg:x="8362" fg:w="73"/><text x="7.8104%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (73 samples, 0.07%)</title><rect x="7.5604%" y="517" width="0.0660%" height="15" fill="rgb(228,72,33)" fg:x="8362" fg:w="73"/><text x="7.8104%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (73 samples, 0.07%)</title><rect x="7.5604%" y="501" width="0.0660%" height="15" fill="rgb(205,214,31)" fg:x="8362" fg:w="73"/><text x="7.8104%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (73 samples, 0.07%)</title><rect x="7.5604%" y="485" width="0.0660%" height="15" fill="rgb(224,111,15)" fg:x="8362" fg:w="73"/><text x="7.8104%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (73 samples, 0.07%)</title><rect x="7.5604%" y="469" width="0.0660%" height="15" fill="rgb(253,21,26)" fg:x="8362" fg:w="73"/><text x="7.8104%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (47 samples, 0.04%)</title><rect x="7.5839%" y="453" width="0.0425%" height="15" fill="rgb(245,139,43)" fg:x="8388" fg:w="47"/><text x="7.8339%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (47 samples, 0.04%)</title><rect x="7.5839%" y="437" width="0.0425%" height="15" fill="rgb(252,170,7)" fg:x="8388" fg:w="47"/><text x="7.8339%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (15 samples, 0.01%)</title><rect x="7.6128%" y="421" width="0.0136%" height="15" fill="rgb(231,118,14)" fg:x="8420" fg:w="15"/><text x="7.8628%" y="431.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer (12 samples, 0.01%)</title><rect x="7.6155%" y="405" width="0.0108%" height="15" fill="rgb(238,83,0)" fg:x="8423" fg:w="12"/><text x="7.8655%" y="415.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,122 samples, 2.82%)</title><rect x="4.8109%" y="549" width="2.8227%" height="15" fill="rgb(221,39,39)" fg:x="5321" fg:w="3122"/><text x="5.0609%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,134 samples, 2.83%)</title><rect x="4.8010%" y="581" width="2.8336%" height="15" fill="rgb(222,119,46)" fg:x="5310" fg:w="3134"/><text x="5.0510%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,127 samples, 2.83%)</title><rect x="4.8073%" y="565" width="2.8272%" height="15" fill="rgb(222,165,49)" fg:x="5317" fg:w="3127"/><text x="5.0573%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,136 samples, 2.84%)</title><rect x="4.8001%" y="613" width="2.8354%" height="15" fill="rgb(219,113,52)" fg:x="5309" fg:w="3136"/><text x="5.0501%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,135 samples, 2.83%)</title><rect x="4.8010%" y="597" width="2.8345%" height="15" fill="rgb(214,7,15)" fg:x="5310" fg:w="3135"/><text x="5.0510%" y="607.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,139 samples, 2.84%)</title><rect x="4.7991%" y="629" width="2.8381%" height="15" fill="rgb(235,32,4)" fg:x="5308" fg:w="3139"/><text x="5.0491%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,175 samples, 2.87%)</title><rect x="4.7693%" y="709" width="2.8706%" height="15" fill="rgb(238,90,54)" fg:x="5275" fg:w="3175"/><text x="5.0193%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,175 samples, 2.87%)</title><rect x="4.7693%" y="693" width="2.8706%" height="15" fill="rgb(213,208,19)" fg:x="5275" fg:w="3175"/><text x="5.0193%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,174 samples, 2.87%)</title><rect x="4.7702%" y="677" width="2.8697%" height="15" fill="rgb(233,156,4)" fg:x="5276" fg:w="3174"/><text x="5.0202%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,169 samples, 2.87%)</title><rect x="4.7747%" y="661" width="2.8652%" height="15" fill="rgb(207,194,5)" fg:x="5281" fg:w="3169"/><text x="5.0247%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,169 samples, 2.87%)</title><rect x="4.7747%" y="645" width="2.8652%" height="15" fill="rgb(206,111,30)" fg:x="5281" fg:w="3169"/><text x="5.0247%" y="655.50">as..</text></g><g><title>std::panic::catch_unwind (3,204 samples, 2.90%)</title><rect x="4.7684%" y="885" width="2.8968%" height="15" fill="rgb(243,70,54)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="895.50">st..</text></g><g><title>std::panicking::try (3,204 samples, 2.90%)</title><rect x="4.7684%" y="869" width="2.8968%" height="15" fill="rgb(242,28,8)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (3,204 samples, 2.90%)</title><rect x="4.7684%" y="853" width="2.8968%" height="15" fill="rgb(219,106,18)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,204 samples, 2.90%)</title><rect x="4.7684%" y="837" width="2.8968%" height="15" fill="rgb(244,222,10)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,204 samples, 2.90%)</title><rect x="4.7684%" y="821" width="2.8968%" height="15" fill="rgb(236,179,52)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,204 samples, 2.90%)</title><rect x="4.7684%" y="805" width="2.8968%" height="15" fill="rgb(213,23,39)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (3,204 samples, 2.90%)</title><rect x="4.7684%" y="789" width="2.8968%" height="15" fill="rgb(238,48,10)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (3,204 samples, 2.90%)</title><rect x="4.7684%" y="773" width="2.8968%" height="15" fill="rgb(251,196,23)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,204 samples, 2.90%)</title><rect x="4.7684%" y="757" width="2.8968%" height="15" fill="rgb(250,152,24)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,204 samples, 2.90%)</title><rect x="4.7684%" y="741" width="2.8968%" height="15" fill="rgb(209,150,17)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="751.50">st..</text></g><g><title>futures_lite::future::block_on::{{closure}} (3,204 samples, 2.90%)</title><rect x="4.7684%" y="725" width="2.8968%" height="15" fill="rgb(234,202,34)" fg:x="5274" fg:w="3204"/><text x="5.0184%" y="735.50">fu..</text></g><g><title>parking::Parker::park (28 samples, 0.03%)</title><rect x="7.6399%" y="709" width="0.0253%" height="15" fill="rgb(253,148,53)" fg:x="8450" fg:w="28"/><text x="7.8899%" y="719.50"></text></g><g><title>parking::Inner::park (28 samples, 0.03%)</title><rect x="7.6399%" y="693" width="0.0253%" height="15" fill="rgb(218,129,16)" fg:x="8450" fg:w="28"/><text x="7.8899%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (27 samples, 0.02%)</title><rect x="7.6408%" y="677" width="0.0244%" height="15" fill="rgb(216,85,19)" fg:x="8451" fg:w="27"/><text x="7.8908%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (27 samples, 0.02%)</title><rect x="7.6408%" y="661" width="0.0244%" height="15" fill="rgb(235,228,7)" fg:x="8451" fg:w="27"/><text x="7.8908%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (27 samples, 0.02%)</title><rect x="7.6408%" y="645" width="0.0244%" height="15" fill="rgb(245,175,0)" fg:x="8451" fg:w="27"/><text x="7.8908%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (27 samples, 0.02%)</title><rect x="7.6408%" y="629" width="0.0244%" height="15" fill="rgb(208,168,36)" fg:x="8451" fg:w="27"/><text x="7.8908%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (26 samples, 0.02%)</title><rect x="7.6417%" y="613" width="0.0235%" height="15" fill="rgb(246,171,24)" fg:x="8452" fg:w="26"/><text x="7.8917%" y="623.50"></text></g><g><title>syscall (22 samples, 0.02%)</title><rect x="7.6454%" y="597" width="0.0199%" height="15" fill="rgb(215,142,24)" fg:x="8456" fg:w="22"/><text x="7.8954%" y="607.50"></text></g><g><title>__GI___clone (3,205 samples, 2.90%)</title><rect x="4.7684%" y="997" width="2.8978%" height="15" fill="rgb(250,187,7)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="1007.50">__..</text></g><g><title>start_thread (3,205 samples, 2.90%)</title><rect x="4.7684%" y="981" width="2.8978%" height="15" fill="rgb(228,66,33)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,205 samples, 2.90%)</title><rect x="4.7684%" y="965" width="2.8978%" height="15" fill="rgb(234,215,21)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,205 samples, 2.90%)</title><rect x="4.7684%" y="949" width="2.8978%" height="15" fill="rgb(222,191,20)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,205 samples, 2.90%)</title><rect x="4.7684%" y="933" width="2.8978%" height="15" fill="rgb(245,79,54)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,205 samples, 2.90%)</title><rect x="4.7684%" y="917" width="2.8978%" height="15" fill="rgb(240,10,37)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,205 samples, 2.90%)</title><rect x="4.7684%" y="901" width="2.8978%" height="15" fill="rgb(214,192,32)" fg:x="5274" fg:w="3205"/><text x="5.0184%" y="911.50">st..</text></g><g><title>TaskPool_(11) (3,313 samples, 3.00%)</title><rect x="4.6780%" y="1013" width="2.9954%" height="15" fill="rgb(209,36,54)" fg:x="5174" fg:w="3313"/><text x="4.9280%" y="1023.50">Tas..</text></g><g><title>[[heap]] (27 samples, 0.02%)</title><rect x="7.6761%" y="997" width="0.0244%" height="15" fill="rgb(220,10,11)" fg:x="8490" fg:w="27"/><text x="7.9261%" y="1007.50"></text></g><g><title>[anon] (30 samples, 0.03%)</title><rect x="7.7005%" y="997" width="0.0271%" height="15" fill="rgb(221,106,17)" fg:x="8517" fg:w="30"/><text x="7.9505%" y="1007.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="7.7276%" y="997" width="0.0280%" height="15" fill="rgb(251,142,44)" fg:x="8547" fg:w="31"/><text x="7.9776%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="7.7611%" y="533" width="0.0127%" height="15" fill="rgb(238,13,15)" fg:x="8584" fg:w="14"/><text x="8.0111%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="7.7593%" y="629" width="0.0163%" height="15" fill="rgb(208,107,27)" fg:x="8582" fg:w="18"/><text x="8.0093%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (18 samples, 0.02%)</title><rect x="7.7593%" y="613" width="0.0163%" height="15" fill="rgb(205,136,37)" fg:x="8582" fg:w="18"/><text x="8.0093%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="7.7611%" y="597" width="0.0145%" height="15" fill="rgb(250,205,27)" fg:x="8584" fg:w="16"/><text x="8.0111%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (16 samples, 0.01%)</title><rect x="7.7611%" y="581" width="0.0145%" height="15" fill="rgb(210,80,43)" fg:x="8584" fg:w="16"/><text x="8.0111%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="7.7611%" y="565" width="0.0145%" height="15" fill="rgb(247,160,36)" fg:x="8584" fg:w="16"/><text x="8.0111%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="7.7611%" y="549" width="0.0145%" height="15" fill="rgb(234,13,49)" fg:x="8584" fg:w="16"/><text x="8.0111%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (26 samples, 0.02%)</title><rect x="7.8126%" y="373" width="0.0235%" height="15" fill="rgb(234,122,0)" fg:x="8641" fg:w="26"/><text x="8.0626%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (26 samples, 0.02%)</title><rect x="7.8126%" y="357" width="0.0235%" height="15" fill="rgb(207,146,38)" fg:x="8641" fg:w="26"/><text x="8.0626%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (26 samples, 0.02%)</title><rect x="7.8126%" y="341" width="0.0235%" height="15" fill="rgb(207,177,25)" fg:x="8641" fg:w="26"/><text x="8.0626%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (25 samples, 0.02%)</title><rect x="7.8135%" y="325" width="0.0226%" height="15" fill="rgb(211,178,42)" fg:x="8642" fg:w="25"/><text x="8.0635%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (24 samples, 0.02%)</title><rect x="7.8144%" y="309" width="0.0217%" height="15" fill="rgb(230,69,54)" fg:x="8643" fg:w="24"/><text x="8.0644%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (24 samples, 0.02%)</title><rect x="7.8144%" y="293" width="0.0217%" height="15" fill="rgb(214,135,41)" fg:x="8643" fg:w="24"/><text x="8.0644%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (24 samples, 0.02%)</title><rect x="7.8144%" y="277" width="0.0217%" height="15" fill="rgb(237,67,25)" fg:x="8643" fg:w="24"/><text x="8.0644%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (24 samples, 0.02%)</title><rect x="7.8144%" y="261" width="0.0217%" height="15" fill="rgb(222,189,50)" fg:x="8643" fg:w="24"/><text x="8.0644%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.02%)</title><rect x="7.8144%" y="245" width="0.0217%" height="15" fill="rgb(245,148,34)" fg:x="8643" fg:w="24"/><text x="8.0644%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (22 samples, 0.02%)</title><rect x="7.8162%" y="229" width="0.0199%" height="15" fill="rgb(222,29,6)" fg:x="8645" fg:w="22"/><text x="8.0662%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (21 samples, 0.02%)</title><rect x="7.8361%" y="357" width="0.0190%" height="15" fill="rgb(221,189,43)" fg:x="8667" fg:w="21"/><text x="8.0861%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (21 samples, 0.02%)</title><rect x="7.8361%" y="341" width="0.0190%" height="15" fill="rgb(207,36,27)" fg:x="8667" fg:w="21"/><text x="8.0861%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.02%)</title><rect x="7.8361%" y="325" width="0.0190%" height="15" fill="rgb(217,90,24)" fg:x="8667" fg:w="21"/><text x="8.0861%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="7.8407%" y="309" width="0.0145%" height="15" fill="rgb(224,66,35)" fg:x="8672" fg:w="16"/><text x="8.0907%" y="319.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (65 samples, 0.06%)</title><rect x="7.8036%" y="421" width="0.0588%" height="15" fill="rgb(221,13,50)" fg:x="8631" fg:w="65"/><text x="8.0536%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (64 samples, 0.06%)</title><rect x="7.8045%" y="405" width="0.0579%" height="15" fill="rgb(236,68,49)" fg:x="8632" fg:w="64"/><text x="8.0545%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (64 samples, 0.06%)</title><rect x="7.8045%" y="389" width="0.0579%" height="15" fill="rgb(229,146,28)" fg:x="8632" fg:w="64"/><text x="8.0545%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (29 samples, 0.03%)</title><rect x="7.8361%" y="373" width="0.0262%" height="15" fill="rgb(225,31,38)" fg:x="8667" fg:w="29"/><text x="8.0861%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,779 samples, 1.61%)</title><rect x="7.8678%" y="421" width="1.6085%" height="15" fill="rgb(250,208,3)" fg:x="8702" fg:w="1779"/><text x="8.1178%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,779 samples, 1.61%)</title><rect x="7.8678%" y="405" width="1.6085%" height="15" fill="rgb(246,54,23)" fg:x="8702" fg:w="1779"/><text x="8.1178%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,779 samples, 1.61%)</title><rect x="7.8678%" y="389" width="1.6085%" height="15" fill="rgb(243,76,11)" fg:x="8702" fg:w="1779"/><text x="8.1178%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (878 samples, 0.79%)</title><rect x="9.4952%" y="373" width="0.7938%" height="15" fill="rgb(245,21,50)" fg:x="10502" fg:w="878"/><text x="9.7452%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (878 samples, 0.79%)</title><rect x="9.4952%" y="357" width="0.7938%" height="15" fill="rgb(228,9,43)" fg:x="10502" fg:w="878"/><text x="9.7452%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (17 samples, 0.02%)</title><rect x="10.3234%" y="341" width="0.0154%" height="15" fill="rgb(208,100,47)" fg:x="11418" fg:w="17"/><text x="10.5734%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (17 samples, 0.02%)</title><rect x="10.3234%" y="325" width="0.0154%" height="15" fill="rgb(232,26,8)" fg:x="11418" fg:w="17"/><text x="10.5734%" y="335.50"></text></g><g><title>__glx_Main (17 samples, 0.02%)</title><rect x="10.3234%" y="309" width="0.0154%" height="15" fill="rgb(216,166,38)" fg:x="11418" fg:w="17"/><text x="10.5734%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (13 samples, 0.01%)</title><rect x="10.3388%" y="341" width="0.0118%" height="15" fill="rgb(251,202,51)" fg:x="11435" fg:w="13"/><text x="10.5888%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (13 samples, 0.01%)</title><rect x="10.3388%" y="325" width="0.0118%" height="15" fill="rgb(254,216,34)" fg:x="11435" fg:w="13"/><text x="10.5888%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="10.3388%" y="309" width="0.0118%" height="15" fill="rgb(251,32,27)" fg:x="11435" fg:w="13"/><text x="10.5888%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (25 samples, 0.02%)</title><rect x="10.3578%" y="341" width="0.0226%" height="15" fill="rgb(208,127,28)" fg:x="11456" fg:w="25"/><text x="10.6078%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (21 samples, 0.02%)</title><rect x="10.3614%" y="325" width="0.0190%" height="15" fill="rgb(224,137,22)" fg:x="11460" fg:w="21"/><text x="10.6114%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (76 samples, 0.07%)</title><rect x="10.3135%" y="373" width="0.0687%" height="15" fill="rgb(254,70,32)" fg:x="11407" fg:w="76"/><text x="10.5635%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (66 samples, 0.06%)</title><rect x="10.3225%" y="357" width="0.0597%" height="15" fill="rgb(229,75,37)" fg:x="11417" fg:w="66"/><text x="10.5725%" y="367.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (14 samples, 0.01%)</title><rect x="10.3822%" y="373" width="0.0127%" height="15" fill="rgb(252,64,23)" fg:x="11483" fg:w="14"/><text x="10.6322%" y="383.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (12 samples, 0.01%)</title><rect x="10.3840%" y="357" width="0.0108%" height="15" fill="rgb(232,162,48)" fg:x="11485" fg:w="12"/><text x="10.6340%" y="367.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (12 samples, 0.01%)</title><rect x="10.3840%" y="341" width="0.0108%" height="15" fill="rgb(246,160,12)" fg:x="11485" fg:w="12"/><text x="10.6340%" y="351.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="10.3840%" y="325" width="0.0108%" height="15" fill="rgb(247,166,0)" fg:x="11485" fg:w="12"/><text x="10.6340%" y="335.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,900 samples, 2.62%)</title><rect x="7.7864%" y="533" width="2.6220%" height="15" fill="rgb(249,219,21)" fg:x="8612" fg:w="2900"/><text x="8.0364%" y="543.50">&lt;F..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,900 samples, 2.62%)</title><rect x="7.7864%" y="517" width="2.6220%" height="15" fill="rgb(205,209,3)" fg:x="8612" fg:w="2900"/><text x="8.0364%" y="527.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,900 samples, 2.62%)</title><rect x="7.7864%" y="501" width="2.6220%" height="15" fill="rgb(243,44,1)" fg:x="8612" fg:w="2900"/><text x="8.0364%" y="511.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (2,900 samples, 2.62%)</title><rect x="7.7864%" y="485" width="2.6220%" height="15" fill="rgb(206,159,16)" fg:x="8612" fg:w="2900"/><text x="8.0364%" y="495.50">co..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,900 samples, 2.62%)</title><rect x="7.7864%" y="469" width="2.6220%" height="15" fill="rgb(244,77,30)" fg:x="8612" fg:w="2900"/><text x="8.0364%" y="479.50">st..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,891 samples, 2.61%)</title><rect x="7.7945%" y="453" width="2.6139%" height="15" fill="rgb(218,69,12)" fg:x="8621" fg:w="2891"/><text x="8.0445%" y="463.50">be..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,881 samples, 2.60%)</title><rect x="7.8036%" y="437" width="2.6048%" height="15" fill="rgb(212,87,7)" fg:x="8631" fg:w="2881"/><text x="8.0536%" y="447.50">&lt;w..</text></g><g><title>wgpu::Device::create_buffer (1,018 samples, 0.92%)</title><rect x="9.4880%" y="421" width="0.9204%" height="15" fill="rgb(245,114,25)" fg:x="10494" fg:w="1018"/><text x="9.7380%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1,016 samples, 0.92%)</title><rect x="9.4898%" y="405" width="0.9186%" height="15" fill="rgb(210,61,42)" fg:x="10496" fg:w="1016"/><text x="9.7398%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1,015 samples, 0.92%)</title><rect x="9.4907%" y="389" width="0.9177%" height="15" fill="rgb(211,52,33)" fg:x="10497" fg:w="1015"/><text x="9.7407%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="10.4102%" y="437" width="0.0118%" height="15" fill="rgb(234,58,33)" fg:x="11514" fg:w="13"/><text x="10.6602%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="10.4102%" y="421" width="0.0118%" height="15" fill="rgb(220,115,36)" fg:x="11514" fg:w="13"/><text x="10.6602%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (23 samples, 0.02%)</title><rect x="10.4084%" y="469" width="0.0208%" height="15" fill="rgb(243,153,54)" fg:x="11512" fg:w="23"/><text x="10.6584%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (21 samples, 0.02%)</title><rect x="10.4102%" y="453" width="0.0190%" height="15" fill="rgb(251,47,18)" fg:x="11514" fg:w="21"/><text x="10.6602%" y="463.50"></text></g><g><title>alloc::vec::from_elem (13 samples, 0.01%)</title><rect x="10.4346%" y="421" width="0.0118%" height="15" fill="rgb(242,102,42)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13 samples, 0.01%)</title><rect x="10.4346%" y="405" width="0.0118%" height="15" fill="rgb(234,31,38)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (13 samples, 0.01%)</title><rect x="10.4346%" y="389" width="0.0118%" height="15" fill="rgb(221,117,51)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="10.4346%" y="373" width="0.0118%" height="15" fill="rgb(212,20,18)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (13 samples, 0.01%)</title><rect x="10.4346%" y="357" width="0.0118%" height="15" fill="rgb(245,133,36)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="10.4346%" y="341" width="0.0118%" height="15" fill="rgb(212,6,19)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (13 samples, 0.01%)</title><rect x="10.4346%" y="325" width="0.0118%" height="15" fill="rgb(218,1,36)" fg:x="11541" fg:w="13"/><text x="10.6846%" y="335.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (47 samples, 0.04%)</title><rect x="10.4292%" y="437" width="0.0425%" height="15" fill="rgb(246,84,54)" fg:x="11535" fg:w="47"/><text x="10.6792%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (27 samples, 0.02%)</title><rect x="10.4473%" y="421" width="0.0244%" height="15" fill="rgb(242,110,6)" fg:x="11555" fg:w="27"/><text x="10.6973%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.02%)</title><rect x="10.4473%" y="405" width="0.0244%" height="15" fill="rgb(214,47,5)" fg:x="11555" fg:w="27"/><text x="10.6973%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="10.4473%" y="389" width="0.0244%" height="15" fill="rgb(218,159,25)" fg:x="11555" fg:w="27"/><text x="10.6973%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (15 samples, 0.01%)</title><rect x="10.4717%" y="437" width="0.0136%" height="15" fill="rgb(215,211,28)" fg:x="11582" fg:w="15"/><text x="10.7217%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (15 samples, 0.01%)</title><rect x="10.4717%" y="421" width="0.0136%" height="15" fill="rgb(238,59,32)" fg:x="11582" fg:w="15"/><text x="10.7217%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (86 samples, 0.08%)</title><rect x="10.4084%" y="533" width="0.0778%" height="15" fill="rgb(226,82,3)" fg:x="11512" fg:w="86"/><text x="10.6584%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (86 samples, 0.08%)</title><rect x="10.4084%" y="517" width="0.0778%" height="15" fill="rgb(240,164,32)" fg:x="11512" fg:w="86"/><text x="10.6584%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (86 samples, 0.08%)</title><rect x="10.4084%" y="501" width="0.0778%" height="15" fill="rgb(232,46,7)" fg:x="11512" fg:w="86"/><text x="10.6584%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (86 samples, 0.08%)</title><rect x="10.4084%" y="485" width="0.0778%" height="15" fill="rgb(229,129,53)" fg:x="11512" fg:w="86"/><text x="10.6584%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (63 samples, 0.06%)</title><rect x="10.4292%" y="469" width="0.0570%" height="15" fill="rgb(234,188,29)" fg:x="11535" fg:w="63"/><text x="10.6792%" y="479.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (63 samples, 0.06%)</title><rect x="10.4292%" y="453" width="0.0570%" height="15" fill="rgb(246,141,4)" fg:x="11535" fg:w="63"/><text x="10.6792%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (20 samples, 0.02%)</title><rect x="10.5060%" y="325" width="0.0181%" height="15" fill="rgb(229,23,39)" fg:x="11620" fg:w="20"/><text x="10.7560%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="10.5060%" y="309" width="0.0181%" height="15" fill="rgb(206,12,3)" fg:x="11620" fg:w="20"/><text x="10.7560%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (20 samples, 0.02%)</title><rect x="10.5060%" y="293" width="0.0181%" height="15" fill="rgb(252,226,20)" fg:x="11620" fg:w="20"/><text x="10.7560%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (42 samples, 0.04%)</title><rect x="10.4898%" y="453" width="0.0380%" height="15" fill="rgb(216,123,35)" fg:x="11602" fg:w="42"/><text x="10.7398%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (42 samples, 0.04%)</title><rect x="10.4898%" y="437" width="0.0380%" height="15" fill="rgb(212,68,40)" fg:x="11602" fg:w="42"/><text x="10.7398%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (38 samples, 0.03%)</title><rect x="10.4934%" y="421" width="0.0344%" height="15" fill="rgb(254,125,32)" fg:x="11606" fg:w="38"/><text x="10.7434%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (38 samples, 0.03%)</title><rect x="10.4934%" y="405" width="0.0344%" height="15" fill="rgb(253,97,22)" fg:x="11606" fg:w="38"/><text x="10.7434%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (37 samples, 0.03%)</title><rect x="10.4943%" y="389" width="0.0335%" height="15" fill="rgb(241,101,14)" fg:x="11607" fg:w="37"/><text x="10.7443%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (35 samples, 0.03%)</title><rect x="10.4961%" y="373" width="0.0316%" height="15" fill="rgb(238,103,29)" fg:x="11609" fg:w="35"/><text x="10.7461%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (34 samples, 0.03%)</title><rect x="10.4970%" y="357" width="0.0307%" height="15" fill="rgb(233,195,47)" fg:x="11610" fg:w="34"/><text x="10.7470%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (34 samples, 0.03%)</title><rect x="10.4970%" y="341" width="0.0307%" height="15" fill="rgb(246,218,30)" fg:x="11610" fg:w="34"/><text x="10.7470%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (53 samples, 0.05%)</title><rect x="10.4889%" y="469" width="0.0479%" height="15" fill="rgb(219,145,47)" fg:x="11601" fg:w="53"/><text x="10.7389%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (62 samples, 0.06%)</title><rect x="10.4862%" y="533" width="0.0561%" height="15" fill="rgb(243,12,26)" fg:x="11598" fg:w="62"/><text x="10.7362%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (62 samples, 0.06%)</title><rect x="10.4862%" y="517" width="0.0561%" height="15" fill="rgb(214,87,16)" fg:x="11598" fg:w="62"/><text x="10.7362%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (62 samples, 0.06%)</title><rect x="10.4862%" y="501" width="0.0561%" height="15" fill="rgb(208,99,42)" fg:x="11598" fg:w="62"/><text x="10.7362%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (62 samples, 0.06%)</title><rect x="10.4862%" y="485" width="0.0561%" height="15" fill="rgb(253,99,2)" fg:x="11598" fg:w="62"/><text x="10.7362%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (16 samples, 0.01%)</title><rect x="10.5513%" y="453" width="0.0145%" height="15" fill="rgb(220,168,23)" fg:x="11670" fg:w="16"/><text x="10.8013%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (13 samples, 0.01%)</title><rect x="10.5540%" y="437" width="0.0118%" height="15" fill="rgb(242,38,24)" fg:x="11673" fg:w="13"/><text x="10.8040%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="10.5540%" y="421" width="0.0118%" height="15" fill="rgb(225,182,9)" fg:x="11673" fg:w="13"/><text x="10.8040%" y="431.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (24 samples, 0.02%)</title><rect x="10.5739%" y="389" width="0.0217%" height="15" fill="rgb(243,178,37)" fg:x="11695" fg:w="24"/><text x="10.8239%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (22 samples, 0.02%)</title><rect x="10.5757%" y="373" width="0.0199%" height="15" fill="rgb(232,139,19)" fg:x="11697" fg:w="22"/><text x="10.8257%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (12 samples, 0.01%)</title><rect x="10.5847%" y="357" width="0.0108%" height="15" fill="rgb(225,201,24)" fg:x="11707" fg:w="12"/><text x="10.8347%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (12 samples, 0.01%)</title><rect x="10.5847%" y="341" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="11707" fg:w="12"/><text x="10.8347%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (29 samples, 0.03%)</title><rect x="10.5702%" y="421" width="0.0262%" height="15" fill="rgb(249,23,13)" fg:x="11691" fg:w="29"/><text x="10.8202%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (29 samples, 0.03%)</title><rect x="10.5702%" y="405" width="0.0262%" height="15" fill="rgb(219,9,5)" fg:x="11691" fg:w="29"/><text x="10.8202%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (67 samples, 0.06%)</title><rect x="10.5422%" y="533" width="0.0606%" height="15" fill="rgb(254,171,16)" fg:x="11660" fg:w="67"/><text x="10.7922%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (65 samples, 0.06%)</title><rect x="10.5440%" y="517" width="0.0588%" height="15" fill="rgb(230,171,20)" fg:x="11662" fg:w="65"/><text x="10.7940%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (65 samples, 0.06%)</title><rect x="10.5440%" y="501" width="0.0588%" height="15" fill="rgb(210,71,41)" fg:x="11662" fg:w="65"/><text x="10.7940%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (65 samples, 0.06%)</title><rect x="10.5440%" y="485" width="0.0588%" height="15" fill="rgb(206,173,20)" fg:x="11662" fg:w="65"/><text x="10.7940%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (65 samples, 0.06%)</title><rect x="10.5440%" y="469" width="0.0588%" height="15" fill="rgb(233,88,34)" fg:x="11662" fg:w="65"/><text x="10.7940%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (41 samples, 0.04%)</title><rect x="10.5657%" y="453" width="0.0371%" height="15" fill="rgb(223,209,46)" fg:x="11686" fg:w="41"/><text x="10.8157%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (41 samples, 0.04%)</title><rect x="10.5657%" y="437" width="0.0371%" height="15" fill="rgb(250,43,18)" fg:x="11686" fg:w="41"/><text x="10.8157%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,132 samples, 2.83%)</title><rect x="7.7756%" y="613" width="2.8317%" height="15" fill="rgb(208,13,10)" fg:x="8600" fg:w="3132"/><text x="8.0256%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,132 samples, 2.83%)</title><rect x="7.7756%" y="597" width="2.8317%" height="15" fill="rgb(212,200,36)" fg:x="8600" fg:w="3132"/><text x="8.0256%" y="607.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,132 samples, 2.83%)</title><rect x="7.7756%" y="581" width="2.8317%" height="15" fill="rgb(225,90,30)" fg:x="8600" fg:w="3132"/><text x="8.0256%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,124 samples, 2.82%)</title><rect x="7.7828%" y="565" width="2.8245%" height="15" fill="rgb(236,182,39)" fg:x="8608" fg:w="3124"/><text x="8.0328%" y="575.50">be..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,120 samples, 2.82%)</title><rect x="7.7864%" y="549" width="2.8209%" height="15" fill="rgb(212,144,35)" fg:x="8612" fg:w="3120"/><text x="8.0364%" y="559.50">&lt;b..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,133 samples, 2.83%)</title><rect x="7.7756%" y="629" width="2.8327%" height="15" fill="rgb(228,63,44)" fg:x="8600" fg:w="3133"/><text x="8.0256%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,156 samples, 2.85%)</title><rect x="7.7557%" y="709" width="2.8534%" height="15" fill="rgb(228,109,6)" fg:x="8578" fg:w="3156"/><text x="8.0057%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,156 samples, 2.85%)</title><rect x="7.7557%" y="693" width="2.8534%" height="15" fill="rgb(238,117,24)" fg:x="8578" fg:w="3156"/><text x="8.0057%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,156 samples, 2.85%)</title><rect x="7.7557%" y="677" width="2.8534%" height="15" fill="rgb(242,26,26)" fg:x="8578" fg:w="3156"/><text x="8.0057%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,152 samples, 2.85%)</title><rect x="7.7593%" y="661" width="2.8498%" height="15" fill="rgb(221,92,48)" fg:x="8582" fg:w="3152"/><text x="8.0093%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,152 samples, 2.85%)</title><rect x="7.7593%" y="645" width="2.8498%" height="15" fill="rgb(209,209,32)" fg:x="8582" fg:w="3152"/><text x="8.0093%" y="655.50">as..</text></g><g><title>__GI___clone (3,168 samples, 2.86%)</title><rect x="7.7557%" y="997" width="2.8643%" height="15" fill="rgb(221,70,22)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="1007.50">__..</text></g><g><title>start_thread (3,168 samples, 2.86%)</title><rect x="7.7557%" y="981" width="2.8643%" height="15" fill="rgb(248,145,5)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,168 samples, 2.86%)</title><rect x="7.7557%" y="965" width="2.8643%" height="15" fill="rgb(226,116,26)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,168 samples, 2.86%)</title><rect x="7.7557%" y="949" width="2.8643%" height="15" fill="rgb(244,5,17)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,168 samples, 2.86%)</title><rect x="7.7557%" y="933" width="2.8643%" height="15" fill="rgb(252,159,33)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,168 samples, 2.86%)</title><rect x="7.7557%" y="917" width="2.8643%" height="15" fill="rgb(206,71,0)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,168 samples, 2.86%)</title><rect x="7.7557%" y="901" width="2.8643%" height="15" fill="rgb(233,118,54)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (3,168 samples, 2.86%)</title><rect x="7.7557%" y="885" width="2.8643%" height="15" fill="rgb(234,83,48)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="895.50">st..</text></g><g><title>std::panicking::try (3,168 samples, 2.86%)</title><rect x="7.7557%" y="869" width="2.8643%" height="15" fill="rgb(228,3,54)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (3,168 samples, 2.86%)</title><rect x="7.7557%" y="853" width="2.8643%" height="15" fill="rgb(226,155,13)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,168 samples, 2.86%)</title><rect x="7.7557%" y="837" width="2.8643%" height="15" fill="rgb(241,28,37)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,168 samples, 2.86%)</title><rect x="7.7557%" y="821" width="2.8643%" height="15" fill="rgb(233,93,10)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,168 samples, 2.86%)</title><rect x="7.7557%" y="805" width="2.8643%" height="15" fill="rgb(225,113,19)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (3,168 samples, 2.86%)</title><rect x="7.7557%" y="789" width="2.8643%" height="15" fill="rgb(241,2,18)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (3,168 samples, 2.86%)</title><rect x="7.7557%" y="773" width="2.8643%" height="15" fill="rgb(228,207,21)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,168 samples, 2.86%)</title><rect x="7.7557%" y="757" width="2.8643%" height="15" fill="rgb(213,211,35)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,168 samples, 2.86%)</title><rect x="7.7557%" y="741" width="2.8643%" height="15" fill="rgb(209,83,10)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="751.50">st..</text></g><g><title>futures_lite::future::block_on::{{closure}} (3,168 samples, 2.86%)</title><rect x="7.7557%" y="725" width="2.8643%" height="15" fill="rgb(209,164,1)" fg:x="8578" fg:w="3168"/><text x="8.0057%" y="735.50">fu..</text></g><g><title>parking::Parker::park (12 samples, 0.01%)</title><rect x="10.6091%" y="709" width="0.0108%" height="15" fill="rgb(213,184,43)" fg:x="11734" fg:w="12"/><text x="10.8591%" y="719.50"></text></g><g><title>parking::Inner::park (12 samples, 0.01%)</title><rect x="10.6091%" y="693" width="0.0108%" height="15" fill="rgb(231,61,34)" fg:x="11734" fg:w="12"/><text x="10.8591%" y="703.50"></text></g><g><title>TaskPool_(3) (3,259 samples, 2.95%)</title><rect x="7.6743%" y="1013" width="2.9466%" height="15" fill="rgb(235,75,3)" fg:x="8488" fg:w="3259"/><text x="7.9243%" y="1023.50">Ta..</text></g><g><title>[[heap]] (22 samples, 0.02%)</title><rect x="10.6236%" y="997" width="0.0199%" height="15" fill="rgb(220,106,47)" fg:x="11750" fg:w="22"/><text x="10.8736%" y="1007.50"></text></g><g><title>[anon] (29 samples, 0.03%)</title><rect x="10.6435%" y="997" width="0.0262%" height="15" fill="rgb(210,196,33)" fg:x="11772" fg:w="29"/><text x="10.8935%" y="1007.50"></text></g><g><title>[unknown] (34 samples, 0.03%)</title><rect x="10.6697%" y="997" width="0.0307%" height="15" fill="rgb(229,154,42)" fg:x="11801" fg:w="34"/><text x="10.9197%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="10.7086%" y="533" width="0.0172%" height="15" fill="rgb(228,114,26)" fg:x="11844" fg:w="19"/><text x="10.9586%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="10.7086%" y="629" width="0.0253%" height="15" fill="rgb(208,144,1)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (28 samples, 0.03%)</title><rect x="10.7086%" y="613" width="0.0253%" height="15" fill="rgb(239,112,37)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="10.7086%" y="597" width="0.0253%" height="15" fill="rgb(210,96,50)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (28 samples, 0.03%)</title><rect x="10.7086%" y="581" width="0.0253%" height="15" fill="rgb(222,178,2)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="10.7086%" y="565" width="0.0253%" height="15" fill="rgb(226,74,18)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="10.7086%" y="549" width="0.0253%" height="15" fill="rgb(225,67,54)" fg:x="11844" fg:w="28"/><text x="10.9586%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="10.7339%" y="565" width="0.0154%" height="15" fill="rgb(251,92,32)" fg:x="11872" fg:w="17"/><text x="10.9839%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (22 samples, 0.02%)</title><rect x="10.7899%" y="373" width="0.0199%" height="15" fill="rgb(228,149,22)" fg:x="11934" fg:w="22"/><text x="11.0399%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (22 samples, 0.02%)</title><rect x="10.7899%" y="357" width="0.0199%" height="15" fill="rgb(243,54,13)" fg:x="11934" fg:w="22"/><text x="11.0399%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (21 samples, 0.02%)</title><rect x="10.7908%" y="341" width="0.0190%" height="15" fill="rgb(243,180,28)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (21 samples, 0.02%)</title><rect x="10.7908%" y="325" width="0.0190%" height="15" fill="rgb(208,167,24)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (21 samples, 0.02%)</title><rect x="10.7908%" y="309" width="0.0190%" height="15" fill="rgb(245,73,45)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (21 samples, 0.02%)</title><rect x="10.7908%" y="293" width="0.0190%" height="15" fill="rgb(237,203,48)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (21 samples, 0.02%)</title><rect x="10.7908%" y="277" width="0.0190%" height="15" fill="rgb(211,197,16)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (21 samples, 0.02%)</title><rect x="10.7908%" y="261" width="0.0190%" height="15" fill="rgb(243,99,51)" fg:x="11935" fg:w="21"/><text x="11.0408%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.02%)</title><rect x="10.7918%" y="245" width="0.0181%" height="15" fill="rgb(215,123,29)" fg:x="11936" fg:w="20"/><text x="11.0418%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.02%)</title><rect x="10.7936%" y="229" width="0.0163%" height="15" fill="rgb(239,186,37)" fg:x="11938" fg:w="18"/><text x="11.0436%" y="239.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (63 samples, 0.06%)</title><rect x="10.7710%" y="421" width="0.0570%" height="15" fill="rgb(252,136,39)" fg:x="11913" fg:w="63"/><text x="11.0210%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (62 samples, 0.06%)</title><rect x="10.7719%" y="405" width="0.0561%" height="15" fill="rgb(223,213,32)" fg:x="11914" fg:w="62"/><text x="11.0219%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (62 samples, 0.06%)</title><rect x="10.7719%" y="389" width="0.0561%" height="15" fill="rgb(233,115,5)" fg:x="11914" fg:w="62"/><text x="11.0219%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (20 samples, 0.02%)</title><rect x="10.8098%" y="373" width="0.0181%" height="15" fill="rgb(207,226,44)" fg:x="11956" fg:w="20"/><text x="11.0598%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,631 samples, 1.47%)</title><rect x="10.8361%" y="421" width="1.4746%" height="15" fill="rgb(208,126,0)" fg:x="11985" fg:w="1631"/><text x="11.0861%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,631 samples, 1.47%)</title><rect x="10.8361%" y="405" width="1.4746%" height="15" fill="rgb(244,66,21)" fg:x="11985" fg:w="1631"/><text x="11.0861%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,631 samples, 1.47%)</title><rect x="10.8361%" y="389" width="1.4746%" height="15" fill="rgb(222,97,12)" fg:x="11985" fg:w="1631"/><text x="11.0861%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (748 samples, 0.68%)</title><rect x="12.3225%" y="373" width="0.6763%" height="15" fill="rgb(219,213,19)" fg:x="13629" fg:w="748"/><text x="12.5725%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (748 samples, 0.68%)</title><rect x="12.3225%" y="357" width="0.6763%" height="15" fill="rgb(252,169,30)" fg:x="13629" fg:w="748"/><text x="12.5725%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (17 samples, 0.02%)</title><rect x="13.0268%" y="341" width="0.0154%" height="15" fill="rgb(206,32,51)" fg:x="14408" fg:w="17"/><text x="13.2768%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (17 samples, 0.02%)</title><rect x="13.0268%" y="325" width="0.0154%" height="15" fill="rgb(250,172,42)" fg:x="14408" fg:w="17"/><text x="13.2768%" y="335.50"></text></g><g><title>__glx_Main (17 samples, 0.02%)</title><rect x="13.0268%" y="309" width="0.0154%" height="15" fill="rgb(209,34,43)" fg:x="14408" fg:w="17"/><text x="13.2768%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (16 samples, 0.01%)</title><rect x="13.0421%" y="341" width="0.0145%" height="15" fill="rgb(223,11,35)" fg:x="14425" fg:w="16"/><text x="13.2921%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (16 samples, 0.01%)</title><rect x="13.0421%" y="325" width="0.0145%" height="15" fill="rgb(251,219,26)" fg:x="14425" fg:w="16"/><text x="13.2921%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="13.0421%" y="309" width="0.0145%" height="15" fill="rgb(231,119,3)" fg:x="14425" fg:w="16"/><text x="13.2921%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (26 samples, 0.02%)</title><rect x="13.0647%" y="341" width="0.0235%" height="15" fill="rgb(216,97,11)" fg:x="14450" fg:w="26"/><text x="13.3147%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (24 samples, 0.02%)</title><rect x="13.0666%" y="325" width="0.0217%" height="15" fill="rgb(223,59,9)" fg:x="14452" fg:w="24"/><text x="13.3166%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (89 samples, 0.08%)</title><rect x="13.0114%" y="373" width="0.0805%" height="15" fill="rgb(233,93,31)" fg:x="14391" fg:w="89"/><text x="13.2614%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (75 samples, 0.07%)</title><rect x="13.0241%" y="357" width="0.0678%" height="15" fill="rgb(239,81,33)" fg:x="14405" fg:w="75"/><text x="13.2741%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,600 samples, 2.35%)</title><rect x="10.7538%" y="533" width="2.3507%" height="15" fill="rgb(213,120,34)" fg:x="11894" fg:w="2600"/><text x="11.0038%" y="543.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,600 samples, 2.35%)</title><rect x="10.7538%" y="517" width="2.3507%" height="15" fill="rgb(243,49,53)" fg:x="11894" fg:w="2600"/><text x="11.0038%" y="527.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,600 samples, 2.35%)</title><rect x="10.7538%" y="501" width="2.3507%" height="15" fill="rgb(247,216,33)" fg:x="11894" fg:w="2600"/><text x="11.0038%" y="511.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,600 samples, 2.35%)</title><rect x="10.7538%" y="485" width="2.3507%" height="15" fill="rgb(226,26,14)" fg:x="11894" fg:w="2600"/><text x="11.0038%" y="495.50">c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,600 samples, 2.35%)</title><rect x="10.7538%" y="469" width="2.3507%" height="15" fill="rgb(215,49,53)" fg:x="11894" fg:w="2600"/><text x="11.0038%" y="479.50">s..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,591 samples, 2.34%)</title><rect x="10.7619%" y="453" width="2.3426%" height="15" fill="rgb(245,162,40)" fg:x="11903" fg:w="2591"/><text x="11.0119%" y="463.50">b..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,581 samples, 2.33%)</title><rect x="10.7710%" y="437" width="2.3336%" height="15" fill="rgb(229,68,17)" fg:x="11913" fg:w="2581"/><text x="11.0210%" y="447.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (873 samples, 0.79%)</title><rect x="12.3152%" y="421" width="0.7893%" height="15" fill="rgb(213,182,10)" fg:x="13621" fg:w="873"/><text x="12.5652%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (871 samples, 0.79%)</title><rect x="12.3170%" y="405" width="0.7875%" height="15" fill="rgb(245,125,30)" fg:x="13623" fg:w="871"/><text x="12.5670%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (871 samples, 0.79%)</title><rect x="12.3170%" y="389" width="0.7875%" height="15" fill="rgb(232,202,2)" fg:x="13623" fg:w="871"/><text x="12.5670%" y="399.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (25 samples, 0.02%)</title><rect x="13.1063%" y="469" width="0.0226%" height="15" fill="rgb(237,140,51)" fg:x="14496" fg:w="25"/><text x="13.3563%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (20 samples, 0.02%)</title><rect x="13.1109%" y="453" width="0.0181%" height="15" fill="rgb(236,157,25)" fg:x="14501" fg:w="20"/><text x="13.3609%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (40 samples, 0.04%)</title><rect x="13.1289%" y="437" width="0.0362%" height="15" fill="rgb(219,209,0)" fg:x="14521" fg:w="40"/><text x="13.3789%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.02%)</title><rect x="13.1452%" y="421" width="0.0199%" height="15" fill="rgb(240,116,54)" fg:x="14539" fg:w="22"/><text x="13.3952%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="13.1452%" y="405" width="0.0199%" height="15" fill="rgb(216,10,36)" fg:x="14539" fg:w="22"/><text x="13.3952%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="13.1470%" y="389" width="0.0181%" height="15" fill="rgb(222,72,44)" fg:x="14541" fg:w="20"/><text x="13.3970%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (26 samples, 0.02%)</title><rect x="13.1651%" y="437" width="0.0235%" height="15" fill="rgb(232,159,9)" fg:x="14561" fg:w="26"/><text x="13.4151%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (26 samples, 0.02%)</title><rect x="13.1651%" y="421" width="0.0235%" height="15" fill="rgb(210,39,32)" fg:x="14561" fg:w="26"/><text x="13.4151%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (20 samples, 0.02%)</title><rect x="13.1705%" y="405" width="0.0181%" height="15" fill="rgb(216,194,45)" fg:x="14567" fg:w="20"/><text x="13.4205%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (20 samples, 0.02%)</title><rect x="13.1705%" y="389" width="0.0181%" height="15" fill="rgb(218,18,35)" fg:x="14567" fg:w="20"/><text x="13.4205%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (20 samples, 0.02%)</title><rect x="13.1705%" y="373" width="0.0181%" height="15" fill="rgb(207,83,51)" fg:x="14567" fg:w="20"/><text x="13.4205%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (67 samples, 0.06%)</title><rect x="13.1289%" y="453" width="0.0606%" height="15" fill="rgb(225,63,43)" fg:x="14521" fg:w="67"/><text x="13.3789%" y="463.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (72 samples, 0.07%)</title><rect x="13.1289%" y="469" width="0.0651%" height="15" fill="rgb(207,57,36)" fg:x="14521" fg:w="72"/><text x="13.3789%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (100 samples, 0.09%)</title><rect x="13.1045%" y="533" width="0.0904%" height="15" fill="rgb(216,99,33)" fg:x="14494" fg:w="100"/><text x="13.3545%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (98 samples, 0.09%)</title><rect x="13.1063%" y="517" width="0.0886%" height="15" fill="rgb(225,42,16)" fg:x="14496" fg:w="98"/><text x="13.3563%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (98 samples, 0.09%)</title><rect x="13.1063%" y="501" width="0.0886%" height="15" fill="rgb(220,201,45)" fg:x="14496" fg:w="98"/><text x="13.3563%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (98 samples, 0.09%)</title><rect x="13.1063%" y="485" width="0.0886%" height="15" fill="rgb(225,33,4)" fg:x="14496" fg:w="98"/><text x="13.3563%" y="495.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (20 samples, 0.02%)</title><rect x="13.2031%" y="389" width="0.0181%" height="15" fill="rgb(224,33,50)" fg:x="14603" fg:w="20"/><text x="13.4531%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (17 samples, 0.02%)</title><rect x="13.2058%" y="373" width="0.0154%" height="15" fill="rgb(246,198,51)" fg:x="14606" fg:w="17"/><text x="13.4558%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (15 samples, 0.01%)</title><rect x="13.2076%" y="357" width="0.0136%" height="15" fill="rgb(205,22,4)" fg:x="14608" fg:w="15"/><text x="13.4576%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (15 samples, 0.01%)</title><rect x="13.2076%" y="341" width="0.0136%" height="15" fill="rgb(206,3,8)" fg:x="14608" fg:w="15"/><text x="13.4576%" y="351.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (27 samples, 0.02%)</title><rect x="13.1977%" y="453" width="0.0244%" height="15" fill="rgb(251,23,15)" fg:x="14597" fg:w="27"/><text x="13.4477%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (27 samples, 0.02%)</title><rect x="13.1977%" y="437" width="0.0244%" height="15" fill="rgb(252,88,28)" fg:x="14597" fg:w="27"/><text x="13.4477%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (21 samples, 0.02%)</title><rect x="13.2031%" y="421" width="0.0190%" height="15" fill="rgb(212,127,14)" fg:x="14603" fg:w="21"/><text x="13.4531%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (21 samples, 0.02%)</title><rect x="13.2031%" y="405" width="0.0190%" height="15" fill="rgb(247,145,37)" fg:x="14603" fg:w="21"/><text x="13.4531%" y="415.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (36 samples, 0.03%)</title><rect x="13.1977%" y="469" width="0.0325%" height="15" fill="rgb(209,117,53)" fg:x="14597" fg:w="36"/><text x="13.4477%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (43 samples, 0.04%)</title><rect x="13.1949%" y="533" width="0.0389%" height="15" fill="rgb(212,90,42)" fg:x="14594" fg:w="43"/><text x="13.4449%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (43 samples, 0.04%)</title><rect x="13.1949%" y="517" width="0.0389%" height="15" fill="rgb(218,164,37)" fg:x="14594" fg:w="43"/><text x="13.4449%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 0.04%)</title><rect x="13.1949%" y="501" width="0.0389%" height="15" fill="rgb(246,65,34)" fg:x="14594" fg:w="43"/><text x="13.4449%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.04%)</title><rect x="13.1949%" y="485" width="0.0389%" height="15" fill="rgb(231,100,33)" fg:x="14594" fg:w="43"/><text x="13.4449%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="13.2456%" y="421" width="0.0118%" height="15" fill="rgb(228,126,14)" fg:x="14650" fg:w="13"/><text x="13.4956%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="13.2456%" y="405" width="0.0118%" height="15" fill="rgb(215,173,21)" fg:x="14650" fg:w="13"/><text x="13.4956%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (17 samples, 0.02%)</title><rect x="13.2691%" y="325" width="0.0154%" height="15" fill="rgb(210,6,40)" fg:x="14676" fg:w="17"/><text x="13.5191%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="13.2691%" y="309" width="0.0154%" height="15" fill="rgb(212,48,18)" fg:x="14676" fg:w="17"/><text x="13.5191%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="13.2691%" y="293" width="0.0154%" height="15" fill="rgb(230,214,11)" fg:x="14676" fg:w="17"/><text x="13.5191%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (33 samples, 0.03%)</title><rect x="13.2573%" y="389" width="0.0298%" height="15" fill="rgb(254,105,39)" fg:x="14663" fg:w="33"/><text x="13.5073%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (31 samples, 0.03%)</title><rect x="13.2591%" y="373" width="0.0280%" height="15" fill="rgb(245,158,5)" fg:x="14665" fg:w="31"/><text x="13.5091%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (23 samples, 0.02%)</title><rect x="13.2664%" y="357" width="0.0208%" height="15" fill="rgb(249,208,11)" fg:x="14673" fg:w="23"/><text x="13.5164%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (23 samples, 0.02%)</title><rect x="13.2664%" y="341" width="0.0208%" height="15" fill="rgb(210,39,28)" fg:x="14673" fg:w="23"/><text x="13.5164%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (34 samples, 0.03%)</title><rect x="13.2573%" y="421" width="0.0307%" height="15" fill="rgb(211,56,53)" fg:x="14663" fg:w="34"/><text x="13.5073%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (34 samples, 0.03%)</title><rect x="13.2573%" y="405" width="0.0307%" height="15" fill="rgb(226,201,30)" fg:x="14663" fg:w="34"/><text x="13.5073%" y="415.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (54 samples, 0.05%)</title><rect x="13.2456%" y="453" width="0.0488%" height="15" fill="rgb(239,101,34)" fg:x="14650" fg:w="54"/><text x="13.4956%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (54 samples, 0.05%)</title><rect x="13.2456%" y="437" width="0.0488%" height="15" fill="rgb(226,209,5)" fg:x="14650" fg:w="54"/><text x="13.4956%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (68 samples, 0.06%)</title><rect x="13.2338%" y="533" width="0.0615%" height="15" fill="rgb(250,105,47)" fg:x="14637" fg:w="68"/><text x="13.4838%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (68 samples, 0.06%)</title><rect x="13.2338%" y="517" width="0.0615%" height="15" fill="rgb(230,72,3)" fg:x="14637" fg:w="68"/><text x="13.4838%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (68 samples, 0.06%)</title><rect x="13.2338%" y="501" width="0.0615%" height="15" fill="rgb(232,218,39)" fg:x="14637" fg:w="68"/><text x="13.4838%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (68 samples, 0.06%)</title><rect x="13.2338%" y="485" width="0.0615%" height="15" fill="rgb(248,166,6)" fg:x="14637" fg:w="68"/><text x="13.4838%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (68 samples, 0.06%)</title><rect x="13.2338%" y="469" width="0.0615%" height="15" fill="rgb(247,89,20)" fg:x="14637" fg:w="68"/><text x="13.4838%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,819 samples, 2.55%)</title><rect x="10.7538%" y="549" width="2.5488%" height="15" fill="rgb(248,130,54)" fg:x="11894" fg:w="2819"/><text x="11.0038%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,842 samples, 2.57%)</title><rect x="10.7339%" y="581" width="2.5696%" height="15" fill="rgb(234,196,4)" fg:x="11872" fg:w="2842"/><text x="10.9839%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,825 samples, 2.55%)</title><rect x="10.7493%" y="565" width="2.5542%" height="15" fill="rgb(250,143,31)" fg:x="11889" fg:w="2825"/><text x="10.9993%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,843 samples, 2.57%)</title><rect x="10.7339%" y="613" width="2.5705%" height="15" fill="rgb(211,110,34)" fg:x="11872" fg:w="2843"/><text x="10.9839%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,843 samples, 2.57%)</title><rect x="10.7339%" y="597" width="2.5705%" height="15" fill="rgb(215,124,48)" fg:x="11872" fg:w="2843"/><text x="10.9839%" y="607.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,845 samples, 2.57%)</title><rect x="10.7339%" y="629" width="2.5723%" height="15" fill="rgb(216,46,13)" fg:x="11872" fg:w="2845"/><text x="10.9839%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,883 samples, 2.61%)</title><rect x="10.7013%" y="709" width="2.6066%" height="15" fill="rgb(205,184,25)" fg:x="11836" fg:w="2883"/><text x="10.9513%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,883 samples, 2.61%)</title><rect x="10.7013%" y="693" width="2.6066%" height="15" fill="rgb(228,1,10)" fg:x="11836" fg:w="2883"/><text x="10.9513%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,882 samples, 2.61%)</title><rect x="10.7022%" y="677" width="2.6057%" height="15" fill="rgb(213,116,27)" fg:x="11837" fg:w="2882"/><text x="10.9522%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,875 samples, 2.60%)</title><rect x="10.7086%" y="661" width="2.5994%" height="15" fill="rgb(241,95,50)" fg:x="11844" fg:w="2875"/><text x="10.9586%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,875 samples, 2.60%)</title><rect x="10.7086%" y="645" width="2.5994%" height="15" fill="rgb(238,48,32)" fg:x="11844" fg:w="2875"/><text x="10.9586%" y="655.50">as..</text></g><g><title>std::sys::unix::futex::futex_wait (53 samples, 0.05%)</title><rect x="13.3107%" y="613" width="0.0479%" height="15" fill="rgb(235,113,49)" fg:x="14722" fg:w="53"/><text x="13.5607%" y="623.50"></text></g><g><title>syscall (47 samples, 0.04%)</title><rect x="13.3161%" y="597" width="0.0425%" height="15" fill="rgb(205,127,43)" fg:x="14728" fg:w="47"/><text x="13.5661%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (56 samples, 0.05%)</title><rect x="13.3107%" y="645" width="0.0506%" height="15" fill="rgb(250,162,2)" fg:x="14722" fg:w="56"/><text x="13.5607%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (56 samples, 0.05%)</title><rect x="13.3107%" y="629" width="0.0506%" height="15" fill="rgb(220,13,41)" fg:x="14722" fg:w="56"/><text x="13.5607%" y="639.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2,944 samples, 2.66%)</title><rect x="10.7004%" y="725" width="2.6618%" height="15" fill="rgb(249,221,25)" fg:x="11835" fg:w="2944"/><text x="10.9504%" y="735.50">fu..</text></g><g><title>parking::Parker::park (60 samples, 0.05%)</title><rect x="13.3080%" y="709" width="0.0542%" height="15" fill="rgb(215,208,19)" fg:x="14719" fg:w="60"/><text x="13.5580%" y="719.50"></text></g><g><title>parking::Inner::park (60 samples, 0.05%)</title><rect x="13.3080%" y="693" width="0.0542%" height="15" fill="rgb(236,175,2)" fg:x="14719" fg:w="60"/><text x="13.5580%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (60 samples, 0.05%)</title><rect x="13.3080%" y="677" width="0.0542%" height="15" fill="rgb(241,52,2)" fg:x="14719" fg:w="60"/><text x="13.5580%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (57 samples, 0.05%)</title><rect x="13.3107%" y="661" width="0.0515%" height="15" fill="rgb(248,140,14)" fg:x="14722" fg:w="57"/><text x="13.5607%" y="671.50"></text></g><g><title>__GI___clone (2,945 samples, 2.66%)</title><rect x="10.7004%" y="997" width="2.6627%" height="15" fill="rgb(253,22,42)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="1007.50">__..</text></g><g><title>start_thread (2,945 samples, 2.66%)</title><rect x="10.7004%" y="981" width="2.6627%" height="15" fill="rgb(234,61,47)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,945 samples, 2.66%)</title><rect x="10.7004%" y="965" width="2.6627%" height="15" fill="rgb(208,226,15)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,945 samples, 2.66%)</title><rect x="10.7004%" y="949" width="2.6627%" height="15" fill="rgb(217,221,4)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,945 samples, 2.66%)</title><rect x="10.7004%" y="933" width="2.6627%" height="15" fill="rgb(212,174,34)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,945 samples, 2.66%)</title><rect x="10.7004%" y="917" width="2.6627%" height="15" fill="rgb(253,83,4)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,945 samples, 2.66%)</title><rect x="10.7004%" y="901" width="2.6627%" height="15" fill="rgb(250,195,49)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (2,945 samples, 2.66%)</title><rect x="10.7004%" y="885" width="2.6627%" height="15" fill="rgb(241,192,25)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="895.50">st..</text></g><g><title>std::panicking::try (2,945 samples, 2.66%)</title><rect x="10.7004%" y="869" width="2.6627%" height="15" fill="rgb(208,124,10)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (2,945 samples, 2.66%)</title><rect x="10.7004%" y="853" width="2.6627%" height="15" fill="rgb(222,33,0)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,945 samples, 2.66%)</title><rect x="10.7004%" y="837" width="2.6627%" height="15" fill="rgb(234,209,28)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,945 samples, 2.66%)</title><rect x="10.7004%" y="821" width="2.6627%" height="15" fill="rgb(224,11,23)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,945 samples, 2.66%)</title><rect x="10.7004%" y="805" width="2.6627%" height="15" fill="rgb(232,99,1)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,945 samples, 2.66%)</title><rect x="10.7004%" y="789" width="2.6627%" height="15" fill="rgb(237,95,45)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (2,945 samples, 2.66%)</title><rect x="10.7004%" y="773" width="2.6627%" height="15" fill="rgb(208,109,11)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,945 samples, 2.66%)</title><rect x="10.7004%" y="757" width="2.6627%" height="15" fill="rgb(216,190,48)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,945 samples, 2.66%)</title><rect x="10.7004%" y="741" width="2.6627%" height="15" fill="rgb(251,171,36)" fg:x="11835" fg:w="2945"/><text x="10.9504%" y="751.50">st..</text></g><g><title>TaskPool_(4) (3,035 samples, 2.74%)</title><rect x="10.6209%" y="1013" width="2.7440%" height="15" fill="rgb(230,62,22)" fg:x="11747" fg:w="3035"/><text x="10.8709%" y="1023.50">Ta..</text></g><g><title>[[heap]] (27 samples, 0.02%)</title><rect x="13.3667%" y="997" width="0.0244%" height="15" fill="rgb(225,114,35)" fg:x="14784" fg:w="27"/><text x="13.6167%" y="1007.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="13.3966%" y="981" width="0.0108%" height="15" fill="rgb(215,118,42)" fg:x="14817" fg:w="12"/><text x="13.6466%" y="991.50"></text></g><g><title>[anon] (42 samples, 0.04%)</title><rect x="13.3911%" y="997" width="0.0380%" height="15" fill="rgb(243,119,21)" fg:x="14811" fg:w="42"/><text x="13.6411%" y="1007.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="13.4291%" y="997" width="0.0217%" height="15" fill="rgb(252,177,53)" fg:x="14853" fg:w="24"/><text x="13.6791%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="13.4589%" y="533" width="0.0163%" height="15" fill="rgb(237,209,29)" fg:x="14886" fg:w="18"/><text x="13.7089%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="13.4571%" y="629" width="0.0262%" height="15" fill="rgb(212,65,23)" fg:x="14884" fg:w="29"/><text x="13.7071%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (29 samples, 0.03%)</title><rect x="13.4571%" y="613" width="0.0262%" height="15" fill="rgb(230,222,46)" fg:x="14884" fg:w="29"/><text x="13.7071%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="13.4580%" y="597" width="0.0253%" height="15" fill="rgb(215,135,32)" fg:x="14885" fg:w="28"/><text x="13.7080%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (27 samples, 0.02%)</title><rect x="13.4589%" y="581" width="0.0244%" height="15" fill="rgb(246,101,22)" fg:x="14886" fg:w="27"/><text x="13.7089%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="13.4589%" y="565" width="0.0244%" height="15" fill="rgb(206,107,13)" fg:x="14886" fg:w="27"/><text x="13.7089%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27 samples, 0.02%)</title><rect x="13.4589%" y="549" width="0.0244%" height="15" fill="rgb(250,100,44)" fg:x="14886" fg:w="27"/><text x="13.7089%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (24 samples, 0.02%)</title><rect x="13.5240%" y="373" width="0.0217%" height="15" fill="rgb(231,147,38)" fg:x="14958" fg:w="24"/><text x="13.7740%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (24 samples, 0.02%)</title><rect x="13.5240%" y="357" width="0.0217%" height="15" fill="rgb(229,8,40)" fg:x="14958" fg:w="24"/><text x="13.7740%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (24 samples, 0.02%)</title><rect x="13.5240%" y="341" width="0.0217%" height="15" fill="rgb(221,135,30)" fg:x="14958" fg:w="24"/><text x="13.7740%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (24 samples, 0.02%)</title><rect x="13.5240%" y="325" width="0.0217%" height="15" fill="rgb(249,193,18)" fg:x="14958" fg:w="24"/><text x="13.7740%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (23 samples, 0.02%)</title><rect x="13.5249%" y="309" width="0.0208%" height="15" fill="rgb(209,133,39)" fg:x="14959" fg:w="23"/><text x="13.7749%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (23 samples, 0.02%)</title><rect x="13.5249%" y="293" width="0.0208%" height="15" fill="rgb(232,100,14)" fg:x="14959" fg:w="23"/><text x="13.7749%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (23 samples, 0.02%)</title><rect x="13.5249%" y="277" width="0.0208%" height="15" fill="rgb(224,185,1)" fg:x="14959" fg:w="23"/><text x="13.7749%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (23 samples, 0.02%)</title><rect x="13.5249%" y="261" width="0.0208%" height="15" fill="rgb(223,139,8)" fg:x="14959" fg:w="23"/><text x="13.7749%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.02%)</title><rect x="13.5249%" y="245" width="0.0208%" height="15" fill="rgb(232,213,38)" fg:x="14959" fg:w="23"/><text x="13.7749%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.02%)</title><rect x="13.5268%" y="229" width="0.0190%" height="15" fill="rgb(207,94,22)" fg:x="14961" fg:w="21"/><text x="13.7768%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (12 samples, 0.01%)</title><rect x="13.5466%" y="357" width="0.0108%" height="15" fill="rgb(219,183,54)" fg:x="14983" fg:w="12"/><text x="13.7966%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (12 samples, 0.01%)</title><rect x="13.5466%" y="341" width="0.0108%" height="15" fill="rgb(216,185,54)" fg:x="14983" fg:w="12"/><text x="13.7966%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="13.5466%" y="325" width="0.0108%" height="15" fill="rgb(254,217,39)" fg:x="14983" fg:w="12"/><text x="13.7966%" y="335.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (57 samples, 0.05%)</title><rect x="13.5123%" y="421" width="0.0515%" height="15" fill="rgb(240,178,23)" fg:x="14945" fg:w="57"/><text x="13.7623%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (57 samples, 0.05%)</title><rect x="13.5123%" y="405" width="0.0515%" height="15" fill="rgb(218,11,47)" fg:x="14945" fg:w="57"/><text x="13.7623%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (57 samples, 0.05%)</title><rect x="13.5123%" y="389" width="0.0515%" height="15" fill="rgb(218,51,51)" fg:x="14945" fg:w="57"/><text x="13.7623%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (20 samples, 0.02%)</title><rect x="13.5457%" y="373" width="0.0181%" height="15" fill="rgb(238,126,27)" fg:x="14982" fg:w="20"/><text x="13.7957%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,518 samples, 1.37%)</title><rect x="13.5711%" y="421" width="1.3725%" height="15" fill="rgb(249,202,22)" fg:x="15010" fg:w="1518"/><text x="13.8211%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,518 samples, 1.37%)</title><rect x="13.5711%" y="405" width="1.3725%" height="15" fill="rgb(254,195,49)" fg:x="15010" fg:w="1518"/><text x="13.8211%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,518 samples, 1.37%)</title><rect x="13.5711%" y="389" width="1.3725%" height="15" fill="rgb(208,123,14)" fg:x="15010" fg:w="1518"/><text x="13.8211%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (741 samples, 0.67%)</title><rect x="14.9544%" y="373" width="0.6700%" height="15" fill="rgb(224,200,8)" fg:x="16540" fg:w="741"/><text x="15.2044%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (741 samples, 0.67%)</title><rect x="14.9544%" y="357" width="0.6700%" height="15" fill="rgb(217,61,36)" fg:x="16540" fg:w="741"/><text x="15.2044%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (15 samples, 0.01%)</title><rect x="15.6533%" y="341" width="0.0136%" height="15" fill="rgb(206,35,45)" fg:x="17313" fg:w="15"/><text x="15.9033%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (15 samples, 0.01%)</title><rect x="15.6533%" y="325" width="0.0136%" height="15" fill="rgb(217,65,33)" fg:x="17313" fg:w="15"/><text x="15.9033%" y="335.50"></text></g><g><title>__glx_Main (15 samples, 0.01%)</title><rect x="15.6533%" y="309" width="0.0136%" height="15" fill="rgb(222,158,48)" fg:x="17313" fg:w="15"/><text x="15.9033%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (18 samples, 0.02%)</title><rect x="15.6668%" y="341" width="0.0163%" height="15" fill="rgb(254,2,54)" fg:x="17328" fg:w="18"/><text x="15.9168%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (17 samples, 0.02%)</title><rect x="15.6677%" y="325" width="0.0154%" height="15" fill="rgb(250,143,38)" fg:x="17329" fg:w="17"/><text x="15.9177%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="15.6677%" y="309" width="0.0154%" height="15" fill="rgb(248,25,0)" fg:x="17329" fg:w="17"/><text x="15.9177%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (20 samples, 0.02%)</title><rect x="15.6885%" y="341" width="0.0181%" height="15" fill="rgb(206,152,27)" fg:x="17352" fg:w="20"/><text x="15.9385%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (18 samples, 0.02%)</title><rect x="15.6904%" y="325" width="0.0163%" height="15" fill="rgb(240,77,30)" fg:x="17354" fg:w="18"/><text x="15.9404%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (74 samples, 0.07%)</title><rect x="15.6406%" y="373" width="0.0669%" height="15" fill="rgb(231,5,3)" fg:x="17299" fg:w="74"/><text x="15.8906%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (64 samples, 0.06%)</title><rect x="15.6497%" y="357" width="0.0579%" height="15" fill="rgb(207,226,32)" fg:x="17309" fg:w="64"/><text x="15.8997%" y="367.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (856 samples, 0.77%)</title><rect x="14.9535%" y="389" width="0.7739%" height="15" fill="rgb(222,207,47)" fg:x="16539" fg:w="856"/><text x="15.2035%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,466 samples, 2.23%)</title><rect x="13.4987%" y="533" width="2.2296%" height="15" fill="rgb(229,115,45)" fg:x="14930" fg:w="2466"/><text x="13.7487%" y="543.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,466 samples, 2.23%)</title><rect x="13.4987%" y="517" width="2.2296%" height="15" fill="rgb(224,191,6)" fg:x="14930" fg:w="2466"/><text x="13.7487%" y="527.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,466 samples, 2.23%)</title><rect x="13.4987%" y="501" width="2.2296%" height="15" fill="rgb(230,227,24)" fg:x="14930" fg:w="2466"/><text x="13.7487%" y="511.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,466 samples, 2.23%)</title><rect x="13.4987%" y="485" width="2.2296%" height="15" fill="rgb(228,80,19)" fg:x="14930" fg:w="2466"/><text x="13.7487%" y="495.50">c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,466 samples, 2.23%)</title><rect x="13.4987%" y="469" width="2.2296%" height="15" fill="rgb(247,229,0)" fg:x="14930" fg:w="2466"/><text x="13.7487%" y="479.50">s..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,462 samples, 2.23%)</title><rect x="13.5023%" y="453" width="2.2260%" height="15" fill="rgb(237,194,15)" fg:x="14934" fg:w="2462"/><text x="13.7523%" y="463.50">b..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,452 samples, 2.22%)</title><rect x="13.5114%" y="437" width="2.2169%" height="15" fill="rgb(219,203,20)" fg:x="14944" fg:w="2452"/><text x="13.7614%" y="447.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (859 samples, 0.78%)</title><rect x="14.9517%" y="421" width="0.7767%" height="15" fill="rgb(234,128,8)" fg:x="16537" fg:w="859"/><text x="15.2017%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (858 samples, 0.78%)</title><rect x="14.9526%" y="405" width="0.7757%" height="15" fill="rgb(248,202,8)" fg:x="16538" fg:w="858"/><text x="15.2026%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (12 samples, 0.01%)</title><rect x="15.7328%" y="437" width="0.0108%" height="15" fill="rgb(206,104,37)" fg:x="17401" fg:w="12"/><text x="15.9828%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (12 samples, 0.01%)</title><rect x="15.7328%" y="421" width="0.0108%" height="15" fill="rgb(223,8,27)" fg:x="17401" fg:w="12"/><text x="15.9828%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (23 samples, 0.02%)</title><rect x="15.7292%" y="469" width="0.0208%" height="15" fill="rgb(216,217,28)" fg:x="17397" fg:w="23"/><text x="15.9792%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (19 samples, 0.02%)</title><rect x="15.7328%" y="453" width="0.0172%" height="15" fill="rgb(249,199,1)" fg:x="17401" fg:w="19"/><text x="15.9828%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (38 samples, 0.03%)</title><rect x="15.7509%" y="437" width="0.0344%" height="15" fill="rgb(240,85,17)" fg:x="17421" fg:w="38"/><text x="16.0009%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.02%)</title><rect x="15.7645%" y="421" width="0.0208%" height="15" fill="rgb(206,108,45)" fg:x="17436" fg:w="23"/><text x="16.0145%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="15.7645%" y="405" width="0.0208%" height="15" fill="rgb(245,210,41)" fg:x="17436" fg:w="23"/><text x="16.0145%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="15.7645%" y="389" width="0.0208%" height="15" fill="rgb(206,13,37)" fg:x="17436" fg:w="23"/><text x="16.0145%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (17 samples, 0.02%)</title><rect x="15.7943%" y="389" width="0.0154%" height="15" fill="rgb(250,61,18)" fg:x="17469" fg:w="17"/><text x="16.0443%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (17 samples, 0.02%)</title><rect x="15.7943%" y="373" width="0.0154%" height="15" fill="rgb(235,172,48)" fg:x="17469" fg:w="17"/><text x="16.0443%" y="383.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (28 samples, 0.03%)</title><rect x="15.7853%" y="437" width="0.0253%" height="15" fill="rgb(249,201,17)" fg:x="17459" fg:w="28"/><text x="16.0353%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (26 samples, 0.02%)</title><rect x="15.7871%" y="421" width="0.0235%" height="15" fill="rgb(219,208,6)" fg:x="17461" fg:w="26"/><text x="16.0371%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (18 samples, 0.02%)</title><rect x="15.7943%" y="405" width="0.0163%" height="15" fill="rgb(248,31,23)" fg:x="17469" fg:w="18"/><text x="16.0443%" y="415.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (68 samples, 0.06%)</title><rect x="15.7500%" y="453" width="0.0615%" height="15" fill="rgb(245,15,42)" fg:x="17420" fg:w="68"/><text x="16.0000%" y="463.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (71 samples, 0.06%)</title><rect x="15.7500%" y="469" width="0.0642%" height="15" fill="rgb(222,217,39)" fg:x="17420" fg:w="71"/><text x="16.0000%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (96 samples, 0.09%)</title><rect x="15.7283%" y="533" width="0.0868%" height="15" fill="rgb(210,219,27)" fg:x="17396" fg:w="96"/><text x="15.9783%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (96 samples, 0.09%)</title><rect x="15.7283%" y="517" width="0.0868%" height="15" fill="rgb(252,166,36)" fg:x="17396" fg:w="96"/><text x="15.9783%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (96 samples, 0.09%)</title><rect x="15.7283%" y="501" width="0.0868%" height="15" fill="rgb(245,132,34)" fg:x="17396" fg:w="96"/><text x="15.9783%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (96 samples, 0.09%)</title><rect x="15.7283%" y="485" width="0.0868%" height="15" fill="rgb(236,54,3)" fg:x="17396" fg:w="96"/><text x="15.9783%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.01%)</title><rect x="15.8323%" y="325" width="0.0145%" height="15" fill="rgb(241,173,43)" fg:x="17511" fg:w="16"/><text x="16.0823%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="15.8323%" y="309" width="0.0145%" height="15" fill="rgb(215,190,9)" fg:x="17511" fg:w="16"/><text x="16.0823%" y="319.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (28 samples, 0.03%)</title><rect x="15.8242%" y="389" width="0.0253%" height="15" fill="rgb(242,101,16)" fg:x="17502" fg:w="28"/><text x="16.0742%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (28 samples, 0.03%)</title><rect x="15.8242%" y="373" width="0.0253%" height="15" fill="rgb(223,190,21)" fg:x="17502" fg:w="28"/><text x="16.0742%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (23 samples, 0.02%)</title><rect x="15.8287%" y="357" width="0.0208%" height="15" fill="rgb(215,228,25)" fg:x="17507" fg:w="23"/><text x="16.0787%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (23 samples, 0.02%)</title><rect x="15.8287%" y="341" width="0.0208%" height="15" fill="rgb(225,36,22)" fg:x="17507" fg:w="23"/><text x="16.0787%" y="351.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (34 samples, 0.03%)</title><rect x="15.8196%" y="453" width="0.0307%" height="15" fill="rgb(251,106,46)" fg:x="17497" fg:w="34"/><text x="16.0696%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (34 samples, 0.03%)</title><rect x="15.8196%" y="437" width="0.0307%" height="15" fill="rgb(208,90,1)" fg:x="17497" fg:w="34"/><text x="16.0696%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (29 samples, 0.03%)</title><rect x="15.8242%" y="421" width="0.0262%" height="15" fill="rgb(243,10,4)" fg:x="17502" fg:w="29"/><text x="16.0742%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (29 samples, 0.03%)</title><rect x="15.8242%" y="405" width="0.0262%" height="15" fill="rgb(212,137,27)" fg:x="17502" fg:w="29"/><text x="16.0742%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="15.8504%" y="389" width="0.0108%" height="15" fill="rgb(231,220,49)" fg:x="17531" fg:w="12"/><text x="16.1004%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.01%)</title><rect x="15.8504%" y="373" width="0.0108%" height="15" fill="rgb(237,96,20)" fg:x="17531" fg:w="12"/><text x="16.1004%" y="383.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (47 samples, 0.04%)</title><rect x="15.8196%" y="469" width="0.0425%" height="15" fill="rgb(239,229,30)" fg:x="17497" fg:w="47"/><text x="16.0696%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="15.8504%" y="453" width="0.0118%" height="15" fill="rgb(219,65,33)" fg:x="17531" fg:w="13"/><text x="16.1004%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="15.8504%" y="437" width="0.0118%" height="15" fill="rgb(243,134,7)" fg:x="17531" fg:w="13"/><text x="16.1004%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="15.8504%" y="421" width="0.0118%" height="15" fill="rgb(216,177,54)" fg:x="17531" fg:w="13"/><text x="16.1004%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="15.8504%" y="405" width="0.0118%" height="15" fill="rgb(211,160,20)" fg:x="17531" fg:w="13"/><text x="16.1004%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (62 samples, 0.06%)</title><rect x="15.8151%" y="533" width="0.0561%" height="15" fill="rgb(239,85,39)" fg:x="17492" fg:w="62"/><text x="16.0651%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (61 samples, 0.06%)</title><rect x="15.8160%" y="517" width="0.0552%" height="15" fill="rgb(232,125,22)" fg:x="17493" fg:w="61"/><text x="16.0660%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (61 samples, 0.06%)</title><rect x="15.8160%" y="501" width="0.0552%" height="15" fill="rgb(244,57,34)" fg:x="17493" fg:w="61"/><text x="16.0660%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (61 samples, 0.06%)</title><rect x="15.8160%" y="485" width="0.0552%" height="15" fill="rgb(214,203,32)" fg:x="17493" fg:w="61"/><text x="16.0660%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (15 samples, 0.01%)</title><rect x="15.8784%" y="453" width="0.0136%" height="15" fill="rgb(207,58,43)" fg:x="17562" fg:w="15"/><text x="16.1284%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (14 samples, 0.01%)</title><rect x="15.8793%" y="437" width="0.0127%" height="15" fill="rgb(215,193,15)" fg:x="17563" fg:w="14"/><text x="16.1293%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="15.8793%" y="421" width="0.0127%" height="15" fill="rgb(232,15,44)" fg:x="17563" fg:w="14"/><text x="16.1293%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.01%)</title><rect x="15.9055%" y="325" width="0.0136%" height="15" fill="rgb(212,3,48)" fg:x="17592" fg:w="15"/><text x="16.1555%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="15.9055%" y="309" width="0.0136%" height="15" fill="rgb(218,128,7)" fg:x="17592" fg:w="15"/><text x="16.1555%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="15.9055%" y="293" width="0.0136%" height="15" fill="rgb(226,216,39)" fg:x="17592" fg:w="15"/><text x="16.1555%" y="303.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (27 samples, 0.02%)</title><rect x="15.8956%" y="421" width="0.0244%" height="15" fill="rgb(243,47,51)" fg:x="17581" fg:w="27"/><text x="16.1456%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (27 samples, 0.02%)</title><rect x="15.8956%" y="405" width="0.0244%" height="15" fill="rgb(241,183,40)" fg:x="17581" fg:w="27"/><text x="16.1456%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (26 samples, 0.02%)</title><rect x="15.8965%" y="389" width="0.0235%" height="15" fill="rgb(231,217,32)" fg:x="17582" fg:w="26"/><text x="16.1465%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (25 samples, 0.02%)</title><rect x="15.8974%" y="373" width="0.0226%" height="15" fill="rgb(229,61,38)" fg:x="17583" fg:w="25"/><text x="16.1474%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (18 samples, 0.02%)</title><rect x="15.9037%" y="357" width="0.0163%" height="15" fill="rgb(225,210,5)" fg:x="17590" fg:w="18"/><text x="16.1537%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (18 samples, 0.02%)</title><rect x="15.9037%" y="341" width="0.0163%" height="15" fill="rgb(231,79,45)" fg:x="17590" fg:w="18"/><text x="16.1537%" y="351.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (70 samples, 0.06%)</title><rect x="15.8712%" y="533" width="0.0633%" height="15" fill="rgb(224,100,7)" fg:x="17554" fg:w="70"/><text x="16.1212%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (70 samples, 0.06%)</title><rect x="15.8712%" y="517" width="0.0633%" height="15" fill="rgb(241,198,18)" fg:x="17554" fg:w="70"/><text x="16.1212%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (70 samples, 0.06%)</title><rect x="15.8712%" y="501" width="0.0633%" height="15" fill="rgb(252,97,53)" fg:x="17554" fg:w="70"/><text x="16.1212%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (70 samples, 0.06%)</title><rect x="15.8712%" y="485" width="0.0633%" height="15" fill="rgb(220,88,7)" fg:x="17554" fg:w="70"/><text x="16.1212%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (70 samples, 0.06%)</title><rect x="15.8712%" y="469" width="0.0633%" height="15" fill="rgb(213,176,14)" fg:x="17554" fg:w="70"/><text x="16.1212%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (47 samples, 0.04%)</title><rect x="15.8920%" y="453" width="0.0425%" height="15" fill="rgb(246,73,7)" fg:x="17577" fg:w="47"/><text x="16.1420%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (47 samples, 0.04%)</title><rect x="15.8920%" y="437" width="0.0425%" height="15" fill="rgb(245,64,36)" fg:x="17577" fg:w="47"/><text x="16.1420%" y="447.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::reserve_buffer (16 samples, 0.01%)</title><rect x="15.9200%" y="421" width="0.0145%" height="15" fill="rgb(245,80,10)" fg:x="17608" fg:w="16"/><text x="16.1700%" y="431.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,699 samples, 2.44%)</title><rect x="13.4978%" y="549" width="2.4403%" height="15" fill="rgb(232,107,50)" fg:x="14929" fg:w="2699"/><text x="13.7478%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,717 samples, 2.46%)</title><rect x="13.4843%" y="613" width="2.4565%" height="15" fill="rgb(253,3,0)" fg:x="14914" fg:w="2717"/><text x="13.7343%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,716 samples, 2.46%)</title><rect x="13.4852%" y="597" width="2.4556%" height="15" fill="rgb(212,99,53)" fg:x="14915" fg:w="2716"/><text x="13.7352%" y="607.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,715 samples, 2.45%)</title><rect x="13.4861%" y="581" width="2.4547%" height="15" fill="rgb(249,111,54)" fg:x="14916" fg:w="2715"/><text x="13.7361%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,707 samples, 2.45%)</title><rect x="13.4933%" y="565" width="2.4475%" height="15" fill="rgb(249,55,30)" fg:x="14924" fg:w="2707"/><text x="13.7433%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,757 samples, 2.49%)</title><rect x="13.4517%" y="709" width="2.4927%" height="15" fill="rgb(237,47,42)" fg:x="14878" fg:w="2757"/><text x="13.7017%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,757 samples, 2.49%)</title><rect x="13.4517%" y="693" width="2.4927%" height="15" fill="rgb(211,20,18)" fg:x="14878" fg:w="2757"/><text x="13.7017%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,756 samples, 2.49%)</title><rect x="13.4526%" y="677" width="2.4918%" height="15" fill="rgb(231,203,46)" fg:x="14879" fg:w="2756"/><text x="13.7026%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,752 samples, 2.49%)</title><rect x="13.4562%" y="661" width="2.4882%" height="15" fill="rgb(237,142,3)" fg:x="14883" fg:w="2752"/><text x="13.7062%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,752 samples, 2.49%)</title><rect x="13.4562%" y="645" width="2.4882%" height="15" fill="rgb(241,107,1)" fg:x="14883" fg:w="2752"/><text x="13.7062%" y="655.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,722 samples, 2.46%)</title><rect x="13.4834%" y="629" width="2.4611%" height="15" fill="rgb(229,83,13)" fg:x="14913" fg:w="2722"/><text x="13.7334%" y="639.50">as..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,786 samples, 2.52%)</title><rect x="13.4508%" y="725" width="2.5189%" height="15" fill="rgb(241,91,40)" fg:x="14877" fg:w="2786"/><text x="13.7008%" y="735.50">fu..</text></g><g><title>parking::Parker::park (28 samples, 0.03%)</title><rect x="15.9444%" y="709" width="0.0253%" height="15" fill="rgb(225,3,45)" fg:x="17635" fg:w="28"/><text x="16.1944%" y="719.50"></text></g><g><title>parking::Inner::park (28 samples, 0.03%)</title><rect x="15.9444%" y="693" width="0.0253%" height="15" fill="rgb(244,223,14)" fg:x="17635" fg:w="28"/><text x="16.1944%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (27 samples, 0.02%)</title><rect x="15.9453%" y="677" width="0.0244%" height="15" fill="rgb(224,124,37)" fg:x="17636" fg:w="27"/><text x="16.1953%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (25 samples, 0.02%)</title><rect x="15.9471%" y="661" width="0.0226%" height="15" fill="rgb(251,171,30)" fg:x="17638" fg:w="25"/><text x="16.1971%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (25 samples, 0.02%)</title><rect x="15.9471%" y="645" width="0.0226%" height="15" fill="rgb(236,46,54)" fg:x="17638" fg:w="25"/><text x="16.1971%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (25 samples, 0.02%)</title><rect x="15.9471%" y="629" width="0.0226%" height="15" fill="rgb(245,213,5)" fg:x="17638" fg:w="25"/><text x="16.1971%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (24 samples, 0.02%)</title><rect x="15.9480%" y="613" width="0.0217%" height="15" fill="rgb(230,144,27)" fg:x="17639" fg:w="24"/><text x="16.1980%" y="623.50"></text></g><g><title>syscall (22 samples, 0.02%)</title><rect x="15.9498%" y="597" width="0.0199%" height="15" fill="rgb(220,86,6)" fg:x="17641" fg:w="22"/><text x="16.1998%" y="607.50"></text></g><g><title>__GI___clone (2,787 samples, 2.52%)</title><rect x="13.4508%" y="997" width="2.5198%" height="15" fill="rgb(240,20,13)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="1007.50">__..</text></g><g><title>start_thread (2,787 samples, 2.52%)</title><rect x="13.4508%" y="981" width="2.5198%" height="15" fill="rgb(217,89,34)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,787 samples, 2.52%)</title><rect x="13.4508%" y="965" width="2.5198%" height="15" fill="rgb(229,13,5)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,787 samples, 2.52%)</title><rect x="13.4508%" y="949" width="2.5198%" height="15" fill="rgb(244,67,35)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,787 samples, 2.52%)</title><rect x="13.4508%" y="933" width="2.5198%" height="15" fill="rgb(221,40,2)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,787 samples, 2.52%)</title><rect x="13.4508%" y="917" width="2.5198%" height="15" fill="rgb(237,157,21)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,787 samples, 2.52%)</title><rect x="13.4508%" y="901" width="2.5198%" height="15" fill="rgb(222,94,11)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (2,787 samples, 2.52%)</title><rect x="13.4508%" y="885" width="2.5198%" height="15" fill="rgb(249,113,6)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="895.50">st..</text></g><g><title>std::panicking::try (2,787 samples, 2.52%)</title><rect x="13.4508%" y="869" width="2.5198%" height="15" fill="rgb(238,137,36)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (2,787 samples, 2.52%)</title><rect x="13.4508%" y="853" width="2.5198%" height="15" fill="rgb(210,102,26)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,787 samples, 2.52%)</title><rect x="13.4508%" y="837" width="2.5198%" height="15" fill="rgb(218,30,30)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,787 samples, 2.52%)</title><rect x="13.4508%" y="821" width="2.5198%" height="15" fill="rgb(214,67,26)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,787 samples, 2.52%)</title><rect x="13.4508%" y="805" width="2.5198%" height="15" fill="rgb(251,9,53)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,787 samples, 2.52%)</title><rect x="13.4508%" y="789" width="2.5198%" height="15" fill="rgb(228,204,25)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (2,787 samples, 2.52%)</title><rect x="13.4508%" y="773" width="2.5198%" height="15" fill="rgb(207,153,8)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,787 samples, 2.52%)</title><rect x="13.4508%" y="757" width="2.5198%" height="15" fill="rgb(242,9,16)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,787 samples, 2.52%)</title><rect x="13.4508%" y="741" width="2.5198%" height="15" fill="rgb(217,211,10)" fg:x="14877" fg:w="2787"/><text x="13.7008%" y="751.50">st..</text></g><g><title>TaskPool_(5) (2,887 samples, 2.61%)</title><rect x="13.3649%" y="1013" width="2.6102%" height="15" fill="rgb(219,228,52)" fg:x="14782" fg:w="2887"/><text x="13.6149%" y="1023.50">Ta..</text></g><g><title>[[heap]] (17 samples, 0.02%)</title><rect x="15.9761%" y="997" width="0.0154%" height="15" fill="rgb(231,92,29)" fg:x="17670" fg:w="17"/><text x="16.2261%" y="1007.50"></text></g><g><title>[anon] (30 samples, 0.03%)</title><rect x="15.9914%" y="997" width="0.0271%" height="15" fill="rgb(232,8,23)" fg:x="17687" fg:w="30"/><text x="16.2414%" y="1007.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="16.0186%" y="997" width="0.0298%" height="15" fill="rgb(216,211,34)" fg:x="17717" fg:w="33"/><text x="16.2686%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (29 samples, 0.03%)</title><rect x="16.0520%" y="533" width="0.0262%" height="15" fill="rgb(236,151,0)" fg:x="17754" fg:w="29"/><text x="16.3020%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="16.0520%" y="629" width="0.0307%" height="15" fill="rgb(209,168,3)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (34 samples, 0.03%)</title><rect x="16.0520%" y="613" width="0.0307%" height="15" fill="rgb(208,129,28)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="16.0520%" y="597" width="0.0307%" height="15" fill="rgb(229,78,22)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (34 samples, 0.03%)</title><rect x="16.0520%" y="581" width="0.0307%" height="15" fill="rgb(228,187,13)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="16.0520%" y="565" width="0.0307%" height="15" fill="rgb(240,119,24)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="16.0520%" y="549" width="0.0307%" height="15" fill="rgb(209,194,42)" fg:x="17754" fg:w="34"/><text x="16.3020%" y="559.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="16.0855%" y="565" width="0.0108%" height="15" fill="rgb(247,200,46)" fg:x="17791" fg:w="12"/><text x="16.3355%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (27 samples, 0.02%)</title><rect x="16.1261%" y="373" width="0.0244%" height="15" fill="rgb(218,76,16)" fg:x="17836" fg:w="27"/><text x="16.3761%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (27 samples, 0.02%)</title><rect x="16.1261%" y="357" width="0.0244%" height="15" fill="rgb(225,21,48)" fg:x="17836" fg:w="27"/><text x="16.3761%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (27 samples, 0.02%)</title><rect x="16.1261%" y="341" width="0.0244%" height="15" fill="rgb(239,223,50)" fg:x="17836" fg:w="27"/><text x="16.3761%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (26 samples, 0.02%)</title><rect x="16.1270%" y="325" width="0.0235%" height="15" fill="rgb(244,45,21)" fg:x="17837" fg:w="26"/><text x="16.3770%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (25 samples, 0.02%)</title><rect x="16.1280%" y="309" width="0.0226%" height="15" fill="rgb(232,33,43)" fg:x="17838" fg:w="25"/><text x="16.3780%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (25 samples, 0.02%)</title><rect x="16.1280%" y="293" width="0.0226%" height="15" fill="rgb(209,8,3)" fg:x="17838" fg:w="25"/><text x="16.3780%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (25 samples, 0.02%)</title><rect x="16.1280%" y="277" width="0.0226%" height="15" fill="rgb(214,25,53)" fg:x="17838" fg:w="25"/><text x="16.3780%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (25 samples, 0.02%)</title><rect x="16.1280%" y="261" width="0.0226%" height="15" fill="rgb(254,186,54)" fg:x="17838" fg:w="25"/><text x="16.3780%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.02%)</title><rect x="16.1280%" y="245" width="0.0226%" height="15" fill="rgb(208,174,49)" fg:x="17838" fg:w="25"/><text x="16.3780%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.02%)</title><rect x="16.1334%" y="229" width="0.0172%" height="15" fill="rgb(233,191,51)" fg:x="17844" fg:w="19"/><text x="16.3834%" y="239.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (57 samples, 0.05%)</title><rect x="16.1153%" y="421" width="0.0515%" height="15" fill="rgb(222,134,10)" fg:x="17824" fg:w="57"/><text x="16.3653%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (57 samples, 0.05%)</title><rect x="16.1153%" y="405" width="0.0515%" height="15" fill="rgb(230,226,20)" fg:x="17824" fg:w="57"/><text x="16.3653%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (57 samples, 0.05%)</title><rect x="16.1153%" y="389" width="0.0515%" height="15" fill="rgb(251,111,25)" fg:x="17824" fg:w="57"/><text x="16.3653%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (18 samples, 0.02%)</title><rect x="16.1506%" y="373" width="0.0163%" height="15" fill="rgb(224,40,46)" fg:x="17863" fg:w="18"/><text x="16.4006%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,518 samples, 1.37%)</title><rect x="16.1741%" y="421" width="1.3725%" height="15" fill="rgb(236,108,47)" fg:x="17889" fg:w="1518"/><text x="16.4241%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,518 samples, 1.37%)</title><rect x="16.1741%" y="405" width="1.3725%" height="15" fill="rgb(234,93,0)" fg:x="17889" fg:w="1518"/><text x="16.4241%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,518 samples, 1.37%)</title><rect x="16.1741%" y="389" width="1.3725%" height="15" fill="rgb(224,213,32)" fg:x="17889" fg:w="1518"/><text x="16.4241%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (785 samples, 0.71%)</title><rect x="17.5601%" y="373" width="0.7097%" height="15" fill="rgb(251,11,48)" fg:x="19422" fg:w="785"/><text x="17.8101%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (785 samples, 0.71%)</title><rect x="17.5601%" y="357" width="0.7097%" height="15" fill="rgb(236,173,5)" fg:x="19422" fg:w="785"/><text x="17.8101%" y="367.50"></text></g><g><title>glXCreateGLXPbufferSGIX (12 samples, 0.01%)</title><rect x="18.2943%" y="293" width="0.0108%" height="15" fill="rgb(230,95,12)" fg:x="20234" fg:w="12"/><text x="18.5443%" y="303.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (24 samples, 0.02%)</title><rect x="18.2934%" y="341" width="0.0217%" height="15" fill="rgb(232,209,1)" fg:x="20233" fg:w="24"/><text x="18.5434%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (24 samples, 0.02%)</title><rect x="18.2934%" y="325" width="0.0217%" height="15" fill="rgb(232,6,1)" fg:x="20233" fg:w="24"/><text x="18.5434%" y="335.50"></text></g><g><title>__glx_Main (24 samples, 0.02%)</title><rect x="18.2934%" y="309" width="0.0217%" height="15" fill="rgb(210,224,50)" fg:x="20233" fg:w="24"/><text x="18.5434%" y="319.50"></text></g><g><title>_nv011glcore (12 samples, 0.01%)</title><rect x="18.3187%" y="293" width="0.0108%" height="15" fill="rgb(228,127,35)" fg:x="20261" fg:w="12"/><text x="18.5687%" y="303.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="18.3187%" y="277" width="0.0108%" height="15" fill="rgb(245,102,45)" fg:x="20261" fg:w="12"/><text x="18.5687%" y="287.50"></text></g><g><title>ash::device::Device::create_buffer (18 samples, 0.02%)</title><rect x="18.3151%" y="341" width="0.0163%" height="15" fill="rgb(214,1,49)" fg:x="20257" fg:w="18"/><text x="18.5651%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (17 samples, 0.02%)</title><rect x="18.3160%" y="325" width="0.0154%" height="15" fill="rgb(226,163,40)" fg:x="20258" fg:w="17"/><text x="18.5660%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="18.3169%" y="309" width="0.0145%" height="15" fill="rgb(239,212,28)" fg:x="20259" fg:w="16"/><text x="18.5669%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (19 samples, 0.02%)</title><rect x="18.3322%" y="341" width="0.0172%" height="15" fill="rgb(220,20,13)" fg:x="20276" fg:w="19"/><text x="18.5822%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (15 samples, 0.01%)</title><rect x="18.3358%" y="325" width="0.0136%" height="15" fill="rgb(210,164,35)" fg:x="20280" fg:w="15"/><text x="18.5858%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (72 samples, 0.07%)</title><rect x="18.2861%" y="373" width="0.0651%" height="15" fill="rgb(248,109,41)" fg:x="20225" fg:w="72"/><text x="18.5361%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (66 samples, 0.06%)</title><rect x="18.2915%" y="357" width="0.0597%" height="15" fill="rgb(238,23,50)" fg:x="20231" fg:w="66"/><text x="18.5415%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,512 samples, 2.27%)</title><rect x="16.1026%" y="533" width="2.2712%" height="15" fill="rgb(211,48,49)" fg:x="17810" fg:w="2512"/><text x="16.3526%" y="543.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,512 samples, 2.27%)</title><rect x="16.1026%" y="517" width="2.2712%" height="15" fill="rgb(223,36,21)" fg:x="17810" fg:w="2512"/><text x="16.3526%" y="527.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,512 samples, 2.27%)</title><rect x="16.1026%" y="501" width="2.2712%" height="15" fill="rgb(207,123,46)" fg:x="17810" fg:w="2512"/><text x="16.3526%" y="511.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,512 samples, 2.27%)</title><rect x="16.1026%" y="485" width="2.2712%" height="15" fill="rgb(240,218,32)" fg:x="17810" fg:w="2512"/><text x="16.3526%" y="495.50">c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,512 samples, 2.27%)</title><rect x="16.1026%" y="469" width="2.2712%" height="15" fill="rgb(252,5,43)" fg:x="17810" fg:w="2512"/><text x="16.3526%" y="479.50">s..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,508 samples, 2.27%)</title><rect x="16.1063%" y="453" width="2.2676%" height="15" fill="rgb(252,84,19)" fg:x="17814" fg:w="2508"/><text x="16.3563%" y="463.50">b..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,499 samples, 2.26%)</title><rect x="16.1144%" y="437" width="2.2594%" height="15" fill="rgb(243,152,39)" fg:x="17823" fg:w="2499"/><text x="16.3644%" y="447.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (905 samples, 0.82%)</title><rect x="17.5556%" y="421" width="0.8182%" height="15" fill="rgb(234,160,15)" fg:x="19417" fg:w="905"/><text x="17.8056%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (903 samples, 0.82%)</title><rect x="17.5574%" y="405" width="0.8164%" height="15" fill="rgb(237,34,20)" fg:x="19419" fg:w="903"/><text x="17.8074%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (903 samples, 0.82%)</title><rect x="17.5574%" y="389" width="0.8164%" height="15" fill="rgb(229,97,13)" fg:x="19419" fg:w="903"/><text x="17.8074%" y="399.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (19 samples, 0.02%)</title><rect x="18.3738%" y="469" width="0.0172%" height="15" fill="rgb(234,71,50)" fg:x="20322" fg:w="19"/><text x="18.6238%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (12 samples, 0.01%)</title><rect x="18.3802%" y="453" width="0.0108%" height="15" fill="rgb(253,155,4)" fg:x="20329" fg:w="12"/><text x="18.6302%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (31 samples, 0.03%)</title><rect x="18.3910%" y="437" width="0.0280%" height="15" fill="rgb(222,185,37)" fg:x="20341" fg:w="31"/><text x="18.6410%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.01%)</title><rect x="18.4046%" y="421" width="0.0145%" height="15" fill="rgb(251,177,13)" fg:x="20356" fg:w="16"/><text x="18.6546%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="18.4046%" y="405" width="0.0145%" height="15" fill="rgb(250,179,40)" fg:x="20356" fg:w="16"/><text x="18.6546%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="18.4046%" y="389" width="0.0145%" height="15" fill="rgb(242,44,2)" fg:x="20356" fg:w="16"/><text x="18.6546%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (21 samples, 0.02%)</title><rect x="18.4190%" y="437" width="0.0190%" height="15" fill="rgb(216,177,13)" fg:x="20372" fg:w="21"/><text x="18.6690%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (21 samples, 0.02%)</title><rect x="18.4190%" y="421" width="0.0190%" height="15" fill="rgb(216,106,43)" fg:x="20372" fg:w="21"/><text x="18.6690%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (13 samples, 0.01%)</title><rect x="18.4263%" y="405" width="0.0118%" height="15" fill="rgb(216,183,2)" fg:x="20380" fg:w="13"/><text x="18.6763%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (13 samples, 0.01%)</title><rect x="18.4263%" y="389" width="0.0118%" height="15" fill="rgb(249,75,3)" fg:x="20380" fg:w="13"/><text x="18.6763%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (54 samples, 0.05%)</title><rect x="18.3910%" y="453" width="0.0488%" height="15" fill="rgb(219,67,39)" fg:x="20341" fg:w="54"/><text x="18.6410%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (75 samples, 0.07%)</title><rect x="18.3738%" y="533" width="0.0678%" height="15" fill="rgb(253,228,2)" fg:x="20322" fg:w="75"/><text x="18.6238%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (75 samples, 0.07%)</title><rect x="18.3738%" y="517" width="0.0678%" height="15" fill="rgb(235,138,27)" fg:x="20322" fg:w="75"/><text x="18.6238%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (75 samples, 0.07%)</title><rect x="18.3738%" y="501" width="0.0678%" height="15" fill="rgb(236,97,51)" fg:x="20322" fg:w="75"/><text x="18.6238%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (75 samples, 0.07%)</title><rect x="18.3738%" y="485" width="0.0678%" height="15" fill="rgb(240,80,30)" fg:x="20322" fg:w="75"/><text x="18.6238%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (56 samples, 0.05%)</title><rect x="18.3910%" y="469" width="0.0506%" height="15" fill="rgb(230,178,19)" fg:x="20341" fg:w="56"/><text x="18.6410%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (17 samples, 0.02%)</title><rect x="18.4615%" y="325" width="0.0154%" height="15" fill="rgb(210,190,27)" fg:x="20419" fg:w="17"/><text x="18.7115%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="18.4615%" y="309" width="0.0154%" height="15" fill="rgb(222,107,31)" fg:x="20419" fg:w="17"/><text x="18.7115%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (15 samples, 0.01%)</title><rect x="18.4633%" y="293" width="0.0136%" height="15" fill="rgb(216,127,34)" fg:x="20421" fg:w="15"/><text x="18.7133%" y="303.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (39 samples, 0.04%)</title><rect x="18.4443%" y="453" width="0.0353%" height="15" fill="rgb(234,116,52)" fg:x="20400" fg:w="39"/><text x="18.6943%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (39 samples, 0.04%)</title><rect x="18.4443%" y="437" width="0.0353%" height="15" fill="rgb(222,124,15)" fg:x="20400" fg:w="39"/><text x="18.6943%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (35 samples, 0.03%)</title><rect x="18.4480%" y="421" width="0.0316%" height="15" fill="rgb(231,179,28)" fg:x="20404" fg:w="35"/><text x="18.6980%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (35 samples, 0.03%)</title><rect x="18.4480%" y="405" width="0.0316%" height="15" fill="rgb(226,93,45)" fg:x="20404" fg:w="35"/><text x="18.6980%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (35 samples, 0.03%)</title><rect x="18.4480%" y="389" width="0.0316%" height="15" fill="rgb(215,8,51)" fg:x="20404" fg:w="35"/><text x="18.6980%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (33 samples, 0.03%)</title><rect x="18.4498%" y="373" width="0.0298%" height="15" fill="rgb(223,106,5)" fg:x="20406" fg:w="33"/><text x="18.6998%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (28 samples, 0.03%)</title><rect x="18.4543%" y="357" width="0.0253%" height="15" fill="rgb(250,191,5)" fg:x="20411" fg:w="28"/><text x="18.7043%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (28 samples, 0.03%)</title><rect x="18.4543%" y="341" width="0.0253%" height="15" fill="rgb(242,132,44)" fg:x="20411" fg:w="28"/><text x="18.7043%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (43 samples, 0.04%)</title><rect x="18.4443%" y="469" width="0.0389%" height="15" fill="rgb(251,152,29)" fg:x="20400" fg:w="43"/><text x="18.6943%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (51 samples, 0.05%)</title><rect x="18.4416%" y="533" width="0.0461%" height="15" fill="rgb(218,179,5)" fg:x="20397" fg:w="51"/><text x="18.6916%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (51 samples, 0.05%)</title><rect x="18.4416%" y="517" width="0.0461%" height="15" fill="rgb(227,67,19)" fg:x="20397" fg:w="51"/><text x="18.6916%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (51 samples, 0.05%)</title><rect x="18.4416%" y="501" width="0.0461%" height="15" fill="rgb(233,119,31)" fg:x="20397" fg:w="51"/><text x="18.6916%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (51 samples, 0.05%)</title><rect x="18.4416%" y="485" width="0.0461%" height="15" fill="rgb(241,120,22)" fg:x="20397" fg:w="51"/><text x="18.6916%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (13 samples, 0.01%)</title><rect x="18.4905%" y="453" width="0.0118%" height="15" fill="rgb(224,102,30)" fg:x="20451" fg:w="13"/><text x="18.7405%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (13 samples, 0.01%)</title><rect x="18.4905%" y="437" width="0.0118%" height="15" fill="rgb(210,164,37)" fg:x="20451" fg:w="13"/><text x="18.7405%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="18.4905%" y="421" width="0.0118%" height="15" fill="rgb(226,191,16)" fg:x="20451" fg:w="13"/><text x="18.7405%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.01%)</title><rect x="18.5140%" y="325" width="0.0127%" height="15" fill="rgb(214,40,45)" fg:x="20477" fg:w="14"/><text x="18.7640%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="18.5140%" y="309" width="0.0127%" height="15" fill="rgb(244,29,26)" fg:x="20477" fg:w="14"/><text x="18.7640%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="18.5140%" y="293" width="0.0127%" height="15" fill="rgb(216,16,5)" fg:x="20477" fg:w="14"/><text x="18.7640%" y="303.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (26 samples, 0.02%)</title><rect x="18.5049%" y="389" width="0.0235%" height="15" fill="rgb(249,76,35)" fg:x="20467" fg:w="26"/><text x="18.7549%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (26 samples, 0.02%)</title><rect x="18.5049%" y="373" width="0.0235%" height="15" fill="rgb(207,11,44)" fg:x="20467" fg:w="26"/><text x="18.7549%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (16 samples, 0.01%)</title><rect x="18.5140%" y="357" width="0.0145%" height="15" fill="rgb(228,190,49)" fg:x="20477" fg:w="16"/><text x="18.7640%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (16 samples, 0.01%)</title><rect x="18.5140%" y="341" width="0.0145%" height="15" fill="rgb(214,173,12)" fg:x="20477" fg:w="16"/><text x="18.7640%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (28 samples, 0.03%)</title><rect x="18.5049%" y="421" width="0.0253%" height="15" fill="rgb(218,26,35)" fg:x="20467" fg:w="28"/><text x="18.7549%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (28 samples, 0.03%)</title><rect x="18.5049%" y="405" width="0.0253%" height="15" fill="rgb(220,200,19)" fg:x="20467" fg:w="28"/><text x="18.7549%" y="415.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (40 samples, 0.04%)</title><rect x="18.5022%" y="453" width="0.0362%" height="15" fill="rgb(239,95,49)" fg:x="20464" fg:w="40"/><text x="18.7522%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (40 samples, 0.04%)</title><rect x="18.5022%" y="437" width="0.0362%" height="15" fill="rgb(235,85,53)" fg:x="20464" fg:w="40"/><text x="18.7522%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (57 samples, 0.05%)</title><rect x="18.4877%" y="533" width="0.0515%" height="15" fill="rgb(233,133,31)" fg:x="20448" fg:w="57"/><text x="18.7377%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (57 samples, 0.05%)</title><rect x="18.4877%" y="517" width="0.0515%" height="15" fill="rgb(218,25,20)" fg:x="20448" fg:w="57"/><text x="18.7377%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57 samples, 0.05%)</title><rect x="18.4877%" y="501" width="0.0515%" height="15" fill="rgb(252,210,38)" fg:x="20448" fg:w="57"/><text x="18.7377%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (57 samples, 0.05%)</title><rect x="18.4877%" y="485" width="0.0515%" height="15" fill="rgb(242,134,21)" fg:x="20448" fg:w="57"/><text x="18.7377%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (57 samples, 0.05%)</title><rect x="18.4877%" y="469" width="0.0515%" height="15" fill="rgb(213,28,48)" fg:x="20448" fg:w="57"/><text x="18.7377%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,702 samples, 2.44%)</title><rect x="16.1026%" y="549" width="2.4430%" height="15" fill="rgb(250,196,2)" fg:x="17810" fg:w="2702"/><text x="16.3526%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,722 samples, 2.46%)</title><rect x="16.0855%" y="581" width="2.4611%" height="15" fill="rgb(227,5,17)" fg:x="17791" fg:w="2722"/><text x="16.3355%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,710 samples, 2.45%)</title><rect x="16.0963%" y="565" width="2.4502%" height="15" fill="rgb(221,226,24)" fg:x="17803" fg:w="2710"/><text x="16.3463%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,724 samples, 2.46%)</title><rect x="16.0846%" y="613" width="2.4629%" height="15" fill="rgb(211,5,48)" fg:x="17790" fg:w="2724"/><text x="16.3346%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,723 samples, 2.46%)</title><rect x="16.0855%" y="597" width="2.4620%" height="15" fill="rgb(219,150,6)" fg:x="17791" fg:w="2723"/><text x="16.3355%" y="607.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,727 samples, 2.47%)</title><rect x="16.0827%" y="629" width="2.4656%" height="15" fill="rgb(251,46,16)" fg:x="17788" fg:w="2727"/><text x="16.3327%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,764 samples, 2.50%)</title><rect x="16.0502%" y="709" width="2.4990%" height="15" fill="rgb(220,204,40)" fg:x="17752" fg:w="2764"/><text x="16.3002%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,764 samples, 2.50%)</title><rect x="16.0502%" y="693" width="2.4990%" height="15" fill="rgb(211,85,2)" fg:x="17752" fg:w="2764"/><text x="16.3002%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,763 samples, 2.50%)</title><rect x="16.0511%" y="677" width="2.4981%" height="15" fill="rgb(229,17,7)" fg:x="17753" fg:w="2763"/><text x="16.3011%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,762 samples, 2.50%)</title><rect x="16.0520%" y="661" width="2.4972%" height="15" fill="rgb(239,72,28)" fg:x="17754" fg:w="2762"/><text x="16.3020%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,762 samples, 2.50%)</title><rect x="16.0520%" y="645" width="2.4972%" height="15" fill="rgb(230,47,54)" fg:x="17754" fg:w="2762"/><text x="16.3020%" y="655.50">as..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,803 samples, 2.53%)</title><rect x="16.0484%" y="725" width="2.5343%" height="15" fill="rgb(214,50,8)" fg:x="17750" fg:w="2803"/><text x="16.2984%" y="735.50">fu..</text></g><g><title>parking::Parker::park (37 samples, 0.03%)</title><rect x="18.5492%" y="709" width="0.0335%" height="15" fill="rgb(216,198,43)" fg:x="20516" fg:w="37"/><text x="18.7992%" y="719.50"></text></g><g><title>parking::Inner::park (37 samples, 0.03%)</title><rect x="18.5492%" y="693" width="0.0335%" height="15" fill="rgb(234,20,35)" fg:x="20516" fg:w="37"/><text x="18.7992%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (36 samples, 0.03%)</title><rect x="18.5501%" y="677" width="0.0325%" height="15" fill="rgb(254,45,19)" fg:x="20517" fg:w="36"/><text x="18.8001%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (35 samples, 0.03%)</title><rect x="18.5510%" y="661" width="0.0316%" height="15" fill="rgb(219,14,44)" fg:x="20518" fg:w="35"/><text x="18.8010%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (35 samples, 0.03%)</title><rect x="18.5510%" y="645" width="0.0316%" height="15" fill="rgb(217,220,26)" fg:x="20518" fg:w="35"/><text x="18.8010%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (35 samples, 0.03%)</title><rect x="18.5510%" y="629" width="0.0316%" height="15" fill="rgb(213,158,28)" fg:x="20518" fg:w="35"/><text x="18.8010%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (34 samples, 0.03%)</title><rect x="18.5519%" y="613" width="0.0307%" height="15" fill="rgb(252,51,52)" fg:x="20519" fg:w="34"/><text x="18.8019%" y="623.50"></text></g><g><title>syscall (29 samples, 0.03%)</title><rect x="18.5565%" y="597" width="0.0262%" height="15" fill="rgb(246,89,16)" fg:x="20524" fg:w="29"/><text x="18.8065%" y="607.50"></text></g><g><title>__GI___clone (2,804 samples, 2.54%)</title><rect x="16.0484%" y="997" width="2.5352%" height="15" fill="rgb(216,158,49)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="1007.50">__..</text></g><g><title>start_thread (2,804 samples, 2.54%)</title><rect x="16.0484%" y="981" width="2.5352%" height="15" fill="rgb(236,107,19)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,804 samples, 2.54%)</title><rect x="16.0484%" y="965" width="2.5352%" height="15" fill="rgb(228,185,30)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,804 samples, 2.54%)</title><rect x="16.0484%" y="949" width="2.5352%" height="15" fill="rgb(246,134,8)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,804 samples, 2.54%)</title><rect x="16.0484%" y="933" width="2.5352%" height="15" fill="rgb(214,143,50)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,804 samples, 2.54%)</title><rect x="16.0484%" y="917" width="2.5352%" height="15" fill="rgb(228,75,8)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,804 samples, 2.54%)</title><rect x="16.0484%" y="901" width="2.5352%" height="15" fill="rgb(207,175,4)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (2,804 samples, 2.54%)</title><rect x="16.0484%" y="885" width="2.5352%" height="15" fill="rgb(205,108,24)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="895.50">st..</text></g><g><title>std::panicking::try (2,804 samples, 2.54%)</title><rect x="16.0484%" y="869" width="2.5352%" height="15" fill="rgb(244,120,49)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (2,804 samples, 2.54%)</title><rect x="16.0484%" y="853" width="2.5352%" height="15" fill="rgb(223,47,38)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,804 samples, 2.54%)</title><rect x="16.0484%" y="837" width="2.5352%" height="15" fill="rgb(229,179,11)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,804 samples, 2.54%)</title><rect x="16.0484%" y="821" width="2.5352%" height="15" fill="rgb(231,122,1)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,804 samples, 2.54%)</title><rect x="16.0484%" y="805" width="2.5352%" height="15" fill="rgb(245,119,9)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,804 samples, 2.54%)</title><rect x="16.0484%" y="789" width="2.5352%" height="15" fill="rgb(241,163,25)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (2,804 samples, 2.54%)</title><rect x="16.0484%" y="773" width="2.5352%" height="15" fill="rgb(217,214,3)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,804 samples, 2.54%)</title><rect x="16.0484%" y="757" width="2.5352%" height="15" fill="rgb(240,86,28)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,804 samples, 2.54%)</title><rect x="16.0484%" y="741" width="2.5352%" height="15" fill="rgb(215,47,9)" fg:x="17750" fg:w="2804"/><text x="16.2984%" y="751.50">st..</text></g><g><title>TaskPool_(6) (2,889 samples, 2.61%)</title><rect x="15.9752%" y="1013" width="2.6120%" height="15" fill="rgb(252,25,45)" fg:x="17669" fg:w="2889"/><text x="16.2252%" y="1023.50">Ta..</text></g><g><title>[[heap]] (21 samples, 0.02%)</title><rect x="18.5881%" y="997" width="0.0190%" height="15" fill="rgb(251,164,9)" fg:x="20559" fg:w="21"/><text x="18.8381%" y="1007.50"></text></g><g><title>[anon] (26 samples, 0.02%)</title><rect x="18.6071%" y="997" width="0.0235%" height="15" fill="rgb(233,194,0)" fg:x="20580" fg:w="26"/><text x="18.8571%" y="1007.50"></text></g><g><title>[unknown] (32 samples, 0.03%)</title><rect x="18.6306%" y="997" width="0.0289%" height="15" fill="rgb(249,111,24)" fg:x="20606" fg:w="32"/><text x="18.8806%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="18.6677%" y="533" width="0.0154%" height="15" fill="rgb(250,223,3)" fg:x="20647" fg:w="17"/><text x="18.9177%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="18.6668%" y="629" width="0.0217%" height="15" fill="rgb(236,178,37)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (24 samples, 0.02%)</title><rect x="18.6668%" y="613" width="0.0217%" height="15" fill="rgb(241,158,50)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="18.6668%" y="597" width="0.0217%" height="15" fill="rgb(213,121,41)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (24 samples, 0.02%)</title><rect x="18.6668%" y="581" width="0.0217%" height="15" fill="rgb(240,92,3)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="18.6668%" y="565" width="0.0217%" height="15" fill="rgb(205,123,3)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="18.6668%" y="549" width="0.0217%" height="15" fill="rgb(205,97,47)" fg:x="20646" fg:w="24"/><text x="18.9168%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (23 samples, 0.02%)</title><rect x="18.7228%" y="373" width="0.0208%" height="15" fill="rgb(247,152,14)" fg:x="20708" fg:w="23"/><text x="18.9728%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (23 samples, 0.02%)</title><rect x="18.7228%" y="357" width="0.0208%" height="15" fill="rgb(248,195,53)" fg:x="20708" fg:w="23"/><text x="18.9728%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (23 samples, 0.02%)</title><rect x="18.7228%" y="341" width="0.0208%" height="15" fill="rgb(226,201,16)" fg:x="20708" fg:w="23"/><text x="18.9728%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (22 samples, 0.02%)</title><rect x="18.7237%" y="325" width="0.0199%" height="15" fill="rgb(205,98,0)" fg:x="20709" fg:w="22"/><text x="18.9737%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (21 samples, 0.02%)</title><rect x="18.7246%" y="309" width="0.0190%" height="15" fill="rgb(214,191,48)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (21 samples, 0.02%)</title><rect x="18.7246%" y="293" width="0.0190%" height="15" fill="rgb(237,112,39)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (21 samples, 0.02%)</title><rect x="18.7246%" y="277" width="0.0190%" height="15" fill="rgb(247,203,27)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (21 samples, 0.02%)</title><rect x="18.7246%" y="261" width="0.0190%" height="15" fill="rgb(235,124,28)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.02%)</title><rect x="18.7246%" y="245" width="0.0190%" height="15" fill="rgb(208,207,46)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (21 samples, 0.02%)</title><rect x="18.7246%" y="229" width="0.0190%" height="15" fill="rgb(234,176,4)" fg:x="20710" fg:w="21"/><text x="18.9746%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (14 samples, 0.01%)</title><rect x="18.7436%" y="357" width="0.0127%" height="15" fill="rgb(230,133,28)" fg:x="20731" fg:w="14"/><text x="18.9936%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (14 samples, 0.01%)</title><rect x="18.7436%" y="341" width="0.0127%" height="15" fill="rgb(211,137,40)" fg:x="20731" fg:w="14"/><text x="18.9936%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="18.7436%" y="325" width="0.0127%" height="15" fill="rgb(254,35,13)" fg:x="20731" fg:w="14"/><text x="18.9936%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="18.7454%" y="309" width="0.0108%" height="15" fill="rgb(225,49,51)" fg:x="20733" fg:w="12"/><text x="18.9954%" y="319.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (45 samples, 0.04%)</title><rect x="18.7174%" y="421" width="0.0407%" height="15" fill="rgb(251,10,15)" fg:x="20702" fg:w="45"/><text x="18.9674%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (45 samples, 0.04%)</title><rect x="18.7174%" y="405" width="0.0407%" height="15" fill="rgb(228,207,15)" fg:x="20702" fg:w="45"/><text x="18.9674%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (45 samples, 0.04%)</title><rect x="18.7174%" y="389" width="0.0407%" height="15" fill="rgb(241,99,19)" fg:x="20702" fg:w="45"/><text x="18.9674%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (16 samples, 0.01%)</title><rect x="18.7436%" y="373" width="0.0145%" height="15" fill="rgb(207,104,49)" fg:x="20731" fg:w="16"/><text x="18.9936%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (14 samples, 0.01%)</title><rect x="18.7581%" y="421" width="0.0127%" height="15" fill="rgb(234,99,18)" fg:x="20747" fg:w="14"/><text x="19.0081%" y="431.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="18.7581%" y="405" width="0.0127%" height="15" fill="rgb(213,191,49)" fg:x="20747" fg:w="14"/><text x="19.0081%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 0.01%)</title><rect x="18.7590%" y="389" width="0.0118%" height="15" fill="rgb(210,226,19)" fg:x="20748" fg:w="13"/><text x="19.0090%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.01%)</title><rect x="18.7590%" y="373" width="0.0118%" height="15" fill="rgb(229,97,18)" fg:x="20748" fg:w="13"/><text x="19.0090%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (13 samples, 0.01%)</title><rect x="18.7590%" y="357" width="0.0118%" height="15" fill="rgb(211,167,15)" fg:x="20748" fg:w="13"/><text x="19.0090%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.01%)</title><rect x="18.7590%" y="341" width="0.0118%" height="15" fill="rgb(210,169,34)" fg:x="20748" fg:w="13"/><text x="19.0090%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,323 samples, 1.20%)</title><rect x="18.7707%" y="421" width="1.1962%" height="15" fill="rgb(241,121,31)" fg:x="20761" fg:w="1323"/><text x="19.0207%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,323 samples, 1.20%)</title><rect x="18.7707%" y="405" width="1.1962%" height="15" fill="rgb(232,40,11)" fg:x="20761" fg:w="1323"/><text x="19.0207%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,323 samples, 1.20%)</title><rect x="18.7707%" y="389" width="1.1962%" height="15" fill="rgb(205,86,26)" fg:x="20761" fg:w="1323"/><text x="19.0207%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (647 samples, 0.58%)</title><rect x="19.9778%" y="373" width="0.5850%" height="15" fill="rgb(231,126,28)" fg:x="22096" fg:w="647"/><text x="20.2278%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (647 samples, 0.58%)</title><rect x="19.9778%" y="357" width="0.5850%" height="15" fill="rgb(219,221,18)" fg:x="22096" fg:w="647"/><text x="20.2278%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (20 samples, 0.02%)</title><rect x="20.6016%" y="341" width="0.0181%" height="15" fill="rgb(211,40,0)" fg:x="22786" fg:w="20"/><text x="20.8516%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (20 samples, 0.02%)</title><rect x="20.6016%" y="325" width="0.0181%" height="15" fill="rgb(239,85,43)" fg:x="22786" fg:w="20"/><text x="20.8516%" y="335.50"></text></g><g><title>__glx_Main (20 samples, 0.02%)</title><rect x="20.6016%" y="309" width="0.0181%" height="15" fill="rgb(231,55,21)" fg:x="22786" fg:w="20"/><text x="20.8516%" y="319.50"></text></g><g><title>ash::device::Device::create_buffer (17 samples, 0.02%)</title><rect x="20.6197%" y="341" width="0.0154%" height="15" fill="rgb(225,184,43)" fg:x="22806" fg:w="17"/><text x="20.8697%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (17 samples, 0.02%)</title><rect x="20.6197%" y="325" width="0.0154%" height="15" fill="rgb(251,158,41)" fg:x="22806" fg:w="17"/><text x="20.8697%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="20.6197%" y="309" width="0.0154%" height="15" fill="rgb(234,159,37)" fg:x="22806" fg:w="17"/><text x="20.8697%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (21 samples, 0.02%)</title><rect x="20.6396%" y="341" width="0.0190%" height="15" fill="rgb(216,204,22)" fg:x="22828" fg:w="21"/><text x="20.8896%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (21 samples, 0.02%)</title><rect x="20.6396%" y="325" width="0.0190%" height="15" fill="rgb(214,17,3)" fg:x="22828" fg:w="21"/><text x="20.8896%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (83 samples, 0.08%)</title><rect x="20.5862%" y="373" width="0.0750%" height="15" fill="rgb(212,111,17)" fg:x="22769" fg:w="83"/><text x="20.8362%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (71 samples, 0.06%)</title><rect x="20.5971%" y="357" width="0.0642%" height="15" fill="rgb(221,157,24)" fg:x="22781" fg:w="71"/><text x="20.8471%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,179 samples, 1.97%)</title><rect x="18.7020%" y="533" width="1.9701%" height="15" fill="rgb(252,16,13)" fg:x="20685" fg:w="2179"/><text x="18.9520%" y="543.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,179 samples, 1.97%)</title><rect x="18.7020%" y="517" width="1.9701%" height="15" fill="rgb(221,62,2)" fg:x="20685" fg:w="2179"/><text x="18.9520%" y="527.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,179 samples, 1.97%)</title><rect x="18.7020%" y="501" width="1.9701%" height="15" fill="rgb(247,87,22)" fg:x="20685" fg:w="2179"/><text x="18.9520%" y="511.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,179 samples, 1.97%)</title><rect x="18.7020%" y="485" width="1.9701%" height="15" fill="rgb(215,73,9)" fg:x="20685" fg:w="2179"/><text x="18.9520%" y="495.50">c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,179 samples, 1.97%)</title><rect x="18.7020%" y="469" width="1.9701%" height="15" fill="rgb(207,175,33)" fg:x="20685" fg:w="2179"/><text x="18.9520%" y="479.50">s..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,174 samples, 1.97%)</title><rect x="18.7065%" y="453" width="1.9656%" height="15" fill="rgb(243,129,54)" fg:x="20690" fg:w="2174"/><text x="18.9565%" y="463.50">b..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,164 samples, 1.96%)</title><rect x="18.7156%" y="437" width="1.9565%" height="15" fill="rgb(227,119,45)" fg:x="20700" fg:w="2164"/><text x="18.9656%" y="447.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (772 samples, 0.70%)</title><rect x="19.9741%" y="421" width="0.6980%" height="15" fill="rgb(205,109,36)" fg:x="22092" fg:w="772"/><text x="20.2241%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (772 samples, 0.70%)</title><rect x="19.9741%" y="405" width="0.6980%" height="15" fill="rgb(205,6,39)" fg:x="22092" fg:w="772"/><text x="20.2241%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (772 samples, 0.70%)</title><rect x="19.9741%" y="389" width="0.6980%" height="15" fill="rgb(221,32,16)" fg:x="22092" fg:w="772"/><text x="20.2241%" y="399.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (21 samples, 0.02%)</title><rect x="20.6730%" y="469" width="0.0190%" height="15" fill="rgb(228,144,50)" fg:x="22865" fg:w="21"/><text x="20.9230%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (18 samples, 0.02%)</title><rect x="20.6758%" y="453" width="0.0163%" height="15" fill="rgb(229,201,53)" fg:x="22868" fg:w="18"/><text x="20.9258%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (27 samples, 0.02%)</title><rect x="20.6929%" y="437" width="0.0244%" height="15" fill="rgb(249,153,27)" fg:x="22887" fg:w="27"/><text x="20.9429%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.01%)</title><rect x="20.7038%" y="421" width="0.0136%" height="15" fill="rgb(227,106,25)" fg:x="22899" fg:w="15"/><text x="20.9538%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="20.7038%" y="405" width="0.0136%" height="15" fill="rgb(230,65,29)" fg:x="22899" fg:w="15"/><text x="20.9538%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="20.7047%" y="389" width="0.0127%" height="15" fill="rgb(221,57,46)" fg:x="22900" fg:w="14"/><text x="20.9547%" y="399.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (19 samples, 0.02%)</title><rect x="20.7173%" y="437" width="0.0172%" height="15" fill="rgb(229,161,17)" fg:x="22914" fg:w="19"/><text x="20.9673%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (18 samples, 0.02%)</title><rect x="20.7182%" y="421" width="0.0163%" height="15" fill="rgb(222,213,11)" fg:x="22915" fg:w="18"/><text x="20.9682%" y="431.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (48 samples, 0.04%)</title><rect x="20.6920%" y="453" width="0.0434%" height="15" fill="rgb(235,35,13)" fg:x="22886" fg:w="48"/><text x="20.9420%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (74 samples, 0.07%)</title><rect x="20.6721%" y="533" width="0.0669%" height="15" fill="rgb(233,158,34)" fg:x="22864" fg:w="74"/><text x="20.9221%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (74 samples, 0.07%)</title><rect x="20.6721%" y="517" width="0.0669%" height="15" fill="rgb(215,151,48)" fg:x="22864" fg:w="74"/><text x="20.9221%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (74 samples, 0.07%)</title><rect x="20.6721%" y="501" width="0.0669%" height="15" fill="rgb(229,84,14)" fg:x="22864" fg:w="74"/><text x="20.9221%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (74 samples, 0.07%)</title><rect x="20.6721%" y="485" width="0.0669%" height="15" fill="rgb(229,68,14)" fg:x="22864" fg:w="74"/><text x="20.9221%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (52 samples, 0.05%)</title><rect x="20.6920%" y="469" width="0.0470%" height="15" fill="rgb(243,106,26)" fg:x="22886" fg:w="52"/><text x="20.9420%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (24 samples, 0.02%)</title><rect x="20.7418%" y="453" width="0.0217%" height="15" fill="rgb(206,45,38)" fg:x="22941" fg:w="24"/><text x="20.9918%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (24 samples, 0.02%)</title><rect x="20.7418%" y="437" width="0.0217%" height="15" fill="rgb(226,6,15)" fg:x="22941" fg:w="24"/><text x="20.9918%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (22 samples, 0.02%)</title><rect x="20.7436%" y="421" width="0.0199%" height="15" fill="rgb(232,22,54)" fg:x="22943" fg:w="22"/><text x="20.9936%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (22 samples, 0.02%)</title><rect x="20.7436%" y="405" width="0.0199%" height="15" fill="rgb(229,222,32)" fg:x="22943" fg:w="22"/><text x="20.9936%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (22 samples, 0.02%)</title><rect x="20.7436%" y="389" width="0.0199%" height="15" fill="rgb(228,62,29)" fg:x="22943" fg:w="22"/><text x="20.9936%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (19 samples, 0.02%)</title><rect x="20.7463%" y="373" width="0.0172%" height="15" fill="rgb(251,103,34)" fg:x="22946" fg:w="19"/><text x="20.9963%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (14 samples, 0.01%)</title><rect x="20.7508%" y="357" width="0.0127%" height="15" fill="rgb(233,12,30)" fg:x="22951" fg:w="14"/><text x="21.0008%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (14 samples, 0.01%)</title><rect x="20.7508%" y="341" width="0.0127%" height="15" fill="rgb(238,52,0)" fg:x="22951" fg:w="14"/><text x="21.0008%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (34 samples, 0.03%)</title><rect x="20.7418%" y="469" width="0.0307%" height="15" fill="rgb(223,98,5)" fg:x="22941" fg:w="34"/><text x="20.9918%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (40 samples, 0.04%)</title><rect x="20.7390%" y="533" width="0.0362%" height="15" fill="rgb(228,75,37)" fg:x="22938" fg:w="40"/><text x="20.9890%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (39 samples, 0.04%)</title><rect x="20.7399%" y="517" width="0.0353%" height="15" fill="rgb(205,115,49)" fg:x="22939" fg:w="39"/><text x="20.9899%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.04%)</title><rect x="20.7399%" y="501" width="0.0353%" height="15" fill="rgb(250,154,43)" fg:x="22939" fg:w="39"/><text x="20.9899%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 0.04%)</title><rect x="20.7399%" y="485" width="0.0353%" height="15" fill="rgb(226,43,29)" fg:x="22939" fg:w="39"/><text x="20.9899%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (15 samples, 0.01%)</title><rect x="20.7761%" y="453" width="0.0136%" height="15" fill="rgb(249,228,39)" fg:x="22979" fg:w="15"/><text x="21.0261%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (15 samples, 0.01%)</title><rect x="20.7761%" y="437" width="0.0136%" height="15" fill="rgb(216,79,43)" fg:x="22979" fg:w="15"/><text x="21.0261%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.01%)</title><rect x="20.7761%" y="421" width="0.0136%" height="15" fill="rgb(228,95,12)" fg:x="22979" fg:w="15"/><text x="21.0261%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (12 samples, 0.01%)</title><rect x="20.7897%" y="421" width="0.0108%" height="15" fill="rgb(249,221,15)" fg:x="22994" fg:w="12"/><text x="21.0397%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (12 samples, 0.01%)</title><rect x="20.7897%" y="405" width="0.0108%" height="15" fill="rgb(233,34,13)" fg:x="22994" fg:w="12"/><text x="21.0397%" y="415.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (23 samples, 0.02%)</title><rect x="20.8005%" y="421" width="0.0208%" height="15" fill="rgb(214,103,39)" fg:x="23006" fg:w="23"/><text x="21.0505%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (23 samples, 0.02%)</title><rect x="20.8005%" y="405" width="0.0208%" height="15" fill="rgb(251,126,39)" fg:x="23006" fg:w="23"/><text x="21.0505%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (22 samples, 0.02%)</title><rect x="20.8014%" y="389" width="0.0199%" height="15" fill="rgb(214,216,36)" fg:x="23007" fg:w="22"/><text x="21.0514%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (21 samples, 0.02%)</title><rect x="20.8023%" y="373" width="0.0190%" height="15" fill="rgb(220,221,8)" fg:x="23008" fg:w="21"/><text x="21.0523%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (55 samples, 0.05%)</title><rect x="20.7752%" y="533" width="0.0497%" height="15" fill="rgb(240,216,3)" fg:x="22978" fg:w="55"/><text x="21.0252%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (55 samples, 0.05%)</title><rect x="20.7752%" y="517" width="0.0497%" height="15" fill="rgb(232,218,17)" fg:x="22978" fg:w="55"/><text x="21.0252%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (55 samples, 0.05%)</title><rect x="20.7752%" y="501" width="0.0497%" height="15" fill="rgb(229,163,45)" fg:x="22978" fg:w="55"/><text x="21.0252%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (55 samples, 0.05%)</title><rect x="20.7752%" y="485" width="0.0497%" height="15" fill="rgb(231,110,42)" fg:x="22978" fg:w="55"/><text x="21.0252%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (55 samples, 0.05%)</title><rect x="20.7752%" y="469" width="0.0497%" height="15" fill="rgb(208,170,48)" fg:x="22978" fg:w="55"/><text x="21.0252%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (39 samples, 0.04%)</title><rect x="20.7897%" y="453" width="0.0353%" height="15" fill="rgb(239,116,25)" fg:x="22994" fg:w="39"/><text x="21.0397%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (39 samples, 0.04%)</title><rect x="20.7897%" y="437" width="0.0353%" height="15" fill="rgb(219,200,50)" fg:x="22994" fg:w="39"/><text x="21.0397%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,371 samples, 2.14%)</title><rect x="18.6885%" y="613" width="2.1437%" height="15" fill="rgb(245,200,0)" fg:x="20670" fg:w="2371"/><text x="18.9385%" y="623.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,371 samples, 2.14%)</title><rect x="18.6885%" y="597" width="2.1437%" height="15" fill="rgb(245,119,33)" fg:x="20670" fg:w="2371"/><text x="18.9385%" y="607.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,371 samples, 2.14%)</title><rect x="18.6885%" y="581" width="2.1437%" height="15" fill="rgb(231,125,12)" fg:x="20670" fg:w="2371"/><text x="18.9385%" y="591.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,360 samples, 2.13%)</title><rect x="18.6984%" y="565" width="2.1338%" height="15" fill="rgb(216,96,41)" fg:x="20681" fg:w="2360"/><text x="18.9484%" y="575.50">b..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,356 samples, 2.13%)</title><rect x="18.7020%" y="549" width="2.1301%" height="15" fill="rgb(248,43,45)" fg:x="20685" fg:w="2356"/><text x="18.9520%" y="559.50">&lt;..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,372 samples, 2.14%)</title><rect x="18.6885%" y="629" width="2.1446%" height="15" fill="rgb(217,222,7)" fg:x="20670" fg:w="2372"/><text x="18.9385%" y="639.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,405 samples, 2.17%)</title><rect x="18.6595%" y="709" width="2.1744%" height="15" fill="rgb(233,28,6)" fg:x="20638" fg:w="2405"/><text x="18.9095%" y="719.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,405 samples, 2.17%)</title><rect x="18.6595%" y="693" width="2.1744%" height="15" fill="rgb(231,218,15)" fg:x="20638" fg:w="2405"/><text x="18.9095%" y="703.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,404 samples, 2.17%)</title><rect x="18.6604%" y="677" width="2.1735%" height="15" fill="rgb(226,171,48)" fg:x="20639" fg:w="2404"/><text x="18.9104%" y="687.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,397 samples, 2.17%)</title><rect x="18.6668%" y="661" width="2.1672%" height="15" fill="rgb(235,201,9)" fg:x="20646" fg:w="2397"/><text x="18.9168%" y="671.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,397 samples, 2.17%)</title><rect x="18.6668%" y="645" width="2.1672%" height="15" fill="rgb(217,80,15)" fg:x="20646" fg:w="2397"/><text x="18.9168%" y="655.50">a..</text></g><g><title>std::sys::unix::futex::futex_wait (40 samples, 0.04%)</title><rect x="20.8376%" y="613" width="0.0362%" height="15" fill="rgb(219,152,8)" fg:x="23047" fg:w="40"/><text x="21.0876%" y="623.50"></text></g><g><title>syscall (34 samples, 0.03%)</title><rect x="20.8430%" y="597" width="0.0307%" height="15" fill="rgb(243,107,38)" fg:x="23053" fg:w="34"/><text x="21.0930%" y="607.50"></text></g><g><title>__GI___clone (2,450 samples, 2.22%)</title><rect x="18.6595%" y="997" width="2.2151%" height="15" fill="rgb(231,17,5)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="1007.50">_..</text></g><g><title>start_thread (2,450 samples, 2.22%)</title><rect x="18.6595%" y="981" width="2.2151%" height="15" fill="rgb(209,25,54)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="991.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,450 samples, 2.22%)</title><rect x="18.6595%" y="965" width="2.2151%" height="15" fill="rgb(219,0,2)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="975.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,450 samples, 2.22%)</title><rect x="18.6595%" y="949" width="2.2151%" height="15" fill="rgb(246,9,5)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="959.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,450 samples, 2.22%)</title><rect x="18.6595%" y="933" width="2.2151%" height="15" fill="rgb(226,159,4)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="943.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,450 samples, 2.22%)</title><rect x="18.6595%" y="917" width="2.2151%" height="15" fill="rgb(219,175,34)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="927.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,450 samples, 2.22%)</title><rect x="18.6595%" y="901" width="2.2151%" height="15" fill="rgb(236,10,46)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="911.50">s..</text></g><g><title>std::panic::catch_unwind (2,450 samples, 2.22%)</title><rect x="18.6595%" y="885" width="2.2151%" height="15" fill="rgb(240,211,16)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="895.50">s..</text></g><g><title>std::panicking::try (2,450 samples, 2.22%)</title><rect x="18.6595%" y="869" width="2.2151%" height="15" fill="rgb(205,3,43)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="879.50">s..</text></g><g><title>std::panicking::try::do_call (2,450 samples, 2.22%)</title><rect x="18.6595%" y="853" width="2.2151%" height="15" fill="rgb(245,7,22)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="863.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,450 samples, 2.22%)</title><rect x="18.6595%" y="837" width="2.2151%" height="15" fill="rgb(239,132,32)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="847.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,450 samples, 2.22%)</title><rect x="18.6595%" y="821" width="2.2151%" height="15" fill="rgb(228,202,34)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="831.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,450 samples, 2.22%)</title><rect x="18.6595%" y="805" width="2.2151%" height="15" fill="rgb(254,200,22)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="815.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,450 samples, 2.22%)</title><rect x="18.6595%" y="789" width="2.2151%" height="15" fill="rgb(219,10,39)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="799.50">b..</text></g><g><title>futures_lite::future::block_on (2,450 samples, 2.22%)</title><rect x="18.6595%" y="773" width="2.2151%" height="15" fill="rgb(226,210,39)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="783.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,450 samples, 2.22%)</title><rect x="18.6595%" y="757" width="2.2151%" height="15" fill="rgb(208,219,16)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="767.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,450 samples, 2.22%)</title><rect x="18.6595%" y="741" width="2.2151%" height="15" fill="rgb(216,158,51)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="751.50">s..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,450 samples, 2.22%)</title><rect x="18.6595%" y="725" width="2.2151%" height="15" fill="rgb(233,14,44)" fg:x="20638" fg:w="2450"/><text x="18.9095%" y="735.50">f..</text></g><g><title>parking::Parker::park (45 samples, 0.04%)</title><rect x="20.8340%" y="709" width="0.0407%" height="15" fill="rgb(237,97,39)" fg:x="23043" fg:w="45"/><text x="21.0840%" y="719.50"></text></g><g><title>parking::Inner::park (45 samples, 0.04%)</title><rect x="20.8340%" y="693" width="0.0407%" height="15" fill="rgb(218,198,43)" fg:x="23043" fg:w="45"/><text x="21.0840%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (43 samples, 0.04%)</title><rect x="20.8358%" y="677" width="0.0389%" height="15" fill="rgb(231,104,20)" fg:x="23045" fg:w="43"/><text x="21.0858%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (42 samples, 0.04%)</title><rect x="20.8367%" y="661" width="0.0380%" height="15" fill="rgb(254,36,13)" fg:x="23046" fg:w="42"/><text x="21.0867%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (42 samples, 0.04%)</title><rect x="20.8367%" y="645" width="0.0380%" height="15" fill="rgb(248,14,50)" fg:x="23046" fg:w="42"/><text x="21.0867%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (42 samples, 0.04%)</title><rect x="20.8367%" y="629" width="0.0380%" height="15" fill="rgb(217,107,29)" fg:x="23046" fg:w="42"/><text x="21.0867%" y="639.50"></text></g><g><title>TaskPool_(7) (2,533 samples, 2.29%)</title><rect x="18.5872%" y="1013" width="2.2902%" height="15" fill="rgb(251,169,33)" fg:x="20558" fg:w="2533"/><text x="18.8372%" y="1023.50">T..</text></g><g><title>[[heap]] (15 samples, 0.01%)</title><rect x="20.8774%" y="997" width="0.0136%" height="15" fill="rgb(217,108,32)" fg:x="23091" fg:w="15"/><text x="21.1274%" y="1007.50"></text></g><g><title>[anon] (28 samples, 0.03%)</title><rect x="20.8909%" y="997" width="0.0253%" height="15" fill="rgb(219,66,42)" fg:x="23106" fg:w="28"/><text x="21.1409%" y="1007.50"></text></g><g><title>[unknown] (40 samples, 0.04%)</title><rect x="20.9163%" y="997" width="0.0362%" height="15" fill="rgb(206,180,7)" fg:x="23134" fg:w="40"/><text x="21.1663%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="20.9660%" y="533" width="0.0118%" height="15" fill="rgb(208,226,31)" fg:x="23189" fg:w="13"/><text x="21.2160%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="20.9596%" y="629" width="0.0208%" height="15" fill="rgb(218,26,49)" fg:x="23182" fg:w="23"/><text x="21.2096%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (22 samples, 0.02%)</title><rect x="20.9606%" y="613" width="0.0199%" height="15" fill="rgb(233,197,48)" fg:x="23183" fg:w="22"/><text x="21.2106%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="20.9615%" y="597" width="0.0190%" height="15" fill="rgb(252,181,51)" fg:x="23184" fg:w="21"/><text x="21.2115%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (18 samples, 0.02%)</title><rect x="20.9642%" y="581" width="0.0163%" height="15" fill="rgb(253,90,19)" fg:x="23187" fg:w="18"/><text x="21.2142%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="20.9642%" y="565" width="0.0163%" height="15" fill="rgb(215,171,30)" fg:x="23187" fg:w="18"/><text x="21.2142%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="20.9642%" y="549" width="0.0163%" height="15" fill="rgb(214,222,9)" fg:x="23187" fg:w="18"/><text x="21.2142%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (17 samples, 0.02%)</title><rect x="21.0202%" y="373" width="0.0154%" height="15" fill="rgb(223,3,22)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (17 samples, 0.02%)</title><rect x="21.0202%" y="357" width="0.0154%" height="15" fill="rgb(225,196,46)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (17 samples, 0.02%)</title><rect x="21.0202%" y="341" width="0.0154%" height="15" fill="rgb(209,110,37)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (17 samples, 0.02%)</title><rect x="21.0202%" y="325" width="0.0154%" height="15" fill="rgb(249,89,12)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (17 samples, 0.02%)</title><rect x="21.0202%" y="309" width="0.0154%" height="15" fill="rgb(226,27,33)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (17 samples, 0.02%)</title><rect x="21.0202%" y="293" width="0.0154%" height="15" fill="rgb(213,82,22)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (17 samples, 0.02%)</title><rect x="21.0202%" y="277" width="0.0154%" height="15" fill="rgb(248,140,0)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (17 samples, 0.02%)</title><rect x="21.0202%" y="261" width="0.0154%" height="15" fill="rgb(228,106,3)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="21.0202%" y="245" width="0.0154%" height="15" fill="rgb(209,23,37)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="21.0202%" y="229" width="0.0154%" height="15" fill="rgb(241,93,50)" fg:x="23249" fg:w="17"/><text x="21.2702%" y="239.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (13 samples, 0.01%)</title><rect x="21.0374%" y="357" width="0.0118%" height="15" fill="rgb(253,46,43)" fg:x="23268" fg:w="13"/><text x="21.2874%" y="367.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (13 samples, 0.01%)</title><rect x="21.0374%" y="341" width="0.0118%" height="15" fill="rgb(226,206,43)" fg:x="23268" fg:w="13"/><text x="21.2874%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="21.0374%" y="325" width="0.0118%" height="15" fill="rgb(217,54,7)" fg:x="23268" fg:w="13"/><text x="21.2874%" y="335.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (54 samples, 0.05%)</title><rect x="21.0030%" y="421" width="0.0488%" height="15" fill="rgb(223,5,52)" fg:x="23230" fg:w="54"/><text x="21.2530%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (54 samples, 0.05%)</title><rect x="21.0030%" y="405" width="0.0488%" height="15" fill="rgb(206,52,46)" fg:x="23230" fg:w="54"/><text x="21.2530%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (54 samples, 0.05%)</title><rect x="21.0030%" y="389" width="0.0488%" height="15" fill="rgb(253,136,11)" fg:x="23230" fg:w="54"/><text x="21.2530%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (18 samples, 0.02%)</title><rect x="21.0356%" y="373" width="0.0163%" height="15" fill="rgb(208,106,33)" fg:x="23266" fg:w="18"/><text x="21.2856%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,090 samples, 0.99%)</title><rect x="21.0582%" y="421" width="0.9855%" height="15" fill="rgb(206,54,4)" fg:x="23291" fg:w="1090"/><text x="21.3082%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,090 samples, 0.99%)</title><rect x="21.0582%" y="405" width="0.9855%" height="15" fill="rgb(213,3,15)" fg:x="23291" fg:w="1090"/><text x="21.3082%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,090 samples, 0.99%)</title><rect x="21.0582%" y="389" width="0.9855%" height="15" fill="rgb(252,211,39)" fg:x="23291" fg:w="1090"/><text x="21.3082%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (550 samples, 0.50%)</title><rect x="22.0482%" y="373" width="0.4973%" height="15" fill="rgb(223,6,36)" fg:x="24386" fg:w="550"/><text x="22.2982%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (550 samples, 0.50%)</title><rect x="22.0482%" y="357" width="0.4973%" height="15" fill="rgb(252,169,45)" fg:x="24386" fg:w="550"/><text x="22.2982%" y="367.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (17 samples, 0.02%)</title><rect x="22.5690%" y="341" width="0.0154%" height="15" fill="rgb(212,48,26)" fg:x="24962" fg:w="17"/><text x="22.8190%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (17 samples, 0.02%)</title><rect x="22.5690%" y="325" width="0.0154%" height="15" fill="rgb(251,102,48)" fg:x="24962" fg:w="17"/><text x="22.8190%" y="335.50"></text></g><g><title>__glx_Main (17 samples, 0.02%)</title><rect x="22.5690%" y="309" width="0.0154%" height="15" fill="rgb(243,208,16)" fg:x="24962" fg:w="17"/><text x="22.8190%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (12 samples, 0.01%)</title><rect x="22.5961%" y="341" width="0.0108%" height="15" fill="rgb(219,96,24)" fg:x="24992" fg:w="12"/><text x="22.8461%" y="351.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (56 samples, 0.05%)</title><rect x="22.5591%" y="373" width="0.0506%" height="15" fill="rgb(219,33,29)" fg:x="24951" fg:w="56"/><text x="22.8091%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (49 samples, 0.04%)</title><rect x="22.5654%" y="357" width="0.0443%" height="15" fill="rgb(223,176,5)" fg:x="24958" fg:w="49"/><text x="22.8154%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (1,806 samples, 1.63%)</title><rect x="20.9913%" y="533" width="1.6329%" height="15" fill="rgb(228,140,14)" fg:x="23217" fg:w="1806"/><text x="21.2413%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (1,806 samples, 1.63%)</title><rect x="20.9913%" y="517" width="1.6329%" height="15" fill="rgb(217,179,31)" fg:x="23217" fg:w="1806"/><text x="21.2413%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,806 samples, 1.63%)</title><rect x="20.9913%" y="501" width="1.6329%" height="15" fill="rgb(230,9,30)" fg:x="23217" fg:w="1806"/><text x="21.2413%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,806 samples, 1.63%)</title><rect x="20.9913%" y="485" width="1.6329%" height="15" fill="rgb(230,136,20)" fg:x="23217" fg:w="1806"/><text x="21.2413%" y="495.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (1,806 samples, 1.63%)</title><rect x="20.9913%" y="469" width="1.6329%" height="15" fill="rgb(215,210,22)" fg:x="23217" fg:w="1806"/><text x="21.2413%" y="479.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (1,803 samples, 1.63%)</title><rect x="20.9940%" y="453" width="1.6302%" height="15" fill="rgb(218,43,5)" fg:x="23220" fg:w="1803"/><text x="21.2440%" y="463.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1,794 samples, 1.62%)</title><rect x="21.0021%" y="437" width="1.6220%" height="15" fill="rgb(216,11,5)" fg:x="23229" fg:w="1794"/><text x="21.2521%" y="447.50"></text></g><g><title>wgpu::Device::create_buffer (640 samples, 0.58%)</title><rect x="22.0455%" y="421" width="0.5786%" height="15" fill="rgb(209,82,29)" fg:x="24383" fg:w="640"/><text x="22.2955%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (638 samples, 0.58%)</title><rect x="22.0473%" y="405" width="0.5768%" height="15" fill="rgb(244,115,12)" fg:x="24385" fg:w="638"/><text x="22.2973%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (638 samples, 0.58%)</title><rect x="22.0473%" y="389" width="0.5768%" height="15" fill="rgb(222,82,18)" fg:x="24385" fg:w="638"/><text x="22.2973%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="22.6323%" y="437" width="0.0118%" height="15" fill="rgb(249,227,8)" fg:x="25032" fg:w="13"/><text x="22.8823%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="22.6323%" y="421" width="0.0118%" height="15" fill="rgb(253,141,45)" fg:x="25032" fg:w="13"/><text x="22.8823%" y="431.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (12 samples, 0.01%)</title><rect x="22.6332%" y="405" width="0.0108%" height="15" fill="rgb(234,184,4)" fg:x="25033" fg:w="12"/><text x="22.8832%" y="415.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (12 samples, 0.01%)</title><rect x="22.6332%" y="389" width="0.0108%" height="15" fill="rgb(218,194,23)" fg:x="25033" fg:w="12"/><text x="22.8832%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (12 samples, 0.01%)</title><rect x="22.6332%" y="373" width="0.0108%" height="15" fill="rgb(235,66,41)" fg:x="25033" fg:w="12"/><text x="22.8832%" y="383.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (12 samples, 0.01%)</title><rect x="22.6332%" y="357" width="0.0108%" height="15" fill="rgb(245,217,1)" fg:x="25033" fg:w="12"/><text x="22.8832%" y="367.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (24 samples, 0.02%)</title><rect x="22.6260%" y="469" width="0.0217%" height="15" fill="rgb(229,91,1)" fg:x="25025" fg:w="24"/><text x="22.8760%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (17 samples, 0.02%)</title><rect x="22.6323%" y="453" width="0.0154%" height="15" fill="rgb(207,101,30)" fg:x="25032" fg:w="17"/><text x="22.8823%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (28 samples, 0.03%)</title><rect x="22.6477%" y="437" width="0.0253%" height="15" fill="rgb(223,82,49)" fg:x="25049" fg:w="28"/><text x="22.8977%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.01%)</title><rect x="22.6585%" y="421" width="0.0145%" height="15" fill="rgb(218,167,17)" fg:x="25061" fg:w="16"/><text x="22.9085%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="22.6585%" y="405" width="0.0145%" height="15" fill="rgb(208,103,14)" fg:x="25061" fg:w="16"/><text x="22.9085%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="22.6594%" y="389" width="0.0136%" height="15" fill="rgb(238,20,8)" fg:x="25062" fg:w="15"/><text x="22.9094%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (48 samples, 0.04%)</title><rect x="22.6477%" y="453" width="0.0434%" height="15" fill="rgb(218,80,54)" fg:x="25049" fg:w="48"/><text x="22.8977%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (20 samples, 0.02%)</title><rect x="22.6730%" y="437" width="0.0181%" height="15" fill="rgb(240,144,17)" fg:x="25077" fg:w="20"/><text x="22.9230%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (20 samples, 0.02%)</title><rect x="22.6730%" y="421" width="0.0181%" height="15" fill="rgb(245,27,50)" fg:x="25077" fg:w="20"/><text x="22.9230%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (13 samples, 0.01%)</title><rect x="22.6793%" y="405" width="0.0118%" height="15" fill="rgb(251,51,7)" fg:x="25084" fg:w="13"/><text x="22.9293%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (13 samples, 0.01%)</title><rect x="22.6793%" y="389" width="0.0118%" height="15" fill="rgb(245,217,29)" fg:x="25084" fg:w="13"/><text x="22.9293%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (13 samples, 0.01%)</title><rect x="22.6793%" y="373" width="0.0118%" height="15" fill="rgb(221,176,29)" fg:x="25084" fg:w="13"/><text x="22.9293%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (80 samples, 0.07%)</title><rect x="22.6242%" y="533" width="0.0723%" height="15" fill="rgb(212,180,24)" fg:x="25023" fg:w="80"/><text x="22.8742%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (80 samples, 0.07%)</title><rect x="22.6242%" y="517" width="0.0723%" height="15" fill="rgb(254,24,2)" fg:x="25023" fg:w="80"/><text x="22.8742%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (80 samples, 0.07%)</title><rect x="22.6242%" y="501" width="0.0723%" height="15" fill="rgb(230,100,2)" fg:x="25023" fg:w="80"/><text x="22.8742%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (80 samples, 0.07%)</title><rect x="22.6242%" y="485" width="0.0723%" height="15" fill="rgb(219,142,25)" fg:x="25023" fg:w="80"/><text x="22.8742%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (54 samples, 0.05%)</title><rect x="22.6477%" y="469" width="0.0488%" height="15" fill="rgb(240,73,43)" fg:x="25049" fg:w="54"/><text x="22.8977%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (19 samples, 0.02%)</title><rect x="22.6983%" y="421" width="0.0172%" height="15" fill="rgb(214,114,15)" fg:x="25105" fg:w="19"/><text x="22.9483%" y="431.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (19 samples, 0.02%)</title><rect x="22.6983%" y="405" width="0.0172%" height="15" fill="rgb(207,130,4)" fg:x="25105" fg:w="19"/><text x="22.9483%" y="415.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (40 samples, 0.04%)</title><rect x="22.6983%" y="453" width="0.0362%" height="15" fill="rgb(221,25,40)" fg:x="25105" fg:w="40"/><text x="22.9483%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (40 samples, 0.04%)</title><rect x="22.6983%" y="437" width="0.0362%" height="15" fill="rgb(241,184,7)" fg:x="25105" fg:w="40"/><text x="22.9483%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (21 samples, 0.02%)</title><rect x="22.7155%" y="421" width="0.0190%" height="15" fill="rgb(235,159,4)" fg:x="25124" fg:w="21"/><text x="22.9655%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (21 samples, 0.02%)</title><rect x="22.7155%" y="405" width="0.0190%" height="15" fill="rgb(214,87,48)" fg:x="25124" fg:w="21"/><text x="22.9655%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (21 samples, 0.02%)</title><rect x="22.7155%" y="389" width="0.0190%" height="15" fill="rgb(246,198,24)" fg:x="25124" fg:w="21"/><text x="22.9655%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (17 samples, 0.02%)</title><rect x="22.7191%" y="373" width="0.0154%" height="15" fill="rgb(209,66,40)" fg:x="25128" fg:w="17"/><text x="22.9691%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (17 samples, 0.02%)</title><rect x="22.7191%" y="357" width="0.0154%" height="15" fill="rgb(233,147,39)" fg:x="25128" fg:w="17"/><text x="22.9691%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (17 samples, 0.02%)</title><rect x="22.7191%" y="341" width="0.0154%" height="15" fill="rgb(231,145,52)" fg:x="25128" fg:w="17"/><text x="22.9691%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (51 samples, 0.05%)</title><rect x="22.6983%" y="469" width="0.0461%" height="15" fill="rgb(206,20,26)" fg:x="25105" fg:w="51"/><text x="22.9483%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (61 samples, 0.06%)</title><rect x="22.6965%" y="533" width="0.0552%" height="15" fill="rgb(238,220,4)" fg:x="25103" fg:w="61"/><text x="22.9465%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (60 samples, 0.05%)</title><rect x="22.6974%" y="517" width="0.0542%" height="15" fill="rgb(252,195,42)" fg:x="25104" fg:w="60"/><text x="22.9474%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (60 samples, 0.05%)</title><rect x="22.6974%" y="501" width="0.0542%" height="15" fill="rgb(209,10,6)" fg:x="25104" fg:w="60"/><text x="22.9474%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (60 samples, 0.05%)</title><rect x="22.6974%" y="485" width="0.0542%" height="15" fill="rgb(229,3,52)" fg:x="25104" fg:w="60"/><text x="22.9474%" y="495.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (12 samples, 0.01%)</title><rect x="22.7697%" y="389" width="0.0108%" height="15" fill="rgb(253,49,37)" fg:x="25184" fg:w="12"/><text x="23.0197%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (12 samples, 0.01%)</title><rect x="22.7697%" y="373" width="0.0108%" height="15" fill="rgb(240,103,49)" fg:x="25184" fg:w="12"/><text x="23.0197%" y="383.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (14 samples, 0.01%)</title><rect x="22.7697%" y="421" width="0.0127%" height="15" fill="rgb(250,182,30)" fg:x="25184" fg:w="14"/><text x="23.0197%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (14 samples, 0.01%)</title><rect x="22.7697%" y="405" width="0.0127%" height="15" fill="rgb(248,8,30)" fg:x="25184" fg:w="14"/><text x="23.0197%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (41 samples, 0.04%)</title><rect x="22.7516%" y="533" width="0.0371%" height="15" fill="rgb(237,120,30)" fg:x="25164" fg:w="41"/><text x="23.0016%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (41 samples, 0.04%)</title><rect x="22.7516%" y="517" width="0.0371%" height="15" fill="rgb(221,146,34)" fg:x="25164" fg:w="41"/><text x="23.0016%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41 samples, 0.04%)</title><rect x="22.7516%" y="501" width="0.0371%" height="15" fill="rgb(242,55,13)" fg:x="25164" fg:w="41"/><text x="23.0016%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.04%)</title><rect x="22.7516%" y="485" width="0.0371%" height="15" fill="rgb(242,112,31)" fg:x="25164" fg:w="41"/><text x="23.0016%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (41 samples, 0.04%)</title><rect x="22.7516%" y="469" width="0.0371%" height="15" fill="rgb(249,192,27)" fg:x="25164" fg:w="41"/><text x="23.0016%" y="479.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (25 samples, 0.02%)</title><rect x="22.7661%" y="453" width="0.0226%" height="15" fill="rgb(208,204,44)" fg:x="25180" fg:w="25"/><text x="23.0161%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (25 samples, 0.02%)</title><rect x="22.7661%" y="437" width="0.0226%" height="15" fill="rgb(208,93,54)" fg:x="25180" fg:w="25"/><text x="23.0161%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,990 samples, 1.80%)</title><rect x="20.9913%" y="549" width="1.7992%" height="15" fill="rgb(242,1,31)" fg:x="23217" fg:w="1990"/><text x="21.2413%" y="559.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,005 samples, 1.81%)</title><rect x="20.9804%" y="613" width="1.8128%" height="15" fill="rgb(241,83,25)" fg:x="23205" fg:w="2005"/><text x="21.2304%" y="623.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,005 samples, 1.81%)</title><rect x="20.9804%" y="597" width="1.8128%" height="15" fill="rgb(205,169,50)" fg:x="23205" fg:w="2005"/><text x="21.2304%" y="607.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,005 samples, 1.81%)</title><rect x="20.9804%" y="581" width="1.8128%" height="15" fill="rgb(239,186,37)" fg:x="23205" fg:w="2005"/><text x="21.2304%" y="591.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,997 samples, 1.81%)</title><rect x="20.9877%" y="565" width="1.8056%" height="15" fill="rgb(205,221,10)" fg:x="23213" fg:w="1997"/><text x="21.2377%" y="575.50">b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,037 samples, 1.84%)</title><rect x="20.9533%" y="709" width="1.8417%" height="15" fill="rgb(218,196,15)" fg:x="23175" fg:w="2037"/><text x="21.2033%" y="719.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,037 samples, 1.84%)</title><rect x="20.9533%" y="693" width="1.8417%" height="15" fill="rgb(218,196,35)" fg:x="23175" fg:w="2037"/><text x="21.2033%" y="703.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,036 samples, 1.84%)</title><rect x="20.9542%" y="677" width="1.8408%" height="15" fill="rgb(233,63,24)" fg:x="23176" fg:w="2036"/><text x="21.2042%" y="687.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,030 samples, 1.84%)</title><rect x="20.9596%" y="661" width="1.8354%" height="15" fill="rgb(225,8,4)" fg:x="23182" fg:w="2030"/><text x="21.2096%" y="671.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,030 samples, 1.84%)</title><rect x="20.9596%" y="645" width="1.8354%" height="15" fill="rgb(234,105,35)" fg:x="23182" fg:w="2030"/><text x="21.2096%" y="655.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,007 samples, 1.81%)</title><rect x="20.9804%" y="629" width="1.8146%" height="15" fill="rgb(236,21,32)" fg:x="23205" fg:w="2007"/><text x="21.2304%" y="639.50">a..</text></g><g><title>__GI___clone (2,041 samples, 1.85%)</title><rect x="20.9524%" y="997" width="1.8453%" height="15" fill="rgb(228,109,6)" fg:x="23174" fg:w="2041"/><text x="21.2024%" y="1007.50">_..</text></g><g><title>start_thread (2,041 samples, 1.85%)</title><rect x="20.9524%" y="981" width="1.8453%" height="15" fill="rgb(229,215,31)" fg:x="23174" fg:w="2041"/><text x="21.2024%" y="991.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,040 samples, 1.84%)</title><rect x="20.9533%" y="965" width="1.8444%" height="15" fill="rgb(221,52,54)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="975.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,040 samples, 1.84%)</title><rect x="20.9533%" y="949" width="1.8444%" height="15" fill="rgb(252,129,43)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="959.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,040 samples, 1.84%)</title><rect x="20.9533%" y="933" width="1.8444%" height="15" fill="rgb(248,183,27)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="943.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,040 samples, 1.84%)</title><rect x="20.9533%" y="917" width="1.8444%" height="15" fill="rgb(250,0,22)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="927.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,040 samples, 1.84%)</title><rect x="20.9533%" y="901" width="1.8444%" height="15" fill="rgb(213,166,10)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="911.50">s..</text></g><g><title>std::panic::catch_unwind (2,040 samples, 1.84%)</title><rect x="20.9533%" y="885" width="1.8444%" height="15" fill="rgb(207,163,36)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="895.50">s..</text></g><g><title>std::panicking::try (2,040 samples, 1.84%)</title><rect x="20.9533%" y="869" width="1.8444%" height="15" fill="rgb(208,122,22)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="879.50">s..</text></g><g><title>std::panicking::try::do_call (2,040 samples, 1.84%)</title><rect x="20.9533%" y="853" width="1.8444%" height="15" fill="rgb(207,104,49)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="863.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,040 samples, 1.84%)</title><rect x="20.9533%" y="837" width="1.8444%" height="15" fill="rgb(248,211,50)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="847.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,040 samples, 1.84%)</title><rect x="20.9533%" y="821" width="1.8444%" height="15" fill="rgb(217,13,45)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="831.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,040 samples, 1.84%)</title><rect x="20.9533%" y="805" width="1.8444%" height="15" fill="rgb(211,216,49)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="815.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2,040 samples, 1.84%)</title><rect x="20.9533%" y="789" width="1.8444%" height="15" fill="rgb(221,58,53)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="799.50">b..</text></g><g><title>futures_lite::future::block_on (2,040 samples, 1.84%)</title><rect x="20.9533%" y="773" width="1.8444%" height="15" fill="rgb(220,112,41)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="783.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,040 samples, 1.84%)</title><rect x="20.9533%" y="757" width="1.8444%" height="15" fill="rgb(236,38,28)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="767.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,040 samples, 1.84%)</title><rect x="20.9533%" y="741" width="1.8444%" height="15" fill="rgb(227,195,22)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="751.50">s..</text></g><g><title>futures_lite::future::block_on::{{closure}} (2,040 samples, 1.84%)</title><rect x="20.9533%" y="725" width="1.8444%" height="15" fill="rgb(214,55,33)" fg:x="23175" fg:w="2040"/><text x="21.2033%" y="735.50">f..</text></g><g><title>TaskPool_(8) (2,126 samples, 1.92%)</title><rect x="20.8774%" y="1013" width="1.9222%" height="15" fill="rgb(248,80,13)" fg:x="23091" fg:w="2126"/><text x="21.1274%" y="1023.50">T..</text></g><g><title>[[heap]] (26 samples, 0.02%)</title><rect x="22.8005%" y="997" width="0.0235%" height="15" fill="rgb(238,52,6)" fg:x="25218" fg:w="26"/><text x="23.0505%" y="1007.50"></text></g><g><title>[anon] (35 samples, 0.03%)</title><rect x="22.8240%" y="997" width="0.0316%" height="15" fill="rgb(224,198,47)" fg:x="25244" fg:w="35"/><text x="23.0740%" y="1007.50"></text></g><g><title>[unknown] (41 samples, 0.04%)</title><rect x="22.8556%" y="997" width="0.0371%" height="15" fill="rgb(233,171,20)" fg:x="25279" fg:w="41"/><text x="23.1056%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="22.9008%" y="533" width="0.0145%" height="15" fill="rgb(241,30,25)" fg:x="25329" fg:w="16"/><text x="23.1508%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="22.8999%" y="629" width="0.0217%" height="15" fill="rgb(207,171,38)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (24 samples, 0.02%)</title><rect x="22.8999%" y="613" width="0.0217%" height="15" fill="rgb(234,70,1)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="22.8999%" y="597" width="0.0217%" height="15" fill="rgb(232,178,18)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (24 samples, 0.02%)</title><rect x="22.8999%" y="581" width="0.0217%" height="15" fill="rgb(241,78,40)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="22.8999%" y="565" width="0.0217%" height="15" fill="rgb(222,35,25)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="22.8999%" y="549" width="0.0217%" height="15" fill="rgb(207,92,16)" fg:x="25328" fg:w="24"/><text x="23.1499%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (37 samples, 0.03%)</title><rect x="22.9388%" y="373" width="0.0335%" height="15" fill="rgb(216,59,51)" fg:x="25371" fg:w="37"/><text x="23.1888%" y="383.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (37 samples, 0.03%)</title><rect x="22.9388%" y="357" width="0.0335%" height="15" fill="rgb(213,80,28)" fg:x="25371" fg:w="37"/><text x="23.1888%" y="367.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (37 samples, 0.03%)</title><rect x="22.9388%" y="341" width="0.0335%" height="15" fill="rgb(220,93,7)" fg:x="25371" fg:w="37"/><text x="23.1888%" y="351.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (36 samples, 0.03%)</title><rect x="22.9397%" y="325" width="0.0325%" height="15" fill="rgb(225,24,44)" fg:x="25372" fg:w="36"/><text x="23.1897%" y="335.50"></text></g><g><title>inplace_it::fixed_array::indirect (34 samples, 0.03%)</title><rect x="22.9415%" y="309" width="0.0307%" height="15" fill="rgb(243,74,40)" fg:x="25374" fg:w="34"/><text x="23.1915%" y="319.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (34 samples, 0.03%)</title><rect x="22.9415%" y="293" width="0.0307%" height="15" fill="rgb(228,39,7)" fg:x="25374" fg:w="34"/><text x="23.1915%" y="303.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (34 samples, 0.03%)</title><rect x="22.9415%" y="277" width="0.0307%" height="15" fill="rgb(227,79,8)" fg:x="25374" fg:w="34"/><text x="23.1915%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (34 samples, 0.03%)</title><rect x="22.9415%" y="261" width="0.0307%" height="15" fill="rgb(236,58,11)" fg:x="25374" fg:w="34"/><text x="23.1915%" y="271.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (32 samples, 0.03%)</title><rect x="22.9433%" y="245" width="0.0289%" height="15" fill="rgb(249,63,35)" fg:x="25376" fg:w="32"/><text x="23.1933%" y="255.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (28 samples, 0.03%)</title><rect x="22.9469%" y="229" width="0.0253%" height="15" fill="rgb(252,114,16)" fg:x="25380" fg:w="28"/><text x="23.1969%" y="239.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (63 samples, 0.06%)</title><rect x="22.9334%" y="421" width="0.0570%" height="15" fill="rgb(254,151,24)" fg:x="25365" fg:w="63"/><text x="23.1834%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (63 samples, 0.06%)</title><rect x="22.9334%" y="405" width="0.0570%" height="15" fill="rgb(253,54,39)" fg:x="25365" fg:w="63"/><text x="23.1834%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (63 samples, 0.06%)</title><rect x="22.9334%" y="389" width="0.0570%" height="15" fill="rgb(243,25,45)" fg:x="25365" fg:w="63"/><text x="23.1834%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (20 samples, 0.02%)</title><rect x="22.9723%" y="373" width="0.0181%" height="15" fill="rgb(234,134,9)" fg:x="25408" fg:w="20"/><text x="23.2223%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,694 samples, 1.53%)</title><rect x="22.9976%" y="421" width="1.5316%" height="15" fill="rgb(227,166,31)" fg:x="25436" fg:w="1694"/><text x="23.2476%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,694 samples, 1.53%)</title><rect x="22.9976%" y="405" width="1.5316%" height="15" fill="rgb(245,143,41)" fg:x="25436" fg:w="1694"/><text x="23.2476%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,694 samples, 1.53%)</title><rect x="22.9976%" y="389" width="1.5316%" height="15" fill="rgb(238,181,32)" fg:x="25436" fg:w="1694"/><text x="23.2476%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (914 samples, 0.83%)</title><rect x="24.5427%" y="373" width="0.8264%" height="15" fill="rgb(224,113,18)" fg:x="27145" fg:w="914"/><text x="24.7927%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (914 samples, 0.83%)</title><rect x="24.5427%" y="357" width="0.8264%" height="15" fill="rgb(240,229,28)" fg:x="27145" fg:w="914"/><text x="24.7927%" y="367.50"></text></g><g><title>glXCreateGLXPbufferSGIX (17 samples, 0.02%)</title><rect x="25.4044%" y="293" width="0.0154%" height="15" fill="rgb(250,185,3)" fg:x="28098" fg:w="17"/><text x="25.6544%" y="303.50"></text></g><g><title>_nv011glcore (12 samples, 0.01%)</title><rect x="25.4089%" y="277" width="0.0108%" height="15" fill="rgb(212,59,25)" fg:x="28103" fg:w="12"/><text x="25.6589%" y="287.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (30 samples, 0.03%)</title><rect x="25.4035%" y="341" width="0.0271%" height="15" fill="rgb(221,87,20)" fg:x="28097" fg:w="30"/><text x="25.6535%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (30 samples, 0.03%)</title><rect x="25.4035%" y="325" width="0.0271%" height="15" fill="rgb(213,74,28)" fg:x="28097" fg:w="30"/><text x="25.6535%" y="335.50"></text></g><g><title>__glx_Main (30 samples, 0.03%)</title><rect x="25.4035%" y="309" width="0.0271%" height="15" fill="rgb(224,132,34)" fg:x="28097" fg:w="30"/><text x="25.6535%" y="319.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="25.4197%" y="293" width="0.0108%" height="15" fill="rgb(222,101,24)" fg:x="28115" fg:w="12"/><text x="25.6697%" y="303.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="25.4197%" y="277" width="0.0108%" height="15" fill="rgb(254,142,4)" fg:x="28115" fg:w="12"/><text x="25.6697%" y="287.50"></text></g><g><title>ash::device::Device::create_buffer (20 samples, 0.02%)</title><rect x="25.4306%" y="341" width="0.0181%" height="15" fill="rgb(230,229,49)" fg:x="28127" fg:w="20"/><text x="25.6806%" y="351.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (20 samples, 0.02%)</title><rect x="25.4306%" y="325" width="0.0181%" height="15" fill="rgb(238,70,47)" fg:x="28127" fg:w="20"/><text x="25.6806%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (20 samples, 0.02%)</title><rect x="25.4306%" y="309" width="0.0181%" height="15" fill="rgb(231,160,17)" fg:x="28127" fg:w="20"/><text x="25.6806%" y="319.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (14 samples, 0.01%)</title><rect x="25.4631%" y="309" width="0.0127%" height="15" fill="rgb(218,68,53)" fg:x="28163" fg:w="14"/><text x="25.7131%" y="319.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (26 samples, 0.02%)</title><rect x="25.4568%" y="341" width="0.0235%" height="15" fill="rgb(236,111,10)" fg:x="28156" fg:w="26"/><text x="25.7068%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (23 samples, 0.02%)</title><rect x="25.4595%" y="325" width="0.0208%" height="15" fill="rgb(224,34,41)" fg:x="28159" fg:w="23"/><text x="25.7095%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (102 samples, 0.09%)</title><rect x="25.3890%" y="373" width="0.0922%" height="15" fill="rgb(241,118,19)" fg:x="28081" fg:w="102"/><text x="25.6390%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (93 samples, 0.08%)</title><rect x="25.3971%" y="357" width="0.0841%" height="15" fill="rgb(238,129,25)" fg:x="28090" fg:w="93"/><text x="25.6471%" y="367.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1,064 samples, 0.96%)</title><rect x="24.5382%" y="389" width="0.9620%" height="15" fill="rgb(238,22,31)" fg:x="27140" fg:w="1064"/><text x="24.7882%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,849 samples, 2.58%)</title><rect x="22.9252%" y="533" width="2.5759%" height="15" fill="rgb(222,174,48)" fg:x="25356" fg:w="2849"/><text x="23.1752%" y="543.50">&lt;F..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (2,849 samples, 2.58%)</title><rect x="22.9252%" y="517" width="2.5759%" height="15" fill="rgb(206,152,40)" fg:x="25356" fg:w="2849"/><text x="23.1752%" y="527.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,849 samples, 2.58%)</title><rect x="22.9252%" y="501" width="2.5759%" height="15" fill="rgb(218,99,54)" fg:x="25356" fg:w="2849"/><text x="23.1752%" y="511.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (2,849 samples, 2.58%)</title><rect x="22.9252%" y="485" width="2.5759%" height="15" fill="rgb(220,174,26)" fg:x="25356" fg:w="2849"/><text x="23.1752%" y="495.50">co..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (2,849 samples, 2.58%)</title><rect x="22.9252%" y="469" width="2.5759%" height="15" fill="rgb(245,116,9)" fg:x="25356" fg:w="2849"/><text x="23.1752%" y="479.50">st..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (2,848 samples, 2.57%)</title><rect x="22.9261%" y="453" width="2.5750%" height="15" fill="rgb(209,72,35)" fg:x="25357" fg:w="2848"/><text x="23.1761%" y="463.50">be..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,840 samples, 2.57%)</title><rect x="22.9334%" y="437" width="2.5677%" height="15" fill="rgb(226,126,21)" fg:x="25365" fg:w="2840"/><text x="23.1834%" y="447.50">&lt;w..</text></g><g><title>wgpu::Device::create_buffer (1,066 samples, 0.96%)</title><rect x="24.5373%" y="421" width="0.9638%" height="15" fill="rgb(227,192,1)" fg:x="27139" fg:w="1066"/><text x="24.7873%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1,066 samples, 0.96%)</title><rect x="24.5373%" y="405" width="0.9638%" height="15" fill="rgb(237,180,29)" fg:x="27139" fg:w="1066"/><text x="24.7873%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (16 samples, 0.01%)</title><rect x="25.5102%" y="437" width="0.0145%" height="15" fill="rgb(230,197,35)" fg:x="28215" fg:w="16"/><text x="25.7602%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (15 samples, 0.01%)</title><rect x="25.5111%" y="421" width="0.0136%" height="15" fill="rgb(246,193,31)" fg:x="28216" fg:w="15"/><text x="25.7611%" y="431.50"></text></g><g><title>bevy_pbr::render::mesh::prepare_skinned_meshes (28 samples, 0.03%)</title><rect x="25.5029%" y="469" width="0.0253%" height="15" fill="rgb(241,36,4)" fg:x="28207" fg:w="28"/><text x="25.7529%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (20 samples, 0.02%)</title><rect x="25.5102%" y="453" width="0.0181%" height="15" fill="rgb(241,130,17)" fg:x="28215" fg:w="20"/><text x="25.7602%" y="463.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (36 samples, 0.03%)</title><rect x="25.5282%" y="437" width="0.0325%" height="15" fill="rgb(206,137,32)" fg:x="28235" fg:w="36"/><text x="25.7782%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.02%)</title><rect x="25.5382%" y="421" width="0.0226%" height="15" fill="rgb(237,228,51)" fg:x="28246" fg:w="25"/><text x="25.7882%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="25.5382%" y="405" width="0.0226%" height="15" fill="rgb(243,6,42)" fg:x="28246" fg:w="25"/><text x="25.7882%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="25.5400%" y="389" width="0.0208%" height="15" fill="rgb(251,74,28)" fg:x="28248" fg:w="23"/><text x="25.7900%" y="399.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (61 samples, 0.06%)</title><rect x="25.5282%" y="453" width="0.0552%" height="15" fill="rgb(218,20,49)" fg:x="28235" fg:w="61"/><text x="25.7782%" y="463.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (25 samples, 0.02%)</title><rect x="25.5608%" y="437" width="0.0226%" height="15" fill="rgb(238,28,14)" fg:x="28271" fg:w="25"/><text x="25.8108%" y="447.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (25 samples, 0.02%)</title><rect x="25.5608%" y="421" width="0.0226%" height="15" fill="rgb(229,40,46)" fg:x="28271" fg:w="25"/><text x="25.8108%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (21 samples, 0.02%)</title><rect x="25.5644%" y="405" width="0.0190%" height="15" fill="rgb(244,195,20)" fg:x="28275" fg:w="21"/><text x="25.8144%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (21 samples, 0.02%)</title><rect x="25.5644%" y="389" width="0.0190%" height="15" fill="rgb(253,56,35)" fg:x="28275" fg:w="21"/><text x="25.8144%" y="399.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (21 samples, 0.02%)</title><rect x="25.5644%" y="373" width="0.0190%" height="15" fill="rgb(210,149,44)" fg:x="28275" fg:w="21"/><text x="25.8144%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (94 samples, 0.08%)</title><rect x="25.5011%" y="533" width="0.0850%" height="15" fill="rgb(240,135,12)" fg:x="28205" fg:w="94"/><text x="25.7511%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (93 samples, 0.08%)</title><rect x="25.5020%" y="517" width="0.0841%" height="15" fill="rgb(251,24,50)" fg:x="28206" fg:w="93"/><text x="25.7520%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (93 samples, 0.08%)</title><rect x="25.5020%" y="501" width="0.0841%" height="15" fill="rgb(243,200,47)" fg:x="28206" fg:w="93"/><text x="25.7520%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (93 samples, 0.08%)</title><rect x="25.5020%" y="485" width="0.0841%" height="15" fill="rgb(224,166,26)" fg:x="28206" fg:w="93"/><text x="25.7520%" y="495.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (64 samples, 0.06%)</title><rect x="25.5282%" y="469" width="0.0579%" height="15" fill="rgb(233,0,47)" fg:x="28235" fg:w="64"/><text x="25.7782%" y="479.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (32 samples, 0.03%)</title><rect x="25.5870%" y="453" width="0.0289%" height="15" fill="rgb(253,80,5)" fg:x="28300" fg:w="32"/><text x="25.8370%" y="463.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (32 samples, 0.03%)</title><rect x="25.5870%" y="437" width="0.0289%" height="15" fill="rgb(214,133,25)" fg:x="28300" fg:w="32"/><text x="25.8370%" y="447.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (28 samples, 0.03%)</title><rect x="25.5906%" y="421" width="0.0253%" height="15" fill="rgb(209,27,14)" fg:x="28304" fg:w="28"/><text x="25.8406%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (28 samples, 0.03%)</title><rect x="25.5906%" y="405" width="0.0253%" height="15" fill="rgb(219,102,51)" fg:x="28304" fg:w="28"/><text x="25.8406%" y="415.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (28 samples, 0.03%)</title><rect x="25.5906%" y="389" width="0.0253%" height="15" fill="rgb(237,18,16)" fg:x="28304" fg:w="28"/><text x="25.8406%" y="399.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (23 samples, 0.02%)</title><rect x="25.5951%" y="373" width="0.0208%" height="15" fill="rgb(241,85,17)" fg:x="28309" fg:w="23"/><text x="25.8451%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (22 samples, 0.02%)</title><rect x="25.5961%" y="357" width="0.0199%" height="15" fill="rgb(236,90,42)" fg:x="28310" fg:w="22"/><text x="25.8461%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (22 samples, 0.02%)</title><rect x="25.5961%" y="341" width="0.0199%" height="15" fill="rgb(249,57,21)" fg:x="28310" fg:w="22"/><text x="25.8461%" y="351.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (37 samples, 0.03%)</title><rect x="25.5861%" y="469" width="0.0335%" height="15" fill="rgb(243,12,36)" fg:x="28299" fg:w="37"/><text x="25.8361%" y="479.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (45 samples, 0.04%)</title><rect x="25.5861%" y="533" width="0.0407%" height="15" fill="rgb(253,128,47)" fg:x="28299" fg:w="45"/><text x="25.8361%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (45 samples, 0.04%)</title><rect x="25.5861%" y="517" width="0.0407%" height="15" fill="rgb(207,33,20)" fg:x="28299" fg:w="45"/><text x="25.8361%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (45 samples, 0.04%)</title><rect x="25.5861%" y="501" width="0.0407%" height="15" fill="rgb(233,215,35)" fg:x="28299" fg:w="45"/><text x="25.8361%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (45 samples, 0.04%)</title><rect x="25.5861%" y="485" width="0.0407%" height="15" fill="rgb(249,188,52)" fg:x="28299" fg:w="45"/><text x="25.8361%" y="495.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::push_offset_and_count (12 samples, 0.01%)</title><rect x="25.6313%" y="453" width="0.0108%" height="15" fill="rgb(225,12,32)" fg:x="28349" fg:w="12"/><text x="25.8813%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::push (12 samples, 0.01%)</title><rect x="25.6313%" y="437" width="0.0108%" height="15" fill="rgb(247,98,14)" fg:x="28349" fg:w="12"/><text x="25.8813%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="25.6313%" y="421" width="0.0108%" height="15" fill="rgb(247,219,48)" fg:x="28349" fg:w="12"/><text x="25.8813%" y="431.50"></text></g><g><title>&lt;T as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (22 samples, 0.02%)</title><rect x="25.6485%" y="389" width="0.0199%" height="15" fill="rgb(253,60,48)" fg:x="28368" fg:w="22"/><text x="25.8985%" y="399.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write_std430 (22 samples, 0.02%)</title><rect x="25.6485%" y="373" width="0.0199%" height="15" fill="rgb(245,15,52)" fg:x="28368" fg:w="22"/><text x="25.8985%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (12 samples, 0.01%)</title><rect x="25.6575%" y="357" width="0.0108%" height="15" fill="rgb(220,133,28)" fg:x="28378" fg:w="12"/><text x="25.9075%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (12 samples, 0.01%)</title><rect x="25.6575%" y="341" width="0.0108%" height="15" fill="rgb(217,180,4)" fg:x="28378" fg:w="12"/><text x="25.9075%" y="351.50"></text></g><g><title>bevy_crevice::std430::writer::Writer&lt;W&gt;::write (24 samples, 0.02%)</title><rect x="25.6476%" y="421" width="0.0217%" height="15" fill="rgb(251,24,1)" fg:x="28367" fg:w="24"/><text x="25.8976%" y="431.50"></text></g><g><title>&lt;[T] as bevy_crevice::std430::traits::WriteStd430&gt;::write_std430 (24 samples, 0.02%)</title><rect x="25.6476%" y="405" width="0.0217%" height="15" fill="rgb(212,185,49)" fg:x="28367" fg:w="24"/><text x="25.8976%" y="415.50"></text></g><g><title>bevy_pbr::render::light::ViewClusterBindings::write_buffers (40 samples, 0.04%)</title><rect x="25.6422%" y="453" width="0.0362%" height="15" fill="rgb(215,175,22)" fg:x="28361" fg:w="40"/><text x="25.8922%" y="463.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (40 samples, 0.04%)</title><rect x="25.6422%" y="437" width="0.0362%" height="15" fill="rgb(250,205,14)" fg:x="28361" fg:w="40"/><text x="25.8922%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (58 samples, 0.05%)</title><rect x="25.6268%" y="533" width="0.0524%" height="15" fill="rgb(225,211,22)" fg:x="28344" fg:w="58"/><text x="25.8768%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run::call_inner (57 samples, 0.05%)</title><rect x="25.6277%" y="517" width="0.0515%" height="15" fill="rgb(251,179,42)" fg:x="28345" fg:w="57"/><text x="25.8777%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57 samples, 0.05%)</title><rect x="25.6277%" y="501" width="0.0515%" height="15" fill="rgb(208,216,51)" fg:x="28345" fg:w="57"/><text x="25.8777%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (57 samples, 0.05%)</title><rect x="25.6277%" y="485" width="0.0515%" height="15" fill="rgb(235,36,11)" fg:x="28345" fg:w="57"/><text x="25.8777%" y="495.50"></text></g><g><title>bevy_pbr::render::light::prepare_clusters (57 samples, 0.05%)</title><rect x="25.6277%" y="469" width="0.0515%" height="15" fill="rgb(213,189,28)" fg:x="28345" fg:w="57"/><text x="25.8777%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,048 samples, 2.76%)</title><rect x="22.9252%" y="549" width="2.7558%" height="15" fill="rgb(227,203,42)" fg:x="25356" fg:w="3048"/><text x="23.1752%" y="559.50">&lt;b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,053 samples, 2.76%)</title><rect x="22.9216%" y="581" width="2.7603%" height="15" fill="rgb(244,72,36)" fg:x="25352" fg:w="3053"/><text x="23.1716%" y="591.50">&lt;c..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,050 samples, 2.76%)</title><rect x="22.9243%" y="565" width="2.7576%" height="15" fill="rgb(213,53,17)" fg:x="25355" fg:w="3050"/><text x="23.1743%" y="575.50">be..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,085 samples, 2.79%)</title><rect x="22.8936%" y="709" width="2.7893%" height="15" fill="rgb(207,167,3)" fg:x="25321" fg:w="3085"/><text x="23.1436%" y="719.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,085 samples, 2.79%)</title><rect x="22.8936%" y="693" width="2.7893%" height="15" fill="rgb(216,98,30)" fg:x="25321" fg:w="3085"/><text x="23.1436%" y="703.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,084 samples, 2.79%)</title><rect x="22.8945%" y="677" width="2.7884%" height="15" fill="rgb(236,123,15)" fg:x="25322" fg:w="3084"/><text x="23.1445%" y="687.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,079 samples, 2.78%)</title><rect x="22.8990%" y="661" width="2.7838%" height="15" fill="rgb(248,81,50)" fg:x="25327" fg:w="3079"/><text x="23.1490%" y="671.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,079 samples, 2.78%)</title><rect x="22.8990%" y="645" width="2.7838%" height="15" fill="rgb(214,120,4)" fg:x="25327" fg:w="3079"/><text x="23.1490%" y="655.50">as..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,054 samples, 2.76%)</title><rect x="22.9216%" y="629" width="2.7612%" height="15" fill="rgb(208,179,34)" fg:x="25352" fg:w="3054"/><text x="23.1716%" y="639.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,054 samples, 2.76%)</title><rect x="22.9216%" y="613" width="2.7612%" height="15" fill="rgb(227,140,7)" fg:x="25352" fg:w="3054"/><text x="23.1716%" y="623.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,054 samples, 2.76%)</title><rect x="22.9216%" y="597" width="2.7612%" height="15" fill="rgb(214,22,6)" fg:x="25352" fg:w="3054"/><text x="23.1716%" y="607.50">as..</text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (28 samples, 0.03%)</title><rect x="25.6828%" y="645" width="0.0253%" height="15" fill="rgb(207,137,27)" fg:x="28406" fg:w="28"/><text x="25.9328%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (28 samples, 0.03%)</title><rect x="25.6828%" y="629" width="0.0253%" height="15" fill="rgb(210,8,46)" fg:x="28406" fg:w="28"/><text x="25.9328%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (28 samples, 0.03%)</title><rect x="25.6828%" y="613" width="0.0253%" height="15" fill="rgb(240,16,54)" fg:x="28406" fg:w="28"/><text x="25.9328%" y="623.50"></text></g><g><title>syscall (24 samples, 0.02%)</title><rect x="25.6865%" y="597" width="0.0217%" height="15" fill="rgb(211,209,29)" fg:x="28410" fg:w="24"/><text x="25.9365%" y="607.50"></text></g><g><title>__GI___clone (3,115 samples, 2.82%)</title><rect x="22.8927%" y="997" width="2.8164%" height="15" fill="rgb(226,228,24)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="1007.50">__..</text></g><g><title>start_thread (3,115 samples, 2.82%)</title><rect x="22.8927%" y="981" width="2.8164%" height="15" fill="rgb(222,84,9)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="991.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,115 samples, 2.82%)</title><rect x="22.8927%" y="965" width="2.8164%" height="15" fill="rgb(234,203,30)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="975.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,115 samples, 2.82%)</title><rect x="22.8927%" y="949" width="2.8164%" height="15" fill="rgb(238,109,14)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="959.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,115 samples, 2.82%)</title><rect x="22.8927%" y="933" width="2.8164%" height="15" fill="rgb(233,206,34)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="943.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,115 samples, 2.82%)</title><rect x="22.8927%" y="917" width="2.8164%" height="15" fill="rgb(220,167,47)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="927.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,115 samples, 2.82%)</title><rect x="22.8927%" y="901" width="2.8164%" height="15" fill="rgb(238,105,10)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="911.50">st..</text></g><g><title>std::panic::catch_unwind (3,115 samples, 2.82%)</title><rect x="22.8927%" y="885" width="2.8164%" height="15" fill="rgb(213,227,17)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="895.50">st..</text></g><g><title>std::panicking::try (3,115 samples, 2.82%)</title><rect x="22.8927%" y="869" width="2.8164%" height="15" fill="rgb(217,132,38)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="879.50">st..</text></g><g><title>std::panicking::try::do_call (3,115 samples, 2.82%)</title><rect x="22.8927%" y="853" width="2.8164%" height="15" fill="rgb(242,146,4)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,115 samples, 2.82%)</title><rect x="22.8927%" y="837" width="2.8164%" height="15" fill="rgb(212,61,9)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="847.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,115 samples, 2.82%)</title><rect x="22.8927%" y="821" width="2.8164%" height="15" fill="rgb(247,126,22)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="831.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,115 samples, 2.82%)</title><rect x="22.8927%" y="805" width="2.8164%" height="15" fill="rgb(220,196,2)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="815.50">st..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (3,115 samples, 2.82%)</title><rect x="22.8927%" y="789" width="2.8164%" height="15" fill="rgb(208,46,4)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="799.50">be..</text></g><g><title>futures_lite::future::block_on (3,115 samples, 2.82%)</title><rect x="22.8927%" y="773" width="2.8164%" height="15" fill="rgb(252,104,46)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="783.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,115 samples, 2.82%)</title><rect x="22.8927%" y="757" width="2.8164%" height="15" fill="rgb(237,152,48)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="767.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,115 samples, 2.82%)</title><rect x="22.8927%" y="741" width="2.8164%" height="15" fill="rgb(221,59,37)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="751.50">st..</text></g><g><title>futures_lite::future::block_on::{{closure}} (3,115 samples, 2.82%)</title><rect x="22.8927%" y="725" width="2.8164%" height="15" fill="rgb(209,202,51)" fg:x="25320" fg:w="3115"/><text x="23.1427%" y="735.50">fu..</text></g><g><title>parking::Parker::park (29 samples, 0.03%)</title><rect x="25.6828%" y="709" width="0.0262%" height="15" fill="rgb(228,81,30)" fg:x="28406" fg:w="29"/><text x="25.9328%" y="719.50"></text></g><g><title>parking::Inner::park (29 samples, 0.03%)</title><rect x="25.6828%" y="693" width="0.0262%" height="15" fill="rgb(227,42,39)" fg:x="28406" fg:w="29"/><text x="25.9328%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (29 samples, 0.03%)</title><rect x="25.6828%" y="677" width="0.0262%" height="15" fill="rgb(221,26,2)" fg:x="28406" fg:w="29"/><text x="25.9328%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (29 samples, 0.03%)</title><rect x="25.6828%" y="661" width="0.0262%" height="15" fill="rgb(254,61,31)" fg:x="28406" fg:w="29"/><text x="25.9328%" y="671.50"></text></g><g><title>TaskPool_(9) (3,224 samples, 2.91%)</title><rect x="22.7996%" y="1013" width="2.9149%" height="15" fill="rgb(222,173,38)" fg:x="25217" fg:w="3224"/><text x="23.0496%" y="1023.50">Ta..</text></g><g><title>__futex_abstimed_wait_common (20 samples, 0.02%)</title><rect x="25.7299%" y="901" width="0.0181%" height="15" fill="rgb(218,50,12)" fg:x="28458" fg:w="20"/><text x="25.9799%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (26 samples, 0.02%)</title><rect x="25.7281%" y="917" width="0.0235%" height="15" fill="rgb(223,88,40)" fg:x="28456" fg:w="26"/><text x="25.9781%" y="927.50"></text></g><g><title>_nv011glcore (31 samples, 0.03%)</title><rect x="25.7253%" y="933" width="0.0280%" height="15" fill="rgb(237,54,19)" fg:x="28453" fg:w="31"/><text x="25.9753%" y="943.50"></text></g><g><title>[vkrt]_Analysis (44 samples, 0.04%)</title><rect x="25.7145%" y="1013" width="0.0398%" height="15" fill="rgb(251,129,25)" fg:x="28441" fg:w="44"/><text x="25.9645%" y="1023.50"></text></g><g><title>__GI___clone (38 samples, 0.03%)</title><rect x="25.7199%" y="997" width="0.0344%" height="15" fill="rgb(238,97,19)" fg:x="28447" fg:w="38"/><text x="25.9699%" y="1007.50"></text></g><g><title>start_thread (34 samples, 0.03%)</title><rect x="25.7235%" y="981" width="0.0307%" height="15" fill="rgb(240,169,18)" fg:x="28451" fg:w="34"/><text x="25.9735%" y="991.50"></text></g><g><title>_nv011glcore (33 samples, 0.03%)</title><rect x="25.7244%" y="965" width="0.0298%" height="15" fill="rgb(230,187,49)" fg:x="28452" fg:w="33"/><text x="25.9744%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (33 samples, 0.03%)</title><rect x="25.7244%" y="949" width="0.0298%" height="15" fill="rgb(209,44,26)" fg:x="28452" fg:w="33"/><text x="25.9744%" y="959.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="25.7561%" y="981" width="0.0136%" height="15" fill="rgb(244,0,6)" fg:x="28487" fg:w="15"/><text x="26.0061%" y="991.50"></text></g><g><title>[[heap]] (19 samples, 0.02%)</title><rect x="25.7561%" y="997" width="0.0172%" height="15" fill="rgb(248,18,21)" fg:x="28487" fg:w="19"/><text x="26.0061%" y="1007.50"></text></g><g><title>[anon] (14 samples, 0.01%)</title><rect x="25.7733%" y="997" width="0.0127%" height="15" fill="rgb(245,180,19)" fg:x="28506" fg:w="14"/><text x="26.0233%" y="1007.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="25.7859%" y="981" width="0.0145%" height="15" fill="rgb(252,118,36)" fg:x="28520" fg:w="16"/><text x="26.0359%" y="991.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="25.8004%" y="981" width="0.0190%" height="15" fill="rgb(210,224,19)" fg:x="28536" fg:w="21"/><text x="26.0504%" y="991.50"></text></g><g><title>[unknown] (39 samples, 0.04%)</title><rect x="25.7859%" y="997" width="0.0353%" height="15" fill="rgb(218,30,24)" fg:x="28520" fg:w="39"/><text x="26.0359%" y="1007.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (14 samples, 0.01%)</title><rect x="25.8230%" y="741" width="0.0127%" height="15" fill="rgb(219,75,50)" fg:x="28561" fg:w="14"/><text x="26.0730%" y="751.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (14 samples, 0.01%)</title><rect x="25.8230%" y="725" width="0.0127%" height="15" fill="rgb(234,72,50)" fg:x="28561" fg:w="14"/><text x="26.0730%" y="735.50"></text></g><g><title>snd_pcm_extplug_set_param_link (13 samples, 0.01%)</title><rect x="25.8239%" y="709" width="0.0118%" height="15" fill="rgb(219,100,48)" fg:x="28562" fg:w="13"/><text x="26.0739%" y="719.50"></text></g><g><title>alsa::pcm::PCM::status (12 samples, 0.01%)</title><rect x="25.8402%" y="741" width="0.0108%" height="15" fill="rgb(253,5,41)" fg:x="28580" fg:w="12"/><text x="26.0902%" y="751.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (12 samples, 0.01%)</title><rect x="25.8402%" y="725" width="0.0108%" height="15" fill="rgb(247,181,11)" fg:x="28580" fg:w="12"/><text x="26.0902%" y="735.50"></text></g><g><title>snd_pcm_status (12 samples, 0.01%)</title><rect x="25.8402%" y="709" width="0.0108%" height="15" fill="rgb(222,223,25)" fg:x="28580" fg:w="12"/><text x="26.0902%" y="719.50"></text></g><g><title>snd_pcm_extplug_set_param_link (12 samples, 0.01%)</title><rect x="25.8402%" y="693" width="0.0108%" height="15" fill="rgb(214,198,28)" fg:x="28580" fg:w="12"/><text x="26.0902%" y="703.50"></text></g><g><title>alsa::poll::poll (47 samples, 0.04%)</title><rect x="25.8510%" y="741" width="0.0425%" height="15" fill="rgb(230,46,43)" fg:x="28592" fg:w="47"/><text x="26.1010%" y="751.50"></text></g><g><title>__libc_poll (44 samples, 0.04%)</title><rect x="25.8537%" y="725" width="0.0398%" height="15" fill="rgb(233,65,53)" fg:x="28595" fg:w="44"/><text x="26.1037%" y="735.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (80 samples, 0.07%)</title><rect x="25.8221%" y="757" width="0.0723%" height="15" fill="rgb(221,121,27)" fg:x="28560" fg:w="80"/><text x="26.0721%" y="767.50"></text></g><g><title>snd_pcm_extplug_set_param_link (13 samples, 0.01%)</title><rect x="25.8962%" y="725" width="0.0118%" height="15" fill="rgb(247,70,47)" fg:x="28642" fg:w="13"/><text x="26.1462%" y="735.50"></text></g><g><title>snd_async_add_pcm_handler (13 samples, 0.01%)</title><rect x="25.8962%" y="709" width="0.0118%" height="15" fill="rgb(228,85,35)" fg:x="28642" fg:w="13"/><text x="26.1462%" y="719.50"></text></g><g><title>snd_pcm_extplug_set_param_link (12 samples, 0.01%)</title><rect x="25.8971%" y="693" width="0.0108%" height="15" fill="rgb(209,50,18)" fg:x="28643" fg:w="12"/><text x="26.1471%" y="703.50"></text></g><g><title>pulse_poll_deactivate (12 samples, 0.01%)</title><rect x="25.8971%" y="677" width="0.0108%" height="15" fill="rgb(250,19,35)" fg:x="28643" fg:w="12"/><text x="26.1471%" y="687.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (15 samples, 0.01%)</title><rect x="25.8953%" y="741" width="0.0136%" height="15" fill="rgb(253,107,29)" fg:x="28641" fg:w="15"/><text x="26.1453%" y="751.50"></text></g><g><title>core::mem::swap (43 samples, 0.04%)</title><rect x="25.9423%" y="645" width="0.0389%" height="15" fill="rgb(252,179,29)" fg:x="28693" fg:w="43"/><text x="26.1923%" y="655.50"></text></g><g><title>core::mem::swap_simple (43 samples, 0.04%)</title><rect x="25.9423%" y="629" width="0.0389%" height="15" fill="rgb(238,194,6)" fg:x="28693" fg:w="43"/><text x="26.1923%" y="639.50"></text></g><g><title>__GI___clone (197 samples, 0.18%)</title><rect x="25.8212%" y="997" width="0.1781%" height="15" fill="rgb(238,164,29)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="1007.50"></text></g><g><title>start_thread (197 samples, 0.18%)</title><rect x="25.8212%" y="981" width="0.1781%" height="15" fill="rgb(224,25,9)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (197 samples, 0.18%)</title><rect x="25.8212%" y="965" width="0.1781%" height="15" fill="rgb(244,153,23)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (197 samples, 0.18%)</title><rect x="25.8212%" y="949" width="0.1781%" height="15" fill="rgb(212,203,14)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (197 samples, 0.18%)</title><rect x="25.8212%" y="933" width="0.1781%" height="15" fill="rgb(220,164,20)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (197 samples, 0.18%)</title><rect x="25.8212%" y="917" width="0.1781%" height="15" fill="rgb(222,203,48)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (197 samples, 0.18%)</title><rect x="25.8212%" y="901" width="0.1781%" height="15" fill="rgb(215,159,22)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="911.50"></text></g><g><title>std::panic::catch_unwind (197 samples, 0.18%)</title><rect x="25.8212%" y="885" width="0.1781%" height="15" fill="rgb(216,183,47)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="895.50"></text></g><g><title>std::panicking::try (197 samples, 0.18%)</title><rect x="25.8212%" y="869" width="0.1781%" height="15" fill="rgb(229,195,25)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="879.50"></text></g><g><title>std::panicking::try::do_call (197 samples, 0.18%)</title><rect x="25.8212%" y="853" width="0.1781%" height="15" fill="rgb(224,132,51)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (197 samples, 0.18%)</title><rect x="25.8212%" y="837" width="0.1781%" height="15" fill="rgb(240,63,7)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (197 samples, 0.18%)</title><rect x="25.8212%" y="821" width="0.1781%" height="15" fill="rgb(249,182,41)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (197 samples, 0.18%)</title><rect x="25.8212%" y="805" width="0.1781%" height="15" fill="rgb(243,47,26)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="815.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (197 samples, 0.18%)</title><rect x="25.8212%" y="789" width="0.1781%" height="15" fill="rgb(233,48,2)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="799.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (197 samples, 0.18%)</title><rect x="25.8212%" y="773" width="0.1781%" height="15" fill="rgb(244,165,34)" fg:x="28559" fg:w="197"/><text x="26.0712%" y="783.50"></text></g><g><title>cpal::host::alsa::process_output (116 samples, 0.10%)</title><rect x="25.8944%" y="757" width="0.1049%" height="15" fill="rgb(207,89,7)" fg:x="28640" fg:w="116"/><text x="26.1444%" y="767.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (98 samples, 0.09%)</title><rect x="25.9107%" y="741" width="0.0886%" height="15" fill="rgb(244,117,36)" fg:x="28658" fg:w="98"/><text x="26.1607%" y="751.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (98 samples, 0.09%)</title><rect x="25.9107%" y="725" width="0.0886%" height="15" fill="rgb(226,144,34)" fg:x="28658" fg:w="98"/><text x="26.1607%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (98 samples, 0.09%)</title><rect x="25.9107%" y="709" width="0.0886%" height="15" fill="rgb(213,23,19)" fg:x="28658" fg:w="98"/><text x="26.1607%" y="719.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (98 samples, 0.09%)</title><rect x="25.9107%" y="693" width="0.0886%" height="15" fill="rgb(217,75,12)" fg:x="28658" fg:w="98"/><text x="26.1607%" y="703.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.08%)</title><rect x="25.9161%" y="677" width="0.0832%" height="15" fill="rgb(224,159,17)" fg:x="28664" fg:w="92"/><text x="26.1661%" y="687.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (79 samples, 0.07%)</title><rect x="25.9279%" y="661" width="0.0714%" height="15" fill="rgb(217,118,1)" fg:x="28677" fg:w="79"/><text x="26.1779%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="25.9812%" y="645" width="0.0181%" height="15" fill="rgb(232,180,48)" fg:x="28736" fg:w="20"/><text x="26.2312%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="25.9812%" y="629" width="0.0181%" height="15" fill="rgb(230,27,33)" fg:x="28736" fg:w="20"/><text x="26.2312%" y="639.50"></text></g><g><title>cpal_alsa_out (284 samples, 0.26%)</title><rect x="25.7543%" y="1013" width="0.2568%" height="15" fill="rgb(205,31,21)" fg:x="28485" fg:w="284"/><text x="26.0043%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.02%)</title><rect x="26.0120%" y="997" width="0.0190%" height="15" fill="rgb(253,59,4)" fg:x="28770" fg:w="21"/><text x="26.2620%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (14 samples, 0.01%)</title><rect x="26.0183%" y="981" width="0.0127%" height="15" fill="rgb(224,201,9)" fg:x="28777" fg:w="14"/><text x="26.2683%" y="991.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (14 samples, 0.01%)</title><rect x="26.0183%" y="965" width="0.0127%" height="15" fill="rgb(229,206,30)" fg:x="28777" fg:w="14"/><text x="26.2683%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (14 samples, 0.01%)</title><rect x="26.0183%" y="949" width="0.0127%" height="15" fill="rgb(212,67,47)" fg:x="28777" fg:w="14"/><text x="26.2683%" y="959.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (14 samples, 0.01%)</title><rect x="26.0183%" y="933" width="0.0127%" height="15" fill="rgb(211,96,50)" fg:x="28777" fg:w="14"/><text x="26.2683%" y="943.50"></text></g><g><title>core::num::dec2flt::dec2flt (14 samples, 0.01%)</title><rect x="26.0183%" y="917" width="0.0127%" height="15" fill="rgb(252,114,18)" fg:x="28777" fg:w="14"/><text x="26.2683%" y="927.50"></text></g><g><title>_nv011glcore (14 samples, 0.01%)</title><rect x="26.1458%" y="981" width="0.0127%" height="15" fill="rgb(223,58,37)" fg:x="28918" fg:w="14"/><text x="26.3958%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (196 samples, 0.18%)</title><rect x="26.1729%" y="981" width="0.1772%" height="15" fill="rgb(237,70,4)" fg:x="28948" fg:w="196"/><text x="26.4229%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (620 samples, 0.56%)</title><rect x="26.3980%" y="981" width="0.5606%" height="15" fill="rgb(244,85,46)" fg:x="29197" fg:w="620"/><text x="26.6480%" y="991.50"></text></g><g><title>glXCreateGLXPbufferSGIX (29 samples, 0.03%)</title><rect x="26.9975%" y="981" width="0.0262%" height="15" fill="rgb(223,39,52)" fg:x="29860" fg:w="29"/><text x="27.2475%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60 samples, 0.05%)</title><rect x="27.0445%" y="981" width="0.0542%" height="15" fill="rgb(218,200,14)" fg:x="29912" fg:w="60"/><text x="27.2945%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (41 samples, 0.04%)</title><rect x="27.1132%" y="981" width="0.0371%" height="15" fill="rgb(208,171,16)" fg:x="29988" fg:w="41"/><text x="27.3632%" y="991.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (144 samples, 0.13%)</title><rect x="27.1521%" y="981" width="0.1302%" height="15" fill="rgb(234,200,18)" fg:x="30031" fg:w="144"/><text x="27.4021%" y="991.50"></text></g><g><title>[[heap]] (1,426 samples, 1.29%)</title><rect x="26.0427%" y="997" width="1.2893%" height="15" fill="rgb(228,45,11)" fg:x="28804" fg:w="1426"/><text x="26.2927%" y="1007.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (256 samples, 0.23%)</title><rect x="27.3320%" y="981" width="0.2315%" height="15" fill="rgb(237,182,11)" fg:x="30230" fg:w="256"/><text x="27.5820%" y="991.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.11%)</title><rect x="27.4513%" y="965" width="0.1121%" height="15" fill="rgb(241,175,49)" fg:x="30362" fg:w="124"/><text x="27.7013%" y="975.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (124 samples, 0.11%)</title><rect x="27.4513%" y="949" width="0.1121%" height="15" fill="rgb(247,38,35)" fg:x="30362" fg:w="124"/><text x="27.7013%" y="959.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.07%)</title><rect x="27.6105%" y="981" width="0.0651%" height="15" fill="rgb(228,39,49)" fg:x="30538" fg:w="72"/><text x="27.8605%" y="991.50"></text></g><g><title>_dl_update_slotinfo (1,166 samples, 1.05%)</title><rect x="27.6909%" y="981" width="1.0542%" height="15" fill="rgb(226,101,26)" fg:x="30627" fg:w="1166"/><text x="27.9409%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (142 samples, 0.13%)</title><rect x="28.9016%" y="933" width="0.1284%" height="15" fill="rgb(206,141,19)" fg:x="31966" fg:w="142"/><text x="29.1516%" y="943.50"></text></g><g><title>async_task::header::Header::register (439 samples, 0.40%)</title><rect x="28.7696%" y="981" width="0.3969%" height="15" fill="rgb(211,200,13)" fg:x="31820" fg:w="439"/><text x="29.0196%" y="991.50"></text></g><g><title>async_task::utils::abort_on_panic (293 samples, 0.26%)</title><rect x="28.9016%" y="965" width="0.2649%" height="15" fill="rgb(241,121,6)" fg:x="31966" fg:w="293"/><text x="29.1516%" y="975.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (293 samples, 0.26%)</title><rect x="28.9016%" y="949" width="0.2649%" height="15" fill="rgb(234,221,29)" fg:x="31966" fg:w="293"/><text x="29.1516%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (151 samples, 0.14%)</title><rect x="29.0300%" y="933" width="0.1365%" height="15" fill="rgb(229,136,5)" fg:x="32108" fg:w="151"/><text x="29.2800%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (151 samples, 0.14%)</title><rect x="29.0300%" y="917" width="0.1365%" height="15" fill="rgb(238,36,11)" fg:x="32108" fg:w="151"/><text x="29.2800%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (151 samples, 0.14%)</title><rect x="29.0300%" y="901" width="0.1365%" height="15" fill="rgb(251,55,41)" fg:x="32108" fg:w="151"/><text x="29.2800%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (287 samples, 0.26%)</title><rect x="29.2605%" y="981" width="0.2595%" height="15" fill="rgb(242,34,40)" fg:x="32363" fg:w="287"/><text x="29.5105%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (141 samples, 0.13%)</title><rect x="29.3925%" y="965" width="0.1275%" height="15" fill="rgb(215,42,17)" fg:x="32509" fg:w="141"/><text x="29.6425%" y="975.50"></text></g><g><title>update_get_addr (258 samples, 0.23%)</title><rect x="29.5317%" y="981" width="0.2333%" height="15" fill="rgb(207,44,46)" fg:x="32663" fg:w="258"/><text x="29.7817%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.02%)</title><rect x="29.7695%" y="981" width="0.0172%" height="15" fill="rgb(211,206,28)" fg:x="32926" fg:w="19"/><text x="30.0195%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="29.8066%" y="965" width="0.0108%" height="15" fill="rgb(237,167,16)" fg:x="32967" fg:w="12"/><text x="30.0566%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (12 samples, 0.01%)</title><rect x="29.8066%" y="949" width="0.0108%" height="15" fill="rgb(233,66,6)" fg:x="32967" fg:w="12"/><text x="30.0566%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (24 samples, 0.02%)</title><rect x="29.7994%" y="981" width="0.0217%" height="15" fill="rgb(246,123,29)" fg:x="32959" fg:w="24"/><text x="30.0494%" y="991.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (15 samples, 0.01%)</title><rect x="29.8211%" y="981" width="0.0136%" height="15" fill="rgb(209,62,40)" fg:x="32983" fg:w="15"/><text x="30.0711%" y="991.50"></text></g><g><title>[[stack]] (2,782 samples, 2.52%)</title><rect x="27.3320%" y="997" width="2.5153%" height="15" fill="rgb(218,4,25)" fg:x="30230" fg:w="2782"/><text x="27.5820%" y="1007.50">[[..</text></g><g><title>async_executor::Executor::try_tick (575 samples, 0.52%)</title><rect x="29.8726%" y="981" width="0.5199%" height="15" fill="rgb(253,91,49)" fg:x="33040" fg:w="575"/><text x="30.1226%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (134 samples, 0.12%)</title><rect x="30.2713%" y="965" width="0.1212%" height="15" fill="rgb(228,155,29)" fg:x="33481" fg:w="134"/><text x="30.5213%" y="975.50"></text></g><g><title>async_task::header::Header::register (168 samples, 0.15%)</title><rect x="30.3952%" y="981" width="0.1519%" height="15" fill="rgb(243,57,37)" fg:x="33618" fg:w="168"/><text x="30.6452%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (431 samples, 0.39%)</title><rect x="30.5507%" y="981" width="0.3897%" height="15" fill="rgb(244,167,17)" fg:x="33790" fg:w="431"/><text x="30.8007%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (48 samples, 0.04%)</title><rect x="30.9458%" y="981" width="0.0434%" height="15" fill="rgb(207,181,38)" fg:x="34227" fg:w="48"/><text x="31.1958%" y="991.50"></text></g><g><title>update_get_addr (254 samples, 0.23%)</title><rect x="30.9937%" y="981" width="0.2297%" height="15" fill="rgb(211,8,23)" fg:x="34280" fg:w="254"/><text x="31.2437%" y="991.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (13 samples, 0.01%)</title><rect x="31.2261%" y="981" width="0.0118%" height="15" fill="rgb(235,11,44)" fg:x="34537" fg:w="13"/><text x="31.4761%" y="991.50"></text></g><g><title>[anon] (1,541 samples, 1.39%)</title><rect x="29.8473%" y="997" width="1.3933%" height="15" fill="rgb(248,18,52)" fg:x="33012" fg:w="1541"/><text x="30.0973%" y="1007.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (264 samples, 0.24%)</title><rect x="31.2487%" y="981" width="0.2387%" height="15" fill="rgb(208,4,7)" fg:x="34562" fg:w="264"/><text x="31.4987%" y="991.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (23 samples, 0.02%)</title><rect x="31.5172%" y="981" width="0.0208%" height="15" fill="rgb(240,17,39)" fg:x="34859" fg:w="23"/><text x="31.7672%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (13 samples, 0.01%)</title><rect x="31.5263%" y="965" width="0.0118%" height="15" fill="rgb(207,170,3)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="31.5263%" y="949" width="0.0118%" height="15" fill="rgb(236,100,52)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="31.5263%" y="933" width="0.0118%" height="15" fill="rgb(246,78,51)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="943.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (13 samples, 0.01%)</title><rect x="31.5263%" y="917" width="0.0118%" height="15" fill="rgb(211,17,15)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="927.50"></text></g><g><title>async_executor::Executor::try_tick (13 samples, 0.01%)</title><rect x="31.5263%" y="901" width="0.0118%" height="15" fill="rgb(209,59,46)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13 samples, 0.01%)</title><rect x="31.5263%" y="885" width="0.0118%" height="15" fill="rgb(210,92,25)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="31.5263%" y="869" width="0.0118%" height="15" fill="rgb(238,174,52)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13 samples, 0.01%)</title><rect x="31.5263%" y="853" width="0.0118%" height="15" fill="rgb(230,73,7)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="31.5263%" y="837" width="0.0118%" height="15" fill="rgb(243,124,40)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (13 samples, 0.01%)</title><rect x="31.5263%" y="821" width="0.0118%" height="15" fill="rgb(244,170,11)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (13 samples, 0.01%)</title><rect x="31.5263%" y="805" width="0.0118%" height="15" fill="rgb(207,114,54)" fg:x="34869" fg:w="13"/><text x="31.7763%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (15 samples, 0.01%)</title><rect x="31.5407%" y="965" width="0.0136%" height="15" fill="rgb(205,42,20)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (15 samples, 0.01%)</title><rect x="31.5407%" y="949" width="0.0136%" height="15" fill="rgb(230,30,28)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="31.5407%" y="933" width="0.0136%" height="15" fill="rgb(205,73,54)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="31.5407%" y="917" width="0.0136%" height="15" fill="rgb(254,227,23)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (15 samples, 0.01%)</title><rect x="31.5407%" y="901" width="0.0136%" height="15" fill="rgb(228,202,34)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="911.50"></text></g><g><title>async_executor::Executor::try_tick (15 samples, 0.01%)</title><rect x="31.5407%" y="885" width="0.0136%" height="15" fill="rgb(222,225,37)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15 samples, 0.01%)</title><rect x="31.5407%" y="869" width="0.0136%" height="15" fill="rgb(221,14,54)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="31.5407%" y="853" width="0.0136%" height="15" fill="rgb(254,102,2)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="863.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (15 samples, 0.01%)</title><rect x="31.5407%" y="837" width="0.0136%" height="15" fill="rgb(232,104,17)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="31.5407%" y="821" width="0.0136%" height="15" fill="rgb(250,220,14)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (15 samples, 0.01%)</title><rect x="31.5407%" y="805" width="0.0136%" height="15" fill="rgb(241,158,9)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15 samples, 0.01%)</title><rect x="31.5407%" y="789" width="0.0136%" height="15" fill="rgb(246,9,43)" fg:x="34885" fg:w="15"/><text x="31.7907%" y="799.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (13 samples, 0.01%)</title><rect x="31.5570%" y="853" width="0.0118%" height="15" fill="rgb(206,73,33)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="863.50"></text></g><g><title>ash::device::Device::queue_submit (13 samples, 0.01%)</title><rect x="31.5570%" y="837" width="0.0118%" height="15" fill="rgb(222,79,8)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (13 samples, 0.01%)</title><rect x="31.5570%" y="821" width="0.0118%" height="15" fill="rgb(234,8,54)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="831.50"></text></g><g><title>__glx_Main (13 samples, 0.01%)</title><rect x="31.5570%" y="805" width="0.0118%" height="15" fill="rgb(209,134,38)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="31.5570%" y="789" width="0.0118%" height="15" fill="rgb(230,127,29)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="31.5570%" y="773" width="0.0118%" height="15" fill="rgb(242,44,41)" fg:x="34903" fg:w="13"/><text x="31.8070%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.02%)</title><rect x="31.5715%" y="773" width="0.0199%" height="15" fill="rgb(222,56,43)" fg:x="34919" fg:w="22"/><text x="31.8215%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="31.5715%" y="757" width="0.0199%" height="15" fill="rgb(238,39,47)" fg:x="34919" fg:w="22"/><text x="31.8215%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="31.5715%" y="741" width="0.0199%" height="15" fill="rgb(226,79,43)" fg:x="34919" fg:w="22"/><text x="31.8215%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (34 samples, 0.03%)</title><rect x="31.5715%" y="821" width="0.0307%" height="15" fill="rgb(242,105,53)" fg:x="34919" fg:w="34"/><text x="31.8215%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (34 samples, 0.03%)</title><rect x="31.5715%" y="805" width="0.0307%" height="15" fill="rgb(251,132,46)" fg:x="34919" fg:w="34"/><text x="31.8215%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.03%)</title><rect x="31.5715%" y="789" width="0.0307%" height="15" fill="rgb(231,77,14)" fg:x="34919" fg:w="34"/><text x="31.8215%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;wgpu_hal::vulkan::Buffer&gt;&gt; (12 samples, 0.01%)</title><rect x="31.5914%" y="773" width="0.0108%" height="15" fill="rgb(240,135,9)" fg:x="34941" fg:w="12"/><text x="31.8414%" y="783.50"></text></g><g><title>__free (12 samples, 0.01%)</title><rect x="31.5914%" y="757" width="0.0108%" height="15" fill="rgb(248,109,14)" fg:x="34941" fg:w="12"/><text x="31.8414%" y="767.50"></text></g><g><title>_int_free (12 samples, 0.01%)</title><rect x="31.5914%" y="741" width="0.0108%" height="15" fill="rgb(227,146,52)" fg:x="34941" fg:w="12"/><text x="31.8414%" y="751.50"></text></g><g><title>malloc_consolidate (12 samples, 0.01%)</title><rect x="31.5914%" y="725" width="0.0108%" height="15" fill="rgb(232,54,3)" fg:x="34941" fg:w="12"/><text x="31.8414%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (107 samples, 0.10%)</title><rect x="31.5715%" y="837" width="0.0967%" height="15" fill="rgb(229,201,43)" fg:x="34919" fg:w="107"/><text x="31.8215%" y="847.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (73 samples, 0.07%)</title><rect x="31.6022%" y="821" width="0.0660%" height="15" fill="rgb(252,161,33)" fg:x="34953" fg:w="73"/><text x="31.8522%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (72 samples, 0.07%)</title><rect x="31.6031%" y="805" width="0.0651%" height="15" fill="rgb(226,146,40)" fg:x="34954" fg:w="72"/><text x="31.8531%" y="815.50"></text></g><g><title>ash::device::Device::reset_command_pool (71 samples, 0.06%)</title><rect x="31.6040%" y="789" width="0.0642%" height="15" fill="rgb(219,47,25)" fg:x="34955" fg:w="71"/><text x="31.8540%" y="799.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_pool (71 samples, 0.06%)</title><rect x="31.6040%" y="773" width="0.0642%" height="15" fill="rgb(250,135,13)" fg:x="34955" fg:w="71"/><text x="31.8540%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (71 samples, 0.06%)</title><rect x="31.6040%" y="757" width="0.0642%" height="15" fill="rgb(219,229,18)" fg:x="34955" fg:w="71"/><text x="31.8540%" y="767.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (67 samples, 0.06%)</title><rect x="31.6076%" y="741" width="0.0606%" height="15" fill="rgb(217,152,27)" fg:x="34959" fg:w="67"/><text x="31.8576%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (52 samples, 0.05%)</title><rect x="31.6212%" y="725" width="0.0470%" height="15" fill="rgb(225,71,47)" fg:x="34974" fg:w="52"/><text x="31.8712%" y="735.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.02%)</title><rect x="31.6474%" y="709" width="0.0208%" height="15" fill="rgb(220,139,14)" fg:x="35003" fg:w="23"/><text x="31.8974%" y="719.50"></text></g><g><title>_nv012glcore (16 samples, 0.01%)</title><rect x="31.6538%" y="693" width="0.0145%" height="15" fill="rgb(247,54,32)" fg:x="35010" fg:w="16"/><text x="31.9038%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.01%)</title><rect x="31.6827%" y="789" width="0.0127%" height="15" fill="rgb(252,131,39)" fg:x="35042" fg:w="14"/><text x="31.9327%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="31.6827%" y="773" width="0.0127%" height="15" fill="rgb(210,108,39)" fg:x="35042" fg:w="14"/><text x="31.9327%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (14 samples, 0.01%)</title><rect x="31.6827%" y="757" width="0.0127%" height="15" fill="rgb(205,23,29)" fg:x="35042" fg:w="14"/><text x="31.9327%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (14 samples, 0.01%)</title><rect x="31.6827%" y="741" width="0.0127%" height="15" fill="rgb(246,139,46)" fg:x="35042" fg:w="14"/><text x="31.9327%" y="751.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="31.6827%" y="725" width="0.0127%" height="15" fill="rgb(250,81,26)" fg:x="35042" fg:w="14"/><text x="31.9327%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (20 samples, 0.02%)</title><rect x="31.6791%" y="821" width="0.0181%" height="15" fill="rgb(214,104,7)" fg:x="35038" fg:w="20"/><text x="31.9291%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="31.6800%" y="805" width="0.0172%" height="15" fill="rgb(233,189,8)" fg:x="35039" fg:w="19"/><text x="31.9300%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.7134%" y="821" width="0.0217%" height="15" fill="rgb(228,141,17)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (24 samples, 0.02%)</title><rect x="31.7134%" y="805" width="0.0217%" height="15" fill="rgb(247,157,1)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="815.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="31.7134%" y="789" width="0.0217%" height="15" fill="rgb(249,225,5)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="799.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (24 samples, 0.02%)</title><rect x="31.7134%" y="773" width="0.0217%" height="15" fill="rgb(242,55,13)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.02%)</title><rect x="31.7134%" y="757" width="0.0217%" height="15" fill="rgb(230,49,50)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.02%)</title><rect x="31.7134%" y="741" width="0.0217%" height="15" fill="rgb(241,111,38)" fg:x="35076" fg:w="24"/><text x="31.9634%" y="751.50"></text></g><g><title>log::__private_api_log (13 samples, 0.01%)</title><rect x="31.7396%" y="821" width="0.0118%" height="15" fill="rgb(252,155,4)" fg:x="35105" fg:w="13"/><text x="31.9896%" y="831.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="31.7632%" y="773" width="0.0145%" height="15" fill="rgb(212,69,32)" fg:x="35131" fg:w="16"/><text x="32.0132%" y="783.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (16 samples, 0.01%)</title><rect x="31.7632%" y="757" width="0.0145%" height="15" fill="rgb(243,107,47)" fg:x="35131" fg:w="16"/><text x="32.0132%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="31.7650%" y="741" width="0.0127%" height="15" fill="rgb(247,130,12)" fg:x="35133" fg:w="14"/><text x="32.0150%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="31.7650%" y="725" width="0.0127%" height="15" fill="rgb(233,74,16)" fg:x="35133" fg:w="14"/><text x="32.0150%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="31.7632%" y="805" width="0.0235%" height="15" fill="rgb(208,58,18)" fg:x="35131" fg:w="26"/><text x="32.0132%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (26 samples, 0.02%)</title><rect x="31.7632%" y="789" width="0.0235%" height="15" fill="rgb(242,225,1)" fg:x="35131" fg:w="26"/><text x="32.0132%" y="799.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (283 samples, 0.26%)</title><rect x="31.5697%" y="853" width="0.2559%" height="15" fill="rgb(249,39,40)" fg:x="34917" fg:w="283"/><text x="31.8197%" y="863.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (174 samples, 0.16%)</title><rect x="31.6682%" y="837" width="0.1573%" height="15" fill="rgb(207,72,44)" fg:x="35026" fg:w="174"/><text x="31.9182%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (71 samples, 0.06%)</title><rect x="31.7613%" y="821" width="0.0642%" height="15" fill="rgb(215,193,12)" fg:x="35129" fg:w="71"/><text x="32.0113%" y="831.50"></text></g><g><title>wgpu_core::RefCount::load (33 samples, 0.03%)</title><rect x="31.7957%" y="805" width="0.0298%" height="15" fill="rgb(248,41,39)" fg:x="35167" fg:w="33"/><text x="32.0457%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (33 samples, 0.03%)</title><rect x="31.7957%" y="789" width="0.0298%" height="15" fill="rgb(253,85,4)" fg:x="35167" fg:w="33"/><text x="32.0457%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.03%)</title><rect x="31.7957%" y="773" width="0.0298%" height="15" fill="rgb(243,70,31)" fg:x="35167" fg:w="33"/><text x="32.0457%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (302 samples, 0.27%)</title><rect x="31.5543%" y="917" width="0.2730%" height="15" fill="rgb(253,195,26)" fg:x="34900" fg:w="302"/><text x="31.8043%" y="927.50"></text></g><g><title>wgpu::Queue::submit (299 samples, 0.27%)</title><rect x="31.5570%" y="901" width="0.2703%" height="15" fill="rgb(243,42,11)" fg:x="34903" fg:w="299"/><text x="31.8070%" y="911.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (299 samples, 0.27%)</title><rect x="31.5570%" y="885" width="0.2703%" height="15" fill="rgb(239,66,17)" fg:x="34903" fg:w="299"/><text x="31.8070%" y="895.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (299 samples, 0.27%)</title><rect x="31.5570%" y="869" width="0.2703%" height="15" fill="rgb(217,132,21)" fg:x="34903" fg:w="299"/><text x="31.8070%" y="879.50"></text></g><g><title>_nv009glcore (33 samples, 0.03%)</title><rect x="31.8273%" y="741" width="0.0298%" height="15" fill="rgb(252,202,21)" fg:x="35202" fg:w="33"/><text x="32.0773%" y="751.50"></text></g><g><title>_nv041glcore (33 samples, 0.03%)</title><rect x="31.8273%" y="725" width="0.0298%" height="15" fill="rgb(233,98,36)" fg:x="35202" fg:w="33"/><text x="32.0773%" y="735.50"></text></g><g><title>_nv011glcore (22 samples, 0.02%)</title><rect x="31.8373%" y="709" width="0.0199%" height="15" fill="rgb(216,153,54)" fg:x="35213" fg:w="22"/><text x="32.0873%" y="719.50"></text></g><g><title>_nv041glcore (22 samples, 0.02%)</title><rect x="31.8373%" y="693" width="0.0199%" height="15" fill="rgb(250,99,7)" fg:x="35213" fg:w="22"/><text x="32.0873%" y="703.50"></text></g><g><title>_nv041glcore (22 samples, 0.02%)</title><rect x="31.8373%" y="677" width="0.0199%" height="15" fill="rgb(207,56,50)" fg:x="35213" fg:w="22"/><text x="32.0873%" y="687.50"></text></g><g><title>_nv041glcore (14 samples, 0.01%)</title><rect x="31.8445%" y="661" width="0.0127%" height="15" fill="rgb(244,61,34)" fg:x="35221" fg:w="14"/><text x="32.0945%" y="671.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (356 samples, 0.32%)</title><rect x="31.5380%" y="981" width="0.3219%" height="15" fill="rgb(241,50,38)" fg:x="34882" fg:w="356"/><text x="31.7880%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (338 samples, 0.31%)</title><rect x="31.5543%" y="965" width="0.3056%" height="15" fill="rgb(212,166,30)" fg:x="34900" fg:w="338"/><text x="31.8043%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (338 samples, 0.31%)</title><rect x="31.5543%" y="949" width="0.3056%" height="15" fill="rgb(249,127,32)" fg:x="34900" fg:w="338"/><text x="31.8043%" y="959.50"></text></g><g><title>bevy_render::renderer::render_system (338 samples, 0.31%)</title><rect x="31.5543%" y="933" width="0.3056%" height="15" fill="rgb(209,103,0)" fg:x="34900" fg:w="338"/><text x="31.8043%" y="943.50"></text></g><g><title>wgpu::SurfaceTexture::present (36 samples, 0.03%)</title><rect x="31.8273%" y="917" width="0.0325%" height="15" fill="rgb(238,209,51)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (36 samples, 0.03%)</title><rect x="31.8273%" y="901" width="0.0325%" height="15" fill="rgb(237,56,23)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="911.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (36 samples, 0.03%)</title><rect x="31.8273%" y="885" width="0.0325%" height="15" fill="rgb(215,153,46)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="895.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (36 samples, 0.03%)</title><rect x="31.8273%" y="869" width="0.0325%" height="15" fill="rgb(224,49,31)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="879.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (36 samples, 0.03%)</title><rect x="31.8273%" y="853" width="0.0325%" height="15" fill="rgb(250,18,42)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="863.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (36 samples, 0.03%)</title><rect x="31.8273%" y="837" width="0.0325%" height="15" fill="rgb(215,176,39)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="847.50"></text></g><g><title>__glx_Main (36 samples, 0.03%)</title><rect x="31.8273%" y="821" width="0.0325%" height="15" fill="rgb(223,77,29)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="31.8273%" y="805" width="0.0325%" height="15" fill="rgb(234,94,52)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="31.8273%" y="789" width="0.0325%" height="15" fill="rgb(220,154,50)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="31.8273%" y="773" width="0.0325%" height="15" fill="rgb(212,11,10)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="783.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="31.8273%" y="757" width="0.0325%" height="15" fill="rgb(205,166,19)" fg:x="35202" fg:w="36"/><text x="32.0773%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="31.8617%" y="837" width="0.0127%" height="15" fill="rgb(244,198,16)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.01%)</title><rect x="31.8617%" y="821" width="0.0127%" height="15" fill="rgb(219,69,12)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="31.8617%" y="805" width="0.0127%" height="15" fill="rgb(245,30,7)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="31.8617%" y="789" width="0.0127%" height="15" fill="rgb(218,221,48)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.01%)</title><rect x="31.8617%" y="773" width="0.0127%" height="15" fill="rgb(216,66,15)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="31.8617%" y="757" width="0.0127%" height="15" fill="rgb(226,122,50)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="31.8617%" y="741" width="0.0127%" height="15" fill="rgb(239,156,16)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="31.8617%" y="725" width="0.0127%" height="15" fill="rgb(224,27,38)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="31.8617%" y="709" width="0.0127%" height="15" fill="rgb(224,39,27)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="719.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.01%)</title><rect x="31.8617%" y="693" width="0.0127%" height="15" fill="rgb(215,92,29)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="703.50"></text></g><g><title>__realloc (14 samples, 0.01%)</title><rect x="31.8617%" y="677" width="0.0127%" height="15" fill="rgb(207,159,16)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="687.50"></text></g><g><title>_int_realloc (14 samples, 0.01%)</title><rect x="31.8617%" y="661" width="0.0127%" height="15" fill="rgb(238,163,47)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="31.8617%" y="645" width="0.0127%" height="15" fill="rgb(219,91,49)" fg:x="35240" fg:w="14"/><text x="32.1117%" y="655.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (28 samples, 0.03%)</title><rect x="31.8608%" y="933" width="0.0253%" height="15" fill="rgb(227,167,31)" fg:x="35239" fg:w="28"/><text x="32.1108%" y="943.50"></text></g><g><title>wgpu::Queue::submit (28 samples, 0.03%)</title><rect x="31.8608%" y="917" width="0.0253%" height="15" fill="rgb(234,80,54)" fg:x="35239" fg:w="28"/><text x="32.1108%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (28 samples, 0.03%)</title><rect x="31.8608%" y="901" width="0.0253%" height="15" fill="rgb(212,114,2)" fg:x="35239" fg:w="28"/><text x="32.1108%" y="911.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (28 samples, 0.03%)</title><rect x="31.8608%" y="885" width="0.0253%" height="15" fill="rgb(234,50,24)" fg:x="35239" fg:w="28"/><text x="32.1108%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (27 samples, 0.02%)</title><rect x="31.8617%" y="869" width="0.0244%" height="15" fill="rgb(221,68,8)" fg:x="35240" fg:w="27"/><text x="32.1117%" y="879.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (27 samples, 0.02%)</title><rect x="31.8617%" y="853" width="0.0244%" height="15" fill="rgb(254,180,31)" fg:x="35240" fg:w="27"/><text x="32.1117%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (13 samples, 0.01%)</title><rect x="31.8744%" y="837" width="0.0118%" height="15" fill="rgb(247,130,50)" fg:x="35254" fg:w="13"/><text x="32.1244%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="31.8744%" y="821" width="0.0118%" height="15" fill="rgb(211,109,4)" fg:x="35254" fg:w="13"/><text x="32.1244%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (13 samples, 0.01%)</title><rect x="31.8744%" y="805" width="0.0118%" height="15" fill="rgb(238,50,21)" fg:x="35254" fg:w="13"/><text x="32.1244%" y="815.50"></text></g><g><title>__free (13 samples, 0.01%)</title><rect x="31.8744%" y="789" width="0.0118%" height="15" fill="rgb(225,57,45)" fg:x="35254" fg:w="13"/><text x="32.1244%" y="799.50"></text></g><g><title>_int_free (13 samples, 0.01%)</title><rect x="31.8744%" y="773" width="0.0118%" height="15" fill="rgb(209,196,50)" fg:x="35254" fg:w="13"/><text x="32.1244%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (40 samples, 0.04%)</title><rect x="31.8599%" y="981" width="0.0362%" height="15" fill="rgb(242,140,13)" fg:x="35238" fg:w="40"/><text x="32.1099%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 0.04%)</title><rect x="31.8608%" y="965" width="0.0353%" height="15" fill="rgb(217,111,7)" fg:x="35239" fg:w="39"/><text x="32.1108%" y="975.50"></text></g><g><title>bevy_render::renderer::render_system (39 samples, 0.04%)</title><rect x="31.8608%" y="949" width="0.0353%" height="15" fill="rgb(253,193,51)" fg:x="35239" fg:w="39"/><text x="32.1108%" y="959.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (23 samples, 0.02%)</title><rect x="31.8970%" y="981" width="0.0208%" height="15" fill="rgb(252,70,29)" fg:x="35279" fg:w="23"/><text x="32.1470%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.02%)</title><rect x="31.9395%" y="981" width="0.0208%" height="15" fill="rgb(232,127,12)" fg:x="35326" fg:w="23"/><text x="32.1895%" y="991.50"></text></g><g><title>&lt;f32 as core::num::dec2flt::float::RawFloat&gt;::from_u64_bits (16 samples, 0.01%)</title><rect x="31.9666%" y="981" width="0.0145%" height="15" fill="rgb(211,180,21)" fg:x="35356" fg:w="16"/><text x="32.2166%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (24 samples, 0.02%)</title><rect x="31.9874%" y="981" width="0.0217%" height="15" fill="rgb(229,72,13)" fg:x="35379" fg:w="24"/><text x="32.2374%" y="991.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (17 samples, 0.02%)</title><rect x="32.0317%" y="933" width="0.0154%" height="15" fill="rgb(240,211,49)" fg:x="35428" fg:w="17"/><text x="32.2817%" y="943.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (17 samples, 0.02%)</title><rect x="32.0317%" y="917" width="0.0154%" height="15" fill="rgb(219,149,40)" fg:x="35428" fg:w="17"/><text x="32.2817%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="32.0317%" y="901" width="0.0154%" height="15" fill="rgb(210,127,46)" fg:x="35428" fg:w="17"/><text x="32.2817%" y="911.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (51 samples, 0.05%)</title><rect x="32.0091%" y="981" width="0.0461%" height="15" fill="rgb(220,106,7)" fg:x="35403" fg:w="51"/><text x="32.2591%" y="991.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (26 samples, 0.02%)</title><rect x="32.0317%" y="965" width="0.0235%" height="15" fill="rgb(249,31,22)" fg:x="35428" fg:w="26"/><text x="32.2817%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (26 samples, 0.02%)</title><rect x="32.0317%" y="949" width="0.0235%" height="15" fill="rgb(253,1,49)" fg:x="35428" fg:w="26"/><text x="32.2817%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (12 samples, 0.01%)</title><rect x="32.0796%" y="981" width="0.0108%" height="15" fill="rgb(227,144,33)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="991.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (12 samples, 0.01%)</title><rect x="32.0796%" y="965" width="0.0108%" height="15" fill="rgb(249,163,44)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="975.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (12 samples, 0.01%)</title><rect x="32.0796%" y="949" width="0.0108%" height="15" fill="rgb(234,15,39)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="959.50"></text></g><g><title>ash::device::Device::queue_submit (12 samples, 0.01%)</title><rect x="32.0796%" y="933" width="0.0108%" height="15" fill="rgb(207,66,16)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (12 samples, 0.01%)</title><rect x="32.0796%" y="917" width="0.0108%" height="15" fill="rgb(233,112,24)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="927.50"></text></g><g><title>__glx_Main (12 samples, 0.01%)</title><rect x="32.0796%" y="901" width="0.0108%" height="15" fill="rgb(230,90,22)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.0796%" y="885" width="0.0108%" height="15" fill="rgb(229,61,13)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.0796%" y="869" width="0.0108%" height="15" fill="rgb(225,57,24)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.0796%" y="853" width="0.0108%" height="15" fill="rgb(208,169,48)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.0796%" y="837" width="0.0108%" height="15" fill="rgb(244,218,51)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="847.50"></text></g><g><title>_nv009glcore (12 samples, 0.01%)</title><rect x="32.0796%" y="821" width="0.0108%" height="15" fill="rgb(214,148,10)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="831.50"></text></g><g><title>_nv041glcore (12 samples, 0.01%)</title><rect x="32.0796%" y="805" width="0.0108%" height="15" fill="rgb(225,174,27)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="815.50"></text></g><g><title>_nv041glcore (12 samples, 0.01%)</title><rect x="32.0796%" y="789" width="0.0108%" height="15" fill="rgb(230,96,26)" fg:x="35481" fg:w="12"/><text x="32.3296%" y="799.50"></text></g><g><title>__memmove_chk_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="32.1257%" y="981" width="0.0172%" height="15" fill="rgb(232,10,30)" fg:x="35532" fg:w="19"/><text x="32.3757%" y="991.50"></text></g><g><title>__tls_get_addr (264 samples, 0.24%)</title><rect x="32.1583%" y="981" width="0.2387%" height="15" fill="rgb(222,8,50)" fg:x="35568" fg:w="264"/><text x="32.4083%" y="991.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="32.5208%" y="341" width="0.0226%" height="15" fill="rgb(213,81,27)" fg:x="35969" fg:w="25"/><text x="32.7708%" y="351.50"></text></g><g><title>__memmove_sse2_unaligned_erms (20 samples, 0.02%)</title><rect x="32.5253%" y="325" width="0.0181%" height="15" fill="rgb(245,50,10)" fg:x="35974" fg:w="20"/><text x="32.7753%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::ge (31 samples, 0.03%)</title><rect x="32.5434%" y="341" width="0.0280%" height="15" fill="rgb(216,100,18)" fg:x="35994" fg:w="31"/><text x="32.7934%" y="351.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::PartialOrd&gt;::partial_cmp (30 samples, 0.03%)</title><rect x="32.5443%" y="325" width="0.0271%" height="15" fill="rgb(236,147,54)" fg:x="35995" fg:w="30"/><text x="32.7943%" y="335.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::cmp::Ord&gt;::cmp (30 samples, 0.03%)</title><rect x="32.5443%" y="309" width="0.0271%" height="15" fill="rgb(205,143,26)" fg:x="35995" fg:w="30"/><text x="32.7943%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (20 samples, 0.02%)</title><rect x="32.5534%" y="293" width="0.0181%" height="15" fill="rgb(236,26,9)" fg:x="36005" fg:w="20"/><text x="32.8034%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (20 samples, 0.02%)</title><rect x="32.5534%" y="277" width="0.0181%" height="15" fill="rgb(221,165,53)" fg:x="36005" fg:w="20"/><text x="32.8034%" y="287.50"></text></g><g><title>core::num::bignum::Big32x40::sub (16 samples, 0.01%)</title><rect x="32.5950%" y="341" width="0.0145%" height="15" fill="rgb(214,110,17)" fg:x="36051" fg:w="16"/><text x="32.8450%" y="351.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (140 samples, 0.13%)</title><rect x="32.4991%" y="965" width="0.1266%" height="15" fill="rgb(237,197,12)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (140 samples, 0.13%)</title><rect x="32.4991%" y="949" width="0.1266%" height="15" fill="rgb(205,84,17)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (140 samples, 0.13%)</title><rect x="32.4991%" y="933" width="0.1266%" height="15" fill="rgb(237,18,45)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (140 samples, 0.13%)</title><rect x="32.4991%" y="917" width="0.1266%" height="15" fill="rgb(221,87,14)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (140 samples, 0.13%)</title><rect x="32.4991%" y="901" width="0.1266%" height="15" fill="rgb(238,186,15)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (140 samples, 0.13%)</title><rect x="32.4991%" y="885" width="0.1266%" height="15" fill="rgb(208,115,11)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="895.50"></text></g><g><title>async_executor::Executor::try_tick (140 samples, 0.13%)</title><rect x="32.4991%" y="869" width="0.1266%" height="15" fill="rgb(254,175,0)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (140 samples, 0.13%)</title><rect x="32.4991%" y="853" width="0.1266%" height="15" fill="rgb(227,24,42)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.13%)</title><rect x="32.4991%" y="837" width="0.1266%" height="15" fill="rgb(223,211,37)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="847.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (140 samples, 0.13%)</title><rect x="32.4991%" y="821" width="0.1266%" height="15" fill="rgb(235,49,27)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.13%)</title><rect x="32.4991%" y="805" width="0.1266%" height="15" fill="rgb(254,97,51)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (140 samples, 0.13%)</title><rect x="32.4991%" y="789" width="0.1266%" height="15" fill="rgb(249,51,40)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (140 samples, 0.13%)</title><rect x="32.4991%" y="773" width="0.1266%" height="15" fill="rgb(210,128,45)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (140 samples, 0.13%)</title><rect x="32.4991%" y="757" width="0.1266%" height="15" fill="rgb(224,137,50)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="767.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (140 samples, 0.13%)</title><rect x="32.4991%" y="741" width="0.1266%" height="15" fill="rgb(242,15,9)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (140 samples, 0.13%)</title><rect x="32.4991%" y="725" width="0.1266%" height="15" fill="rgb(233,187,41)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (140 samples, 0.13%)</title><rect x="32.4991%" y="709" width="0.1266%" height="15" fill="rgb(227,2,29)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="719.50"></text></g><g><title>stellar_coordinates_test::setup (140 samples, 0.13%)</title><rect x="32.4991%" y="693" width="0.1266%" height="15" fill="rgb(222,70,3)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="703.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (140 samples, 0.13%)</title><rect x="32.4991%" y="677" width="0.1266%" height="15" fill="rgb(213,11,42)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="687.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (140 samples, 0.13%)</title><rect x="32.4991%" y="661" width="0.1266%" height="15" fill="rgb(225,150,9)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="671.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (140 samples, 0.13%)</title><rect x="32.4991%" y="645" width="0.1266%" height="15" fill="rgb(230,162,45)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="655.50"></text></g><g><title>std::sync::once::Once::call_once (140 samples, 0.13%)</title><rect x="32.4991%" y="629" width="0.1266%" height="15" fill="rgb(222,14,52)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="639.50"></text></g><g><title>std::sync::once::Once::call_inner (140 samples, 0.13%)</title><rect x="32.4991%" y="613" width="0.1266%" height="15" fill="rgb(254,198,14)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="623.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (140 samples, 0.13%)</title><rect x="32.4991%" y="597" width="0.1266%" height="15" fill="rgb(220,217,30)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="607.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (140 samples, 0.13%)</title><rect x="32.4991%" y="581" width="0.1266%" height="15" fill="rgb(215,146,41)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (140 samples, 0.13%)</title><rect x="32.4991%" y="565" width="0.1266%" height="15" fill="rgb(217,27,36)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="575.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (140 samples, 0.13%)</title><rect x="32.4991%" y="549" width="0.1266%" height="15" fill="rgb(219,218,39)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="559.50"></text></g><g><title>std::io::stdio::_print (140 samples, 0.13%)</title><rect x="32.4991%" y="533" width="0.1266%" height="15" fill="rgb(219,4,42)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="543.50"></text></g><g><title>std::io::stdio::print_to (140 samples, 0.13%)</title><rect x="32.4991%" y="517" width="0.1266%" height="15" fill="rgb(249,119,36)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="527.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (140 samples, 0.13%)</title><rect x="32.4991%" y="501" width="0.1266%" height="15" fill="rgb(209,23,33)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="511.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (140 samples, 0.13%)</title><rect x="32.4991%" y="485" width="0.1266%" height="15" fill="rgb(211,10,0)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (140 samples, 0.13%)</title><rect x="32.4991%" y="469" width="0.1266%" height="15" fill="rgb(208,99,37)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="479.50"></text></g><g><title>core::fmt::write (140 samples, 0.13%)</title><rect x="32.4991%" y="453" width="0.1266%" height="15" fill="rgb(213,132,31)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="463.50"></text></g><g><title>core::fmt::run (140 samples, 0.13%)</title><rect x="32.4991%" y="437" width="0.1266%" height="15" fill="rgb(243,129,40)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="447.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (140 samples, 0.13%)</title><rect x="32.4991%" y="421" width="0.1266%" height="15" fill="rgb(210,66,33)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="431.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (140 samples, 0.13%)</title><rect x="32.4991%" y="405" width="0.1266%" height="15" fill="rgb(209,189,4)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (140 samples, 0.13%)</title><rect x="32.4991%" y="389" width="0.1266%" height="15" fill="rgb(214,107,37)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="399.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (140 samples, 0.13%)</title><rect x="32.4991%" y="373" width="0.1266%" height="15" fill="rgb(245,88,54)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="383.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (140 samples, 0.13%)</title><rect x="32.4991%" y="357" width="0.1266%" height="15" fill="rgb(205,146,20)" fg:x="35945" fg:w="140"/><text x="32.7491%" y="367.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (142 samples, 0.13%)</title><rect x="32.4991%" y="981" width="0.1284%" height="15" fill="rgb(220,161,25)" fg:x="35945" fg:w="142"/><text x="32.7491%" y="991.50"></text></g><g><title>ash::device::Device::begin_command_buffer (17 samples, 0.02%)</title><rect x="32.6682%" y="869" width="0.0154%" height="15" fill="rgb(215,152,15)" fg:x="36132" fg:w="17"/><text x="32.9182%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (17 samples, 0.02%)</title><rect x="32.6682%" y="853" width="0.0154%" height="15" fill="rgb(233,192,44)" fg:x="36132" fg:w="17"/><text x="32.9182%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="32.6682%" y="837" width="0.0154%" height="15" fill="rgb(240,170,46)" fg:x="36132" fg:w="17"/><text x="32.9182%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="32.6718%" y="821" width="0.0118%" height="15" fill="rgb(207,104,33)" fg:x="36136" fg:w="13"/><text x="32.9218%" y="831.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (18 samples, 0.02%)</title><rect x="32.6682%" y="901" width="0.0163%" height="15" fill="rgb(219,21,39)" fg:x="36132" fg:w="18"/><text x="32.9182%" y="911.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (18 samples, 0.02%)</title><rect x="32.6682%" y="885" width="0.0163%" height="15" fill="rgb(214,133,29)" fg:x="36132" fg:w="18"/><text x="32.9182%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (37 samples, 0.03%)</title><rect x="32.6601%" y="933" width="0.0335%" height="15" fill="rgb(226,93,6)" fg:x="36123" fg:w="37"/><text x="32.9101%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (37 samples, 0.03%)</title><rect x="32.6601%" y="917" width="0.0335%" height="15" fill="rgb(252,222,34)" fg:x="36123" fg:w="37"/><text x="32.9101%" y="927.50"></text></g><g><title>bevy_pbr::render::light::GpuPointLights::write_buffer (40 samples, 0.04%)</title><rect x="32.6601%" y="965" width="0.0362%" height="15" fill="rgb(252,92,48)" fg:x="36123" fg:w="40"/><text x="32.9101%" y="975.50"></text></g><g><title>bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T,U&gt;::write_buffer (40 samples, 0.04%)</title><rect x="32.6601%" y="949" width="0.0362%" height="15" fill="rgb(245,223,24)" fg:x="36123" fg:w="40"/><text x="32.9101%" y="959.50"></text></g><g><title>ash::device::Device::create_image_view (18 samples, 0.02%)</title><rect x="32.7035%" y="869" width="0.0163%" height="15" fill="rgb(205,176,3)" fg:x="36171" fg:w="18"/><text x="32.9535%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_image_view (17 samples, 0.02%)</title><rect x="32.7044%" y="853" width="0.0154%" height="15" fill="rgb(235,151,15)" fg:x="36172" fg:w="17"/><text x="32.9544%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="32.7044%" y="837" width="0.0154%" height="15" fill="rgb(237,209,11)" fg:x="36172" fg:w="17"/><text x="32.9544%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (17 samples, 0.02%)</title><rect x="32.7044%" y="821" width="0.0154%" height="15" fill="rgb(243,227,24)" fg:x="36172" fg:w="17"/><text x="32.9544%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="32.7071%" y="805" width="0.0127%" height="15" fill="rgb(239,193,16)" fg:x="36175" fg:w="14"/><text x="32.9571%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (24 samples, 0.02%)</title><rect x="32.7025%" y="885" width="0.0217%" height="15" fill="rgb(231,27,9)" fg:x="36170" fg:w="24"/><text x="32.9525%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (29 samples, 0.03%)</title><rect x="32.6989%" y="901" width="0.0262%" height="15" fill="rgb(219,169,10)" fg:x="36166" fg:w="29"/><text x="32.9489%" y="911.50"></text></g><g><title>bevy_render::render_resource::texture::Texture::create_view (34 samples, 0.03%)</title><rect x="32.6971%" y="965" width="0.0307%" height="15" fill="rgb(244,229,43)" fg:x="36164" fg:w="34"/><text x="32.9471%" y="975.50"></text></g><g><title>wgpu::Texture::create_view (33 samples, 0.03%)</title><rect x="32.6980%" y="949" width="0.0298%" height="15" fill="rgb(254,38,20)" fg:x="36165" fg:w="33"/><text x="32.9480%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (33 samples, 0.03%)</title><rect x="32.6980%" y="933" width="0.0298%" height="15" fill="rgb(250,47,30)" fg:x="36165" fg:w="33"/><text x="32.9480%" y="943.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (32 samples, 0.03%)</title><rect x="32.6989%" y="917" width="0.0289%" height="15" fill="rgb(224,124,36)" fg:x="36166" fg:w="32"/><text x="32.9489%" y="927.50"></text></g><g><title>bevy_pbr::render::light::prepare_lights (96 samples, 0.09%)</title><rect x="32.6573%" y="981" width="0.0868%" height="15" fill="rgb(246,68,51)" fg:x="36120" fg:w="96"/><text x="32.9073%" y="991.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (23 samples, 0.02%)</title><rect x="32.7568%" y="981" width="0.0208%" height="15" fill="rgb(253,43,49)" fg:x="36230" fg:w="23"/><text x="33.0068%" y="991.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (23 samples, 0.02%)</title><rect x="32.7776%" y="981" width="0.0208%" height="15" fill="rgb(219,54,36)" fg:x="36253" fg:w="23"/><text x="33.0276%" y="991.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (14 samples, 0.01%)</title><rect x="32.7857%" y="965" width="0.0127%" height="15" fill="rgb(227,133,34)" fg:x="36262" fg:w="14"/><text x="33.0357%" y="975.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (14 samples, 0.01%)</title><rect x="32.7857%" y="949" width="0.0127%" height="15" fill="rgb(247,227,15)" fg:x="36262" fg:w="14"/><text x="33.0357%" y="959.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (16 samples, 0.01%)</title><rect x="32.8119%" y="917" width="0.0145%" height="15" fill="rgb(229,96,14)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="927.50"></text></g><g><title>ash::device::Device::queue_submit (16 samples, 0.01%)</title><rect x="32.8119%" y="901" width="0.0145%" height="15" fill="rgb(220,79,17)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="911.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (16 samples, 0.01%)</title><rect x="32.8119%" y="885" width="0.0145%" height="15" fill="rgb(205,131,53)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="895.50"></text></g><g><title>__glx_Main (16 samples, 0.01%)</title><rect x="32.8119%" y="869" width="0.0145%" height="15" fill="rgb(209,50,29)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8119%" y="853" width="0.0145%" height="15" fill="rgb(245,86,46)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8119%" y="837" width="0.0145%" height="15" fill="rgb(235,66,46)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8119%" y="821" width="0.0145%" height="15" fill="rgb(232,148,31)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8119%" y="805" width="0.0145%" height="15" fill="rgb(217,149,8)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="815.50"></text></g><g><title>_nv009glcore (16 samples, 0.01%)</title><rect x="32.8119%" y="789" width="0.0145%" height="15" fill="rgb(209,183,11)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="799.50"></text></g><g><title>_nv041glcore (16 samples, 0.01%)</title><rect x="32.8119%" y="773" width="0.0145%" height="15" fill="rgb(208,55,20)" fg:x="36291" fg:w="16"/><text x="33.0619%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (17 samples, 0.02%)</title><rect x="32.8119%" y="981" width="0.0154%" height="15" fill="rgb(218,39,14)" fg:x="36291" fg:w="17"/><text x="33.0619%" y="991.50"></text></g><g><title>wgpu::Queue::submit (17 samples, 0.02%)</title><rect x="32.8119%" y="965" width="0.0154%" height="15" fill="rgb(216,169,33)" fg:x="36291" fg:w="17"/><text x="33.0619%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (17 samples, 0.02%)</title><rect x="32.8119%" y="949" width="0.0154%" height="15" fill="rgb(233,80,24)" fg:x="36291" fg:w="17"/><text x="33.0619%" y="959.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (17 samples, 0.02%)</title><rect x="32.8119%" y="933" width="0.0154%" height="15" fill="rgb(213,179,31)" fg:x="36291" fg:w="17"/><text x="33.0619%" y="943.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (21 samples, 0.02%)</title><rect x="32.8273%" y="965" width="0.0190%" height="15" fill="rgb(209,19,5)" fg:x="36308" fg:w="21"/><text x="33.0773%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (21 samples, 0.02%)</title><rect x="32.8273%" y="949" width="0.0190%" height="15" fill="rgb(219,18,35)" fg:x="36308" fg:w="21"/><text x="33.0773%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (21 samples, 0.02%)</title><rect x="32.8273%" y="933" width="0.0190%" height="15" fill="rgb(209,169,16)" fg:x="36308" fg:w="21"/><text x="33.0773%" y="943.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (21 samples, 0.02%)</title><rect x="32.8273%" y="917" width="0.0190%" height="15" fill="rgb(245,90,51)" fg:x="36308" fg:w="21"/><text x="33.0773%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (21 samples, 0.02%)</title><rect x="32.8273%" y="901" width="0.0190%" height="15" fill="rgb(220,99,45)" fg:x="36308" fg:w="21"/><text x="33.0773%" y="911.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (15 samples, 0.01%)</title><rect x="32.8463%" y="869" width="0.0136%" height="15" fill="rgb(249,89,25)" fg:x="36329" fg:w="15"/><text x="33.0963%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (15 samples, 0.01%)</title><rect x="32.8463%" y="853" width="0.0136%" height="15" fill="rgb(239,193,0)" fg:x="36329" fg:w="15"/><text x="33.0963%" y="863.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (25 samples, 0.02%)</title><rect x="32.8644%" y="869" width="0.0226%" height="15" fill="rgb(231,126,1)" fg:x="36349" fg:w="25"/><text x="33.1144%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (16 samples, 0.01%)</title><rect x="32.8725%" y="853" width="0.0145%" height="15" fill="rgb(243,166,3)" fg:x="36358" fg:w="16"/><text x="33.1225%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8725%" y="837" width="0.0145%" height="15" fill="rgb(223,22,34)" fg:x="36358" fg:w="16"/><text x="33.1225%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8725%" y="821" width="0.0145%" height="15" fill="rgb(251,52,51)" fg:x="36358" fg:w="16"/><text x="33.1225%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="32.8725%" y="805" width="0.0145%" height="15" fill="rgb(221,165,28)" fg:x="36358" fg:w="16"/><text x="33.1225%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (15 samples, 0.01%)</title><rect x="32.8734%" y="789" width="0.0136%" height="15" fill="rgb(218,121,47)" fg:x="36359" fg:w="15"/><text x="33.1234%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.8761%" y="773" width="0.0108%" height="15" fill="rgb(209,120,9)" fg:x="36362" fg:w="12"/><text x="33.1261%" y="783.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (61 samples, 0.06%)</title><rect x="32.8463%" y="965" width="0.0552%" height="15" fill="rgb(236,68,12)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (61 samples, 0.06%)</title><rect x="32.8463%" y="949" width="0.0552%" height="15" fill="rgb(225,194,26)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (61 samples, 0.06%)</title><rect x="32.8463%" y="933" width="0.0552%" height="15" fill="rgb(231,84,39)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (61 samples, 0.06%)</title><rect x="32.8463%" y="917" width="0.0552%" height="15" fill="rgb(210,11,45)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (61 samples, 0.06%)</title><rect x="32.8463%" y="901" width="0.0552%" height="15" fill="rgb(224,54,52)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (61 samples, 0.06%)</title><rect x="32.8463%" y="885" width="0.0552%" height="15" fill="rgb(238,102,14)" fg:x="36329" fg:w="61"/><text x="33.0963%" y="895.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (16 samples, 0.01%)</title><rect x="32.9114%" y="869" width="0.0145%" height="15" fill="rgb(243,160,52)" fg:x="36401" fg:w="16"/><text x="33.1614%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (16 samples, 0.01%)</title><rect x="32.9114%" y="853" width="0.0145%" height="15" fill="rgb(216,114,19)" fg:x="36401" fg:w="16"/><text x="33.1614%" y="863.50"></text></g><g><title>ash::device::Device::begin_command_buffer (14 samples, 0.01%)</title><rect x="32.9132%" y="837" width="0.0127%" height="15" fill="rgb(244,166,37)" fg:x="36403" fg:w="14"/><text x="33.1632%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (14 samples, 0.01%)</title><rect x="32.9132%" y="821" width="0.0127%" height="15" fill="rgb(246,29,44)" fg:x="36403" fg:w="14"/><text x="33.1632%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="32.9132%" y="805" width="0.0127%" height="15" fill="rgb(215,56,53)" fg:x="36403" fg:w="14"/><text x="33.1632%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="32.9132%" y="789" width="0.0127%" height="15" fill="rgb(217,60,2)" fg:x="36403" fg:w="14"/><text x="33.1632%" y="799.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="32.9150%" y="773" width="0.0108%" height="15" fill="rgb(207,26,24)" fg:x="36405" fg:w="12"/><text x="33.1650%" y="783.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (13 samples, 0.01%)</title><rect x="32.9259%" y="869" width="0.0118%" height="15" fill="rgb(252,210,15)" fg:x="36417" fg:w="13"/><text x="33.1759%" y="879.50"></text></g><g><title>&lt;bevy_core_pipeline::clear_pass::ClearPassNode as bevy_render::render_graph::node::Node&gt;::run (41 samples, 0.04%)</title><rect x="32.9015%" y="949" width="0.0371%" height="15" fill="rgb(253,209,26)" fg:x="36390" fg:w="41"/><text x="33.1515%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (41 samples, 0.04%)</title><rect x="32.9015%" y="933" width="0.0371%" height="15" fill="rgb(238,170,14)" fg:x="36390" fg:w="41"/><text x="33.1515%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (41 samples, 0.04%)</title><rect x="32.9015%" y="917" width="0.0371%" height="15" fill="rgb(216,178,15)" fg:x="36390" fg:w="41"/><text x="33.1515%" y="927.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (41 samples, 0.04%)</title><rect x="32.9015%" y="901" width="0.0371%" height="15" fill="rgb(250,197,2)" fg:x="36390" fg:w="41"/><text x="33.1515%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (41 samples, 0.04%)</title><rect x="32.9015%" y="885" width="0.0371%" height="15" fill="rgb(212,70,42)" fg:x="36390" fg:w="41"/><text x="33.1515%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.01%)</title><rect x="32.9765%" y="821" width="0.0136%" height="15" fill="rgb(227,213,9)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.01%)</title><rect x="32.9765%" y="805" width="0.0136%" height="15" fill="rgb(245,99,25)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (15 samples, 0.01%)</title><rect x="32.9765%" y="789" width="0.0136%" height="15" fill="rgb(250,82,29)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="32.9765%" y="773" width="0.0136%" height="15" fill="rgb(241,226,54)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.01%)</title><rect x="32.9765%" y="757" width="0.0136%" height="15" fill="rgb(221,99,41)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (15 samples, 0.01%)</title><rect x="32.9765%" y="741" width="0.0136%" height="15" fill="rgb(213,90,21)" fg:x="36473" fg:w="15"/><text x="33.2265%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (14 samples, 0.01%)</title><rect x="32.9774%" y="725" width="0.0127%" height="15" fill="rgb(205,208,24)" fg:x="36474" fg:w="14"/><text x="33.2274%" y="735.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (30 samples, 0.03%)</title><rect x="32.9675%" y="853" width="0.0271%" height="15" fill="rgb(246,31,12)" fg:x="36463" fg:w="30"/><text x="33.2175%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (30 samples, 0.03%)</title><rect x="32.9675%" y="837" width="0.0271%" height="15" fill="rgb(213,154,6)" fg:x="36463" fg:w="30"/><text x="33.2175%" y="847.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (17 samples, 0.02%)</title><rect x="33.0091%" y="853" width="0.0154%" height="15" fill="rgb(222,163,29)" fg:x="36509" fg:w="17"/><text x="33.2591%" y="863.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="33.0479%" y="805" width="0.0217%" height="15" fill="rgb(227,201,8)" fg:x="36552" fg:w="24"/><text x="33.2979%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="33.0479%" y="789" width="0.0217%" height="15" fill="rgb(233,9,32)" fg:x="36552" fg:w="24"/><text x="33.2979%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="33.0479%" y="773" width="0.0217%" height="15" fill="rgb(217,54,24)" fg:x="36552" fg:w="24"/><text x="33.2979%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.01%)</title><rect x="33.0705%" y="805" width="0.0136%" height="15" fill="rgb(235,192,0)" fg:x="36577" fg:w="15"/><text x="33.3205%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.01%)</title><rect x="33.0705%" y="789" width="0.0136%" height="15" fill="rgb(235,45,9)" fg:x="36577" fg:w="15"/><text x="33.3205%" y="799.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (50 samples, 0.05%)</title><rect x="33.0452%" y="821" width="0.0452%" height="15" fill="rgb(246,42,40)" fg:x="36549" fg:w="50"/><text x="33.2952%" y="831.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (62 samples, 0.06%)</title><rect x="33.0398%" y="853" width="0.0561%" height="15" fill="rgb(248,111,24)" fg:x="36543" fg:w="62"/><text x="33.2898%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (56 samples, 0.05%)</title><rect x="33.0452%" y="837" width="0.0506%" height="15" fill="rgb(249,65,22)" fg:x="36549" fg:w="56"/><text x="33.2952%" y="847.50"></text></g><g><title>wgpu_core::track::StatefulTrackerSubset::merge_extend (14 samples, 0.01%)</title><rect x="33.0958%" y="853" width="0.0127%" height="15" fill="rgb(238,111,51)" fg:x="36605" fg:w="14"/><text x="33.3458%" y="863.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (13 samples, 0.01%)</title><rect x="33.0968%" y="837" width="0.0118%" height="15" fill="rgb(250,118,22)" fg:x="36606" fg:w="13"/><text x="33.3468%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::draw_indexed (19 samples, 0.02%)</title><rect x="33.1085%" y="853" width="0.0172%" height="15" fill="rgb(234,84,26)" fg:x="36619" fg:w="19"/><text x="33.3585%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (19 samples, 0.02%)</title><rect x="33.1085%" y="837" width="0.0172%" height="15" fill="rgb(243,172,12)" fg:x="36619" fg:w="19"/><text x="33.3585%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="33.1148%" y="821" width="0.0108%" height="15" fill="rgb(236,150,49)" fg:x="36626" fg:w="12"/><text x="33.3648%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (19 samples, 0.02%)</title><rect x="33.1257%" y="853" width="0.0172%" height="15" fill="rgb(225,197,26)" fg:x="36638" fg:w="19"/><text x="33.3757%" y="863.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (19 samples, 0.02%)</title><rect x="33.1257%" y="837" width="0.0172%" height="15" fill="rgb(214,17,42)" fg:x="36638" fg:w="19"/><text x="33.3757%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (18 samples, 0.02%)</title><rect x="33.1266%" y="821" width="0.0163%" height="15" fill="rgb(224,165,40)" fg:x="36639" fg:w="18"/><text x="33.3766%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.02%)</title><rect x="33.1266%" y="805" width="0.0163%" height="15" fill="rgb(246,100,4)" fg:x="36639" fg:w="18"/><text x="33.3766%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (372 samples, 0.34%)</title><rect x="32.8273%" y="981" width="0.3363%" height="15" fill="rgb(222,103,0)" fg:x="36308" fg:w="372"/><text x="33.0773%" y="991.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (290 samples, 0.26%)</title><rect x="32.9015%" y="965" width="0.2622%" height="15" fill="rgb(227,189,26)" fg:x="36390" fg:w="290"/><text x="33.1515%" y="975.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (249 samples, 0.23%)</title><rect x="32.9385%" y="949" width="0.2251%" height="15" fill="rgb(214,202,17)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (249 samples, 0.23%)</title><rect x="32.9385%" y="933" width="0.2251%" height="15" fill="rgb(229,111,3)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (249 samples, 0.23%)</title><rect x="32.9385%" y="917" width="0.2251%" height="15" fill="rgb(229,172,15)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (249 samples, 0.23%)</title><rect x="32.9385%" y="901" width="0.2251%" height="15" fill="rgb(230,224,35)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="911.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (249 samples, 0.23%)</title><rect x="32.9385%" y="885" width="0.2251%" height="15" fill="rgb(251,141,6)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="895.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (249 samples, 0.23%)</title><rect x="32.9385%" y="869" width="0.2251%" height="15" fill="rgb(225,208,6)" fg:x="36431" fg:w="249"/><text x="33.1885%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (23 samples, 0.02%)</title><rect x="33.1429%" y="853" width="0.0208%" height="15" fill="rgb(246,181,16)" fg:x="36657" fg:w="23"/><text x="33.3929%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (23 samples, 0.02%)</title><rect x="33.1429%" y="837" width="0.0208%" height="15" fill="rgb(227,129,36)" fg:x="36657" fg:w="23"/><text x="33.3929%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (22 samples, 0.02%)</title><rect x="33.1438%" y="821" width="0.0199%" height="15" fill="rgb(248,117,24)" fg:x="36658" fg:w="22"/><text x="33.3938%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (15 samples, 0.01%)</title><rect x="33.1745%" y="837" width="0.0136%" height="15" fill="rgb(214,185,35)" fg:x="36692" fg:w="15"/><text x="33.4245%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="33.1745%" y="821" width="0.0136%" height="15" fill="rgb(236,150,34)" fg:x="36692" fg:w="15"/><text x="33.4245%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.01%)</title><rect x="33.1745%" y="805" width="0.0136%" height="15" fill="rgb(243,228,27)" fg:x="36692" fg:w="15"/><text x="33.4245%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.01%)</title><rect x="33.1745%" y="789" width="0.0136%" height="15" fill="rgb(245,77,44)" fg:x="36692" fg:w="15"/><text x="33.4245%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="33.1745%" y="773" width="0.0136%" height="15" fill="rgb(235,214,42)" fg:x="36692" fg:w="15"/><text x="33.4245%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::free (25 samples, 0.02%)</title><rect x="33.1745%" y="853" width="0.0226%" height="15" fill="rgb(221,74,3)" fg:x="36692" fg:w="25"/><text x="33.4245%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="33.1971%" y="837" width="0.0316%" height="15" fill="rgb(206,121,29)" fg:x="36717" fg:w="35"/><text x="33.4471%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (87 samples, 0.08%)</title><rect x="33.1646%" y="965" width="0.0787%" height="15" fill="rgb(249,131,53)" fg:x="36681" fg:w="87"/><text x="33.4146%" y="975.50"></text></g><g><title>wgpu::Queue::submit (87 samples, 0.08%)</title><rect x="33.1646%" y="949" width="0.0787%" height="15" fill="rgb(236,170,29)" fg:x="36681" fg:w="87"/><text x="33.4146%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (87 samples, 0.08%)</title><rect x="33.1646%" y="933" width="0.0787%" height="15" fill="rgb(247,96,15)" fg:x="36681" fg:w="87"/><text x="33.4146%" y="943.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (87 samples, 0.08%)</title><rect x="33.1646%" y="917" width="0.0787%" height="15" fill="rgb(211,210,7)" fg:x="36681" fg:w="87"/><text x="33.4146%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (85 samples, 0.08%)</title><rect x="33.1664%" y="901" width="0.0769%" height="15" fill="rgb(240,88,50)" fg:x="36683" fg:w="85"/><text x="33.4164%" y="911.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (85 samples, 0.08%)</title><rect x="33.1664%" y="885" width="0.0769%" height="15" fill="rgb(209,229,26)" fg:x="36683" fg:w="85"/><text x="33.4164%" y="895.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (76 samples, 0.07%)</title><rect x="33.1745%" y="869" width="0.0687%" height="15" fill="rgb(210,68,23)" fg:x="36692" fg:w="76"/><text x="33.4245%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (51 samples, 0.05%)</title><rect x="33.1971%" y="853" width="0.0461%" height="15" fill="rgb(229,180,13)" fg:x="36717" fg:w="51"/><text x="33.4471%" y="863.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="33.2288%" y="837" width="0.0145%" height="15" fill="rgb(236,53,44)" fg:x="36752" fg:w="16"/><text x="33.4788%" y="847.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="33.2297%" y="821" width="0.0136%" height="15" fill="rgb(244,214,29)" fg:x="36753" fg:w="15"/><text x="33.4797%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="33.2297%" y="805" width="0.0136%" height="15" fill="rgb(220,75,29)" fg:x="36753" fg:w="15"/><text x="33.4797%" y="815.50"></text></g><g><title>_nv009glcore (57 samples, 0.05%)</title><rect x="33.2441%" y="677" width="0.0515%" height="15" fill="rgb(214,183,37)" fg:x="36769" fg:w="57"/><text x="33.4941%" y="687.50"></text></g><g><title>_nv009glcore (61 samples, 0.06%)</title><rect x="33.2432%" y="693" width="0.0552%" height="15" fill="rgb(239,117,29)" fg:x="36768" fg:w="61"/><text x="33.4932%" y="703.50"></text></g><g><title>_nv009glcore (65 samples, 0.06%)</title><rect x="33.2432%" y="709" width="0.0588%" height="15" fill="rgb(237,171,35)" fg:x="36768" fg:w="65"/><text x="33.4932%" y="719.50"></text></g><g><title>bevy_render::renderer::render_system (159 samples, 0.14%)</title><rect x="33.1637%" y="981" width="0.1438%" height="15" fill="rgb(229,178,53)" fg:x="36680" fg:w="159"/><text x="33.4137%" y="991.50"></text></g><g><title>wgpu::SurfaceTexture::present (71 samples, 0.06%)</title><rect x="33.2432%" y="965" width="0.0642%" height="15" fill="rgb(210,102,19)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (71 samples, 0.06%)</title><rect x="33.2432%" y="949" width="0.0642%" height="15" fill="rgb(235,127,22)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="959.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (71 samples, 0.06%)</title><rect x="33.2432%" y="933" width="0.0642%" height="15" fill="rgb(244,31,31)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="943.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (71 samples, 0.06%)</title><rect x="33.2432%" y="917" width="0.0642%" height="15" fill="rgb(231,43,21)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (71 samples, 0.06%)</title><rect x="33.2432%" y="901" width="0.0642%" height="15" fill="rgb(217,131,35)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (71 samples, 0.06%)</title><rect x="33.2432%" y="885" width="0.0642%" height="15" fill="rgb(221,149,4)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="895.50"></text></g><g><title>__glx_Main (71 samples, 0.06%)</title><rect x="33.2432%" y="869" width="0.0642%" height="15" fill="rgb(232,170,28)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (71 samples, 0.06%)</title><rect x="33.2432%" y="853" width="0.0642%" height="15" fill="rgb(238,56,10)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="863.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (71 samples, 0.06%)</title><rect x="33.2432%" y="837" width="0.0642%" height="15" fill="rgb(235,196,14)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="847.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (71 samples, 0.06%)</title><rect x="33.2432%" y="821" width="0.0642%" height="15" fill="rgb(216,45,48)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (71 samples, 0.06%)</title><rect x="33.2432%" y="805" width="0.0642%" height="15" fill="rgb(238,213,17)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="815.50"></text></g><g><title>_nv009glcore (71 samples, 0.06%)</title><rect x="33.2432%" y="789" width="0.0642%" height="15" fill="rgb(212,13,2)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="799.50"></text></g><g><title>_nv041glcore (71 samples, 0.06%)</title><rect x="33.2432%" y="773" width="0.0642%" height="15" fill="rgb(240,114,20)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="783.50"></text></g><g><title>_nv011glcore (71 samples, 0.06%)</title><rect x="33.2432%" y="757" width="0.0642%" height="15" fill="rgb(228,41,40)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="767.50"></text></g><g><title>_nv041glcore (71 samples, 0.06%)</title><rect x="33.2432%" y="741" width="0.0642%" height="15" fill="rgb(244,132,35)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="751.50"></text></g><g><title>_nv041glcore (71 samples, 0.06%)</title><rect x="33.2432%" y="725" width="0.0642%" height="15" fill="rgb(253,189,4)" fg:x="36768" fg:w="71"/><text x="33.4932%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (157 samples, 0.14%)</title><rect x="33.3083%" y="981" width="0.1419%" height="15" fill="rgb(224,37,19)" fg:x="36840" fg:w="157"/><text x="33.5583%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (156 samples, 0.14%)</title><rect x="33.3092%" y="965" width="0.1410%" height="15" fill="rgb(235,223,18)" fg:x="36841" fg:w="156"/><text x="33.5592%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (156 samples, 0.14%)</title><rect x="33.3092%" y="949" width="0.1410%" height="15" fill="rgb(235,163,25)" fg:x="36841" fg:w="156"/><text x="33.5592%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (156 samples, 0.14%)</title><rect x="33.3092%" y="933" width="0.1410%" height="15" fill="rgb(217,145,28)" fg:x="36841" fg:w="156"/><text x="33.5592%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="33.4584%" y="677" width="0.0118%" height="15" fill="rgb(223,223,32)" fg:x="37006" fg:w="13"/><text x="33.7084%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="33.4584%" y="661" width="0.0118%" height="15" fill="rgb(227,189,39)" fg:x="37006" fg:w="13"/><text x="33.7084%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="33.4584%" y="645" width="0.0118%" height="15" fill="rgb(248,10,22)" fg:x="37006" fg:w="13"/><text x="33.7084%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="33.4593%" y="629" width="0.0108%" height="15" fill="rgb(248,46,39)" fg:x="37007" fg:w="12"/><text x="33.7093%" y="639.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (51 samples, 0.05%)</title><rect x="33.4584%" y="693" width="0.0461%" height="15" fill="rgb(248,113,48)" fg:x="37006" fg:w="51"/><text x="33.7084%" y="703.50"></text></g><g><title>async_executor::Executor::spawn (38 samples, 0.03%)</title><rect x="33.4702%" y="677" width="0.0344%" height="15" fill="rgb(245,16,25)" fg:x="37019" fg:w="38"/><text x="33.7202%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (62 samples, 0.06%)</title><rect x="33.4539%" y="709" width="0.0561%" height="15" fill="rgb(249,152,16)" fg:x="37001" fg:w="62"/><text x="33.7039%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (66 samples, 0.06%)</title><rect x="33.4539%" y="725" width="0.0597%" height="15" fill="rgb(250,16,1)" fg:x="37001" fg:w="66"/><text x="33.7039%" y="735.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="33.5271%" y="629" width="0.0199%" height="15" fill="rgb(249,138,3)" fg:x="37082" fg:w="22"/><text x="33.7771%" y="639.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="33.5488%" y="597" width="0.0127%" height="15" fill="rgb(227,71,41)" fg:x="37106" fg:w="14"/><text x="33.7988%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (14 samples, 0.01%)</title><rect x="33.5488%" y="581" width="0.0127%" height="15" fill="rgb(209,184,23)" fg:x="37106" fg:w="14"/><text x="33.7988%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="33.5470%" y="629" width="0.0235%" height="15" fill="rgb(223,215,31)" fg:x="37104" fg:w="26"/><text x="33.7970%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (26 samples, 0.02%)</title><rect x="33.5470%" y="613" width="0.0235%" height="15" fill="rgb(210,146,28)" fg:x="37104" fg:w="26"/><text x="33.7970%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (58 samples, 0.05%)</title><rect x="33.5262%" y="645" width="0.0524%" height="15" fill="rgb(209,183,41)" fg:x="37081" fg:w="58"/><text x="33.7762%" y="655.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="33.5814%" y="629" width="0.0154%" height="15" fill="rgb(209,224,45)" fg:x="37142" fg:w="17"/><text x="33.8314%" y="639.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="33.5967%" y="629" width="0.0127%" height="15" fill="rgb(224,209,51)" fg:x="37159" fg:w="14"/><text x="33.8467%" y="639.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (14 samples, 0.01%)</title><rect x="33.5967%" y="613" width="0.0127%" height="15" fill="rgb(223,17,39)" fg:x="37159" fg:w="14"/><text x="33.8467%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (24 samples, 0.02%)</title><rect x="33.6320%" y="533" width="0.0217%" height="15" fill="rgb(234,204,37)" fg:x="37198" fg:w="24"/><text x="33.8820%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="33.6320%" y="517" width="0.0217%" height="15" fill="rgb(236,120,5)" fg:x="37198" fg:w="24"/><text x="33.8820%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (23 samples, 0.02%)</title><rect x="33.6329%" y="501" width="0.0208%" height="15" fill="rgb(248,97,27)" fg:x="37199" fg:w="23"/><text x="33.8829%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::Commands::entity (22 samples, 0.02%)</title><rect x="33.6537%" y="533" width="0.0199%" height="15" fill="rgb(240,66,17)" fg:x="37222" fg:w="22"/><text x="33.9037%" y="543.50"></text></g><g><title>bevy_ecs::entity::Entities::contains (22 samples, 0.02%)</title><rect x="33.6537%" y="517" width="0.0199%" height="15" fill="rgb(210,79,3)" fg:x="37222" fg:w="22"/><text x="33.9037%" y="527.50"></text></g><g><title>bevy_ecs::entity::Entities::resolve_from_id (22 samples, 0.02%)</title><rect x="33.6537%" y="501" width="0.0199%" height="15" fill="rgb(214,176,27)" fg:x="37222" fg:w="22"/><text x="33.9037%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (13 samples, 0.01%)</title><rect x="33.6736%" y="533" width="0.0118%" height="15" fill="rgb(235,185,3)" fg:x="37244" fg:w="13"/><text x="33.9236%" y="543.50"></text></g><g><title>__GI___libc_malloc (101 samples, 0.09%)</title><rect x="33.7034%" y="421" width="0.0913%" height="15" fill="rgb(227,24,12)" fg:x="37277" fg:w="101"/><text x="33.9534%" y="431.50"></text></g><g><title>_int_malloc (42 samples, 0.04%)</title><rect x="33.7568%" y="405" width="0.0380%" height="15" fill="rgb(252,169,48)" fg:x="37336" fg:w="42"/><text x="34.0068%" y="415.50"></text></g><g><title>unlink_chunk.constprop.0 (16 samples, 0.01%)</title><rect x="33.7803%" y="389" width="0.0145%" height="15" fill="rgb(212,65,1)" fg:x="37362" fg:w="16"/><text x="34.0303%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (114 samples, 0.10%)</title><rect x="33.7016%" y="501" width="0.1031%" height="15" fill="rgb(242,39,24)" fg:x="37275" fg:w="114"/><text x="33.9516%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (112 samples, 0.10%)</title><rect x="33.7034%" y="485" width="0.1013%" height="15" fill="rgb(249,32,23)" fg:x="37277" fg:w="112"/><text x="33.9534%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.10%)</title><rect x="33.7034%" y="469" width="0.1013%" height="15" fill="rgb(251,195,23)" fg:x="37277" fg:w="112"/><text x="33.9534%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.10%)</title><rect x="33.7034%" y="453" width="0.1013%" height="15" fill="rgb(236,174,8)" fg:x="37277" fg:w="112"/><text x="33.9534%" y="463.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.10%)</title><rect x="33.7034%" y="437" width="0.1013%" height="15" fill="rgb(220,197,8)" fg:x="37277" fg:w="112"/><text x="33.9534%" y="447.50"></text></g><g><title>getrandom::imp::getrandom_inner (23 samples, 0.02%)</title><rect x="33.8065%" y="485" width="0.0208%" height="15" fill="rgb(240,108,37)" fg:x="37391" fg:w="23"/><text x="34.0565%" y="495.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (22 samples, 0.02%)</title><rect x="33.8074%" y="469" width="0.0199%" height="15" fill="rgb(232,176,24)" fg:x="37392" fg:w="22"/><text x="34.0574%" y="479.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (20 samples, 0.02%)</title><rect x="33.8092%" y="453" width="0.0181%" height="15" fill="rgb(243,35,29)" fg:x="37394" fg:w="20"/><text x="34.0592%" y="463.50"></text></g><g><title>getrandom::imp::getrandom (20 samples, 0.02%)</title><rect x="33.8092%" y="437" width="0.0181%" height="15" fill="rgb(210,37,18)" fg:x="37394" fg:w="20"/><text x="34.0592%" y="447.50"></text></g><g><title>syscall (18 samples, 0.02%)</title><rect x="33.8110%" y="421" width="0.0163%" height="15" fill="rgb(224,184,40)" fg:x="37396" fg:w="18"/><text x="34.0610%" y="431.50"></text></g><g><title>&lt;bevy_render::render_resource::buffer::Buffer as core::convert::From&lt;wgpu::Buffer&gt;&gt;::from (151 samples, 0.14%)</title><rect x="33.6926%" y="517" width="0.1365%" height="15" fill="rgb(236,39,29)" fg:x="37265" fg:w="151"/><text x="33.9426%" y="527.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (27 samples, 0.02%)</title><rect x="33.8047%" y="501" width="0.0244%" height="15" fill="rgb(232,48,39)" fg:x="37389" fg:w="27"/><text x="34.0547%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (97 samples, 0.09%)</title><rect x="33.8436%" y="469" width="0.0877%" height="15" fill="rgb(236,34,42)" fg:x="37432" fg:w="97"/><text x="34.0936%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (97 samples, 0.09%)</title><rect x="33.8436%" y="453" width="0.0877%" height="15" fill="rgb(243,106,37)" fg:x="37432" fg:w="97"/><text x="34.0936%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (97 samples, 0.09%)</title><rect x="33.8436%" y="437" width="0.0877%" height="15" fill="rgb(218,96,6)" fg:x="37432" fg:w="97"/><text x="34.0936%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (97 samples, 0.09%)</title><rect x="33.8436%" y="421" width="0.0877%" height="15" fill="rgb(235,130,12)" fg:x="37432" fg:w="97"/><text x="34.0936%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (106 samples, 0.10%)</title><rect x="33.8372%" y="501" width="0.0958%" height="15" fill="rgb(231,95,0)" fg:x="37425" fg:w="106"/><text x="34.0872%" y="511.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (106 samples, 0.10%)</title><rect x="33.8372%" y="485" width="0.0958%" height="15" fill="rgb(228,12,23)" fg:x="37425" fg:w="106"/><text x="34.0872%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (19,896 samples, 17.99%)</title><rect x="33.9331%" y="501" width="17.9887%" height="15" fill="rgb(216,12,1)" fg:x="37531" fg:w="19896"/><text x="34.1831%" y="511.50">core::slice::&lt;impl [T]&gt;::cop..</text></g><g><title>core::intrinsics::copy_nonoverlapping (19,896 samples, 17.99%)</title><rect x="33.9331%" y="485" width="17.9887%" height="15" fill="rgb(219,59,3)" fg:x="37531" fg:w="19896"/><text x="34.1831%" y="495.50">core::intrinsics::copy_nonov..</text></g><g><title>__memcpy_avx_unaligned_erms (19,896 samples, 17.99%)</title><rect x="33.9331%" y="469" width="17.9887%" height="15" fill="rgb(215,208,46)" fg:x="37531" fg:w="19896"/><text x="34.1831%" y="479.50">__memcpy_avx_unaligned_erms</text></g><g><title>wgpu::Buffer::unmap (13 samples, 0.01%)</title><rect x="51.9217%" y="501" width="0.0118%" height="15" fill="rgb(254,224,29)" fg:x="57427" fg:w="13"/><text x="52.1717%" y="511.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (19 samples, 0.02%)</title><rect x="51.9335%" y="501" width="0.0172%" height="15" fill="rgb(232,14,29)" fg:x="57440" fg:w="19"/><text x="52.1835%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (20,291 samples, 18.35%)</title><rect x="33.6175%" y="613" width="18.3458%" height="15" fill="rgb(208,45,52)" fg:x="37182" fg:w="20291"/><text x="33.8675%" y="623.50">&lt;Func as bevy_ecs::system::fu..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (20,291 samples, 18.35%)</title><rect x="33.6175%" y="597" width="18.3458%" height="15" fill="rgb(234,191,28)" fg:x="37182" fg:w="20291"/><text x="33.8675%" y="607.50">&lt;Func as bevy_ecs::system::fu..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20,291 samples, 18.35%)</title><rect x="33.6175%" y="581" width="18.3458%" height="15" fill="rgb(244,67,43)" fg:x="37182" fg:w="20291"/><text x="33.8675%" y="591.50">core::ops::function::impls::&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (20,291 samples, 18.35%)</title><rect x="33.6175%" y="565" width="18.3458%" height="15" fill="rgb(236,189,24)" fg:x="37182" fg:w="20291"/><text x="33.8675%" y="575.50">core::ops::function::FnMut::c..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (20,291 samples, 18.35%)</title><rect x="33.6175%" y="549" width="18.3458%" height="15" fill="rgb(239,214,33)" fg:x="37182" fg:w="20291"/><text x="33.8675%" y="559.50">stellar_coordinates_test::GPU..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (20,216 samples, 18.28%)</title><rect x="33.6853%" y="533" width="18.2780%" height="15" fill="rgb(226,176,41)" fg:x="37257" fg:w="20216"/><text x="33.9353%" y="543.50">bevy_render::renderer::rende..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (20,057 samples, 18.13%)</title><rect x="33.8291%" y="517" width="18.1342%" height="15" fill="rgb(248,47,8)" fg:x="37416" fg:w="20057"/><text x="34.0791%" y="527.50">&lt;wgpu::Device as wgpu::util:..</text></g><g><title>wgpu::Device::create_buffer (14 samples, 0.01%)</title><rect x="51.9507%" y="501" width="0.0127%" height="15" fill="rgb(218,81,44)" fg:x="57459" fg:w="14"/><text x="52.2007%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (20,321 samples, 18.37%)</title><rect x="33.6094%" y="629" width="18.3729%" height="15" fill="rgb(213,98,6)" fg:x="37173" fg:w="20321"/><text x="33.8594%" y="639.50">&lt;bevy_ecs::system::function_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,419 samples, 18.46%)</title><rect x="33.5262%" y="661" width="18.4615%" height="15" fill="rgb(222,85,22)" fg:x="37081" fg:w="20419"/><text x="33.7762%" y="671.50">&lt;core::future::from_generator..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (20,360 samples, 18.41%)</title><rect x="33.5796%" y="645" width="18.4082%" height="15" fill="rgb(239,46,39)" fg:x="37140" fg:w="20360"/><text x="33.8296%" y="655.50">bevy_ecs::schedule::executor_..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (20,422 samples, 18.46%)</title><rect x="33.5262%" y="677" width="18.4642%" height="15" fill="rgb(237,12,29)" fg:x="37081" fg:w="20422"/><text x="33.7762%" y="687.50">async_executor::Executor::spa..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="51.9986%" y="613" width="0.0118%" height="15" fill="rgb(214,77,8)" fg:x="57512" fg:w="13"/><text x="52.2486%" y="623.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (13 samples, 0.01%)</title><rect x="51.9986%" y="597" width="0.0118%" height="15" fill="rgb(217,168,37)" fg:x="57512" fg:w="13"/><text x="52.2486%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="51.9968%" y="645" width="0.0199%" height="15" fill="rgb(221,217,23)" fg:x="57510" fg:w="22"/><text x="52.2468%" y="655.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (22 samples, 0.02%)</title><rect x="51.9968%" y="629" width="0.0199%" height="15" fill="rgb(243,229,36)" fg:x="57510" fg:w="22"/><text x="52.2468%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="51.9968%" y="661" width="0.0208%" height="15" fill="rgb(251,163,40)" fg:x="57510" fg:w="23"/><text x="52.2468%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,457 samples, 18.50%)</title><rect x="33.5226%" y="693" width="18.4959%" height="15" fill="rgb(237,222,12)" fg:x="37077" fg:w="20457"/><text x="33.7726%" y="703.50">&lt;core::future::from_generator..</text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (31 samples, 0.03%)</title><rect x="51.9905%" y="677" width="0.0280%" height="15" fill="rgb(248,132,6)" fg:x="57503" fg:w="31"/><text x="52.2405%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (20,473 samples, 18.51%)</title><rect x="33.5208%" y="709" width="18.5103%" height="15" fill="rgb(227,167,50)" fg:x="37075" fg:w="20473"/><text x="33.7708%" y="719.50">async_task::raw::RawTask&lt;F,T,..</text></g><g><title>concurrent_queue::full_fence (5,106 samples, 4.62%)</title><rect x="53.1975%" y="677" width="4.6165%" height="15" fill="rgb(242,84,37)" fg:x="58838" fg:w="5106"/><text x="53.4475%" y="687.50">concu..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4,990 samples, 4.51%)</title><rect x="53.3024%" y="661" width="4.5116%" height="15" fill="rgb(212,4,50)" fg:x="58954" fg:w="4990"/><text x="53.5524%" y="671.50">core:..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4,990 samples, 4.51%)</title><rect x="53.3024%" y="645" width="4.5116%" height="15" fill="rgb(230,228,32)" fg:x="58954" fg:w="4990"/><text x="53.5524%" y="655.50">core:..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (4,990 samples, 4.51%)</title><rect x="53.3024%" y="629" width="4.5116%" height="15" fill="rgb(248,217,23)" fg:x="58954" fg:w="4990"/><text x="53.5524%" y="639.50">core:..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (258 samples, 0.23%)</title><rect x="57.8149%" y="677" width="0.2333%" height="15" fill="rgb(238,197,32)" fg:x="63945" fg:w="258"/><text x="58.0649%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (258 samples, 0.23%)</title><rect x="57.8149%" y="661" width="0.2333%" height="15" fill="rgb(236,106,1)" fg:x="63945" fg:w="258"/><text x="58.0649%" y="671.50"></text></g><g><title>async_executor::Executor::try_tick (27,277 samples, 24.66%)</title><rect x="33.5136%" y="725" width="24.6621%" height="15" fill="rgb(219,228,13)" fg:x="37067" fg:w="27277"/><text x="33.7636%" y="735.50">async_executor::Executor::try_tick</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6,796 samples, 6.14%)</title><rect x="52.0311%" y="709" width="6.1445%" height="15" fill="rgb(238,30,35)" fg:x="57548" fg:w="6796"/><text x="52.2811%" y="719.50">concurre..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6,796 samples, 6.14%)</title><rect x="52.0311%" y="693" width="6.1445%" height="15" fill="rgb(236,70,23)" fg:x="57548" fg:w="6796"/><text x="52.2811%" y="703.50">concurre..</text></g><g><title>core::sync::atomic::AtomicUsize::load (134 samples, 0.12%)</title><rect x="58.0545%" y="677" width="0.1212%" height="15" fill="rgb(249,104,48)" fg:x="64210" fg:w="134"/><text x="58.3045%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (134 samples, 0.12%)</title><rect x="58.0545%" y="661" width="0.1212%" height="15" fill="rgb(254,117,50)" fg:x="64210" fg:w="134"/><text x="58.3045%" y="671.50"></text></g><g><title>__tls_get_addr_slow (150 samples, 0.14%)</title><rect x="58.7055%" y="645" width="0.1356%" height="15" fill="rgb(223,152,4)" fg:x="64930" fg:w="150"/><text x="58.9555%" y="655.50"></text></g><g><title>__tls_get_addr (1,219 samples, 1.10%)</title><rect x="58.5626%" y="661" width="1.1021%" height="15" fill="rgb(245,6,2)" fg:x="64772" fg:w="1219"/><text x="58.8126%" y="671.50"></text></g><g><title>update_get_addr (911 samples, 0.82%)</title><rect x="58.8411%" y="645" width="0.8237%" height="15" fill="rgb(249,150,24)" fg:x="65080" fg:w="911"/><text x="59.0911%" y="655.50"></text></g><g><title>_dl_update_slotinfo (731 samples, 0.66%)</title><rect x="59.0038%" y="629" width="0.6609%" height="15" fill="rgb(228,185,42)" fg:x="65260" fg:w="731"/><text x="59.2538%" y="639.50"></text></g><g><title>_fini (143 samples, 0.13%)</title><rect x="59.6647%" y="661" width="0.1293%" height="15" fill="rgb(226,39,33)" fg:x="65991" fg:w="143"/><text x="59.9147%" y="671.50"></text></g><g><title>__tls_get_addr_slow (283 samples, 0.26%)</title><rect x="60.2099%" y="597" width="0.2559%" height="15" fill="rgb(221,166,19)" fg:x="66594" fg:w="283"/><text x="60.4599%" y="607.50"></text></g><g><title>__tls_get_addr (1,499 samples, 1.36%)</title><rect x="59.9477%" y="613" width="1.3553%" height="15" fill="rgb(209,109,2)" fg:x="66304" fg:w="1499"/><text x="60.1977%" y="623.50"></text></g><g><title>update_get_addr (926 samples, 0.84%)</title><rect x="60.4658%" y="597" width="0.8372%" height="15" fill="rgb(252,216,26)" fg:x="66877" fg:w="926"/><text x="60.7158%" y="607.50"></text></g><g><title>_dl_update_slotinfo (709 samples, 0.64%)</title><rect x="60.6620%" y="581" width="0.6410%" height="15" fill="rgb(227,173,36)" fg:x="67094" fg:w="709"/><text x="60.9120%" y="591.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (3,281 samples, 2.97%)</title><rect x="58.4460%" y="677" width="2.9665%" height="15" fill="rgb(209,90,7)" fg:x="64643" fg:w="3281"/><text x="58.6960%" y="687.50">fut..</text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1,790 samples, 1.62%)</title><rect x="59.7940%" y="661" width="1.6184%" height="15" fill="rgb(250,194,11)" fg:x="66134" fg:w="1790"/><text x="60.0440%" y="671.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1,782 samples, 1.61%)</title><rect x="59.8013%" y="645" width="1.6112%" height="15" fill="rgb(220,72,50)" fg:x="66142" fg:w="1782"/><text x="60.0513%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,782 samples, 1.61%)</title><rect x="59.8013%" y="629" width="1.6112%" height="15" fill="rgb(222,106,48)" fg:x="66142" fg:w="1782"/><text x="60.0513%" y="639.50"></text></g><g><title>_fini (121 samples, 0.11%)</title><rect x="61.3030%" y="613" width="0.1094%" height="15" fill="rgb(216,220,45)" fg:x="67803" fg:w="121"/><text x="61.5530%" y="623.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2,583 samples, 2.34%)</title><rect x="62.9486%" y="517" width="2.3354%" height="15" fill="rgb(234,112,18)" fg:x="69623" fg:w="2583"/><text x="63.1986%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2,583 samples, 2.34%)</title><rect x="62.9486%" y="501" width="2.3354%" height="15" fill="rgb(206,179,9)" fg:x="69623" fg:w="2583"/><text x="63.1986%" y="511.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,577 samples, 2.33%)</title><rect x="62.9540%" y="485" width="2.3300%" height="15" fill="rgb(215,115,40)" fg:x="69629" fg:w="2577"/><text x="63.2040%" y="495.50">c..</text></g><g><title>core::sync::atomic::atomic_add (2,577 samples, 2.33%)</title><rect x="62.9540%" y="469" width="2.3300%" height="15" fill="rgb(222,69,34)" fg:x="69629" fg:w="2577"/><text x="63.2040%" y="479.50">c..</text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2,857 samples, 2.58%)</title><rect x="62.7026%" y="549" width="2.5831%" height="15" fill="rgb(209,161,10)" fg:x="69351" fg:w="2857"/><text x="62.9526%" y="559.50">&lt;c..</text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (2,721 samples, 2.46%)</title><rect x="62.8256%" y="533" width="2.4602%" height="15" fill="rgb(217,6,38)" fg:x="69487" fg:w="2721"/><text x="63.0756%" y="543.50">wa..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (126 samples, 0.11%)</title><rect x="65.4078%" y="485" width="0.1139%" height="15" fill="rgb(229,229,48)" fg:x="72343" fg:w="126"/><text x="65.6578%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (126 samples, 0.11%)</title><rect x="65.4078%" y="469" width="0.1139%" height="15" fill="rgb(225,21,28)" fg:x="72343" fg:w="126"/><text x="65.6578%" y="479.50"></text></g><g><title>async_task::utils::abort_on_panic (6,033 samples, 5.45%)</title><rect x="62.7017%" y="581" width="5.4546%" height="15" fill="rgb(206,33,13)" fg:x="69350" fg:w="6033"/><text x="62.9517%" y="591.50">async_t..</text></g><g><title>async_task::header::Header::register::{{closure}} (6,032 samples, 5.45%)</title><rect x="62.7026%" y="565" width="5.4537%" height="15" fill="rgb(242,178,17)" fg:x="69351" fg:w="6032"/><text x="62.9526%" y="575.50">async_t..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3,175 samples, 2.87%)</title><rect x="65.2858%" y="549" width="2.8706%" height="15" fill="rgb(220,162,5)" fg:x="72208" fg:w="3175"/><text x="65.5358%" y="559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (3,040 samples, 2.75%)</title><rect x="65.4078%" y="533" width="2.7486%" height="15" fill="rgb(210,33,43)" fg:x="72343" fg:w="3040"/><text x="65.6578%" y="543.50">co..</text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (3,040 samples, 2.75%)</title><rect x="65.4078%" y="517" width="2.7486%" height="15" fill="rgb(216,116,54)" fg:x="72343" fg:w="3040"/><text x="65.6578%" y="527.50">&lt;c..</text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (3,040 samples, 2.75%)</title><rect x="65.4078%" y="501" width="2.7486%" height="15" fill="rgb(249,92,24)" fg:x="72343" fg:w="3040"/><text x="65.6578%" y="511.50">wa..</text></g><g><title>core::mem::drop (2,914 samples, 2.63%)</title><rect x="65.5217%" y="485" width="2.6346%" height="15" fill="rgb(231,189,14)" fg:x="72469" fg:w="2914"/><text x="65.7717%" y="495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2,914 samples, 2.63%)</title><rect x="65.5217%" y="469" width="2.6346%" height="15" fill="rgb(230,8,41)" fg:x="72469" fg:w="2914"/><text x="65.7717%" y="479.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,914 samples, 2.63%)</title><rect x="65.5217%" y="453" width="2.6346%" height="15" fill="rgb(249,7,27)" fg:x="72469" fg:w="2914"/><text x="65.7717%" y="463.50">&lt;a..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2,912 samples, 2.63%)</title><rect x="65.5235%" y="437" width="2.6328%" height="15" fill="rgb(232,86,5)" fg:x="72471" fg:w="2912"/><text x="65.7735%" y="447.50">co..</text></g><g><title>core::sync::atomic::atomic_sub (2,912 samples, 2.63%)</title><rect x="65.5235%" y="421" width="2.6328%" height="15" fill="rgb(224,175,18)" fg:x="72471" fg:w="2912"/><text x="65.7735%" y="431.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (134 samples, 0.12%)</title><rect x="68.1564%" y="581" width="0.1212%" height="15" fill="rgb(220,129,12)" fg:x="75383" fg:w="134"/><text x="68.4064%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (134 samples, 0.12%)</title><rect x="68.1564%" y="565" width="0.1212%" height="15" fill="rgb(210,19,36)" fg:x="75383" fg:w="134"/><text x="68.4064%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5,998 samples, 5.42%)</title><rect x="68.2775%" y="581" width="5.4230%" height="15" fill="rgb(219,96,14)" fg:x="75517" fg:w="5998"/><text x="68.5275%" y="591.50">core::s..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5,998 samples, 5.42%)</title><rect x="68.2775%" y="565" width="5.4230%" height="15" fill="rgb(249,106,1)" fg:x="75517" fg:w="5998"/><text x="68.5275%" y="575.50">core::s..</text></g><g><title>async_task::header::Header::register (13,020 samples, 11.77%)</title><rect x="62.0444%" y="597" width="11.7718%" height="15" fill="rgb(249,155,20)" fg:x="68623" fg:w="13020"/><text x="62.2944%" y="607.50">async_task::heade..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (128 samples, 0.12%)</title><rect x="73.7005%" y="581" width="0.1157%" height="15" fill="rgb(244,168,9)" fg:x="81515" fg:w="128"/><text x="73.9505%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (128 samples, 0.12%)</title><rect x="73.7005%" y="565" width="0.1157%" height="15" fill="rgb(216,23,50)" fg:x="81515" fg:w="128"/><text x="73.9505%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (15,193 samples, 13.74%)</title><rect x="61.5390%" y="661" width="13.7365%" height="15" fill="rgb(224,219,20)" fg:x="68064" fg:w="15193"/><text x="61.7890%" y="671.50">&lt;futures_lite::future..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (15,075 samples, 13.63%)</title><rect x="61.6457%" y="645" width="13.6298%" height="15" fill="rgb(222,156,15)" fg:x="68182" fg:w="15075"/><text x="61.8957%" y="655.50">&lt;&amp;mut F as core::futu..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (14,939 samples, 13.51%)</title><rect x="61.7687%" y="629" width="13.5069%" height="15" fill="rgb(231,97,17)" fg:x="68318" fg:w="14939"/><text x="62.0187%" y="639.50">&lt;async_task::task::T..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (14,937 samples, 13.51%)</title><rect x="61.7705%" y="613" width="13.5051%" height="15" fill="rgb(218,70,48)" fg:x="68320" fg:w="14937"/><text x="62.0205%" y="623.50">async_task::task::Ta..</text></g><g><title>core::sync::atomic::AtomicUsize::load (1,614 samples, 1.46%)</title><rect x="73.8163%" y="597" width="1.4593%" height="15" fill="rgb(212,196,52)" fg:x="81643" fg:w="1614"/><text x="74.0663%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1,614 samples, 1.46%)</title><rect x="73.8163%" y="581" width="1.4593%" height="15" fill="rgb(243,203,18)" fg:x="81643" fg:w="1614"/><text x="74.0663%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (203 samples, 0.18%)</title><rect x="75.2755%" y="661" width="0.1835%" height="15" fill="rgb(252,125,41)" fg:x="83257" fg:w="203"/><text x="75.5255%" y="671.50"></text></g><g><title>core::cell::BorrowRefMut::new (203 samples, 0.18%)</title><rect x="75.2755%" y="645" width="0.1835%" height="15" fill="rgb(223,180,33)" fg:x="83257" fg:w="203"/><text x="75.5255%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.01%)</title><rect x="75.4473%" y="629" width="0.0118%" height="15" fill="rgb(254,159,46)" fg:x="83447" fg:w="13"/><text x="75.6973%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="75.4473%" y="613" width="0.0118%" height="15" fill="rgb(254,38,10)" fg:x="83447" fg:w="13"/><text x="75.6973%" y="623.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="75.4473%" y="597" width="0.0118%" height="15" fill="rgb(208,217,32)" fg:x="83447" fg:w="13"/><text x="75.6973%" y="607.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="75.4473%" y="581" width="0.0118%" height="15" fill="rgb(221,120,13)" fg:x="83447" fg:w="13"/><text x="75.6973%" y="591.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (148 samples, 0.13%)</title><rect x="75.4591%" y="661" width="0.1338%" height="15" fill="rgb(246,54,52)" fg:x="83460" fg:w="148"/><text x="75.7091%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (148 samples, 0.13%)</title><rect x="75.4591%" y="645" width="0.1338%" height="15" fill="rgb(242,34,25)" fg:x="83460" fg:w="148"/><text x="75.7091%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (46,735 samples, 42.25%)</title><rect x="33.4539%" y="805" width="42.2547%" height="15" fill="rgb(247,209,9)" fg:x="37001" fg:w="46735"/><text x="33.7039%" y="815.50">&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (46,735 samples, 42.25%)</title><rect x="33.4539%" y="789" width="42.2547%" height="15" fill="rgb(228,71,26)" fg:x="37001" fg:w="46735"/><text x="33.7039%" y="799.50">bevy_tasks::task_pool::TaskPool::scope</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (46,735 samples, 42.25%)</title><rect x="33.4539%" y="773" width="42.2547%" height="15" fill="rgb(222,145,49)" fg:x="37001" fg:w="46735"/><text x="33.7039%" y="783.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46,735 samples, 42.25%)</title><rect x="33.4539%" y="757" width="42.2547%" height="15" fill="rgb(218,121,17)" fg:x="37001" fg:w="46735"/><text x="33.7039%" y="767.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (46,735 samples, 42.25%)</title><rect x="33.4539%" y="741" width="42.2547%" height="15" fill="rgb(244,50,7)" fg:x="37001" fg:w="46735"/><text x="33.7039%" y="751.50">bevy_tasks::task_pool::TaskPool::scope::{{closure}}</text></g><g><title>futures_lite::future::block_on (19,387 samples, 17.53%)</title><rect x="58.1802%" y="725" width="17.5285%" height="15" fill="rgb(246,229,37)" fg:x="64349" fg:w="19387"/><text x="58.4302%" y="735.50">futures_lite::future::block..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,387 samples, 17.53%)</title><rect x="58.1802%" y="709" width="17.5285%" height="15" fill="rgb(225,18,5)" fg:x="64349" fg:w="19387"/><text x="58.4302%" y="719.50">std::thread::local::LocalKe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,228 samples, 17.38%)</title><rect x="58.3239%" y="693" width="17.3847%" height="15" fill="rgb(213,204,8)" fg:x="64508" fg:w="19228"/><text x="58.5739%" y="703.50">std::thread::local::LocalKe..</text></g><g><title>futures_lite::future::block_on::{{closure}} (15,812 samples, 14.30%)</title><rect x="61.4124%" y="677" width="14.2962%" height="15" fill="rgb(238,103,6)" fg:x="67924" fg:w="15812"/><text x="61.6624%" y="687.50">futures_lite::future::..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (128 samples, 0.12%)</title><rect x="75.5929%" y="661" width="0.1157%" height="15" fill="rgb(222,25,35)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (128 samples, 0.12%)</title><rect x="75.5929%" y="645" width="0.1157%" height="15" fill="rgb(213,203,35)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="655.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (128 samples, 0.12%)</title><rect x="75.5929%" y="629" width="0.1157%" height="15" fill="rgb(221,79,53)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (128 samples, 0.12%)</title><rect x="75.5929%" y="613" width="0.1157%" height="15" fill="rgb(243,200,35)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (128 samples, 0.12%)</title><rect x="75.5929%" y="597" width="0.1157%" height="15" fill="rgb(248,60,25)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="607.50"></text></g><g><title>core::mem::replace (128 samples, 0.12%)</title><rect x="75.5929%" y="581" width="0.1157%" height="15" fill="rgb(227,53,46)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="591.50"></text></g><g><title>core::ptr::write (128 samples, 0.12%)</title><rect x="75.5929%" y="565" width="0.1157%" height="15" fill="rgb(216,120,32)" fg:x="83608" fg:w="128"/><text x="75.8429%" y="575.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (12 samples, 0.01%)</title><rect x="75.7113%" y="709" width="0.0108%" height="15" fill="rgb(220,134,1)" fg:x="83739" fg:w="12"/><text x="75.9613%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (14 samples, 0.01%)</title><rect x="75.7583%" y="677" width="0.0127%" height="15" fill="rgb(237,168,5)" fg:x="83791" fg:w="14"/><text x="76.0083%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (13 samples, 0.01%)</title><rect x="75.7592%" y="661" width="0.0118%" height="15" fill="rgb(231,100,33)" fg:x="83792" fg:w="13"/><text x="76.0092%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="75.7602%" y="645" width="0.0108%" height="15" fill="rgb(236,177,47)" fg:x="83793" fg:w="12"/><text x="76.0102%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="75.7602%" y="629" width="0.0108%" height="15" fill="rgb(235,7,49)" fg:x="83793" fg:w="12"/><text x="76.0102%" y="639.50"></text></g><g><title>core::intrinsics::copy (13 samples, 0.01%)</title><rect x="75.7837%" y="645" width="0.0118%" height="15" fill="rgb(232,119,22)" fg:x="83819" fg:w="13"/><text x="76.0337%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (40 samples, 0.04%)</title><rect x="75.7710%" y="677" width="0.0362%" height="15" fill="rgb(254,73,53)" fg:x="83805" fg:w="40"/><text x="76.0210%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (30 samples, 0.03%)</title><rect x="75.7800%" y="661" width="0.0271%" height="15" fill="rgb(251,35,20)" fg:x="83815" fg:w="30"/><text x="76.0300%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="75.7954%" y="645" width="0.0118%" height="15" fill="rgb(241,119,20)" fg:x="83832" fg:w="13"/><text x="76.0454%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="75.7954%" y="629" width="0.0118%" height="15" fill="rgb(207,102,14)" fg:x="83832" fg:w="13"/><text x="76.0454%" y="639.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (17 samples, 0.02%)</title><rect x="75.8072%" y="677" width="0.0154%" height="15" fill="rgb(248,201,50)" fg:x="83845" fg:w="17"/><text x="76.0572%" y="687.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (121 samples, 0.11%)</title><rect x="75.7222%" y="709" width="0.1094%" height="15" fill="rgb(222,185,44)" fg:x="83751" fg:w="121"/><text x="75.9722%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (89 samples, 0.08%)</title><rect x="75.7511%" y="693" width="0.0805%" height="15" fill="rgb(218,107,18)" fg:x="83783" fg:w="89"/><text x="76.0011%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.01%)</title><rect x="75.8397%" y="629" width="0.0136%" height="15" fill="rgb(237,177,39)" fg:x="83881" fg:w="15"/><text x="76.0897%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.01%)</title><rect x="75.8397%" y="613" width="0.0136%" height="15" fill="rgb(246,69,6)" fg:x="83881" fg:w="15"/><text x="76.0897%" y="623.50"></text></g><g><title>hashbrown::map::make_insert_hash (39 samples, 0.04%)</title><rect x="75.8325%" y="661" width="0.0353%" height="15" fill="rgb(234,208,37)" fg:x="83873" fg:w="39"/><text x="76.0825%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (39 samples, 0.04%)</title><rect x="75.8325%" y="645" width="0.0353%" height="15" fill="rgb(225,4,6)" fg:x="83873" fg:w="39"/><text x="76.0825%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.01%)</title><rect x="75.8533%" y="629" width="0.0145%" height="15" fill="rgb(233,45,0)" fg:x="83896" fg:w="16"/><text x="76.1033%" y="639.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (16 samples, 0.01%)</title><rect x="75.8533%" y="613" width="0.0145%" height="15" fill="rgb(226,136,5)" fg:x="83896" fg:w="16"/><text x="76.1033%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (14 samples, 0.01%)</title><rect x="75.8551%" y="597" width="0.0127%" height="15" fill="rgb(211,91,47)" fg:x="83898" fg:w="14"/><text x="76.1051%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (14 samples, 0.01%)</title><rect x="75.8551%" y="581" width="0.0127%" height="15" fill="rgb(242,88,51)" fg:x="83898" fg:w="14"/><text x="76.1051%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="75.8551%" y="565" width="0.0127%" height="15" fill="rgb(230,91,28)" fg:x="83898" fg:w="14"/><text x="76.1051%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="75.8551%" y="549" width="0.0127%" height="15" fill="rgb(254,186,29)" fg:x="83898" fg:w="14"/><text x="76.1051%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="75.8560%" y="533" width="0.0118%" height="15" fill="rgb(238,6,4)" fg:x="83899" fg:w="13"/><text x="76.1060%" y="543.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (47 samples, 0.04%)</title><rect x="75.8316%" y="709" width="0.0425%" height="15" fill="rgb(221,151,16)" fg:x="83872" fg:w="47"/><text x="76.0816%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (47 samples, 0.04%)</title><rect x="75.8316%" y="693" width="0.0425%" height="15" fill="rgb(251,143,52)" fg:x="83872" fg:w="47"/><text x="76.0816%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (46 samples, 0.04%)</title><rect x="75.8325%" y="677" width="0.0416%" height="15" fill="rgb(206,90,15)" fg:x="83873" fg:w="46"/><text x="76.0825%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (216 samples, 0.20%)</title><rect x="75.7086%" y="757" width="0.1953%" height="15" fill="rgb(218,35,8)" fg:x="83736" fg:w="216"/><text x="75.9586%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (216 samples, 0.20%)</title><rect x="75.7086%" y="741" width="0.1953%" height="15" fill="rgb(239,215,6)" fg:x="83736" fg:w="216"/><text x="75.9586%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (214 samples, 0.19%)</title><rect x="75.7104%" y="725" width="0.1935%" height="15" fill="rgb(245,116,39)" fg:x="83738" fg:w="214"/><text x="75.9604%" y="735.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (33 samples, 0.03%)</title><rect x="75.8741%" y="709" width="0.0298%" height="15" fill="rgb(242,65,28)" fg:x="83919" fg:w="33"/><text x="76.1241%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (32 samples, 0.03%)</title><rect x="75.8750%" y="693" width="0.0289%" height="15" fill="rgb(252,132,53)" fg:x="83920" fg:w="32"/><text x="76.1250%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (27 samples, 0.02%)</title><rect x="75.8795%" y="677" width="0.0244%" height="15" fill="rgb(224,159,50)" fg:x="83925" fg:w="27"/><text x="76.1295%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::initialize (15 samples, 0.01%)</title><rect x="75.9256%" y="693" width="0.0136%" height="15" fill="rgb(224,93,4)" fg:x="83976" fg:w="15"/><text x="76.1756%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::initialize_unchecked (15 samples, 0.01%)</title><rect x="75.9256%" y="677" width="0.0136%" height="15" fill="rgb(208,81,34)" fg:x="83976" fg:w="15"/><text x="76.1756%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="75.9274%" y="661" width="0.0118%" height="15" fill="rgb(233,92,54)" fg:x="83978" fg:w="13"/><text x="76.1774%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="75.9274%" y="645" width="0.0118%" height="15" fill="rgb(237,21,14)" fg:x="83978" fg:w="13"/><text x="76.1774%" y="655.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (50 samples, 0.05%)</title><rect x="75.9111%" y="725" width="0.0452%" height="15" fill="rgb(249,128,51)" fg:x="83960" fg:w="50"/><text x="76.1611%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (37 samples, 0.03%)</title><rect x="75.9229%" y="709" width="0.0335%" height="15" fill="rgb(223,129,24)" fg:x="83973" fg:w="37"/><text x="76.1729%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (56 samples, 0.05%)</title><rect x="75.9075%" y="757" width="0.0506%" height="15" fill="rgb(231,168,25)" fg:x="83956" fg:w="56"/><text x="76.1575%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (56 samples, 0.05%)</title><rect x="75.9075%" y="741" width="0.0506%" height="15" fill="rgb(224,39,20)" fg:x="83956" fg:w="56"/><text x="76.1575%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (277 samples, 0.25%)</title><rect x="75.7086%" y="805" width="0.2504%" height="15" fill="rgb(225,152,53)" fg:x="83736" fg:w="277"/><text x="75.9586%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (277 samples, 0.25%)</title><rect x="75.7086%" y="789" width="0.2504%" height="15" fill="rgb(252,17,24)" fg:x="83736" fg:w="277"/><text x="75.9586%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (277 samples, 0.25%)</title><rect x="75.7086%" y="773" width="0.2504%" height="15" fill="rgb(250,114,30)" fg:x="83736" fg:w="277"/><text x="75.9586%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (47,053 samples, 42.54%)</title><rect x="33.4539%" y="853" width="42.5422%" height="15" fill="rgb(229,5,4)" fg:x="37001" fg:w="47053"/><text x="33.7039%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (47,053 samples, 42.54%)</title><rect x="33.4539%" y="837" width="42.5422%" height="15" fill="rgb(225,176,49)" fg:x="37001" fg:w="47053"/><text x="33.7039%" y="847.50">&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{clos..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (47,053 samples, 42.54%)</title><rect x="33.4539%" y="821" width="42.5422%" height="15" fill="rgb(224,221,49)" fg:x="37001" fg:w="47053"/><text x="33.7039%" y="831.50">&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (41 samples, 0.04%)</title><rect x="75.9591%" y="805" width="0.0371%" height="15" fill="rgb(253,169,27)" fg:x="84013" fg:w="41"/><text x="76.2091%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.04%)</title><rect x="75.9591%" y="789" width="0.0371%" height="15" fill="rgb(211,206,16)" fg:x="84013" fg:w="41"/><text x="76.2091%" y="799.50"></text></g><g><title>bevy_render::renderer::render_system (41 samples, 0.04%)</title><rect x="75.9591%" y="773" width="0.0371%" height="15" fill="rgb(244,87,35)" fg:x="84013" fg:w="41"/><text x="76.2091%" y="783.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="76.0034%" y="709" width="0.0145%" height="15" fill="rgb(246,28,10)" fg:x="84062" fg:w="16"/><text x="76.2534%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="76.0287%" y="693" width="0.0108%" height="15" fill="rgb(229,12,44)" fg:x="84090" fg:w="12"/><text x="76.2787%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="76.0287%" y="677" width="0.0108%" height="15" fill="rgb(210,145,37)" fg:x="84090" fg:w="12"/><text x="76.2787%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="76.0287%" y="661" width="0.0108%" height="15" fill="rgb(227,112,52)" fg:x="84090" fg:w="12"/><text x="76.2787%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (18 samples, 0.02%)</title><rect x="76.0585%" y="661" width="0.0163%" height="15" fill="rgb(238,155,34)" fg:x="84123" fg:w="18"/><text x="76.3085%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (22 samples, 0.02%)</title><rect x="76.0585%" y="677" width="0.0199%" height="15" fill="rgb(239,226,36)" fg:x="84123" fg:w="22"/><text x="76.3085%" y="687.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.04%)</title><rect x="76.0838%" y="645" width="0.0380%" height="15" fill="rgb(230,16,23)" fg:x="84151" fg:w="42"/><text x="76.3338%" y="655.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.04%)</title><rect x="76.0838%" y="629" width="0.0380%" height="15" fill="rgb(236,171,36)" fg:x="84151" fg:w="42"/><text x="76.3338%" y="639.50"></text></g><g><title>_int_malloc (31 samples, 0.03%)</title><rect x="76.0938%" y="613" width="0.0280%" height="15" fill="rgb(221,22,14)" fg:x="84162" fg:w="31"/><text x="76.3438%" y="623.50"></text></g><g><title>async_task::runnable::spawn_unchecked (50 samples, 0.05%)</title><rect x="76.0811%" y="677" width="0.0452%" height="15" fill="rgb(242,43,11)" fg:x="84148" fg:w="50"/><text x="76.3311%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (47 samples, 0.04%)</title><rect x="76.0838%" y="661" width="0.0425%" height="15" fill="rgb(232,69,23)" fg:x="84151" fg:w="47"/><text x="76.3338%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (121 samples, 0.11%)</title><rect x="76.0260%" y="709" width="0.1094%" height="15" fill="rgb(216,180,54)" fg:x="84087" fg:w="121"/><text x="76.2760%" y="719.50"></text></g><g><title>async_executor::Executor::spawn (106 samples, 0.10%)</title><rect x="76.0395%" y="693" width="0.0958%" height="15" fill="rgb(216,5,24)" fg:x="84102" fg:w="106"/><text x="76.2895%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (153 samples, 0.14%)</title><rect x="76.0007%" y="725" width="0.1383%" height="15" fill="rgb(225,89,9)" fg:x="84059" fg:w="153"/><text x="76.2507%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (159 samples, 0.14%)</title><rect x="76.0007%" y="741" width="0.1438%" height="15" fill="rgb(243,75,33)" fg:x="84059" fg:w="159"/><text x="76.2507%" y="751.50"></text></g><g><title>async_executor::State::notify (12 samples, 0.01%)</title><rect x="76.1498%" y="725" width="0.0108%" height="15" fill="rgb(247,141,45)" fg:x="84224" fg:w="12"/><text x="76.3998%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (12 samples, 0.01%)</title><rect x="76.1498%" y="709" width="0.0108%" height="15" fill="rgb(232,177,36)" fg:x="84224" fg:w="12"/><text x="76.3998%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="76.1498%" y="693" width="0.0108%" height="15" fill="rgb(219,125,36)" fg:x="84224" fg:w="12"/><text x="76.3998%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="76.1724%" y="613" width="0.0118%" height="15" fill="rgb(227,94,9)" fg:x="84249" fg:w="13"/><text x="76.4224%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="76.1724%" y="597" width="0.0118%" height="15" fill="rgb(240,34,52)" fg:x="84249" fg:w="13"/><text x="76.4224%" y="607.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (16 samples, 0.01%)</title><rect x="76.1724%" y="629" width="0.0145%" height="15" fill="rgb(216,45,12)" fg:x="84249" fg:w="16"/><text x="76.4224%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="76.1688%" y="645" width="0.0262%" height="15" fill="rgb(246,21,19)" fg:x="84245" fg:w="29"/><text x="76.4188%" y="655.50"></text></g><g><title>event_listener::List::notify (18 samples, 0.02%)</title><rect x="76.2158%" y="565" width="0.0163%" height="15" fill="rgb(213,98,42)" fg:x="84297" fg:w="18"/><text x="76.4658%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (17 samples, 0.02%)</title><rect x="76.2167%" y="549" width="0.0154%" height="15" fill="rgb(250,136,47)" fg:x="84298" fg:w="17"/><text x="76.4667%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (17 samples, 0.02%)</title><rect x="76.2167%" y="533" width="0.0154%" height="15" fill="rgb(251,124,27)" fg:x="84298" fg:w="17"/><text x="76.4667%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (14 samples, 0.01%)</title><rect x="76.2195%" y="517" width="0.0127%" height="15" fill="rgb(229,180,14)" fg:x="84301" fg:w="14"/><text x="76.4695%" y="527.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (38 samples, 0.03%)</title><rect x="76.1996%" y="597" width="0.0344%" height="15" fill="rgb(245,216,25)" fg:x="84279" fg:w="38"/><text x="76.4496%" y="607.50"></text></g><g><title>event_listener::Event::notify (30 samples, 0.03%)</title><rect x="76.2068%" y="581" width="0.0271%" height="15" fill="rgb(251,43,5)" fg:x="84287" fg:w="30"/><text x="76.4568%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.04%)</title><rect x="76.1996%" y="613" width="0.0353%" height="15" fill="rgb(250,128,24)" fg:x="84279" fg:w="39"/><text x="76.4496%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.05%)</title><rect x="76.1950%" y="645" width="0.0515%" height="15" fill="rgb(217,117,27)" fg:x="84274" fg:w="57"/><text x="76.4450%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (56 samples, 0.05%)</title><rect x="76.1959%" y="629" width="0.0506%" height="15" fill="rgb(245,147,4)" fg:x="84275" fg:w="56"/><text x="76.4459%" y="639.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="76.2466%" y="645" width="0.0136%" height="15" fill="rgb(242,201,35)" fg:x="84331" fg:w="15"/><text x="76.4966%" y="655.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (14 samples, 0.01%)</title><rect x="76.2610%" y="629" width="0.0127%" height="15" fill="rgb(218,181,1)" fg:x="84347" fg:w="14"/><text x="76.5110%" y="639.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (13 samples, 0.01%)</title><rect x="76.2619%" y="613" width="0.0118%" height="15" fill="rgb(222,6,29)" fg:x="84348" fg:w="13"/><text x="76.5119%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (17 samples, 0.02%)</title><rect x="76.2601%" y="645" width="0.0154%" height="15" fill="rgb(208,186,3)" fg:x="84346" fg:w="17"/><text x="76.5101%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (131 samples, 0.12%)</title><rect x="76.1688%" y="661" width="0.1184%" height="15" fill="rgb(216,36,26)" fg:x="84245" fg:w="131"/><text x="76.4188%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="76.2963%" y="629" width="0.0118%" height="15" fill="rgb(248,201,23)" fg:x="84386" fg:w="13"/><text x="76.5463%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="76.3081%" y="613" width="0.0136%" height="15" fill="rgb(251,170,31)" fg:x="84399" fg:w="15"/><text x="76.5581%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="76.3090%" y="597" width="0.0127%" height="15" fill="rgb(207,110,25)" fg:x="84400" fg:w="14"/><text x="76.5590%" y="607.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (19 samples, 0.02%)</title><rect x="76.3081%" y="629" width="0.0172%" height="15" fill="rgb(250,54,15)" fg:x="84399" fg:w="19"/><text x="76.5581%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="76.2909%" y="645" width="0.0470%" height="15" fill="rgb(227,68,33)" fg:x="84380" fg:w="52"/><text x="76.5409%" y="655.50"></text></g><g><title>event_listener::Event::listen (14 samples, 0.01%)</title><rect x="76.3252%" y="629" width="0.0127%" height="15" fill="rgb(238,34,41)" fg:x="84418" fg:w="14"/><text x="76.5752%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="76.3388%" y="613" width="0.0127%" height="15" fill="rgb(220,11,15)" fg:x="84433" fg:w="14"/><text x="76.5888%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="76.3397%" y="597" width="0.0118%" height="15" fill="rgb(246,111,35)" fg:x="84434" fg:w="13"/><text x="76.5897%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (35 samples, 0.03%)</title><rect x="76.3388%" y="629" width="0.0316%" height="15" fill="rgb(209,88,53)" fg:x="84433" fg:w="35"/><text x="76.5888%" y="639.50"></text></g><g><title>event_listener::Event::notify (21 samples, 0.02%)</title><rect x="76.3515%" y="613" width="0.0190%" height="15" fill="rgb(231,185,47)" fg:x="84447" fg:w="21"/><text x="76.6015%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="76.3379%" y="645" width="0.0344%" height="15" fill="rgb(233,154,1)" fg:x="84432" fg:w="38"/><text x="76.5879%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (23 samples, 0.02%)</title><rect x="76.3759%" y="629" width="0.0208%" height="15" fill="rgb(225,15,46)" fg:x="84474" fg:w="23"/><text x="76.6259%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run::call_inner (17 samples, 0.02%)</title><rect x="76.3813%" y="613" width="0.0154%" height="15" fill="rgb(211,135,41)" fg:x="84480" fg:w="17"/><text x="76.6313%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="76.3813%" y="597" width="0.0154%" height="15" fill="rgb(208,54,0)" fg:x="84480" fg:w="17"/><text x="76.6313%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 0.01%)</title><rect x="76.3822%" y="581" width="0.0145%" height="15" fill="rgb(244,136,14)" fg:x="84481" fg:w="16"/><text x="76.6322%" y="591.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (17 samples, 0.02%)</title><rect x="76.4075%" y="565" width="0.0154%" height="15" fill="rgb(241,56,14)" fg:x="84509" fg:w="17"/><text x="76.6575%" y="575.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (17 samples, 0.02%)</title><rect x="76.4075%" y="549" width="0.0154%" height="15" fill="rgb(205,80,24)" fg:x="84509" fg:w="17"/><text x="76.6575%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.04%)</title><rect x="76.5648%" y="501" width="0.0407%" height="15" fill="rgb(220,57,4)" fg:x="84683" fg:w="45"/><text x="76.8148%" y="511.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="76.5920%" y="485" width="0.0136%" height="15" fill="rgb(226,193,50)" fg:x="84713" fg:w="15"/><text x="76.8420%" y="495.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (16 samples, 0.01%)</title><rect x="76.8189%" y="469" width="0.0145%" height="15" fill="rgb(231,168,22)" fg:x="84964" fg:w="16"/><text x="77.0689%" y="479.50"></text></g><g><title>&lt;f32 as bevy_render::color::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (271 samples, 0.25%)</title><rect x="76.8108%" y="485" width="0.2450%" height="15" fill="rgb(254,215,14)" fg:x="84955" fg:w="271"/><text x="77.0608%" y="495.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (246 samples, 0.22%)</title><rect x="76.8334%" y="469" width="0.2224%" height="15" fill="rgb(211,115,16)" fg:x="84980" fg:w="246"/><text x="77.0834%" y="479.50"></text></g><g><title>f64xsubf128 (233 samples, 0.21%)</title><rect x="76.8451%" y="453" width="0.2107%" height="15" fill="rgb(236,210,16)" fg:x="84993" fg:w="233"/><text x="77.0951%" y="463.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_colored (678 samples, 0.61%)</title><rect x="76.4491%" y="533" width="0.6130%" height="15" fill="rgb(221,94,12)" fg:x="84555" fg:w="678"/><text x="76.6991%" y="543.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::line_gradient (587 samples, 0.53%)</title><rect x="76.5314%" y="517" width="0.5307%" height="15" fill="rgb(235,218,49)" fg:x="84646" fg:w="587"/><text x="76.7814%" y="527.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_u32 (500 samples, 0.45%)</title><rect x="76.6100%" y="501" width="0.4521%" height="15" fill="rgb(217,114,14)" fg:x="84733" fg:w="500"/><text x="76.8600%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="77.0702%" y="517" width="0.0172%" height="15" fill="rgb(216,145,22)" fg:x="85242" fg:w="19"/><text x="77.3202%" y="527.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (772 samples, 0.70%)</title><rect x="76.3967%" y="629" width="0.6980%" height="15" fill="rgb(217,112,39)" fg:x="84497" fg:w="772"/><text x="76.6467%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (768 samples, 0.69%)</title><rect x="76.4003%" y="613" width="0.6944%" height="15" fill="rgb(225,85,32)" fg:x="84501" fg:w="768"/><text x="76.6503%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (768 samples, 0.69%)</title><rect x="76.4003%" y="597" width="0.6944%" height="15" fill="rgb(245,209,47)" fg:x="84501" fg:w="768"/><text x="76.6503%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (763 samples, 0.69%)</title><rect x="76.4048%" y="581" width="0.6899%" height="15" fill="rgb(218,220,15)" fg:x="84506" fg:w="763"/><text x="76.6548%" y="591.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box_system (740 samples, 0.67%)</title><rect x="76.4256%" y="565" width="0.6691%" height="15" fill="rgb(222,202,31)" fg:x="84529" fg:w="740"/><text x="76.6756%" y="575.50"></text></g><g><title>stellar_coordinates_test::draw_bounding_box (733 samples, 0.66%)</title><rect x="76.4319%" y="549" width="0.6627%" height="15" fill="rgb(243,203,4)" fg:x="84536" fg:w="733"/><text x="76.6819%" y="559.50"></text></g><g><title>glam::vec3::Vec3::select (32 samples, 0.03%)</title><rect x="77.0657%" y="533" width="0.0289%" height="15" fill="rgb(237,92,17)" fg:x="85237" fg:w="32"/><text x="77.3157%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (27 samples, 0.02%)</title><rect x="77.1019%" y="549" width="0.0244%" height="15" fill="rgb(231,119,7)" fg:x="85277" fg:w="27"/><text x="77.3519%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.02%)</title><rect x="77.1019%" y="533" width="0.0244%" height="15" fill="rgb(237,82,41)" fg:x="85277" fg:w="27"/><text x="77.3519%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.02%)</title><rect x="77.1019%" y="517" width="0.0244%" height="15" fill="rgb(226,81,48)" fg:x="85277" fg:w="27"/><text x="77.3519%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.02%)</title><rect x="77.1019%" y="501" width="0.0244%" height="15" fill="rgb(234,70,51)" fg:x="85277" fg:w="27"/><text x="77.3519%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="77.1019%" y="485" width="0.0244%" height="15" fill="rgb(251,86,4)" fg:x="85277" fg:w="27"/><text x="77.3519%" y="495.50"></text></g><g><title>core::intrinsics::copy (19 samples, 0.02%)</title><rect x="77.1760%" y="501" width="0.0172%" height="15" fill="rgb(244,144,28)" fg:x="85359" fg:w="19"/><text x="77.4260%" y="511.50"></text></g><g><title>bevy_prototype_debug_lines::DebugLines::update (81 samples, 0.07%)</title><rect x="77.1290%" y="549" width="0.0732%" height="15" fill="rgb(232,161,39)" fg:x="85307" fg:w="81"/><text x="77.3790%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (34 samples, 0.03%)</title><rect x="77.1715%" y="533" width="0.0307%" height="15" fill="rgb(247,34,51)" fg:x="85354" fg:w="34"/><text x="77.4215%" y="543.50"></text></g><g><title>core::ptr::swap (29 samples, 0.03%)</title><rect x="77.1760%" y="517" width="0.0262%" height="15" fill="rgb(225,132,2)" fg:x="85359" fg:w="29"/><text x="77.4260%" y="527.50"></text></g><g><title>bevy_prototype_debug_lines::update (129 samples, 0.12%)</title><rect x="77.1019%" y="565" width="0.1166%" height="15" fill="rgb(209,159,44)" fg:x="85277" fg:w="129"/><text x="77.3519%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.01%)</title><rect x="77.2041%" y="549" width="0.0145%" height="15" fill="rgb(251,214,1)" fg:x="85390" fg:w="16"/><text x="77.4541%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (132 samples, 0.12%)</title><rect x="77.1010%" y="629" width="0.1193%" height="15" fill="rgb(247,84,47)" fg:x="85276" fg:w="132"/><text x="77.3510%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (132 samples, 0.12%)</title><rect x="77.1010%" y="613" width="0.1193%" height="15" fill="rgb(240,111,43)" fg:x="85276" fg:w="132"/><text x="77.3510%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (132 samples, 0.12%)</title><rect x="77.1010%" y="597" width="0.1193%" height="15" fill="rgb(215,214,35)" fg:x="85276" fg:w="132"/><text x="77.3510%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (132 samples, 0.12%)</title><rect x="77.1010%" y="581" width="0.1193%" height="15" fill="rgb(248,207,23)" fg:x="85276" fg:w="132"/><text x="77.3510%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (955 samples, 0.86%)</title><rect x="76.3723%" y="645" width="0.8634%" height="15" fill="rgb(214,186,4)" fg:x="84470" fg:w="955"/><text x="76.6223%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,203 samples, 1.09%)</title><rect x="76.1688%" y="677" width="1.0877%" height="15" fill="rgb(220,133,22)" fg:x="84245" fg:w="1203"/><text x="76.4188%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,071 samples, 0.97%)</title><rect x="76.2882%" y="661" width="0.9683%" height="15" fill="rgb(239,134,19)" fg:x="84377" fg:w="1071"/><text x="76.5382%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,214 samples, 1.10%)</title><rect x="76.1679%" y="693" width="1.0976%" height="15" fill="rgb(250,140,9)" fg:x="84244" fg:w="1214"/><text x="76.4179%" y="703.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="77.2710%" y="629" width="0.0181%" height="15" fill="rgb(225,59,14)" fg:x="85464" fg:w="20"/><text x="77.5210%" y="639.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (20 samples, 0.02%)</title><rect x="77.2710%" y="613" width="0.0181%" height="15" fill="rgb(214,152,51)" fg:x="85464" fg:w="20"/><text x="77.5210%" y="623.50"></text></g><g><title>__free (18 samples, 0.02%)</title><rect x="77.2990%" y="613" width="0.0163%" height="15" fill="rgb(251,227,43)" fg:x="85495" fg:w="18"/><text x="77.5490%" y="623.50"></text></g><g><title>_int_free (16 samples, 0.01%)</title><rect x="77.3008%" y="597" width="0.0145%" height="15" fill="rgb(241,96,17)" fg:x="85497" fg:w="16"/><text x="77.5508%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (56 samples, 0.05%)</title><rect x="77.2682%" y="677" width="0.0506%" height="15" fill="rgb(234,198,43)" fg:x="85461" fg:w="56"/><text x="77.5182%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.05%)</title><rect x="77.2682%" y="661" width="0.0506%" height="15" fill="rgb(220,108,29)" fg:x="85461" fg:w="56"/><text x="77.5182%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (56 samples, 0.05%)</title><rect x="77.2682%" y="645" width="0.0506%" height="15" fill="rgb(226,163,33)" fg:x="85461" fg:w="56"/><text x="77.5182%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (32 samples, 0.03%)</title><rect x="77.2899%" y="629" width="0.0289%" height="15" fill="rgb(205,194,45)" fg:x="85485" fg:w="32"/><text x="77.5399%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,275 samples, 1.15%)</title><rect x="76.1670%" y="709" width="1.1528%" height="15" fill="rgb(206,143,44)" fg:x="84243" fg:w="1275"/><text x="76.4170%" y="719.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (60 samples, 0.05%)</title><rect x="77.2655%" y="693" width="0.0542%" height="15" fill="rgb(236,136,36)" fg:x="85458" fg:w="60"/><text x="77.5155%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,341 samples, 1.21%)</title><rect x="76.1607%" y="725" width="1.2124%" height="15" fill="rgb(249,172,42)" fg:x="84236" fg:w="1341"/><text x="76.4107%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (38 samples, 0.03%)</title><rect x="77.3388%" y="709" width="0.0344%" height="15" fill="rgb(216,139,23)" fg:x="85539" fg:w="38"/><text x="77.5888%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.03%)</title><rect x="77.3388%" y="693" width="0.0344%" height="15" fill="rgb(207,166,20)" fg:x="85539" fg:w="38"/><text x="77.5888%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (62 samples, 0.06%)</title><rect x="77.4003%" y="693" width="0.0561%" height="15" fill="rgb(210,209,22)" fg:x="85607" fg:w="62"/><text x="77.6503%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (62 samples, 0.06%)</title><rect x="77.4003%" y="677" width="0.0561%" height="15" fill="rgb(232,118,20)" fg:x="85607" fg:w="62"/><text x="77.6503%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (62 samples, 0.06%)</title><rect x="77.4003%" y="661" width="0.0561%" height="15" fill="rgb(238,113,42)" fg:x="85607" fg:w="62"/><text x="77.6503%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.06%)</title><rect x="77.4003%" y="645" width="0.0561%" height="15" fill="rgb(231,42,5)" fg:x="85607" fg:w="62"/><text x="77.6503%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="77.4717%" y="693" width="0.0118%" height="15" fill="rgb(243,166,24)" fg:x="85686" fg:w="13"/><text x="77.7217%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="77.4717%" y="677" width="0.0118%" height="15" fill="rgb(237,226,12)" fg:x="85686" fg:w="13"/><text x="77.7217%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (1,486 samples, 1.34%)</title><rect x="76.1444%" y="741" width="1.3435%" height="15" fill="rgb(229,133,24)" fg:x="84218" fg:w="1486"/><text x="76.3944%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (124 samples, 0.11%)</title><rect x="77.3758%" y="725" width="0.1121%" height="15" fill="rgb(238,33,43)" fg:x="85580" fg:w="124"/><text x="77.6258%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (120 samples, 0.11%)</title><rect x="77.3795%" y="709" width="0.1085%" height="15" fill="rgb(227,59,38)" fg:x="85584" fg:w="120"/><text x="77.6295%" y="719.50"></text></g><g><title>__tls_get_addr (15 samples, 0.01%)</title><rect x="77.4979%" y="677" width="0.0136%" height="15" fill="rgb(230,97,0)" fg:x="85715" fg:w="15"/><text x="77.7479%" y="687.50"></text></g><g><title>__tls_get_addr (18 samples, 0.02%)</title><rect x="77.5142%" y="629" width="0.0163%" height="15" fill="rgb(250,173,50)" fg:x="85733" fg:w="18"/><text x="77.7642%" y="639.50"></text></g><g><title>update_get_addr (12 samples, 0.01%)</title><rect x="77.5196%" y="613" width="0.0108%" height="15" fill="rgb(240,15,50)" fg:x="85739" fg:w="12"/><text x="77.7696%" y="623.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (41 samples, 0.04%)</title><rect x="77.4961%" y="693" width="0.0371%" height="15" fill="rgb(221,93,22)" fg:x="85713" fg:w="41"/><text x="77.7461%" y="703.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="77.5124%" y="677" width="0.0208%" height="15" fill="rgb(245,180,53)" fg:x="85731" fg:w="23"/><text x="77.7624%" y="687.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="77.5133%" y="661" width="0.0199%" height="15" fill="rgb(231,88,51)" fg:x="85732" fg:w="22"/><text x="77.7633%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="77.5133%" y="645" width="0.0199%" height="15" fill="rgb(240,58,21)" fg:x="85732" fg:w="22"/><text x="77.7633%" y="655.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="77.5540%" y="565" width="0.0353%" height="15" fill="rgb(237,21,10)" fg:x="85777" fg:w="39"/><text x="77.8040%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (37 samples, 0.03%)</title><rect x="77.5558%" y="549" width="0.0335%" height="15" fill="rgb(218,43,11)" fg:x="85779" fg:w="37"/><text x="77.8058%" y="559.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="77.5585%" y="533" width="0.0307%" height="15" fill="rgb(218,221,29)" fg:x="85782" fg:w="34"/><text x="77.8085%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="77.5585%" y="517" width="0.0307%" height="15" fill="rgb(214,118,42)" fg:x="85782" fg:w="34"/><text x="77.8085%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.03%)</title><rect x="77.5585%" y="501" width="0.0307%" height="15" fill="rgb(251,200,26)" fg:x="85782" fg:w="34"/><text x="77.8085%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (34 samples, 0.03%)</title><rect x="77.5585%" y="485" width="0.0307%" height="15" fill="rgb(237,101,39)" fg:x="85782" fg:w="34"/><text x="77.8085%" y="495.50"></text></g><g><title>async_task::utils::abort_on_panic (73 samples, 0.07%)</title><rect x="77.5540%" y="597" width="0.0660%" height="15" fill="rgb(251,117,11)" fg:x="85777" fg:w="73"/><text x="77.8040%" y="607.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (73 samples, 0.07%)</title><rect x="77.5540%" y="581" width="0.0660%" height="15" fill="rgb(216,223,23)" fg:x="85777" fg:w="73"/><text x="77.8040%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (34 samples, 0.03%)</title><rect x="77.5892%" y="565" width="0.0307%" height="15" fill="rgb(251,54,12)" fg:x="85816" fg:w="34"/><text x="77.8392%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (32 samples, 0.03%)</title><rect x="77.5910%" y="549" width="0.0289%" height="15" fill="rgb(254,176,54)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="77.5910%" y="533" width="0.0289%" height="15" fill="rgb(210,32,8)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (32 samples, 0.03%)</title><rect x="77.5910%" y="517" width="0.0289%" height="15" fill="rgb(235,52,38)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="527.50"></text></g><g><title>core::mem::drop (32 samples, 0.03%)</title><rect x="77.5910%" y="501" width="0.0289%" height="15" fill="rgb(231,4,44)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="77.5910%" y="485" width="0.0289%" height="15" fill="rgb(249,2,32)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="77.5910%" y="469" width="0.0289%" height="15" fill="rgb(224,65,26)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.03%)</title><rect x="77.5910%" y="453" width="0.0289%" height="15" fill="rgb(250,73,40)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.03%)</title><rect x="77.5910%" y="437" width="0.0289%" height="15" fill="rgb(253,177,16)" fg:x="85818" fg:w="32"/><text x="77.8410%" y="447.50"></text></g><g><title>async_task::header::Header::register (161 samples, 0.15%)</title><rect x="77.5458%" y="613" width="0.1456%" height="15" fill="rgb(217,32,34)" fg:x="85768" fg:w="161"/><text x="77.7958%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (78 samples, 0.07%)</title><rect x="77.6209%" y="597" width="0.0705%" height="15" fill="rgb(212,7,10)" fg:x="85851" fg:w="78"/><text x="77.8709%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (78 samples, 0.07%)</title><rect x="77.6209%" y="581" width="0.0705%" height="15" fill="rgb(245,89,8)" fg:x="85851" fg:w="78"/><text x="77.8709%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (194 samples, 0.18%)</title><rect x="77.5350%" y="677" width="0.1754%" height="15" fill="rgb(237,16,53)" fg:x="85756" fg:w="194"/><text x="77.7850%" y="687.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (191 samples, 0.17%)</title><rect x="77.5377%" y="661" width="0.1727%" height="15" fill="rgb(250,204,30)" fg:x="85759" fg:w="191"/><text x="77.7877%" y="671.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (188 samples, 0.17%)</title><rect x="77.5404%" y="645" width="0.1700%" height="15" fill="rgb(208,77,27)" fg:x="85762" fg:w="188"/><text x="77.7904%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (187 samples, 0.17%)</title><rect x="77.5413%" y="629" width="0.1691%" height="15" fill="rgb(250,204,28)" fg:x="85763" fg:w="187"/><text x="77.7913%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="77.6914%" y="613" width="0.0190%" height="15" fill="rgb(244,63,21)" fg:x="85929" fg:w="21"/><text x="77.9414%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="77.6914%" y="597" width="0.0190%" height="15" fill="rgb(236,85,44)" fg:x="85929" fg:w="21"/><text x="77.9414%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,908 samples, 1.73%)</title><rect x="75.9961%" y="821" width="1.7251%" height="15" fill="rgb(215,98,4)" fg:x="84054" fg:w="1908"/><text x="76.2461%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,908 samples, 1.73%)</title><rect x="75.9961%" y="805" width="1.7251%" height="15" fill="rgb(235,38,11)" fg:x="84054" fg:w="1908"/><text x="76.2461%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,908 samples, 1.73%)</title><rect x="75.9961%" y="789" width="1.7251%" height="15" fill="rgb(254,186,25)" fg:x="84054" fg:w="1908"/><text x="76.2461%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,908 samples, 1.73%)</title><rect x="75.9961%" y="773" width="1.7251%" height="15" fill="rgb(225,55,31)" fg:x="84054" fg:w="1908"/><text x="76.2461%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,908 samples, 1.73%)</title><rect x="75.9961%" y="757" width="1.7251%" height="15" fill="rgb(211,15,21)" fg:x="84054" fg:w="1908"/><text x="76.2461%" y="767.50"></text></g><g><title>futures_lite::future::block_on (255 samples, 0.23%)</title><rect x="77.4907%" y="741" width="0.2306%" height="15" fill="rgb(215,187,41)" fg:x="85707" fg:w="255"/><text x="77.7407%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (251 samples, 0.23%)</title><rect x="77.4943%" y="725" width="0.2269%" height="15" fill="rgb(248,69,32)" fg:x="85711" fg:w="251"/><text x="77.7443%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (249 samples, 0.23%)</title><rect x="77.4961%" y="709" width="0.2251%" height="15" fill="rgb(252,102,52)" fg:x="85713" fg:w="249"/><text x="77.7461%" y="719.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (208 samples, 0.19%)</title><rect x="77.5332%" y="693" width="0.1881%" height="15" fill="rgb(253,140,32)" fg:x="85754" fg:w="208"/><text x="77.7832%" y="703.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (48,967 samples, 44.27%)</title><rect x="33.4539%" y="901" width="44.2728%" height="15" fill="rgb(216,56,42)" fg:x="37001" fg:w="48967"/><text x="33.7039%" y="911.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (48,967 samples, 44.27%)</title><rect x="33.4539%" y="885" width="44.2728%" height="15" fill="rgb(216,184,14)" fg:x="37001" fg:w="48967"/><text x="33.7039%" y="895.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>bevy_app::app::App::update (48,967 samples, 44.27%)</title><rect x="33.4539%" y="869" width="44.2728%" height="15" fill="rgb(237,187,27)" fg:x="37001" fg:w="48967"/><text x="33.7039%" y="879.50">bevy_app::app::App::update</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,914 samples, 1.73%)</title><rect x="75.9961%" y="853" width="1.7305%" height="15" fill="rgb(219,65,3)" fg:x="84054" fg:w="1914"/><text x="76.2461%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,914 samples, 1.73%)</title><rect x="75.9961%" y="837" width="1.7305%" height="15" fill="rgb(245,83,25)" fg:x="84054" fg:w="1914"/><text x="76.2461%" y="847.50"></text></g><g><title>bevy_winit::run (48,981 samples, 44.29%)</title><rect x="33.4539%" y="981" width="44.2854%" height="15" fill="rgb(214,205,45)" fg:x="37001" fg:w="48981"/><text x="33.7039%" y="991.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (48,981 samples, 44.29%)</title><rect x="33.4539%" y="965" width="44.2854%" height="15" fill="rgb(241,20,18)" fg:x="37001" fg:w="48981"/><text x="33.7039%" y="975.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (48,981 samples, 44.29%)</title><rect x="33.4539%" y="949" width="44.2854%" height="15" fill="rgb(232,163,23)" fg:x="37001" fg:w="48981"/><text x="33.7039%" y="959.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (48,981 samples, 44.29%)</title><rect x="33.4539%" y="933" width="44.2854%" height="15" fill="rgb(214,5,46)" fg:x="37001" fg:w="48981"/><text x="33.7039%" y="943.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (48,981 samples, 44.29%)</title><rect x="33.4539%" y="917" width="44.2854%" height="15" fill="rgb(229,78,17)" fg:x="37001" fg:w="48981"/><text x="33.7039%" y="927.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (14 samples, 0.01%)</title><rect x="77.7266%" y="901" width="0.0127%" height="15" fill="rgb(248,89,10)" fg:x="85968" fg:w="14"/><text x="77.9766%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (14 samples, 0.01%)</title><rect x="77.7266%" y="885" width="0.0127%" height="15" fill="rgb(248,54,15)" fg:x="85968" fg:w="14"/><text x="77.9766%" y="895.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (133 samples, 0.12%)</title><rect x="77.7393%" y="901" width="0.1202%" height="15" fill="rgb(223,116,6)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (133 samples, 0.12%)</title><rect x="77.7393%" y="885" width="0.1202%" height="15" fill="rgb(205,125,38)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (133 samples, 0.12%)</title><rect x="77.7393%" y="869" width="0.1202%" height="15" fill="rgb(251,78,38)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (133 samples, 0.12%)</title><rect x="77.7393%" y="853" width="0.1202%" height="15" fill="rgb(253,78,28)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (133 samples, 0.12%)</title><rect x="77.7393%" y="837" width="0.1202%" height="15" fill="rgb(209,120,3)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="847.50"></text></g><g><title>async_executor::Executor::try_tick (133 samples, 0.12%)</title><rect x="77.7393%" y="821" width="0.1202%" height="15" fill="rgb(238,229,9)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (133 samples, 0.12%)</title><rect x="77.7393%" y="805" width="0.1202%" height="15" fill="rgb(253,159,18)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.12%)</title><rect x="77.7393%" y="789" width="0.1202%" height="15" fill="rgb(244,42,34)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (133 samples, 0.12%)</title><rect x="77.7393%" y="773" width="0.1202%" height="15" fill="rgb(224,8,7)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.12%)</title><rect x="77.7393%" y="757" width="0.1202%" height="15" fill="rgb(210,201,45)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (133 samples, 0.12%)</title><rect x="77.7393%" y="741" width="0.1202%" height="15" fill="rgb(252,185,21)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (133 samples, 0.12%)</title><rect x="77.7393%" y="725" width="0.1202%" height="15" fill="rgb(223,131,1)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="735.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (133 samples, 0.12%)</title><rect x="77.7393%" y="709" width="0.1202%" height="15" fill="rgb(245,141,16)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (133 samples, 0.12%)</title><rect x="77.7393%" y="693" width="0.1202%" height="15" fill="rgb(229,55,45)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (133 samples, 0.12%)</title><rect x="77.7393%" y="677" width="0.1202%" height="15" fill="rgb(208,92,15)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (133 samples, 0.12%)</title><rect x="77.7393%" y="661" width="0.1202%" height="15" fill="rgb(234,185,47)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="671.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (133 samples, 0.12%)</title><rect x="77.7393%" y="645" width="0.1202%" height="15" fill="rgb(253,104,50)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="655.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (133 samples, 0.12%)</title><rect x="77.7393%" y="629" width="0.1202%" height="15" fill="rgb(205,70,7)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="639.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (133 samples, 0.12%)</title><rect x="77.7393%" y="613" width="0.1202%" height="15" fill="rgb(240,178,43)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (133 samples, 0.12%)</title><rect x="77.7393%" y="597" width="0.1202%" height="15" fill="rgb(214,112,2)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (133 samples, 0.12%)</title><rect x="77.7393%" y="581" width="0.1202%" height="15" fill="rgb(206,46,17)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="591.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (133 samples, 0.12%)</title><rect x="77.7393%" y="565" width="0.1202%" height="15" fill="rgb(225,220,16)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (133 samples, 0.12%)</title><rect x="77.7393%" y="549" width="0.1202%" height="15" fill="rgb(238,65,40)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (133 samples, 0.12%)</title><rect x="77.7393%" y="533" width="0.1202%" height="15" fill="rgb(230,151,21)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="543.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (133 samples, 0.12%)</title><rect x="77.7393%" y="517" width="0.1202%" height="15" fill="rgb(218,58,49)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="527.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (133 samples, 0.12%)</title><rect x="77.7393%" y="501" width="0.1202%" height="15" fill="rgb(219,179,14)" fg:x="85982" fg:w="133"/><text x="77.9893%" y="511.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (96 samples, 0.09%)</title><rect x="77.7728%" y="485" width="0.0868%" height="15" fill="rgb(223,72,1)" fg:x="86019" fg:w="96"/><text x="78.0228%" y="495.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (26 samples, 0.02%)</title><rect x="77.8360%" y="469" width="0.0235%" height="15" fill="rgb(238,126,10)" fg:x="86089" fg:w="26"/><text x="78.0860%" y="479.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="77.8478%" y="453" width="0.0118%" height="15" fill="rgb(224,206,38)" fg:x="86102" fg:w="13"/><text x="78.0978%" y="463.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (17 samples, 0.02%)</title><rect x="77.8596%" y="837" width="0.0154%" height="15" fill="rgb(212,201,54)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (17 samples, 0.02%)</title><rect x="77.8596%" y="821" width="0.0154%" height="15" fill="rgb(218,154,48)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="831.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (17 samples, 0.02%)</title><rect x="77.8596%" y="805" width="0.0154%" height="15" fill="rgb(232,93,24)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="815.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (17 samples, 0.02%)</title><rect x="77.8596%" y="789" width="0.0154%" height="15" fill="rgb(245,30,21)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="799.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (17 samples, 0.02%)</title><rect x="77.8596%" y="773" width="0.0154%" height="15" fill="rgb(242,148,29)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="783.50"></text></g><g><title>&lt;E as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (17 samples, 0.02%)</title><rect x="77.8596%" y="757" width="0.0154%" height="15" fill="rgb(244,153,54)" fg:x="86115" fg:w="17"/><text x="78.1096%" y="767.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::get_mut (50 samples, 0.05%)</title><rect x="77.8930%" y="677" width="0.0452%" height="15" fill="rgb(252,87,22)" fg:x="86152" fg:w="50"/><text x="78.1430%" y="687.50"></text></g><g><title>gpu_alloc::buddy::Size::release (63 samples, 0.06%)</title><rect x="77.8822%" y="693" width="0.0570%" height="15" fill="rgb(210,51,29)" fg:x="86140" fg:w="63"/><text x="78.1322%" y="703.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (69 samples, 0.06%)</title><rect x="77.8822%" y="709" width="0.0624%" height="15" fill="rgb(242,136,47)" fg:x="86140" fg:w="69"/><text x="78.1322%" y="719.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block (29 samples, 0.03%)</title><rect x="77.9608%" y="693" width="0.0262%" height="15" fill="rgb(238,68,4)" fg:x="86227" fg:w="29"/><text x="78.2108%" y="703.50"></text></g><g><title>gpu_alloc::freelist::FreeListRegion&lt;M&gt;::merge_prefix_block (15 samples, 0.01%)</title><rect x="77.9735%" y="677" width="0.0136%" height="15" fill="rgb(242,161,30)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::freelist::FreeListBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (15 samples, 0.01%)</title><rect x="77.9735%" y="661" width="0.0136%" height="15" fill="rgb(218,58,44)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (15 samples, 0.01%)</title><rect x="77.9735%" y="645" width="0.0136%" height="15" fill="rgb(252,125,32)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="77.9735%" y="629" width="0.0136%" height="15" fill="rgb(219,178,0)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="77.9735%" y="613" width="0.0136%" height="15" fill="rgb(213,152,7)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="77.9735%" y="597" width="0.0136%" height="15" fill="rgb(249,109,34)" fg:x="86241" fg:w="15"/><text x="78.2235%" y="607.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (119 samples, 0.11%)</title><rect x="77.8822%" y="725" width="0.1076%" height="15" fill="rgb(232,96,21)" fg:x="86140" fg:w="119"/><text x="78.1322%" y="735.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (50 samples, 0.05%)</title><rect x="77.9445%" y="709" width="0.0452%" height="15" fill="rgb(228,27,39)" fg:x="86209" fg:w="50"/><text x="78.1945%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (138 samples, 0.12%)</title><rect x="77.8776%" y="789" width="0.1248%" height="15" fill="rgb(211,182,52)" fg:x="86135" fg:w="138"/><text x="78.1276%" y="799.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (138 samples, 0.12%)</title><rect x="77.8776%" y="773" width="0.1248%" height="15" fill="rgb(234,178,38)" fg:x="86135" fg:w="138"/><text x="78.1276%" y="783.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (138 samples, 0.12%)</title><rect x="77.8776%" y="757" width="0.1248%" height="15" fill="rgb(221,111,3)" fg:x="86135" fg:w="138"/><text x="78.1276%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (133 samples, 0.12%)</title><rect x="77.8822%" y="741" width="0.1202%" height="15" fill="rgb(228,175,21)" fg:x="86140" fg:w="133"/><text x="78.1322%" y="751.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (14 samples, 0.01%)</title><rect x="77.9897%" y="725" width="0.0127%" height="15" fill="rgb(228,174,43)" fg:x="86259" fg:w="14"/><text x="78.2397%" y="735.50"></text></g><g><title>_nv011glcore (14 samples, 0.01%)</title><rect x="77.9897%" y="709" width="0.0127%" height="15" fill="rgb(211,191,0)" fg:x="86259" fg:w="14"/><text x="78.2397%" y="719.50"></text></g><g><title>__free (14 samples, 0.01%)</title><rect x="77.9897%" y="693" width="0.0127%" height="15" fill="rgb(253,117,3)" fg:x="86259" fg:w="14"/><text x="78.2397%" y="703.50"></text></g><g><title>_int_free (14 samples, 0.01%)</title><rect x="77.9897%" y="677" width="0.0127%" height="15" fill="rgb(241,127,19)" fg:x="86259" fg:w="14"/><text x="78.2397%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (12 samples, 0.01%)</title><rect x="77.9916%" y="661" width="0.0108%" height="15" fill="rgb(218,103,12)" fg:x="86261" fg:w="12"/><text x="78.2416%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.01%)</title><rect x="78.0178%" y="709" width="0.0108%" height="15" fill="rgb(236,214,43)" fg:x="86290" fg:w="12"/><text x="78.2678%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.01%)</title><rect x="78.0178%" y="693" width="0.0108%" height="15" fill="rgb(244,144,19)" fg:x="86290" fg:w="12"/><text x="78.2678%" y="703.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.01%)</title><rect x="78.0178%" y="677" width="0.0108%" height="15" fill="rgb(246,188,10)" fg:x="86290" fg:w="12"/><text x="78.2678%" y="687.50"></text></g><g><title>__realloc (12 samples, 0.01%)</title><rect x="78.0178%" y="661" width="0.0108%" height="15" fill="rgb(212,193,33)" fg:x="86290" fg:w="12"/><text x="78.2678%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="78.0178%" y="757" width="0.0118%" height="15" fill="rgb(241,51,29)" fg:x="86290" fg:w="13"/><text x="78.2678%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="78.0178%" y="741" width="0.0118%" height="15" fill="rgb(211,58,19)" fg:x="86290" fg:w="13"/><text x="78.2678%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="78.0178%" y="725" width="0.0118%" height="15" fill="rgb(229,111,26)" fg:x="86290" fg:w="13"/><text x="78.2678%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (36 samples, 0.03%)</title><rect x="78.0024%" y="789" width="0.0325%" height="15" fill="rgb(213,115,40)" fg:x="86273" fg:w="36"/><text x="78.2524%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="78.0178%" y="773" width="0.0172%" height="15" fill="rgb(209,56,44)" fg:x="86290" fg:w="19"/><text x="78.2678%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (195 samples, 0.18%)</title><rect x="77.8596%" y="853" width="0.1763%" height="15" fill="rgb(230,108,32)" fg:x="86115" fg:w="195"/><text x="78.1096%" y="863.50"></text></g><g><title>wgpu::Queue::submit (177 samples, 0.16%)</title><rect x="77.8758%" y="837" width="0.1600%" height="15" fill="rgb(216,165,31)" fg:x="86133" fg:w="177"/><text x="78.1258%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (177 samples, 0.16%)</title><rect x="77.8758%" y="821" width="0.1600%" height="15" fill="rgb(218,122,21)" fg:x="86133" fg:w="177"/><text x="78.1258%" y="831.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (177 samples, 0.16%)</title><rect x="77.8758%" y="805" width="0.1600%" height="15" fill="rgb(223,224,47)" fg:x="86133" fg:w="177"/><text x="78.1258%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (333 samples, 0.30%)</title><rect x="77.7393%" y="949" width="0.3011%" height="15" fill="rgb(238,102,44)" fg:x="85982" fg:w="333"/><text x="77.9893%" y="959.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (333 samples, 0.30%)</title><rect x="77.7393%" y="933" width="0.3011%" height="15" fill="rgb(236,46,40)" fg:x="85982" fg:w="333"/><text x="77.9893%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (333 samples, 0.30%)</title><rect x="77.7393%" y="917" width="0.3011%" height="15" fill="rgb(247,202,50)" fg:x="85982" fg:w="333"/><text x="77.9893%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (200 samples, 0.18%)</title><rect x="77.8596%" y="901" width="0.1808%" height="15" fill="rgb(209,99,20)" fg:x="86115" fg:w="200"/><text x="78.1096%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (200 samples, 0.18%)</title><rect x="77.8596%" y="885" width="0.1808%" height="15" fill="rgb(252,27,34)" fg:x="86115" fg:w="200"/><text x="78.1096%" y="895.50"></text></g><g><title>bevy_render::renderer::render_system (200 samples, 0.18%)</title><rect x="77.8596%" y="869" width="0.1808%" height="15" fill="rgb(215,206,23)" fg:x="86115" fg:w="200"/><text x="78.1096%" y="879.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="78.0404%" y="485" width="0.0226%" height="15" fill="rgb(212,135,36)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="495.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (25 samples, 0.02%)</title><rect x="78.0404%" y="469" width="0.0226%" height="15" fill="rgb(240,189,1)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="479.50"></text></g><g><title>csv::string_record::StringRecord::read (25 samples, 0.02%)</title><rect x="78.0404%" y="453" width="0.0226%" height="15" fill="rgb(242,56,20)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="463.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (25 samples, 0.02%)</title><rect x="78.0404%" y="437" width="0.0226%" height="15" fill="rgb(247,132,33)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="447.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (25 samples, 0.02%)</title><rect x="78.0404%" y="421" width="0.0226%" height="15" fill="rgb(208,149,11)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (25 samples, 0.02%)</title><rect x="78.0404%" y="405" width="0.0226%" height="15" fill="rgb(211,33,11)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="415.50"></text></g><g><title>std::io::Read::read_buf (25 samples, 0.02%)</title><rect x="78.0404%" y="389" width="0.0226%" height="15" fill="rgb(221,29,38)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="399.50"></text></g><g><title>std::io::default_read_buf (25 samples, 0.02%)</title><rect x="78.0404%" y="373" width="0.0226%" height="15" fill="rgb(206,182,49)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="383.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (25 samples, 0.02%)</title><rect x="78.0404%" y="357" width="0.0226%" height="15" fill="rgb(216,140,1)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="367.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.02%)</title><rect x="78.0404%" y="341" width="0.0226%" height="15" fill="rgb(232,57,40)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="351.50"></text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.02%)</title><rect x="78.0404%" y="325" width="0.0226%" height="15" fill="rgb(224,186,18)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="335.50"></text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.02%)</title><rect x="78.0404%" y="309" width="0.0226%" height="15" fill="rgb(215,121,11)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="319.50"></text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.02%)</title><rect x="78.0404%" y="293" width="0.0226%" height="15" fill="rgb(245,147,10)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="303.50"></text></g><g><title>flate2::zio::read (25 samples, 0.02%)</title><rect x="78.0404%" y="277" width="0.0226%" height="15" fill="rgb(238,153,13)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="287.50"></text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (25 samples, 0.02%)</title><rect x="78.0404%" y="261" width="0.0226%" height="15" fill="rgb(233,108,0)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="271.50"></text></g><g><title>flate2::mem::Decompress::decompress (25 samples, 0.02%)</title><rect x="78.0404%" y="245" width="0.0226%" height="15" fill="rgb(212,157,17)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="255.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (25 samples, 0.02%)</title><rect x="78.0404%" y="229" width="0.0226%" height="15" fill="rgb(225,213,38)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="239.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (25 samples, 0.02%)</title><rect x="78.0404%" y="213" width="0.0226%" height="15" fill="rgb(248,16,11)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="223.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (25 samples, 0.02%)</title><rect x="78.0404%" y="197" width="0.0226%" height="15" fill="rgb(241,33,4)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="207.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (25 samples, 0.02%)</title><rect x="78.0404%" y="181" width="0.0226%" height="15" fill="rgb(222,26,43)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="191.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (25 samples, 0.02%)</title><rect x="78.0404%" y="165" width="0.0226%" height="15" fill="rgb(243,29,36)" fg:x="86315" fg:w="25"/><text x="78.2904%" y="175.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (25 samples, 0.02%)</title><rect x="78.0666%" y="261" width="0.0226%" height="15" fill="rgb(241,9,27)" fg:x="86344" fg:w="25"/><text x="78.3166%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (18 samples, 0.02%)</title><rect x="78.0729%" y="245" width="0.0163%" height="15" fill="rgb(205,117,26)" fg:x="86351" fg:w="18"/><text x="78.3229%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (65 samples, 0.06%)</title><rect x="78.0666%" y="293" width="0.0588%" height="15" fill="rgb(209,80,39)" fg:x="86344" fg:w="65"/><text x="78.3166%" y="303.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (65 samples, 0.06%)</title><rect x="78.0666%" y="277" width="0.0588%" height="15" fill="rgb(239,155,6)" fg:x="86344" fg:w="65"/><text x="78.3166%" y="287.50"></text></g><g><title>std::sys_common::memchr::memrchr (36 samples, 0.03%)</title><rect x="78.0928%" y="261" width="0.0325%" height="15" fill="rgb(212,104,12)" fg:x="86373" fg:w="36"/><text x="78.3428%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr (36 samples, 0.03%)</title><rect x="78.0928%" y="245" width="0.0325%" height="15" fill="rgb(234,204,3)" fg:x="86373" fg:w="36"/><text x="78.3428%" y="255.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (36 samples, 0.03%)</title><rect x="78.0928%" y="229" width="0.0325%" height="15" fill="rgb(251,218,7)" fg:x="86373" fg:w="36"/><text x="78.3428%" y="239.50"></text></g><g><title>__memrchr_avx2 (28 samples, 0.03%)</title><rect x="78.1001%" y="213" width="0.0253%" height="15" fill="rgb(221,81,32)" fg:x="86381" fg:w="28"/><text x="78.3501%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (80 samples, 0.07%)</title><rect x="78.0630%" y="357" width="0.0723%" height="15" fill="rgb(214,152,26)" fg:x="86340" fg:w="80"/><text x="78.3130%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (80 samples, 0.07%)</title><rect x="78.0630%" y="341" width="0.0723%" height="15" fill="rgb(223,22,3)" fg:x="86340" fg:w="80"/><text x="78.3130%" y="351.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (80 samples, 0.07%)</title><rect x="78.0630%" y="325" width="0.0723%" height="15" fill="rgb(207,174,7)" fg:x="86340" fg:w="80"/><text x="78.3130%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (80 samples, 0.07%)</title><rect x="78.0630%" y="309" width="0.0723%" height="15" fill="rgb(224,19,52)" fg:x="86340" fg:w="80"/><text x="78.3130%" y="319.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (457 samples, 0.41%)</title><rect x="77.7393%" y="981" width="0.4132%" height="15" fill="rgb(228,24,14)" fg:x="85982" fg:w="457"/><text x="77.9893%" y="991.50"></text></g><g><title>bevy_app::app::App::update (457 samples, 0.41%)</title><rect x="77.7393%" y="965" width="0.4132%" height="15" fill="rgb(230,153,43)" fg:x="85982" fg:w="457"/><text x="77.9893%" y="975.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (124 samples, 0.11%)</title><rect x="78.0404%" y="949" width="0.1121%" height="15" fill="rgb(231,106,12)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="959.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (124 samples, 0.11%)</title><rect x="78.0404%" y="933" width="0.1121%" height="15" fill="rgb(215,92,2)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (124 samples, 0.11%)</title><rect x="78.0404%" y="917" width="0.1121%" height="15" fill="rgb(249,143,25)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (124 samples, 0.11%)</title><rect x="78.0404%" y="901" width="0.1121%" height="15" fill="rgb(252,7,35)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (124 samples, 0.11%)</title><rect x="78.0404%" y="885" width="0.1121%" height="15" fill="rgb(216,69,40)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (124 samples, 0.11%)</title><rect x="78.0404%" y="869" width="0.1121%" height="15" fill="rgb(240,36,33)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (124 samples, 0.11%)</title><rect x="78.0404%" y="853" width="0.1121%" height="15" fill="rgb(231,128,14)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (124 samples, 0.11%)</title><rect x="78.0404%" y="837" width="0.1121%" height="15" fill="rgb(245,143,14)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="847.50"></text></g><g><title>async_executor::Executor::try_tick (124 samples, 0.11%)</title><rect x="78.0404%" y="821" width="0.1121%" height="15" fill="rgb(222,130,28)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (124 samples, 0.11%)</title><rect x="78.0404%" y="805" width="0.1121%" height="15" fill="rgb(212,10,48)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.11%)</title><rect x="78.0404%" y="789" width="0.1121%" height="15" fill="rgb(254,118,45)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (124 samples, 0.11%)</title><rect x="78.0404%" y="773" width="0.1121%" height="15" fill="rgb(228,6,45)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.11%)</title><rect x="78.0404%" y="757" width="0.1121%" height="15" fill="rgb(241,18,35)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (124 samples, 0.11%)</title><rect x="78.0404%" y="741" width="0.1121%" height="15" fill="rgb(227,214,53)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (124 samples, 0.11%)</title><rect x="78.0404%" y="725" width="0.1121%" height="15" fill="rgb(224,107,51)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="735.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (124 samples, 0.11%)</title><rect x="78.0404%" y="709" width="0.1121%" height="15" fill="rgb(248,60,28)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (124 samples, 0.11%)</title><rect x="78.0404%" y="693" width="0.1121%" height="15" fill="rgb(249,101,23)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (124 samples, 0.11%)</title><rect x="78.0404%" y="677" width="0.1121%" height="15" fill="rgb(228,51,19)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (124 samples, 0.11%)</title><rect x="78.0404%" y="661" width="0.1121%" height="15" fill="rgb(213,20,6)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="671.50"></text></g><g><title>stellar_coordinates_test::setup (124 samples, 0.11%)</title><rect x="78.0404%" y="645" width="0.1121%" height="15" fill="rgb(212,124,10)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="655.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (124 samples, 0.11%)</title><rect x="78.0404%" y="629" width="0.1121%" height="15" fill="rgb(248,3,40)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="639.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (124 samples, 0.11%)</title><rect x="78.0404%" y="613" width="0.1121%" height="15" fill="rgb(223,178,23)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="623.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (124 samples, 0.11%)</title><rect x="78.0404%" y="597" width="0.1121%" height="15" fill="rgb(240,132,45)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="607.50"></text></g><g><title>std::sync::once::Once::call_once (124 samples, 0.11%)</title><rect x="78.0404%" y="581" width="0.1121%" height="15" fill="rgb(245,164,36)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="591.50"></text></g><g><title>std::sync::once::Once::call_inner (124 samples, 0.11%)</title><rect x="78.0404%" y="565" width="0.1121%" height="15" fill="rgb(231,188,53)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="575.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (124 samples, 0.11%)</title><rect x="78.0404%" y="549" width="0.1121%" height="15" fill="rgb(237,198,39)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="559.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (124 samples, 0.11%)</title><rect x="78.0404%" y="533" width="0.1121%" height="15" fill="rgb(223,120,35)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (124 samples, 0.11%)</title><rect x="78.0404%" y="517" width="0.1121%" height="15" fill="rgb(253,107,49)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="527.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (124 samples, 0.11%)</title><rect x="78.0404%" y="501" width="0.1121%" height="15" fill="rgb(216,44,31)" fg:x="86315" fg:w="124"/><text x="78.2904%" y="511.50"></text></g><g><title>std::io::stdio::_print (99 samples, 0.09%)</title><rect x="78.0630%" y="485" width="0.0895%" height="15" fill="rgb(253,87,21)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="495.50"></text></g><g><title>std::io::stdio::print_to (99 samples, 0.09%)</title><rect x="78.0630%" y="469" width="0.0895%" height="15" fill="rgb(226,18,2)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="479.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (99 samples, 0.09%)</title><rect x="78.0630%" y="453" width="0.0895%" height="15" fill="rgb(216,8,46)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="463.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (99 samples, 0.09%)</title><rect x="78.0630%" y="437" width="0.0895%" height="15" fill="rgb(226,140,39)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (99 samples, 0.09%)</title><rect x="78.0630%" y="421" width="0.0895%" height="15" fill="rgb(221,194,54)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="431.50"></text></g><g><title>core::fmt::write (99 samples, 0.09%)</title><rect x="78.0630%" y="405" width="0.0895%" height="15" fill="rgb(213,92,11)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="415.50"></text></g><g><title>core::fmt::run (99 samples, 0.09%)</title><rect x="78.0630%" y="389" width="0.0895%" height="15" fill="rgb(229,162,46)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="399.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (99 samples, 0.09%)</title><rect x="78.0630%" y="373" width="0.0895%" height="15" fill="rgb(214,111,36)" fg:x="86340" fg:w="99"/><text x="78.3130%" y="383.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (19 samples, 0.02%)</title><rect x="78.1353%" y="357" width="0.0172%" height="15" fill="rgb(207,6,21)" fg:x="86420" fg:w="19"/><text x="78.3853%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.02%)</title><rect x="78.1353%" y="341" width="0.0172%" height="15" fill="rgb(213,127,38)" fg:x="86420" fg:w="19"/><text x="78.3853%" y="351.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (19 samples, 0.02%)</title><rect x="78.1353%" y="325" width="0.0172%" height="15" fill="rgb(238,118,32)" fg:x="86420" fg:w="19"/><text x="78.3853%" y="335.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (19 samples, 0.02%)</title><rect x="78.1353%" y="309" width="0.0172%" height="15" fill="rgb(240,139,39)" fg:x="86420" fg:w="19"/><text x="78.3853%" y="319.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (19 samples, 0.02%)</title><rect x="78.1353%" y="293" width="0.0172%" height="15" fill="rgb(235,10,37)" fg:x="86420" fg:w="19"/><text x="78.3853%" y="303.50"></text></g><g><title>async_executor::Executor::state (117 samples, 0.11%)</title><rect x="78.8026%" y="693" width="0.1058%" height="15" fill="rgb(249,171,38)" fg:x="87158" fg:w="117"/><text x="79.0526%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (117 samples, 0.11%)</title><rect x="78.8026%" y="677" width="0.1058%" height="15" fill="rgb(242,144,32)" fg:x="87158" fg:w="117"/><text x="79.0526%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (117 samples, 0.11%)</title><rect x="78.8026%" y="661" width="0.1058%" height="15" fill="rgb(217,117,21)" fg:x="87158" fg:w="117"/><text x="79.0526%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (115 samples, 0.10%)</title><rect x="78.8044%" y="645" width="0.1040%" height="15" fill="rgb(249,87,1)" fg:x="87160" fg:w="115"/><text x="79.0544%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (115 samples, 0.10%)</title><rect x="78.8044%" y="629" width="0.1040%" height="15" fill="rgb(248,196,48)" fg:x="87160" fg:w="115"/><text x="79.0544%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (96 samples, 0.09%)</title><rect x="78.8216%" y="613" width="0.0868%" height="15" fill="rgb(251,206,33)" fg:x="87179" fg:w="96"/><text x="79.0716%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (96 samples, 0.09%)</title><rect x="78.8216%" y="597" width="0.0868%" height="15" fill="rgb(232,141,28)" fg:x="87179" fg:w="96"/><text x="79.0716%" y="607.50"></text></g><g><title>async_executor::Executor::try_tick (964 samples, 0.87%)</title><rect x="78.4246%" y="709" width="0.8716%" height="15" fill="rgb(209,167,14)" fg:x="86740" fg:w="964"/><text x="78.6746%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (429 samples, 0.39%)</title><rect x="78.9083%" y="693" width="0.3879%" height="15" fill="rgb(225,11,50)" fg:x="87275" fg:w="429"/><text x="79.1583%" y="703.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (150 samples, 0.14%)</title><rect x="79.2962%" y="709" width="0.1356%" height="15" fill="rgb(209,50,20)" fg:x="87704" fg:w="150"/><text x="79.5462%" y="719.50"></text></g><g><title>async_executor::LocalExecutor::inner (14 samples, 0.01%)</title><rect x="79.4192%" y="693" width="0.0127%" height="15" fill="rgb(212,17,46)" fg:x="87840" fg:w="14"/><text x="79.6692%" y="703.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (14 samples, 0.01%)</title><rect x="79.4192%" y="677" width="0.0127%" height="15" fill="rgb(216,101,39)" fg:x="87840" fg:w="14"/><text x="79.6692%" y="687.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (14 samples, 0.01%)</title><rect x="79.4192%" y="661" width="0.0127%" height="15" fill="rgb(212,228,48)" fg:x="87840" fg:w="14"/><text x="79.6692%" y="671.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="79.4201%" y="645" width="0.0118%" height="15" fill="rgb(250,6,50)" fg:x="87841" fg:w="13"/><text x="79.6701%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="79.4201%" y="629" width="0.0118%" height="15" fill="rgb(250,160,48)" fg:x="87841" fg:w="13"/><text x="79.6701%" y="639.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,635 samples, 1.48%)</title><rect x="78.1850%" y="773" width="1.4783%" height="15" fill="rgb(244,216,33)" fg:x="86475" fg:w="1635"/><text x="78.4350%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,634 samples, 1.48%)</title><rect x="78.1859%" y="757" width="1.4774%" height="15" fill="rgb(207,157,5)" fg:x="86476" fg:w="1634"/><text x="78.4359%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,634 samples, 1.48%)</title><rect x="78.1859%" y="741" width="1.4774%" height="15" fill="rgb(228,199,8)" fg:x="86476" fg:w="1634"/><text x="78.4359%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,632 samples, 1.48%)</title><rect x="78.1878%" y="725" width="1.4755%" height="15" fill="rgb(227,80,20)" fg:x="86478" fg:w="1632"/><text x="78.4378%" y="735.50"></text></g><g><title>futures_lite::future::block_on (255 samples, 0.23%)</title><rect x="79.4327%" y="709" width="0.2306%" height="15" fill="rgb(222,9,33)" fg:x="87855" fg:w="255"/><text x="79.6827%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,659 samples, 1.50%)</title><rect x="78.1651%" y="789" width="1.5000%" height="15" fill="rgb(239,44,28)" fg:x="86453" fg:w="1659"/><text x="78.4151%" y="799.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (13 samples, 0.01%)</title><rect x="79.6760%" y="725" width="0.0118%" height="15" fill="rgb(249,187,43)" fg:x="88124" fg:w="13"/><text x="79.9260%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (24 samples, 0.02%)</title><rect x="79.6714%" y="741" width="0.0217%" height="15" fill="rgb(216,141,28)" fg:x="88119" fg:w="24"/><text x="79.9214%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (30 samples, 0.03%)</title><rect x="79.6678%" y="789" width="0.0271%" height="15" fill="rgb(230,154,53)" fg:x="88115" fg:w="30"/><text x="79.9178%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (30 samples, 0.03%)</title><rect x="79.6678%" y="773" width="0.0271%" height="15" fill="rgb(227,82,4)" fg:x="88115" fg:w="30"/><text x="79.9178%" y="783.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (27 samples, 0.02%)</title><rect x="79.6705%" y="757" width="0.0244%" height="15" fill="rgb(220,107,16)" fg:x="88118" fg:w="27"/><text x="79.9205%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,703 samples, 1.54%)</title><rect x="78.1588%" y="805" width="1.5397%" height="15" fill="rgb(207,187,2)" fg:x="86446" fg:w="1703"/><text x="78.4088%" y="815.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (1,711 samples, 1.55%)</title><rect x="78.1579%" y="821" width="1.5470%" height="15" fill="rgb(210,162,52)" fg:x="86445" fg:w="1711"/><text x="78.4079%" y="831.50"></text></g><g><title>__free (33 samples, 0.03%)</title><rect x="79.7094%" y="741" width="0.0298%" height="15" fill="rgb(217,216,49)" fg:x="88161" fg:w="33"/><text x="79.9594%" y="751.50"></text></g><g><title>_int_free (30 samples, 0.03%)</title><rect x="79.7121%" y="725" width="0.0271%" height="15" fill="rgb(218,146,49)" fg:x="88164" fg:w="30"/><text x="79.9621%" y="735.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="79.7402%" y="725" width="0.0181%" height="15" fill="rgb(216,55,40)" fg:x="88195" fg:w="20"/><text x="79.9902%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;wgpu::Buffer&gt;&gt; (20 samples, 0.02%)</title><rect x="79.7402%" y="709" width="0.0181%" height="15" fill="rgb(208,196,21)" fg:x="88195" fg:w="20"/><text x="79.9902%" y="719.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="79.7402%" y="693" width="0.0181%" height="15" fill="rgb(242,117,42)" fg:x="88195" fg:w="20"/><text x="79.9902%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="79.7420%" y="677" width="0.0163%" height="15" fill="rgb(210,11,23)" fg:x="88197" fg:w="18"/><text x="79.9920%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="79.7420%" y="661" width="0.0163%" height="15" fill="rgb(217,110,2)" fg:x="88197" fg:w="18"/><text x="79.9920%" y="671.50"></text></g><g><title>__free (39 samples, 0.04%)</title><rect x="79.7691%" y="581" width="0.0353%" height="15" fill="rgb(229,77,54)" fg:x="88227" fg:w="39"/><text x="80.0191%" y="591.50"></text></g><g><title>_int_free (25 samples, 0.02%)</title><rect x="79.7817%" y="565" width="0.0226%" height="15" fill="rgb(218,53,16)" fg:x="88241" fg:w="25"/><text x="80.0317%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (40 samples, 0.04%)</title><rect x="79.7691%" y="613" width="0.0362%" height="15" fill="rgb(215,38,13)" fg:x="88227" fg:w="40"/><text x="80.0191%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.04%)</title><rect x="79.7691%" y="597" width="0.0362%" height="15" fill="rgb(235,42,18)" fg:x="88227" fg:w="40"/><text x="80.0191%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (42 samples, 0.04%)</title><rect x="79.7682%" y="709" width="0.0380%" height="15" fill="rgb(219,66,54)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wgpu::MapContext&gt;&gt; (42 samples, 0.04%)</title><rect x="79.7682%" y="693" width="0.0380%" height="15" fill="rgb(222,205,4)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::MapContext&gt; (42 samples, 0.04%)</title><rect x="79.7682%" y="677" width="0.0380%" height="15" fill="rgb(227,213,46)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::ops::range::Range&lt;u64&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="79.7682%" y="661" width="0.0380%" height="15" fill="rgb(250,145,42)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::ops::range::Range&lt;u64&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="79.7682%" y="645" width="0.0380%" height="15" fill="rgb(219,15,2)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="79.7682%" y="629" width="0.0380%" height="15" fill="rgb(231,181,52)" fg:x="88226" fg:w="42"/><text x="80.0182%" y="639.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="79.8242%" y="693" width="0.0154%" height="15" fill="rgb(235,1,42)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (17 samples, 0.02%)</title><rect x="79.8242%" y="677" width="0.0154%" height="15" fill="rgb(249,88,27)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="687.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="79.8242%" y="661" width="0.0154%" height="15" fill="rgb(235,145,16)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="671.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (17 samples, 0.02%)</title><rect x="79.8242%" y="645" width="0.0154%" height="15" fill="rgb(237,114,19)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="79.8242%" y="629" width="0.0154%" height="15" fill="rgb(238,51,50)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="79.8242%" y="613" width="0.0154%" height="15" fill="rgb(205,194,25)" fg:x="88288" fg:w="17"/><text x="80.0742%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="79.8468%" y="693" width="0.0136%" height="15" fill="rgb(215,203,17)" fg:x="88313" fg:w="15"/><text x="80.0968%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="79.8468%" y="677" width="0.0136%" height="15" fill="rgb(233,112,49)" fg:x="88313" fg:w="15"/><text x="80.0968%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.01%)</title><rect x="79.8468%" y="661" width="0.0136%" height="15" fill="rgb(241,130,26)" fg:x="88313" fg:w="15"/><text x="80.0968%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.01%)</title><rect x="79.8468%" y="645" width="0.0136%" height="15" fill="rgb(252,223,19)" fg:x="88313" fg:w="15"/><text x="80.0968%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="79.8468%" y="629" width="0.0136%" height="15" fill="rgb(211,95,25)" fg:x="88313" fg:w="15"/><text x="80.0968%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="79.8694%" y="693" width="0.0136%" height="15" fill="rgb(251,182,27)" fg:x="88338" fg:w="15"/><text x="80.1194%" y="703.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="79.8694%" y="677" width="0.0136%" height="15" fill="rgb(238,24,4)" fg:x="88338" fg:w="15"/><text x="80.1194%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (15 samples, 0.01%)</title><rect x="79.8694%" y="661" width="0.0136%" height="15" fill="rgb(224,220,25)" fg:x="88338" fg:w="15"/><text x="80.1194%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="79.8694%" y="645" width="0.0136%" height="15" fill="rgb(239,133,26)" fg:x="88338" fg:w="15"/><text x="80.1194%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="79.8694%" y="629" width="0.0136%" height="15" fill="rgb(211,94,48)" fg:x="88338" fg:w="15"/><text x="80.1194%" y="639.50"></text></g><g><title>tracing_core::metadata::Metadata::new (18 samples, 0.02%)</title><rect x="79.9002%" y="533" width="0.0163%" height="15" fill="rgb(239,87,6)" fg:x="88372" fg:w="18"/><text x="80.1502%" y="543.50"></text></g><g><title>&lt;log::Metadata as tracing_log::AsTrace&gt;::as_trace (25 samples, 0.02%)</title><rect x="79.8966%" y="549" width="0.0226%" height="15" fill="rgb(227,62,0)" fg:x="88368" fg:w="25"/><text x="80.1466%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="79.9237%" y="437" width="0.0108%" height="15" fill="rgb(211,226,4)" fg:x="88398" fg:w="12"/><text x="80.1737%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (12 samples, 0.01%)</title><rect x="79.9237%" y="421" width="0.0108%" height="15" fill="rgb(253,38,52)" fg:x="88398" fg:w="12"/><text x="80.1737%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (16 samples, 0.01%)</title><rect x="79.9219%" y="485" width="0.0145%" height="15" fill="rgb(229,126,40)" fg:x="88396" fg:w="16"/><text x="80.1719%" y="495.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::enabled (15 samples, 0.01%)</title><rect x="79.9228%" y="469" width="0.0136%" height="15" fill="rgb(229,165,44)" fg:x="88397" fg:w="15"/><text x="80.1728%" y="479.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (15 samples, 0.01%)</title><rect x="79.9228%" y="453" width="0.0136%" height="15" fill="rgb(247,95,47)" fg:x="88397" fg:w="15"/><text x="80.1728%" y="463.50"></text></g><g><title>__tls_get_addr (12 samples, 0.01%)</title><rect x="79.9382%" y="389" width="0.0108%" height="15" fill="rgb(216,140,30)" fg:x="88414" fg:w="12"/><text x="80.1882%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (31 samples, 0.03%)</title><rect x="79.9219%" y="501" width="0.0280%" height="15" fill="rgb(246,214,8)" fg:x="88396" fg:w="31"/><text x="80.1719%" y="511.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (15 samples, 0.01%)</title><rect x="79.9363%" y="485" width="0.0136%" height="15" fill="rgb(227,224,15)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="79.9363%" y="469" width="0.0136%" height="15" fill="rgb(233,175,4)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="479.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FILTERING::__getit (15 samples, 0.01%)</title><rect x="79.9363%" y="453" width="0.0136%" height="15" fill="rgb(221,66,45)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="79.9363%" y="437" width="0.0136%" height="15" fill="rgb(221,178,18)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="79.9363%" y="421" width="0.0136%" height="15" fill="rgb(213,81,29)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="79.9363%" y="405" width="0.0136%" height="15" fill="rgb(220,89,49)" fg:x="88412" fg:w="15"/><text x="80.1863%" y="415.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (64 samples, 0.06%)</title><rect x="79.8930%" y="677" width="0.0579%" height="15" fill="rgb(227,60,33)" fg:x="88364" fg:w="64"/><text x="80.1430%" y="687.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (64 samples, 0.06%)</title><rect x="79.8930%" y="661" width="0.0579%" height="15" fill="rgb(205,113,12)" fg:x="88364" fg:w="64"/><text x="80.1430%" y="671.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (63 samples, 0.06%)</title><rect x="79.8939%" y="645" width="0.0570%" height="15" fill="rgb(211,32,1)" fg:x="88365" fg:w="63"/><text x="80.1439%" y="655.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (63 samples, 0.06%)</title><rect x="79.8939%" y="629" width="0.0570%" height="15" fill="rgb(246,2,12)" fg:x="88365" fg:w="63"/><text x="80.1439%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default (63 samples, 0.06%)</title><rect x="79.8939%" y="613" width="0.0570%" height="15" fill="rgb(243,37,27)" fg:x="88365" fg:w="63"/><text x="80.1439%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.06%)</title><rect x="79.8939%" y="597" width="0.0570%" height="15" fill="rgb(248,211,31)" fg:x="88365" fg:w="63"/><text x="80.1439%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (60 samples, 0.05%)</title><rect x="79.8966%" y="581" width="0.0542%" height="15" fill="rgb(242,146,47)" fg:x="88368" fg:w="60"/><text x="80.1466%" y="591.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="79.8966%" y="565" width="0.0542%" height="15" fill="rgb(206,70,20)" fg:x="88368" fg:w="60"/><text x="80.1466%" y="575.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (35 samples, 0.03%)</title><rect x="79.9192%" y="549" width="0.0316%" height="15" fill="rgb(215,10,51)" fg:x="88393" fg:w="35"/><text x="80.1692%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (35 samples, 0.03%)</title><rect x="79.9192%" y="533" width="0.0316%" height="15" fill="rgb(243,178,53)" fg:x="88393" fg:w="35"/><text x="80.1692%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (32 samples, 0.03%)</title><rect x="79.9219%" y="517" width="0.0289%" height="15" fill="rgb(233,221,20)" fg:x="88396" fg:w="32"/><text x="80.1719%" y="527.50"></text></g><g><title>log::__private_api_log (79 samples, 0.07%)</title><rect x="79.8830%" y="693" width="0.0714%" height="15" fill="rgb(218,95,35)" fg:x="88353" fg:w="79"/><text x="80.1330%" y="703.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (15 samples, 0.01%)</title><rect x="79.9626%" y="693" width="0.0136%" height="15" fill="rgb(229,13,5)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (15 samples, 0.01%)</title><rect x="79.9626%" y="677" width="0.0136%" height="15" fill="rgb(252,164,30)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (15 samples, 0.01%)</title><rect x="79.9626%" y="661" width="0.0136%" height="15" fill="rgb(232,68,36)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (15 samples, 0.01%)</title><rect x="79.9626%" y="645" width="0.0136%" height="15" fill="rgb(219,59,54)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.01%)</title><rect x="79.9626%" y="629" width="0.0136%" height="15" fill="rgb(250,92,33)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.01%)</title><rect x="79.9626%" y="613" width="0.0136%" height="15" fill="rgb(229,162,54)" fg:x="88441" fg:w="15"/><text x="80.2126%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (258 samples, 0.23%)</title><rect x="79.7591%" y="725" width="0.2333%" height="15" fill="rgb(244,114,52)" fg:x="88216" fg:w="258"/><text x="80.0091%" y="735.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (195 samples, 0.18%)</title><rect x="79.8161%" y="709" width="0.1763%" height="15" fill="rgb(212,211,43)" fg:x="88279" fg:w="195"/><text x="80.0661%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (281 samples, 0.25%)</title><rect x="79.7392%" y="741" width="0.2541%" height="15" fill="rgb(226,147,8)" fg:x="88194" fg:w="281"/><text x="79.9892%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::light::Clusters&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="709" width="0.0226%" height="15" fill="rgb(226,23,13)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_pbr::light::VisiblePointLights&gt;&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="693" width="0.0226%" height="15" fill="rgb(240,63,4)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="79.9933%" y="677" width="0.0226%" height="15" fill="rgb(221,1,32)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_pbr::light::VisiblePointLights]&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="661" width="0.0226%" height="15" fill="rgb(242,117,10)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_pbr::light::VisiblePointLights&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="645" width="0.0226%" height="15" fill="rgb(249,172,44)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="629" width="0.0226%" height="15" fill="rgb(244,46,45)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_ecs::entity::Entity&gt;&gt; (25 samples, 0.02%)</title><rect x="79.9933%" y="613" width="0.0226%" height="15" fill="rgb(206,43,17)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="79.9933%" y="597" width="0.0226%" height="15" fill="rgb(239,218,39)" fg:x="88475" fg:w="25"/><text x="80.2433%" y="607.50"></text></g><g><title>bevy_ecs::component::ComponentDescriptor::drop_ptr (69 samples, 0.06%)</title><rect x="79.9933%" y="741" width="0.0624%" height="15" fill="rgb(208,169,54)" fg:x="88475" fg:w="69"/><text x="80.2433%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (69 samples, 0.06%)</title><rect x="79.9933%" y="725" width="0.0624%" height="15" fill="rgb(247,25,42)" fg:x="88475" fg:w="69"/><text x="80.2433%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;stellar_coordinates_test::GPUInstanceing::InstanceBuffer&gt; (36 samples, 0.03%)</title><rect x="80.0231%" y="709" width="0.0325%" height="15" fill="rgb(226,23,31)" fg:x="88508" fg:w="36"/><text x="80.2731%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_resource::buffer::Buffer&gt; (36 samples, 0.03%)</title><rect x="80.0231%" y="693" width="0.0325%" height="15" fill="rgb(247,16,28)" fg:x="88508" fg:w="36"/><text x="80.2731%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (36 samples, 0.03%)</title><rect x="80.0231%" y="677" width="0.0325%" height="15" fill="rgb(231,147,38)" fg:x="88508" fg:w="36"/><text x="80.2731%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="80.0231%" y="661" width="0.0325%" height="15" fill="rgb(253,81,48)" fg:x="88508" fg:w="36"/><text x="80.2731%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (33 samples, 0.03%)</title><rect x="80.0259%" y="645" width="0.0298%" height="15" fill="rgb(249,222,43)" fg:x="88511" fg:w="33"/><text x="80.2759%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (33 samples, 0.03%)</title><rect x="80.0259%" y="629" width="0.0298%" height="15" fill="rgb(221,3,27)" fg:x="88511" fg:w="33"/><text x="80.2759%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2,101 samples, 1.90%)</title><rect x="78.1570%" y="837" width="1.8996%" height="15" fill="rgb(228,180,5)" fg:x="86444" fg:w="2101"/><text x="78.4070%" y="847.50">&lt;..</text></g><g><title>bevy_ecs::world::World::clear_entities (389 samples, 0.35%)</title><rect x="79.7049%" y="821" width="0.3517%" height="15" fill="rgb(227,131,42)" fg:x="88156" fg:w="389"/><text x="79.9549%" y="831.50"></text></g><g><title>bevy_ecs::storage::table::Tables::clear (389 samples, 0.35%)</title><rect x="79.7049%" y="805" width="0.3517%" height="15" fill="rgb(212,3,39)" fg:x="88156" fg:w="389"/><text x="79.9549%" y="815.50"></text></g><g><title>bevy_ecs::storage::table::Table::clear (389 samples, 0.35%)</title><rect x="79.7049%" y="789" width="0.3517%" height="15" fill="rgb(226,45,5)" fg:x="88156" fg:w="389"/><text x="79.9549%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::clear (388 samples, 0.35%)</title><rect x="79.7058%" y="773" width="0.3508%" height="15" fill="rgb(215,167,45)" fg:x="88157" fg:w="388"/><text x="79.9558%" y="783.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (388 samples, 0.35%)</title><rect x="79.7058%" y="757" width="0.3508%" height="15" fill="rgb(250,218,53)" fg:x="88157" fg:w="388"/><text x="79.9558%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (19 samples, 0.02%)</title><rect x="80.0620%" y="789" width="0.0172%" height="15" fill="rgb(207,140,0)" fg:x="88551" fg:w="19"/><text x="80.3120%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (12 samples, 0.01%)</title><rect x="80.0792%" y="789" width="0.0108%" height="15" fill="rgb(238,133,51)" fg:x="88570" fg:w="12"/><text x="80.3292%" y="799.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (27 samples, 0.02%)</title><rect x="80.0910%" y="789" width="0.0244%" height="15" fill="rgb(218,203,53)" fg:x="88583" fg:w="27"/><text x="80.3410%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (25 samples, 0.02%)</title><rect x="80.0928%" y="773" width="0.0226%" height="15" fill="rgb(226,184,25)" fg:x="88585" fg:w="25"/><text x="80.3428%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (65 samples, 0.06%)</title><rect x="80.0602%" y="805" width="0.0588%" height="15" fill="rgb(231,121,21)" fg:x="88549" fg:w="65"/><text x="80.3102%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (84 samples, 0.08%)</title><rect x="80.0584%" y="821" width="0.0759%" height="15" fill="rgb(251,14,34)" fg:x="88547" fg:w="84"/><text x="80.3084%" y="831.50"></text></g><g><title>bevy_app::app::App::update (2,194 samples, 1.98%)</title><rect x="78.1570%" y="853" width="1.9837%" height="15" fill="rgb(249,193,11)" fg:x="86444" fg:w="2194"/><text x="78.4070%" y="863.50">b..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (91 samples, 0.08%)</title><rect x="80.0584%" y="837" width="0.0823%" height="15" fill="rgb(220,172,37)" fg:x="88547" fg:w="91"/><text x="80.3084%" y="847.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,207 samples, 2.00%)</title><rect x="78.1534%" y="885" width="1.9954%" height="15" fill="rgb(231,229,43)" fg:x="86440" fg:w="2207"/><text x="78.4034%" y="895.50">w..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,206 samples, 1.99%)</title><rect x="78.1543%" y="869" width="1.9945%" height="15" fill="rgb(250,161,5)" fg:x="86441" fg:w="2206"/><text x="78.4043%" y="879.50">b..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (19 samples, 0.02%)</title><rect x="80.1570%" y="853" width="0.0172%" height="15" fill="rgb(218,225,18)" fg:x="88656" fg:w="19"/><text x="80.4070%" y="863.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (19 samples, 0.02%)</title><rect x="80.1570%" y="837" width="0.0172%" height="15" fill="rgb(245,45,42)" fg:x="88656" fg:w="19"/><text x="80.4070%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="80.1570%" y="821" width="0.0172%" height="15" fill="rgb(211,115,1)" fg:x="88656" fg:w="19"/><text x="80.4070%" y="831.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (19 samples, 0.02%)</title><rect x="80.1570%" y="805" width="0.0172%" height="15" fill="rgb(248,133,52)" fg:x="88656" fg:w="19"/><text x="80.4070%" y="815.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (33 samples, 0.03%)</title><rect x="80.1488%" y="885" width="0.0298%" height="15" fill="rgb(238,100,21)" fg:x="88647" fg:w="33"/><text x="80.3988%" y="895.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (31 samples, 0.03%)</title><rect x="80.1506%" y="869" width="0.0280%" height="15" fill="rgb(247,144,11)" fg:x="88649" fg:w="31"/><text x="80.4006%" y="879.50"></text></g><g><title>bevy_winit::winit_runner_with (2,252 samples, 2.04%)</title><rect x="78.1525%" y="981" width="2.0361%" height="15" fill="rgb(206,164,16)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="991.50">b..</text></g><g><title>bevy_winit::run (2,252 samples, 2.04%)</title><rect x="78.1525%" y="965" width="2.0361%" height="15" fill="rgb(222,34,3)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="975.50">b..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (2,252 samples, 2.04%)</title><rect x="78.1525%" y="949" width="2.0361%" height="15" fill="rgb(248,82,4)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="959.50">w..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (2,252 samples, 2.04%)</title><rect x="78.1525%" y="933" width="2.0361%" height="15" fill="rgb(228,81,46)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="943.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,252 samples, 2.04%)</title><rect x="78.1525%" y="917" width="2.0361%" height="15" fill="rgb(227,67,47)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="927.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,252 samples, 2.04%)</title><rect x="78.1525%" y="901" width="2.0361%" height="15" fill="rgb(215,93,53)" fg:x="86439" fg:w="2252"/><text x="78.4025%" y="911.50">w..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (53 samples, 0.05%)</title><rect x="80.1886%" y="981" width="0.0479%" height="15" fill="rgb(248,194,39)" fg:x="88691" fg:w="53"/><text x="80.4386%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (12 samples, 0.01%)</title><rect x="80.2510%" y="981" width="0.0108%" height="15" fill="rgb(215,5,19)" fg:x="88760" fg:w="12"/><text x="80.5010%" y="991.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (28 samples, 0.03%)</title><rect x="80.2862%" y="981" width="0.0253%" height="15" fill="rgb(226,215,51)" fg:x="88799" fg:w="28"/><text x="80.5362%" y="991.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (19 samples, 0.02%)</title><rect x="80.3179%" y="981" width="0.0172%" height="15" fill="rgb(225,56,26)" fg:x="88834" fg:w="19"/><text x="80.5679%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (28 samples, 0.03%)</title><rect x="80.3523%" y="981" width="0.0253%" height="15" fill="rgb(222,75,29)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="991.50"></text></g><g><title>bevy_winit::winit_runner (28 samples, 0.03%)</title><rect x="80.3523%" y="965" width="0.0253%" height="15" fill="rgb(236,139,6)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="975.50"></text></g><g><title>bevy_winit::winit_runner_with (28 samples, 0.03%)</title><rect x="80.3523%" y="949" width="0.0253%" height="15" fill="rgb(223,137,36)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="959.50"></text></g><g><title>bevy_winit::run (28 samples, 0.03%)</title><rect x="80.3523%" y="933" width="0.0253%" height="15" fill="rgb(226,99,2)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="943.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (28 samples, 0.03%)</title><rect x="80.3523%" y="917" width="0.0253%" height="15" fill="rgb(206,133,23)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="927.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (28 samples, 0.03%)</title><rect x="80.3523%" y="901" width="0.0253%" height="15" fill="rgb(243,173,15)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (28 samples, 0.03%)</title><rect x="80.3523%" y="885" width="0.0253%" height="15" fill="rgb(228,69,28)" fg:x="88872" fg:w="28"/><text x="80.6023%" y="895.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (27 samples, 0.02%)</title><rect x="80.3532%" y="869" width="0.0244%" height="15" fill="rgb(212,51,22)" fg:x="88873" fg:w="27"/><text x="80.6032%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.01%)</title><rect x="80.3776%" y="981" width="0.0136%" height="15" fill="rgb(227,113,0)" fg:x="88900" fg:w="15"/><text x="80.6276%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (22 samples, 0.02%)</title><rect x="80.4381%" y="981" width="0.0199%" height="15" fill="rgb(252,84,27)" fg:x="88967" fg:w="22"/><text x="80.6881%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (26 samples, 0.02%)</title><rect x="80.4580%" y="981" width="0.0235%" height="15" fill="rgb(223,145,39)" fg:x="88989" fg:w="26"/><text x="80.7080%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (25 samples, 0.02%)</title><rect x="80.4589%" y="965" width="0.0226%" height="15" fill="rgb(239,219,30)" fg:x="88990" fg:w="25"/><text x="80.7089%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (59 samples, 0.05%)</title><rect x="80.5222%" y="981" width="0.0533%" height="15" fill="rgb(224,196,39)" fg:x="89060" fg:w="59"/><text x="80.7722%" y="991.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (39 samples, 0.04%)</title><rect x="80.5909%" y="933" width="0.0353%" height="15" fill="rgb(205,35,43)" fg:x="89136" fg:w="39"/><text x="80.8409%" y="943.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (39 samples, 0.04%)</title><rect x="80.5909%" y="917" width="0.0353%" height="15" fill="rgb(228,201,21)" fg:x="89136" fg:w="39"/><text x="80.8409%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.02%)</title><rect x="80.6036%" y="901" width="0.0226%" height="15" fill="rgb(237,118,16)" fg:x="89150" fg:w="25"/><text x="80.8536%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (18 samples, 0.02%)</title><rect x="80.6099%" y="885" width="0.0163%" height="15" fill="rgb(241,17,19)" fg:x="89157" fg:w="18"/><text x="80.8599%" y="895.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (56 samples, 0.05%)</title><rect x="80.5810%" y="981" width="0.0506%" height="15" fill="rgb(214,10,25)" fg:x="89125" fg:w="56"/><text x="80.8310%" y="991.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (50 samples, 0.05%)</title><rect x="80.5864%" y="965" width="0.0452%" height="15" fill="rgb(238,37,29)" fg:x="89131" fg:w="50"/><text x="80.8364%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (50 samples, 0.05%)</title><rect x="80.5864%" y="949" width="0.0452%" height="15" fill="rgb(253,83,25)" fg:x="89131" fg:w="50"/><text x="80.8364%" y="959.50"></text></g><g><title>_nv009glcore (37 samples, 0.03%)</title><rect x="80.6551%" y="645" width="0.0335%" height="15" fill="rgb(234,192,12)" fg:x="89207" fg:w="37"/><text x="80.9051%" y="655.50"></text></g><g><title>_nv009glcore (38 samples, 0.03%)</title><rect x="80.6551%" y="661" width="0.0344%" height="15" fill="rgb(241,216,45)" fg:x="89207" fg:w="38"/><text x="80.9051%" y="671.50"></text></g><g><title>_nv011glcore (48 samples, 0.04%)</title><rect x="80.6506%" y="741" width="0.0434%" height="15" fill="rgb(242,22,33)" fg:x="89202" fg:w="48"/><text x="80.9006%" y="751.50"></text></g><g><title>_nv041glcore (48 samples, 0.04%)</title><rect x="80.6506%" y="725" width="0.0434%" height="15" fill="rgb(231,105,49)" fg:x="89202" fg:w="48"/><text x="80.9006%" y="735.50"></text></g><g><title>_nv041glcore (47 samples, 0.04%)</title><rect x="80.6515%" y="709" width="0.0425%" height="15" fill="rgb(218,204,15)" fg:x="89203" fg:w="47"/><text x="80.9015%" y="719.50"></text></g><g><title>_nv041glcore (47 samples, 0.04%)</title><rect x="80.6515%" y="693" width="0.0425%" height="15" fill="rgb(235,138,41)" fg:x="89203" fg:w="47"/><text x="80.9015%" y="703.50"></text></g><g><title>_nv041glcore (43 samples, 0.04%)</title><rect x="80.6551%" y="677" width="0.0389%" height="15" fill="rgb(246,0,9)" fg:x="89207" fg:w="43"/><text x="80.9051%" y="687.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (61 samples, 0.06%)</title><rect x="80.6407%" y="965" width="0.0552%" height="15" fill="rgb(210,74,4)" fg:x="89191" fg:w="61"/><text x="80.8907%" y="975.50"></text></g><g><title>ash::device::Device::queue_submit (61 samples, 0.06%)</title><rect x="80.6407%" y="949" width="0.0552%" height="15" fill="rgb(250,60,41)" fg:x="89191" fg:w="61"/><text x="80.8907%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (61 samples, 0.06%)</title><rect x="80.6407%" y="933" width="0.0552%" height="15" fill="rgb(220,115,12)" fg:x="89191" fg:w="61"/><text x="80.8907%" y="943.50"></text></g><g><title>__glx_Main (61 samples, 0.06%)</title><rect x="80.6407%" y="917" width="0.0552%" height="15" fill="rgb(237,100,13)" fg:x="89191" fg:w="61"/><text x="80.8907%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (61 samples, 0.06%)</title><rect x="80.6407%" y="901" width="0.0552%" height="15" fill="rgb(213,55,26)" fg:x="89191" fg:w="61"/><text x="80.8907%" y="911.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (59 samples, 0.05%)</title><rect x="80.6425%" y="885" width="0.0533%" height="15" fill="rgb(216,17,4)" fg:x="89193" fg:w="59"/><text x="80.8925%" y="895.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (59 samples, 0.05%)</title><rect x="80.6425%" y="869" width="0.0533%" height="15" fill="rgb(220,153,47)" fg:x="89193" fg:w="59"/><text x="80.8925%" y="879.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (59 samples, 0.05%)</title><rect x="80.6425%" y="853" width="0.0533%" height="15" fill="rgb(215,131,9)" fg:x="89193" fg:w="59"/><text x="80.8925%" y="863.50"></text></g><g><title>_nv009glcore (59 samples, 0.05%)</title><rect x="80.6425%" y="837" width="0.0533%" height="15" fill="rgb(233,46,42)" fg:x="89193" fg:w="59"/><text x="80.8925%" y="847.50"></text></g><g><title>_nv041glcore (59 samples, 0.05%)</title><rect x="80.6425%" y="821" width="0.0533%" height="15" fill="rgb(226,86,7)" fg:x="89193" fg:w="59"/><text x="80.8925%" y="831.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (50 samples, 0.05%)</title><rect x="80.6506%" y="805" width="0.0452%" height="15" fill="rgb(239,226,21)" fg:x="89202" fg:w="50"/><text x="80.9006%" y="815.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (50 samples, 0.05%)</title><rect x="80.6506%" y="789" width="0.0452%" height="15" fill="rgb(244,137,22)" fg:x="89202" fg:w="50"/><text x="80.9006%" y="799.50"></text></g><g><title>_nv009glcore (50 samples, 0.05%)</title><rect x="80.6506%" y="773" width="0.0452%" height="15" fill="rgb(211,139,35)" fg:x="89202" fg:w="50"/><text x="80.9006%" y="783.50"></text></g><g><title>_nv041glcore (50 samples, 0.05%)</title><rect x="80.6506%" y="757" width="0.0452%" height="15" fill="rgb(214,62,50)" fg:x="89202" fg:w="50"/><text x="80.9006%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (13 samples, 0.01%)</title><rect x="80.6958%" y="949" width="0.0118%" height="15" fill="rgb(212,113,44)" fg:x="89252" fg:w="13"/><text x="80.9458%" y="959.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (13 samples, 0.01%)</title><rect x="80.6958%" y="933" width="0.0118%" height="15" fill="rgb(226,150,43)" fg:x="89252" fg:w="13"/><text x="80.9458%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (13 samples, 0.01%)</title><rect x="80.6958%" y="917" width="0.0118%" height="15" fill="rgb(250,71,37)" fg:x="89252" fg:w="13"/><text x="80.9458%" y="927.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (13 samples, 0.01%)</title><rect x="80.6958%" y="901" width="0.0118%" height="15" fill="rgb(219,76,19)" fg:x="89252" fg:w="13"/><text x="80.9458%" y="911.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (16 samples, 0.01%)</title><rect x="80.6958%" y="965" width="0.0145%" height="15" fill="rgb(250,39,11)" fg:x="89252" fg:w="16"/><text x="80.9458%" y="975.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (83 samples, 0.08%)</title><rect x="80.6407%" y="981" width="0.0750%" height="15" fill="rgb(230,64,31)" fg:x="89191" fg:w="83"/><text x="80.8907%" y="991.50"></text></g><g><title>___dlopen (19 samples, 0.02%)</title><rect x="80.7229%" y="789" width="0.0172%" height="15" fill="rgb(208,222,23)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="799.50"></text></g><g><title>_dlerror_run (19 samples, 0.02%)</title><rect x="80.7229%" y="773" width="0.0172%" height="15" fill="rgb(227,125,18)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="783.50"></text></g><g><title>__GI__dl_catch_error (19 samples, 0.02%)</title><rect x="80.7229%" y="757" width="0.0172%" height="15" fill="rgb(234,210,9)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="767.50"></text></g><g><title>__GI__dl_catch_exception (19 samples, 0.02%)</title><rect x="80.7229%" y="741" width="0.0172%" height="15" fill="rgb(217,127,24)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="751.50"></text></g><g><title>dlopen_doit (19 samples, 0.02%)</title><rect x="80.7229%" y="725" width="0.0172%" height="15" fill="rgb(239,141,48)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="735.50"></text></g><g><title>_dl_open (19 samples, 0.02%)</title><rect x="80.7229%" y="709" width="0.0172%" height="15" fill="rgb(227,109,8)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="719.50"></text></g><g><title>__GI__dl_catch_exception (19 samples, 0.02%)</title><rect x="80.7229%" y="693" width="0.0172%" height="15" fill="rgb(235,184,23)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="703.50"></text></g><g><title>dl_open_worker (19 samples, 0.02%)</title><rect x="80.7229%" y="677" width="0.0172%" height="15" fill="rgb(227,226,48)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="687.50"></text></g><g><title>__GI__dl_catch_exception (19 samples, 0.02%)</title><rect x="80.7229%" y="661" width="0.0172%" height="15" fill="rgb(206,150,11)" fg:x="89282" fg:w="19"/><text x="80.9729%" y="671.50"></text></g><g><title>dl_open_worker_begin (18 samples, 0.02%)</title><rect x="80.7239%" y="645" width="0.0163%" height="15" fill="rgb(254,2,33)" fg:x="89283" fg:w="18"/><text x="80.9739%" y="655.50"></text></g><g><title>_dl_relocate_object (18 samples, 0.02%)</title><rect x="80.7239%" y="629" width="0.0163%" height="15" fill="rgb(243,160,20)" fg:x="89283" fg:w="18"/><text x="80.9739%" y="639.50"></text></g><g><title>_dl_lookup_symbol_x (14 samples, 0.01%)</title><rect x="80.7275%" y="613" width="0.0127%" height="15" fill="rgb(218,208,30)" fg:x="89287" fg:w="14"/><text x="80.9775%" y="623.50"></text></g><g><title>[libvulkan.so.1.3.208] (22 samples, 0.02%)</title><rect x="80.7229%" y="805" width="0.0199%" height="15" fill="rgb(224,120,49)" fg:x="89282" fg:w="22"/><text x="80.9729%" y="815.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (31 samples, 0.03%)</title><rect x="80.7157%" y="981" width="0.0280%" height="15" fill="rgb(246,12,2)" fg:x="89274" fg:w="31"/><text x="80.9657%" y="991.50"></text></g><g><title>wgpu_core::instance::Instance::new (31 samples, 0.03%)</title><rect x="80.7157%" y="965" width="0.0280%" height="15" fill="rgb(236,117,3)" fg:x="89274" fg:w="31"/><text x="80.9657%" y="975.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (31 samples, 0.03%)</title><rect x="80.7157%" y="949" width="0.0280%" height="15" fill="rgb(216,128,52)" fg:x="89274" fg:w="31"/><text x="80.9657%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (31 samples, 0.03%)</title><rect x="80.7157%" y="933" width="0.0280%" height="15" fill="rgb(246,145,19)" fg:x="89274" fg:w="31"/><text x="80.9657%" y="943.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (23 samples, 0.02%)</title><rect x="80.7229%" y="917" width="0.0208%" height="15" fill="rgb(222,11,46)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="927.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (23 samples, 0.02%)</title><rect x="80.7229%" y="901" width="0.0208%" height="15" fill="rgb(245,82,36)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="911.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (23 samples, 0.02%)</title><rect x="80.7229%" y="885" width="0.0208%" height="15" fill="rgb(250,73,51)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="895.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (23 samples, 0.02%)</title><rect x="80.7229%" y="869" width="0.0208%" height="15" fill="rgb(221,189,23)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="879.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (23 samples, 0.02%)</title><rect x="80.7229%" y="853" width="0.0208%" height="15" fill="rgb(210,33,7)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="863.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (23 samples, 0.02%)</title><rect x="80.7229%" y="837" width="0.0208%" height="15" fill="rgb(210,107,22)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.208] (23 samples, 0.02%)</title><rect x="80.7229%" y="821" width="0.0208%" height="15" fill="rgb(222,116,37)" fg:x="89282" fg:w="23"/><text x="80.9729%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="80.8088%" y="469" width="0.0145%" height="15" fill="rgb(254,17,48)" fg:x="89377" fg:w="16"/><text x="81.0588%" y="479.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="80.8088%" y="453" width="0.0145%" height="15" fill="rgb(224,36,32)" fg:x="89377" fg:w="16"/><text x="81.0588%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (16 samples, 0.01%)</title><rect x="80.8088%" y="437" width="0.0145%" height="15" fill="rgb(232,90,46)" fg:x="89377" fg:w="16"/><text x="81.0588%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="80.8088%" y="421" width="0.0145%" height="15" fill="rgb(241,66,40)" fg:x="89377" fg:w="16"/><text x="81.0588%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="80.8088%" y="405" width="0.0145%" height="15" fill="rgb(249,184,29)" fg:x="89377" fg:w="16"/><text x="81.0588%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.01%)</title><rect x="80.8296%" y="373" width="0.0108%" height="15" fill="rgb(231,181,1)" fg:x="89400" fg:w="12"/><text x="81.0796%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="80.8296%" y="357" width="0.0108%" height="15" fill="rgb(224,94,2)" fg:x="89400" fg:w="12"/><text x="81.0796%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="80.8296%" y="341" width="0.0108%" height="15" fill="rgb(229,170,15)" fg:x="89400" fg:w="12"/><text x="81.0796%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.01%)</title><rect x="80.8287%" y="421" width="0.0136%" height="15" fill="rgb(240,127,35)" fg:x="89399" fg:w="15"/><text x="81.0787%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.01%)</title><rect x="80.8287%" y="405" width="0.0136%" height="15" fill="rgb(248,196,34)" fg:x="89399" fg:w="15"/><text x="81.0787%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.01%)</title><rect x="80.8287%" y="389" width="0.0136%" height="15" fill="rgb(236,137,7)" fg:x="89399" fg:w="15"/><text x="81.0787%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (27 samples, 0.02%)</title><rect x="80.8287%" y="469" width="0.0244%" height="15" fill="rgb(235,127,16)" fg:x="89399" fg:w="27"/><text x="81.0787%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (27 samples, 0.02%)</title><rect x="80.8287%" y="453" width="0.0244%" height="15" fill="rgb(250,192,54)" fg:x="89399" fg:w="27"/><text x="81.0787%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.02%)</title><rect x="80.8287%" y="437" width="0.0244%" height="15" fill="rgb(218,98,20)" fg:x="89399" fg:w="27"/><text x="81.0787%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.01%)</title><rect x="80.8423%" y="421" width="0.0108%" height="15" fill="rgb(230,176,47)" fg:x="89414" fg:w="12"/><text x="81.0923%" y="431.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::consume_temp (29 samples, 0.03%)</title><rect x="80.8540%" y="469" width="0.0262%" height="15" fill="rgb(244,2,33)" fg:x="89427" fg:w="29"/><text x="81.1040%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.02%)</title><rect x="80.8568%" y="453" width="0.0235%" height="15" fill="rgb(231,100,17)" fg:x="89430" fg:w="26"/><text x="81.1068%" y="463.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="80.8667%" y="437" width="0.0136%" height="15" fill="rgb(245,23,12)" fg:x="89441" fg:w="15"/><text x="81.1167%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="80.8667%" y="421" width="0.0136%" height="15" fill="rgb(249,55,22)" fg:x="89441" fg:w="15"/><text x="81.1167%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="80.8812%" y="421" width="0.0217%" height="15" fill="rgb(207,134,9)" fg:x="89457" fg:w="24"/><text x="81.1312%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="80.8812%" y="405" width="0.0217%" height="15" fill="rgb(218,134,0)" fg:x="89457" fg:w="24"/><text x="81.1312%" y="415.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (35 samples, 0.03%)</title><rect x="80.8803%" y="469" width="0.0316%" height="15" fill="rgb(213,212,33)" fg:x="89456" fg:w="35"/><text x="81.1303%" y="479.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (35 samples, 0.03%)</title><rect x="80.8803%" y="453" width="0.0316%" height="15" fill="rgb(252,106,18)" fg:x="89456" fg:w="35"/><text x="81.1303%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (35 samples, 0.03%)</title><rect x="80.8803%" y="437" width="0.0316%" height="15" fill="rgb(208,126,42)" fg:x="89456" fg:w="35"/><text x="81.1303%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (354 samples, 0.32%)</title><rect x="80.9164%" y="469" width="0.3201%" height="15" fill="rgb(246,175,29)" fg:x="89496" fg:w="354"/><text x="81.1664%" y="479.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (354 samples, 0.32%)</title><rect x="80.9164%" y="453" width="0.3201%" height="15" fill="rgb(215,13,50)" fg:x="89496" fg:w="354"/><text x="81.1664%" y="463.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (349 samples, 0.32%)</title><rect x="80.9210%" y="437" width="0.3155%" height="15" fill="rgb(216,172,15)" fg:x="89501" fg:w="349"/><text x="81.1710%" y="447.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (344 samples, 0.31%)</title><rect x="80.9255%" y="421" width="0.3110%" height="15" fill="rgb(212,103,13)" fg:x="89506" fg:w="344"/><text x="81.1755%" y="431.50"></text></g><g><title>inplace_it::fixed_array::indirect (337 samples, 0.30%)</title><rect x="80.9318%" y="405" width="0.3047%" height="15" fill="rgb(231,171,36)" fg:x="89513" fg:w="337"/><text x="81.1818%" y="415.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (337 samples, 0.30%)</title><rect x="80.9318%" y="389" width="0.3047%" height="15" fill="rgb(250,123,20)" fg:x="89513" fg:w="337"/><text x="81.1818%" y="399.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (337 samples, 0.30%)</title><rect x="80.9318%" y="373" width="0.3047%" height="15" fill="rgb(212,53,50)" fg:x="89513" fg:w="337"/><text x="81.1818%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (336 samples, 0.30%)</title><rect x="80.9327%" y="357" width="0.3038%" height="15" fill="rgb(243,54,12)" fg:x="89514" fg:w="336"/><text x="81.1827%" y="367.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (328 samples, 0.30%)</title><rect x="80.9399%" y="341" width="0.2966%" height="15" fill="rgb(234,101,34)" fg:x="89522" fg:w="328"/><text x="81.1899%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (288 samples, 0.26%)</title><rect x="80.9761%" y="325" width="0.2604%" height="15" fill="rgb(254,67,22)" fg:x="89562" fg:w="288"/><text x="81.2261%" y="335.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (42 samples, 0.04%)</title><rect x="81.1985%" y="309" width="0.0380%" height="15" fill="rgb(250,35,47)" fg:x="89808" fg:w="42"/><text x="81.4485%" y="319.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (16 samples, 0.01%)</title><rect x="81.2220%" y="293" width="0.0145%" height="15" fill="rgb(226,126,38)" fg:x="89834" fg:w="16"/><text x="81.4720%" y="303.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::buffer (21 samples, 0.02%)</title><rect x="81.2609%" y="453" width="0.0190%" height="15" fill="rgb(216,138,53)" fg:x="89877" fg:w="21"/><text x="81.5109%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrierBuilder::dst_access_mask (12 samples, 0.01%)</title><rect x="81.2835%" y="453" width="0.0108%" height="15" fill="rgb(246,199,43)" fg:x="89902" fg:w="12"/><text x="81.5335%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (603 samples, 0.55%)</title><rect x="80.7817%" y="517" width="0.5452%" height="15" fill="rgb(232,125,11)" fg:x="89347" fg:w="603"/><text x="81.0317%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (603 samples, 0.55%)</title><rect x="80.7817%" y="501" width="0.5452%" height="15" fill="rgb(218,219,45)" fg:x="89347" fg:w="603"/><text x="81.0317%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (600 samples, 0.54%)</title><rect x="80.7844%" y="485" width="0.5425%" height="15" fill="rgb(216,102,54)" fg:x="89350" fg:w="600"/><text x="81.0344%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (100 samples, 0.09%)</title><rect x="81.2365%" y="469" width="0.0904%" height="15" fill="rgb(250,228,7)" fg:x="89850" fg:w="100"/><text x="81.4865%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_buffer_usage_to_barrier (18 samples, 0.02%)</title><rect x="81.3106%" y="453" width="0.0163%" height="15" fill="rgb(226,125,25)" fg:x="89932" fg:w="18"/><text x="81.5606%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_get_mapped_range (23 samples, 0.02%)</title><rect x="81.3269%" y="501" width="0.0208%" height="15" fill="rgb(224,165,27)" fg:x="89950" fg:w="23"/><text x="81.5769%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (23 samples, 0.02%)</title><rect x="81.3269%" y="485" width="0.0208%" height="15" fill="rgb(233,86,3)" fg:x="89950" fg:w="23"/><text x="81.5769%" y="495.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (12 samples, 0.01%)</title><rect x="81.3369%" y="469" width="0.0108%" height="15" fill="rgb(228,116,20)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="479.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (12 samples, 0.01%)</title><rect x="81.3369%" y="453" width="0.0108%" height="15" fill="rgb(209,192,17)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (12 samples, 0.01%)</title><rect x="81.3369%" y="437" width="0.0108%" height="15" fill="rgb(224,88,34)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="447.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (12 samples, 0.01%)</title><rect x="81.3369%" y="421" width="0.0108%" height="15" fill="rgb(233,38,6)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.01%)</title><rect x="81.3369%" y="405" width="0.0108%" height="15" fill="rgb(212,59,30)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="81.3369%" y="389" width="0.0108%" height="15" fill="rgb(213,80,3)" fg:x="89961" fg:w="12"/><text x="81.5869%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.04%)</title><rect x="81.3486%" y="437" width="0.0398%" height="15" fill="rgb(251,178,7)" fg:x="89974" fg:w="44"/><text x="81.5986%" y="447.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.04%)</title><rect x="81.3504%" y="421" width="0.0380%" height="15" fill="rgb(213,154,26)" fg:x="89976" fg:w="42"/><text x="81.6004%" y="431.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="81.3703%" y="405" width="0.0181%" height="15" fill="rgb(238,165,49)" fg:x="89998" fg:w="20"/><text x="81.6203%" y="415.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (70 samples, 0.06%)</title><rect x="81.3269%" y="517" width="0.0633%" height="15" fill="rgb(248,91,46)" fg:x="89950" fg:w="70"/><text x="81.5769%" y="527.50"></text></g><g><title>wgpu::MapContext::add (47 samples, 0.04%)</title><rect x="81.3477%" y="501" width="0.0425%" height="15" fill="rgb(244,21,52)" fg:x="89973" fg:w="47"/><text x="81.5977%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.04%)</title><rect x="81.3477%" y="485" width="0.0425%" height="15" fill="rgb(247,122,20)" fg:x="89973" fg:w="47"/><text x="81.5977%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (47 samples, 0.04%)</title><rect x="81.3477%" y="469" width="0.0425%" height="15" fill="rgb(218,27,9)" fg:x="89973" fg:w="47"/><text x="81.5977%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 0.04%)</title><rect x="81.3477%" y="453" width="0.0425%" height="15" fill="rgb(246,7,6)" fg:x="89973" fg:w="47"/><text x="81.5977%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (690 samples, 0.62%)</title><rect x="80.7817%" y="629" width="0.6239%" height="15" fill="rgb(227,135,54)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (690 samples, 0.62%)</title><rect x="80.7817%" y="613" width="0.6239%" height="15" fill="rgb(247,14,11)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (690 samples, 0.62%)</title><rect x="80.7817%" y="597" width="0.6239%" height="15" fill="rgb(206,149,34)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (690 samples, 0.62%)</title><rect x="80.7817%" y="581" width="0.6239%" height="15" fill="rgb(227,228,4)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="591.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (690 samples, 0.62%)</title><rect x="80.7817%" y="565" width="0.6239%" height="15" fill="rgb(238,218,28)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="575.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (690 samples, 0.62%)</title><rect x="80.7817%" y="549" width="0.6239%" height="15" fill="rgb(252,86,40)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="559.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (690 samples, 0.62%)</title><rect x="80.7817%" y="533" width="0.6239%" height="15" fill="rgb(251,225,11)" fg:x="89347" fg:w="690"/><text x="81.0317%" y="543.50"></text></g><g><title>wgpu::Device::create_buffer (17 samples, 0.02%)</title><rect x="81.3902%" y="517" width="0.0154%" height="15" fill="rgb(206,46,49)" fg:x="90020" fg:w="17"/><text x="81.6402%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (17 samples, 0.02%)</title><rect x="81.3902%" y="501" width="0.0154%" height="15" fill="rgb(245,128,24)" fg:x="90020" fg:w="17"/><text x="81.6402%" y="511.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (12 samples, 0.01%)</title><rect x="81.4092%" y="533" width="0.0108%" height="15" fill="rgb(219,177,34)" fg:x="90041" fg:w="12"/><text x="81.6592%" y="543.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (15 samples, 0.01%)</title><rect x="81.4083%" y="549" width="0.0136%" height="15" fill="rgb(218,60,48)" fg:x="90040" fg:w="15"/><text x="81.6583%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (19 samples, 0.02%)</title><rect x="81.4056%" y="629" width="0.0172%" height="15" fill="rgb(221,11,5)" fg:x="90037" fg:w="19"/><text x="81.6556%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run::call_inner (19 samples, 0.02%)</title><rect x="81.4056%" y="613" width="0.0172%" height="15" fill="rgb(220,148,13)" fg:x="90037" fg:w="19"/><text x="81.6556%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="81.4056%" y="597" width="0.0172%" height="15" fill="rgb(210,16,3)" fg:x="90037" fg:w="19"/><text x="81.6556%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.02%)</title><rect x="81.4056%" y="581" width="0.0172%" height="15" fill="rgb(236,80,2)" fg:x="90037" fg:w="19"/><text x="81.6556%" y="591.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (16 samples, 0.01%)</title><rect x="81.4083%" y="565" width="0.0145%" height="15" fill="rgb(239,129,19)" fg:x="90040" fg:w="16"/><text x="81.6583%" y="575.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::DynamicUniformVec&lt;T&gt;::write_buffer (29 samples, 0.03%)</title><rect x="81.4227%" y="549" width="0.0262%" height="15" fill="rgb(220,106,35)" fg:x="90056" fg:w="29"/><text x="81.6727%" y="559.50"></text></g><g><title>bevy_render::render_resource::uniform_vec::UniformVec&lt;T&gt;::write_buffer (29 samples, 0.03%)</title><rect x="81.4227%" y="533" width="0.0262%" height="15" fill="rgb(252,139,45)" fg:x="90056" fg:w="29"/><text x="81.6727%" y="543.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write (27 samples, 0.02%)</title><rect x="81.4246%" y="517" width="0.0244%" height="15" fill="rgb(229,8,36)" fg:x="90058" fg:w="27"/><text x="81.6746%" y="527.50"></text></g><g><title>&lt;[T] as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (27 samples, 0.02%)</title><rect x="81.4246%" y="501" width="0.0244%" height="15" fill="rgb(230,126,33)" fg:x="90058" fg:w="27"/><text x="81.6746%" y="511.50"></text></g><g><title>&lt;T as bevy_crevice::std140::traits::WriteStd140&gt;::write_std140 (27 samples, 0.02%)</title><rect x="81.4246%" y="485" width="0.0244%" height="15" fill="rgb(239,140,21)" fg:x="90058" fg:w="27"/><text x="81.6746%" y="495.50"></text></g><g><title>bevy_crevice::std140::writer::Writer&lt;W&gt;::write_std140 (25 samples, 0.02%)</title><rect x="81.4264%" y="469" width="0.0226%" height="15" fill="rgb(254,104,9)" fg:x="90060" fg:w="25"/><text x="81.6764%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (23 samples, 0.02%)</title><rect x="81.4282%" y="453" width="0.0208%" height="15" fill="rgb(239,52,14)" fg:x="90062" fg:w="23"/><text x="81.6782%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (23 samples, 0.02%)</title><rect x="81.4282%" y="437" width="0.0208%" height="15" fill="rgb(208,227,44)" fg:x="90062" fg:w="23"/><text x="81.6782%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (30 samples, 0.03%)</title><rect x="81.4227%" y="629" width="0.0271%" height="15" fill="rgb(246,18,19)" fg:x="90056" fg:w="30"/><text x="81.6727%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (30 samples, 0.03%)</title><rect x="81.4227%" y="613" width="0.0271%" height="15" fill="rgb(235,228,25)" fg:x="90056" fg:w="30"/><text x="81.6727%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.03%)</title><rect x="81.4227%" y="597" width="0.0271%" height="15" fill="rgb(240,156,20)" fg:x="90056" fg:w="30"/><text x="81.6727%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.03%)</title><rect x="81.4227%" y="581" width="0.0271%" height="15" fill="rgb(224,8,20)" fg:x="90056" fg:w="30"/><text x="81.6727%" y="591.50"></text></g><g><title>bevy_render::render_component::prepare_uniform_components (30 samples, 0.03%)</title><rect x="81.4227%" y="565" width="0.0271%" height="15" fill="rgb(214,12,52)" fg:x="90056" fg:w="30"/><text x="81.6727%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (764 samples, 0.69%)</title><rect x="80.7799%" y="693" width="0.6908%" height="15" fill="rgb(211,220,47)" fg:x="89345" fg:w="764"/><text x="81.0299%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (764 samples, 0.69%)</title><rect x="80.7799%" y="677" width="0.6908%" height="15" fill="rgb(250,173,5)" fg:x="89345" fg:w="764"/><text x="81.0299%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (764 samples, 0.69%)</title><rect x="80.7799%" y="661" width="0.6908%" height="15" fill="rgb(250,125,52)" fg:x="89345" fg:w="764"/><text x="81.0299%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (764 samples, 0.69%)</title><rect x="80.7799%" y="645" width="0.6908%" height="15" fill="rgb(209,133,18)" fg:x="89345" fg:w="764"/><text x="81.0299%" y="655.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (25 samples, 0.02%)</title><rect x="81.4788%" y="357" width="0.0226%" height="15" fill="rgb(216,173,22)" fg:x="90118" fg:w="25"/><text x="81.7288%" y="367.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (25 samples, 0.02%)</title><rect x="81.4788%" y="341" width="0.0226%" height="15" fill="rgb(205,3,22)" fg:x="90118" fg:w="25"/><text x="81.7288%" y="351.50"></text></g><g><title>syscall (23 samples, 0.02%)</title><rect x="81.4806%" y="325" width="0.0208%" height="15" fill="rgb(248,22,20)" fg:x="90120" fg:w="23"/><text x="81.7306%" y="335.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (26 samples, 0.02%)</title><rect x="81.4788%" y="421" width="0.0235%" height="15" fill="rgb(233,6,29)" fg:x="90118" fg:w="26"/><text x="81.7288%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::park (26 samples, 0.02%)</title><rect x="81.4788%" y="405" width="0.0235%" height="15" fill="rgb(240,22,54)" fg:x="90118" fg:w="26"/><text x="81.7288%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (26 samples, 0.02%)</title><rect x="81.4788%" y="389" width="0.0235%" height="15" fill="rgb(231,133,32)" fg:x="90118" fg:w="26"/><text x="81.7288%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (26 samples, 0.02%)</title><rect x="81.4788%" y="373" width="0.0235%" height="15" fill="rgb(248,193,4)" fg:x="90118" fg:w="26"/><text x="81.7288%" y="383.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (800 samples, 0.72%)</title><rect x="80.7799%" y="821" width="0.7233%" height="15" fill="rgb(211,178,46)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (800 samples, 0.72%)</title><rect x="80.7799%" y="805" width="0.7233%" height="15" fill="rgb(224,5,42)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (800 samples, 0.72%)</title><rect x="80.7799%" y="789" width="0.7233%" height="15" fill="rgb(239,176,25)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (800 samples, 0.72%)</title><rect x="80.7799%" y="773" width="0.7233%" height="15" fill="rgb(245,187,50)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (800 samples, 0.72%)</title><rect x="80.7799%" y="757" width="0.7233%" height="15" fill="rgb(248,24,15)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="767.50"></text></g><g><title>async_executor::Executor::try_tick (800 samples, 0.72%)</title><rect x="80.7799%" y="741" width="0.7233%" height="15" fill="rgb(205,166,13)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (800 samples, 0.72%)</title><rect x="80.7799%" y="725" width="0.7233%" height="15" fill="rgb(208,114,23)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (800 samples, 0.72%)</title><rect x="80.7799%" y="709" width="0.7233%" height="15" fill="rgb(239,127,18)" fg:x="89345" fg:w="800"/><text x="81.0299%" y="719.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (36 samples, 0.03%)</title><rect x="81.4707%" y="693" width="0.0325%" height="15" fill="rgb(219,154,28)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="81.4707%" y="677" width="0.0325%" height="15" fill="rgb(225,157,23)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (36 samples, 0.03%)</title><rect x="81.4707%" y="661" width="0.0325%" height="15" fill="rgb(219,8,6)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (36 samples, 0.03%)</title><rect x="81.4707%" y="645" width="0.0325%" height="15" fill="rgb(212,47,6)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (36 samples, 0.03%)</title><rect x="81.4707%" y="629" width="0.0325%" height="15" fill="rgb(224,190,4)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (36 samples, 0.03%)</title><rect x="81.4707%" y="613" width="0.0325%" height="15" fill="rgb(239,183,29)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.03%)</title><rect x="81.4707%" y="597" width="0.0325%" height="15" fill="rgb(213,57,7)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (36 samples, 0.03%)</title><rect x="81.4707%" y="581" width="0.0325%" height="15" fill="rgb(216,148,1)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="591.50"></text></g><g><title>bevy_render::view::window::prepare_windows (36 samples, 0.03%)</title><rect x="81.4707%" y="565" width="0.0325%" height="15" fill="rgb(236,182,29)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="575.50"></text></g><g><title>&lt;bevy_render::render_resource::texture::TextureView as core::convert::From&lt;wgpu::SurfaceTexture&gt;&gt;::from (36 samples, 0.03%)</title><rect x="81.4707%" y="549" width="0.0325%" height="15" fill="rgb(244,120,48)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="559.50"></text></g><g><title>wgpu::Texture::create_view (36 samples, 0.03%)</title><rect x="81.4707%" y="533" width="0.0325%" height="15" fill="rgb(206,71,34)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (36 samples, 0.03%)</title><rect x="81.4707%" y="517" width="0.0325%" height="15" fill="rgb(242,32,6)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (36 samples, 0.03%)</title><rect x="81.4707%" y="501" width="0.0325%" height="15" fill="rgb(241,35,3)" fg:x="90109" fg:w="36"/><text x="81.7207%" y="511.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (27 samples, 0.02%)</title><rect x="81.4788%" y="485" width="0.0244%" height="15" fill="rgb(222,62,19)" fg:x="90118" fg:w="27"/><text x="81.7288%" y="495.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (27 samples, 0.02%)</title><rect x="81.4788%" y="469" width="0.0244%" height="15" fill="rgb(223,110,41)" fg:x="90118" fg:w="27"/><text x="81.7288%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (27 samples, 0.02%)</title><rect x="81.4788%" y="453" width="0.0244%" height="15" fill="rgb(208,224,4)" fg:x="90118" fg:w="27"/><text x="81.7288%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (27 samples, 0.02%)</title><rect x="81.4788%" y="437" width="0.0244%" height="15" fill="rgb(241,137,19)" fg:x="90118" fg:w="27"/><text x="81.7288%" y="447.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (23 samples, 0.02%)</title><rect x="81.5032%" y="773" width="0.0208%" height="15" fill="rgb(244,24,17)" fg:x="90145" fg:w="23"/><text x="81.7532%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (23 samples, 0.02%)</title><rect x="81.5032%" y="757" width="0.0208%" height="15" fill="rgb(245,178,49)" fg:x="90145" fg:w="23"/><text x="81.7532%" y="767.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (12 samples, 0.01%)</title><rect x="81.5249%" y="725" width="0.0108%" height="15" fill="rgb(219,160,38)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="735.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (12 samples, 0.01%)</title><rect x="81.5249%" y="709" width="0.0108%" height="15" fill="rgb(228,137,14)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="719.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (12 samples, 0.01%)</title><rect x="81.5249%" y="693" width="0.0108%" height="15" fill="rgb(237,134,11)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="703.50"></text></g><g><title>__glx_Main (12 samples, 0.01%)</title><rect x="81.5249%" y="677" width="0.0108%" height="15" fill="rgb(211,126,44)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="81.5249%" y="661" width="0.0108%" height="15" fill="rgb(226,171,33)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="81.5249%" y="645" width="0.0108%" height="15" fill="rgb(253,99,13)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="655.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (12 samples, 0.01%)</title><rect x="81.5249%" y="629" width="0.0108%" height="15" fill="rgb(244,48,7)" fg:x="90169" fg:w="12"/><text x="81.7749%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (839 samples, 0.76%)</title><rect x="80.7799%" y="837" width="0.7586%" height="15" fill="rgb(244,217,54)" fg:x="89345" fg:w="839"/><text x="81.0299%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (39 samples, 0.04%)</title><rect x="81.5032%" y="821" width="0.0353%" height="15" fill="rgb(224,15,18)" fg:x="90145" fg:w="39"/><text x="81.7532%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (39 samples, 0.04%)</title><rect x="81.5032%" y="805" width="0.0353%" height="15" fill="rgb(244,99,12)" fg:x="90145" fg:w="39"/><text x="81.7532%" y="815.50"></text></g><g><title>bevy_render::renderer::render_system (39 samples, 0.04%)</title><rect x="81.5032%" y="789" width="0.0353%" height="15" fill="rgb(233,226,8)" fg:x="90145" fg:w="39"/><text x="81.7532%" y="799.50"></text></g><g><title>wgpu::SurfaceTexture::present (15 samples, 0.01%)</title><rect x="81.5249%" y="773" width="0.0136%" height="15" fill="rgb(229,211,3)" fg:x="90169" fg:w="15"/><text x="81.7749%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (15 samples, 0.01%)</title><rect x="81.5249%" y="757" width="0.0136%" height="15" fill="rgb(216,140,21)" fg:x="90169" fg:w="15"/><text x="81.7749%" y="767.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (15 samples, 0.01%)</title><rect x="81.5249%" y="741" width="0.0136%" height="15" fill="rgb(234,122,30)" fg:x="90169" fg:w="15"/><text x="81.7749%" y="751.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (12 samples, 0.01%)</title><rect x="81.5810%" y="709" width="0.0108%" height="15" fill="rgb(236,25,46)" fg:x="90231" fg:w="12"/><text x="81.8310%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (28 samples, 0.03%)</title><rect x="81.5710%" y="725" width="0.0253%" height="15" fill="rgb(217,52,54)" fg:x="90220" fg:w="28"/><text x="81.8210%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (43 samples, 0.04%)</title><rect x="81.5620%" y="757" width="0.0389%" height="15" fill="rgb(222,29,26)" fg:x="90210" fg:w="43"/><text x="81.8120%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (42 samples, 0.04%)</title><rect x="81.5629%" y="741" width="0.0380%" height="15" fill="rgb(216,177,29)" fg:x="90211" fg:w="42"/><text x="81.8129%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (70 samples, 0.06%)</title><rect x="81.5520%" y="805" width="0.0633%" height="15" fill="rgb(247,136,51)" fg:x="90199" fg:w="70"/><text x="81.8020%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (70 samples, 0.06%)</title><rect x="81.5520%" y="789" width="0.0633%" height="15" fill="rgb(231,47,47)" fg:x="90199" fg:w="70"/><text x="81.8020%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (67 samples, 0.06%)</title><rect x="81.5547%" y="773" width="0.0606%" height="15" fill="rgb(211,192,36)" fg:x="90202" fg:w="67"/><text x="81.8047%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertResource&lt;R&gt; as bevy_ecs::system::commands::Command&gt;::write (16 samples, 0.01%)</title><rect x="81.6009%" y="757" width="0.0145%" height="15" fill="rgb(229,156,32)" fg:x="90253" fg:w="16"/><text x="81.8509%" y="767.50"></text></g><g><title>bevy_ecs::world::World::insert_resource (16 samples, 0.01%)</title><rect x="81.6009%" y="741" width="0.0145%" height="15" fill="rgb(248,213,20)" fg:x="90253" fg:w="16"/><text x="81.8509%" y="751.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (71 samples, 0.06%)</title><rect x="81.5520%" y="821" width="0.0642%" height="15" fill="rgb(217,64,7)" fg:x="90199" fg:w="71"/><text x="81.8020%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (936 samples, 0.85%)</title><rect x="80.7799%" y="869" width="0.8463%" height="15" fill="rgb(232,142,8)" fg:x="89345" fg:w="936"/><text x="81.0299%" y="879.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (936 samples, 0.85%)</title><rect x="80.7799%" y="853" width="0.8463%" height="15" fill="rgb(224,92,44)" fg:x="89345" fg:w="936"/><text x="81.0299%" y="863.50"></text></g><g><title>bevy_render::extract (97 samples, 0.09%)</title><rect x="81.5385%" y="837" width="0.0877%" height="15" fill="rgb(214,169,17)" fg:x="90184" fg:w="97"/><text x="81.7885%" y="847.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (46 samples, 0.04%)</title><rect x="81.6262%" y="645" width="0.0416%" height="15" fill="rgb(210,59,37)" fg:x="90281" fg:w="46"/><text x="81.8762%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (43 samples, 0.04%)</title><rect x="81.6289%" y="629" width="0.0389%" height="15" fill="rgb(214,116,48)" fg:x="90284" fg:w="43"/><text x="81.8789%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 0.04%)</title><rect x="81.6289%" y="613" width="0.0389%" height="15" fill="rgb(244,191,6)" fg:x="90284" fg:w="43"/><text x="81.8789%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.04%)</title><rect x="81.6289%" y="597" width="0.0389%" height="15" fill="rgb(241,50,52)" fg:x="90284" fg:w="43"/><text x="81.8789%" y="607.50"></text></g><g><title>bevy_render::view::visibility::check_visibility (40 samples, 0.04%)</title><rect x="81.6316%" y="581" width="0.0362%" height="15" fill="rgb(236,75,39)" fg:x="90287" fg:w="40"/><text x="81.8816%" y="591.50"></text></g><g><title>bevy_pbr::light::assign_lights_to_clusters (13 samples, 0.01%)</title><rect x="81.6795%" y="581" width="0.0118%" height="15" fill="rgb(236,99,0)" fg:x="90340" fg:w="13"/><text x="81.9295%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (77 samples, 0.07%)</title><rect x="81.6262%" y="709" width="0.0696%" height="15" fill="rgb(207,202,15)" fg:x="90281" fg:w="77"/><text x="81.8762%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.07%)</title><rect x="81.6262%" y="693" width="0.0696%" height="15" fill="rgb(233,207,14)" fg:x="90281" fg:w="77"/><text x="81.8762%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (77 samples, 0.07%)</title><rect x="81.6262%" y="677" width="0.0696%" height="15" fill="rgb(226,27,51)" fg:x="90281" fg:w="77"/><text x="81.8762%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (77 samples, 0.07%)</title><rect x="81.6262%" y="661" width="0.0696%" height="15" fill="rgb(206,104,42)" fg:x="90281" fg:w="77"/><text x="81.8762%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (20 samples, 0.02%)</title><rect x="81.6777%" y="645" width="0.0181%" height="15" fill="rgb(212,225,4)" fg:x="90338" fg:w="20"/><text x="81.9277%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run::call_inner (18 samples, 0.02%)</title><rect x="81.6795%" y="629" width="0.0163%" height="15" fill="rgb(233,96,42)" fg:x="90340" fg:w="18"/><text x="81.9295%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="81.6795%" y="613" width="0.0163%" height="15" fill="rgb(229,21,32)" fg:x="90340" fg:w="18"/><text x="81.9295%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (18 samples, 0.02%)</title><rect x="81.6795%" y="597" width="0.0163%" height="15" fill="rgb(226,216,24)" fg:x="90340" fg:w="18"/><text x="81.9295%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (82 samples, 0.07%)</title><rect x="81.6262%" y="837" width="0.0741%" height="15" fill="rgb(221,163,17)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (82 samples, 0.07%)</title><rect x="81.6262%" y="821" width="0.0741%" height="15" fill="rgb(216,216,42)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (82 samples, 0.07%)</title><rect x="81.6262%" y="805" width="0.0741%" height="15" fill="rgb(240,118,7)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (82 samples, 0.07%)</title><rect x="81.6262%" y="789" width="0.0741%" height="15" fill="rgb(221,67,37)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (82 samples, 0.07%)</title><rect x="81.6262%" y="773" width="0.0741%" height="15" fill="rgb(241,32,44)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (82 samples, 0.07%)</title><rect x="81.6262%" y="757" width="0.0741%" height="15" fill="rgb(235,204,43)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (82 samples, 0.07%)</title><rect x="81.6262%" y="741" width="0.0741%" height="15" fill="rgb(213,116,10)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (82 samples, 0.07%)</title><rect x="81.6262%" y="725" width="0.0741%" height="15" fill="rgb(239,15,48)" fg:x="90281" fg:w="82"/><text x="81.8762%" y="735.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,021 samples, 0.92%)</title><rect x="80.7799%" y="917" width="0.9231%" height="15" fill="rgb(207,123,36)" fg:x="89345" fg:w="1021"/><text x="81.0299%" y="927.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,021 samples, 0.92%)</title><rect x="80.7799%" y="901" width="0.9231%" height="15" fill="rgb(209,103,30)" fg:x="89345" fg:w="1021"/><text x="81.0299%" y="911.50"></text></g><g><title>bevy_app::app::App::update (1,021 samples, 0.92%)</title><rect x="80.7799%" y="885" width="0.9231%" height="15" fill="rgb(238,100,19)" fg:x="89345" fg:w="1021"/><text x="81.0299%" y="895.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (85 samples, 0.08%)</title><rect x="81.6262%" y="869" width="0.0769%" height="15" fill="rgb(244,30,14)" fg:x="90281" fg:w="85"/><text x="81.8762%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (85 samples, 0.08%)</title><rect x="81.6262%" y="853" width="0.0769%" height="15" fill="rgb(249,174,6)" fg:x="90281" fg:w="85"/><text x="81.8762%" y="863.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,025 samples, 0.93%)</title><rect x="80.7799%" y="981" width="0.9267%" height="15" fill="rgb(235,213,41)" fg:x="89345" fg:w="1025"/><text x="81.0299%" y="991.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,025 samples, 0.93%)</title><rect x="80.7799%" y="965" width="0.9267%" height="15" fill="rgb(213,118,6)" fg:x="89345" fg:w="1025"/><text x="81.0299%" y="975.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,025 samples, 0.93%)</title><rect x="80.7799%" y="949" width="0.9267%" height="15" fill="rgb(235,44,51)" fg:x="89345" fg:w="1025"/><text x="81.0299%" y="959.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,025 samples, 0.93%)</title><rect x="80.7799%" y="933" width="0.9267%" height="15" fill="rgb(217,9,53)" fg:x="89345" fg:w="1025"/><text x="81.0299%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (36 samples, 0.03%)</title><rect x="81.7066%" y="533" width="0.0325%" height="15" fill="rgb(237,172,34)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (36 samples, 0.03%)</title><rect x="81.7066%" y="517" width="0.0325%" height="15" fill="rgb(206,206,11)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (36 samples, 0.03%)</title><rect x="81.7066%" y="501" width="0.0325%" height="15" fill="rgb(214,149,29)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (36 samples, 0.03%)</title><rect x="81.7066%" y="485" width="0.0325%" height="15" fill="rgb(208,123,3)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="495.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (36 samples, 0.03%)</title><rect x="81.7066%" y="469" width="0.0325%" height="15" fill="rgb(229,126,4)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="479.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (36 samples, 0.03%)</title><rect x="81.7066%" y="453" width="0.0325%" height="15" fill="rgb(222,92,36)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="463.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (36 samples, 0.03%)</title><rect x="81.7066%" y="437" width="0.0325%" height="15" fill="rgb(216,39,41)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="447.50"></text></g><g><title>inplace_it::fixed_array::indirect (36 samples, 0.03%)</title><rect x="81.7066%" y="421" width="0.0325%" height="15" fill="rgb(253,127,28)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="431.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (36 samples, 0.03%)</title><rect x="81.7066%" y="405" width="0.0325%" height="15" fill="rgb(249,152,51)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="415.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (36 samples, 0.03%)</title><rect x="81.7066%" y="389" width="0.0325%" height="15" fill="rgb(209,123,42)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer::{{closure}} (36 samples, 0.03%)</title><rect x="81.7066%" y="373" width="0.0325%" height="15" fill="rgb(241,118,22)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="383.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="81.7066%" y="357" width="0.0325%" height="15" fill="rgb(208,25,7)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="367.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (36 samples, 0.03%)</title><rect x="81.7066%" y="341" width="0.0325%" height="15" fill="rgb(243,144,39)" fg:x="90370" fg:w="36"/><text x="81.9566%" y="351.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (35 samples, 0.03%)</title><rect x="81.7075%" y="325" width="0.0316%" height="15" fill="rgb(250,50,5)" fg:x="90371" fg:w="35"/><text x="81.9575%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.05%)</title><rect x="81.7582%" y="485" width="0.0452%" height="15" fill="rgb(207,67,11)" fg:x="90427" fg:w="50"/><text x="82.0082%" y="495.50"></text></g><g><title>core::intrinsics::write_bytes (11,429 samples, 10.33%)</title><rect x="81.8034%" y="485" width="10.3334%" height="15" fill="rgb(245,204,40)" fg:x="90477" fg:w="11429"/><text x="82.0534%" y="495.50">core::intrinsic..</text></g><g><title>__memset_avx2_unaligned_erms (11,429 samples, 10.33%)</title><rect x="81.8034%" y="469" width="10.3334%" height="15" fill="rgb(238,228,24)" fg:x="90477" fg:w="11429"/><text x="82.0534%" y="479.50">__memset_avx2_u..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::track::TrackerSet&gt;&gt; (25 samples, 0.02%)</title><rect x="92.1413%" y="485" width="0.0226%" height="15" fill="rgb(217,116,22)" fg:x="101911" fg:w="25"/><text x="92.3913%" y="495.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="92.1413%" y="469" width="0.0226%" height="15" fill="rgb(234,98,12)" fg:x="101911" fg:w="25"/><text x="92.3913%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (25 samples, 0.02%)</title><rect x="92.1413%" y="453" width="0.0226%" height="15" fill="rgb(242,170,50)" fg:x="101911" fg:w="25"/><text x="92.3913%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (25 samples, 0.02%)</title><rect x="92.1413%" y="437" width="0.0226%" height="15" fill="rgb(235,7,5)" fg:x="101911" fg:w="25"/><text x="92.3913%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="92.1413%" y="421" width="0.0226%" height="15" fill="rgb(241,114,28)" fg:x="101911" fg:w="25"/><text x="92.3913%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::LifeGuard&gt; (16 samples, 0.01%)</title><rect x="92.1639%" y="485" width="0.0145%" height="15" fill="rgb(246,112,42)" fg:x="101936" fg:w="16"/><text x="92.4139%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (16 samples, 0.01%)</title><rect x="92.1639%" y="469" width="0.0145%" height="15" fill="rgb(248,228,14)" fg:x="101936" fg:w="16"/><text x="92.4139%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (16 samples, 0.01%)</title><rect x="92.1639%" y="453" width="0.0145%" height="15" fill="rgb(208,133,18)" fg:x="101936" fg:w="16"/><text x="92.4139%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="92.1783%" y="485" width="0.0235%" height="15" fill="rgb(207,35,49)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (26 samples, 0.02%)</title><rect x="92.1783%" y="469" width="0.0235%" height="15" fill="rgb(205,68,36)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="92.1783%" y="453" width="0.0235%" height="15" fill="rgb(245,62,40)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="463.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (26 samples, 0.02%)</title><rect x="92.1783%" y="437" width="0.0235%" height="15" fill="rgb(228,27,24)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.02%)</title><rect x="92.1783%" y="421" width="0.0235%" height="15" fill="rgb(253,19,12)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.02%)</title><rect x="92.1783%" y="405" width="0.0235%" height="15" fill="rgb(232,28,20)" fg:x="101952" fg:w="26"/><text x="92.4283%" y="415.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.07%)</title><rect x="92.2027%" y="453" width="0.0732%" height="15" fill="rgb(218,35,51)" fg:x="101979" fg:w="81"/><text x="92.4527%" y="463.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="92.2498%" y="437" width="0.0262%" height="15" fill="rgb(212,90,40)" fg:x="102031" fg:w="29"/><text x="92.4998%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;u64&gt;&gt; (83 samples, 0.08%)</title><rect x="92.2018%" y="485" width="0.0750%" height="15" fill="rgb(220,172,12)" fg:x="101978" fg:w="83"/><text x="92.4518%" y="495.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="92.2018%" y="469" width="0.0750%" height="15" fill="rgb(226,159,20)" fg:x="101978" fg:w="83"/><text x="92.4518%" y="479.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (22 samples, 0.02%)</title><rect x="92.2941%" y="373" width="0.0199%" height="15" fill="rgb(234,205,16)" fg:x="102080" fg:w="22"/><text x="92.5441%" y="383.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="92.2941%" y="357" width="0.0199%" height="15" fill="rgb(207,9,39)" fg:x="102080" fg:w="22"/><text x="92.5441%" y="367.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="92.2950%" y="341" width="0.0190%" height="15" fill="rgb(249,143,15)" fg:x="102081" fg:w="21"/><text x="92.5450%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="92.2950%" y="325" width="0.0190%" height="15" fill="rgb(253,133,29)" fg:x="102081" fg:w="21"/><text x="92.5450%" y="335.50"></text></g><g><title>__tls_get_addr (21 samples, 0.02%)</title><rect x="92.2950%" y="309" width="0.0190%" height="15" fill="rgb(221,187,0)" fg:x="102081" fg:w="21"/><text x="92.5450%" y="319.50"></text></g><g><title>update_get_addr (15 samples, 0.01%)</title><rect x="92.3004%" y="293" width="0.0136%" height="15" fill="rgb(205,204,26)" fg:x="102087" fg:w="15"/><text x="92.5504%" y="303.50"></text></g><g><title>_dl_update_slotinfo (15 samples, 0.01%)</title><rect x="92.3004%" y="277" width="0.0136%" height="15" fill="rgb(224,68,54)" fg:x="102087" fg:w="15"/><text x="92.5504%" y="287.50"></text></g><g><title>&lt;log::Metadata as tracing_log::AsTrace&gt;::as_trace (22 samples, 0.02%)</title><rect x="92.3149%" y="341" width="0.0199%" height="15" fill="rgb(209,67,4)" fg:x="102103" fg:w="22"/><text x="92.5649%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (20 samples, 0.02%)</title><rect x="92.3492%" y="149" width="0.0181%" height="15" fill="rgb(228,229,18)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="159.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (20 samples, 0.02%)</title><rect x="92.3492%" y="133" width="0.0181%" height="15" fill="rgb(231,89,13)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (20 samples, 0.02%)</title><rect x="92.3492%" y="117" width="0.0181%" height="15" fill="rgb(210,182,18)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="92.3492%" y="101" width="0.0181%" height="15" fill="rgb(240,105,2)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="111.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.02%)</title><rect x="92.3492%" y="85" width="0.0181%" height="15" fill="rgb(207,170,50)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="95.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.02%)</title><rect x="92.3492%" y="69" width="0.0181%" height="15" fill="rgb(232,133,24)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="79.50"></text></g><g><title>__memcmp_avx2_movbe (20 samples, 0.02%)</title><rect x="92.3492%" y="53" width="0.0181%" height="15" fill="rgb(235,166,27)" fg:x="102141" fg:w="20"/><text x="92.5992%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="92.3483%" y="229" width="0.0199%" height="15" fill="rgb(209,19,13)" fg:x="102140" fg:w="22"/><text x="92.5983%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (22 samples, 0.02%)</title><rect x="92.3483%" y="213" width="0.0199%" height="15" fill="rgb(226,79,39)" fg:x="102140" fg:w="22"/><text x="92.5983%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="92.3492%" y="197" width="0.0190%" height="15" fill="rgb(222,163,10)" fg:x="102141" fg:w="21"/><text x="92.5992%" y="207.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (21 samples, 0.02%)</title><rect x="92.3492%" y="181" width="0.0190%" height="15" fill="rgb(214,44,19)" fg:x="102141" fg:w="21"/><text x="92.5992%" y="191.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (21 samples, 0.02%)</title><rect x="92.3492%" y="165" width="0.0190%" height="15" fill="rgb(210,217,13)" fg:x="102141" fg:w="21"/><text x="92.5992%" y="175.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (30 samples, 0.03%)</title><rect x="92.3420%" y="277" width="0.0271%" height="15" fill="rgb(237,61,54)" fg:x="102133" fg:w="30"/><text x="92.5920%" y="287.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::enabled (30 samples, 0.03%)</title><rect x="92.3420%" y="261" width="0.0271%" height="15" fill="rgb(226,184,24)" fg:x="102133" fg:w="30"/><text x="92.5920%" y="271.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (23 samples, 0.02%)</title><rect x="92.3483%" y="245" width="0.0208%" height="15" fill="rgb(223,226,4)" fg:x="102140" fg:w="23"/><text x="92.5983%" y="255.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (73 samples, 0.07%)</title><rect x="92.3149%" y="357" width="0.0660%" height="15" fill="rgb(210,26,41)" fg:x="102103" fg:w="73"/><text x="92.5649%" y="367.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (51 samples, 0.05%)</title><rect x="92.3347%" y="341" width="0.0461%" height="15" fill="rgb(220,221,6)" fg:x="102125" fg:w="51"/><text x="92.5847%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (51 samples, 0.05%)</title><rect x="92.3347%" y="325" width="0.0461%" height="15" fill="rgb(225,89,49)" fg:x="102125" fg:w="51"/><text x="92.5847%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (43 samples, 0.04%)</title><rect x="92.3420%" y="309" width="0.0389%" height="15" fill="rgb(218,70,45)" fg:x="102133" fg:w="43"/><text x="92.5920%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (43 samples, 0.04%)</title><rect x="92.3420%" y="293" width="0.0389%" height="15" fill="rgb(238,166,21)" fg:x="102133" fg:w="43"/><text x="92.5920%" y="303.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::clear_enabled (13 samples, 0.01%)</title><rect x="92.3691%" y="277" width="0.0118%" height="15" fill="rgb(224,141,44)" fg:x="102163" fg:w="13"/><text x="92.6191%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="92.3691%" y="261" width="0.0118%" height="15" fill="rgb(230,12,49)" fg:x="102163" fg:w="13"/><text x="92.6191%" y="271.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FILTERING::__getit (13 samples, 0.01%)</title><rect x="92.3691%" y="245" width="0.0118%" height="15" fill="rgb(212,174,12)" fg:x="102163" fg:w="13"/><text x="92.6191%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="92.3691%" y="229" width="0.0118%" height="15" fill="rgb(246,67,9)" fg:x="102163" fg:w="13"/><text x="92.6191%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="92.3700%" y="213" width="0.0108%" height="15" fill="rgb(239,35,23)" fg:x="102164" fg:w="12"/><text x="92.6200%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="92.3700%" y="197" width="0.0108%" height="15" fill="rgb(211,167,0)" fg:x="102164" fg:w="12"/><text x="92.6200%" y="207.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (100 samples, 0.09%)</title><rect x="92.2913%" y="469" width="0.0904%" height="15" fill="rgb(225,119,45)" fg:x="102077" fg:w="100"/><text x="92.5413%" y="479.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (99 samples, 0.09%)</title><rect x="92.2923%" y="453" width="0.0895%" height="15" fill="rgb(210,162,6)" fg:x="102078" fg:w="99"/><text x="92.5423%" y="463.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (97 samples, 0.09%)</title><rect x="92.2941%" y="437" width="0.0877%" height="15" fill="rgb(208,118,35)" fg:x="102080" fg:w="97"/><text x="92.5441%" y="447.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (97 samples, 0.09%)</title><rect x="92.2941%" y="421" width="0.0877%" height="15" fill="rgb(239,4,53)" fg:x="102080" fg:w="97"/><text x="92.5441%" y="431.50"></text></g><g><title>tracing_core::dispatcher::get_default (97 samples, 0.09%)</title><rect x="92.2941%" y="405" width="0.0877%" height="15" fill="rgb(213,130,21)" fg:x="102080" fg:w="97"/><text x="92.5441%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (97 samples, 0.09%)</title><rect x="92.2941%" y="389" width="0.0877%" height="15" fill="rgb(235,148,0)" fg:x="102080" fg:w="97"/><text x="92.5441%" y="399.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (75 samples, 0.07%)</title><rect x="92.3140%" y="373" width="0.0678%" height="15" fill="rgb(244,224,18)" fg:x="102102" fg:w="75"/><text x="92.5640%" y="383.50"></text></g><g><title>log::__private_api_log (110 samples, 0.10%)</title><rect x="92.2859%" y="485" width="0.0995%" height="15" fill="rgb(211,214,4)" fg:x="102071" fg:w="110"/><text x="92.5359%" y="495.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (13 samples, 0.01%)</title><rect x="92.3863%" y="485" width="0.0118%" height="15" fill="rgb(206,119,25)" fg:x="102182" fg:w="13"/><text x="92.6363%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="92.3863%" y="469" width="0.0118%" height="15" fill="rgb(243,93,47)" fg:x="102182" fg:w="13"/><text x="92.6363%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="92.3872%" y="453" width="0.0108%" height="15" fill="rgb(224,194,6)" fg:x="102183" fg:w="12"/><text x="92.6372%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.01%)</title><rect x="92.3872%" y="437" width="0.0108%" height="15" fill="rgb(243,229,6)" fg:x="102183" fg:w="12"/><text x="92.6372%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.01%)</title><rect x="92.3872%" y="421" width="0.0108%" height="15" fill="rgb(207,23,50)" fg:x="102183" fg:w="12"/><text x="92.6372%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.01%)</title><rect x="92.4324%" y="469" width="0.0108%" height="15" fill="rgb(253,192,32)" fg:x="102233" fg:w="12"/><text x="92.6824%" y="479.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (22 samples, 0.02%)</title><rect x="92.4432%" y="469" width="0.0199%" height="15" fill="rgb(213,21,6)" fg:x="102245" fg:w="22"/><text x="92.6932%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="92.4432%" y="453" width="0.0199%" height="15" fill="rgb(243,151,13)" fg:x="102245" fg:w="22"/><text x="92.6932%" y="463.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="92.4441%" y="437" width="0.0190%" height="15" fill="rgb(233,165,41)" fg:x="102246" fg:w="21"/><text x="92.6941%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="92.4451%" y="421" width="0.0181%" height="15" fill="rgb(246,176,45)" fg:x="102247" fg:w="20"/><text x="92.6951%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="92.4451%" y="405" width="0.0181%" height="15" fill="rgb(217,170,52)" fg:x="102247" fg:w="20"/><text x="92.6951%" y="415.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.06%)</title><rect x="92.4640%" y="373" width="0.0570%" height="15" fill="rgb(214,203,54)" fg:x="102268" fg:w="63"/><text x="92.7140%" y="383.50"></text></g><g><title>_int_malloc (30 samples, 0.03%)</title><rect x="92.4939%" y="357" width="0.0271%" height="15" fill="rgb(248,215,49)" fg:x="102301" fg:w="30"/><text x="92.7439%" y="367.50"></text></g><g><title>wgpu_core::LifeGuard::new (69 samples, 0.06%)</title><rect x="92.4631%" y="469" width="0.0624%" height="15" fill="rgb(208,46,10)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (69 samples, 0.06%)</title><rect x="92.4631%" y="453" width="0.0624%" height="15" fill="rgb(254,5,31)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (69 samples, 0.06%)</title><rect x="92.4631%" y="437" width="0.0624%" height="15" fill="rgb(222,104,33)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.06%)</title><rect x="92.4631%" y="421" width="0.0624%" height="15" fill="rgb(248,49,16)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.06%)</title><rect x="92.4631%" y="405" width="0.0624%" height="15" fill="rgb(232,198,41)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="415.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 0.06%)</title><rect x="92.4631%" y="389" width="0.0624%" height="15" fill="rgb(214,125,3)" fg:x="102267" fg:w="69"/><text x="92.7131%" y="399.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::new (18 samples, 0.02%)</title><rect x="92.5264%" y="469" width="0.0163%" height="15" fill="rgb(229,220,28)" fg:x="102337" fg:w="18"/><text x="92.7764%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="92.5743%" y="389" width="0.0118%" height="15" fill="rgb(222,64,37)" fg:x="102390" fg:w="13"/><text x="92.8243%" y="399.50"></text></g><g><title>_nv011glcore (15 samples, 0.01%)</title><rect x="92.5743%" y="405" width="0.0136%" height="15" fill="rgb(249,184,13)" fg:x="102390" fg:w="15"/><text x="92.8243%" y="415.50"></text></g><g><title>syscall (25 samples, 0.02%)</title><rect x="92.6548%" y="373" width="0.0226%" height="15" fill="rgb(252,176,6)" fg:x="102479" fg:w="25"/><text x="92.9048%" y="383.50"></text></g><g><title>glXCreateGLXPbufferSGIX (102 samples, 0.09%)</title><rect x="92.5879%" y="405" width="0.0922%" height="15" fill="rgb(228,153,7)" fg:x="102405" fg:w="102"/><text x="92.8379%" y="415.50"></text></g><g><title>_nv011glcore (37 samples, 0.03%)</title><rect x="92.6467%" y="389" width="0.0335%" height="15" fill="rgb(242,193,5)" fg:x="102470" fg:w="37"/><text x="92.8967%" y="399.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (125 samples, 0.11%)</title><rect x="92.5716%" y="453" width="0.1130%" height="15" fill="rgb(232,140,9)" fg:x="102387" fg:w="125"/><text x="92.8216%" y="463.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (124 samples, 0.11%)</title><rect x="92.5725%" y="437" width="0.1121%" height="15" fill="rgb(213,222,16)" fg:x="102388" fg:w="124"/><text x="92.8225%" y="447.50"></text></g><g><title>__glx_Main (124 samples, 0.11%)</title><rect x="92.5725%" y="421" width="0.1121%" height="15" fill="rgb(222,75,50)" fg:x="102388" fg:w="124"/><text x="92.8225%" y="431.50"></text></g><g><title>ash::device::Device::create_buffer (105 samples, 0.09%)</title><rect x="92.6846%" y="453" width="0.0949%" height="15" fill="rgb(205,180,2)" fg:x="102512" fg:w="105"/><text x="92.9346%" y="463.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (102 samples, 0.09%)</title><rect x="92.6874%" y="437" width="0.0922%" height="15" fill="rgb(216,34,7)" fg:x="102515" fg:w="102"/><text x="92.9374%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (102 samples, 0.09%)</title><rect x="92.6874%" y="421" width="0.0922%" height="15" fill="rgb(253,16,32)" fg:x="102515" fg:w="102"/><text x="92.9374%" y="431.50"></text></g><g><title>_nv011glcore (60 samples, 0.05%)</title><rect x="92.7253%" y="405" width="0.0542%" height="15" fill="rgb(208,97,28)" fg:x="102557" fg:w="60"/><text x="92.9753%" y="415.50"></text></g><g><title>__GI___libc_malloc (59 samples, 0.05%)</title><rect x="92.7262%" y="389" width="0.0533%" height="15" fill="rgb(225,92,11)" fg:x="102558" fg:w="59"/><text x="92.9762%" y="399.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::size (18 samples, 0.02%)</title><rect x="92.7968%" y="453" width="0.0163%" height="15" fill="rgb(243,38,12)" fg:x="102636" fg:w="18"/><text x="93.0468%" y="463.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::usage (16 samples, 0.01%)</title><rect x="92.8130%" y="453" width="0.0145%" height="15" fill="rgb(208,139,16)" fg:x="102654" fg:w="16"/><text x="93.0630%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::allocator::GpuAllocator&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="92.8275%" y="453" width="0.0172%" height="15" fill="rgb(227,24,9)" fg:x="102670" fg:w="19"/><text x="93.0775%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="92.8275%" y="437" width="0.0172%" height="15" fill="rgb(206,62,11)" fg:x="102670" fg:w="19"/><text x="93.0775%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (19 samples, 0.02%)</title><rect x="92.8275%" y="421" width="0.0172%" height="15" fill="rgb(228,134,27)" fg:x="102670" fg:w="19"/><text x="93.0775%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (19 samples, 0.02%)</title><rect x="92.8275%" y="405" width="0.0172%" height="15" fill="rgb(205,55,33)" fg:x="102670" fg:w="19"/><text x="93.0775%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="92.8275%" y="389" width="0.0172%" height="15" fill="rgb(243,75,43)" fg:x="102670" fg:w="19"/><text x="93.0775%" y="399.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.01%)</title><rect x="92.8456%" y="453" width="0.0127%" height="15" fill="rgb(223,27,42)" fg:x="102690" fg:w="14"/><text x="93.0956%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.01%)</title><rect x="92.8456%" y="437" width="0.0127%" height="15" fill="rgb(232,189,33)" fg:x="102690" fg:w="14"/><text x="93.0956%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.01%)</title><rect x="92.8456%" y="421" width="0.0127%" height="15" fill="rgb(210,9,39)" fg:x="102690" fg:w="14"/><text x="93.0956%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="92.8456%" y="405" width="0.0127%" height="15" fill="rgb(242,85,26)" fg:x="102690" fg:w="14"/><text x="93.0956%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (518 samples, 0.47%)</title><rect x="92.3989%" y="485" width="0.4683%" height="15" fill="rgb(248,44,4)" fg:x="102196" fg:w="518"/><text x="92.6489%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (359 samples, 0.32%)</title><rect x="92.5427%" y="469" width="0.3246%" height="15" fill="rgb(250,96,46)" fg:x="102355" fg:w="359"/><text x="92.7927%" y="479.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (141 samples, 0.13%)</title><rect x="92.8673%" y="485" width="0.1275%" height="15" fill="rgb(229,116,26)" fg:x="102714" fg:w="141"/><text x="93.1173%" y="495.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (112 samples, 0.10%)</title><rect x="92.8935%" y="469" width="0.1013%" height="15" fill="rgb(246,94,34)" fg:x="102743" fg:w="112"/><text x="93.1435%" y="479.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (109 samples, 0.10%)</title><rect x="92.8962%" y="453" width="0.0986%" height="15" fill="rgb(251,73,21)" fg:x="102746" fg:w="109"/><text x="93.1462%" y="463.50"></text></g><g><title>core::mem::replace (109 samples, 0.10%)</title><rect x="92.8962%" y="437" width="0.0986%" height="15" fill="rgb(254,121,25)" fg:x="102746" fg:w="109"/><text x="93.1462%" y="447.50"></text></g><g><title>core::ptr::read (104 samples, 0.09%)</title><rect x="92.9007%" y="421" width="0.0940%" height="15" fill="rgb(215,161,49)" fg:x="102751" fg:w="104"/><text x="93.1507%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (104 samples, 0.09%)</title><rect x="92.9007%" y="405" width="0.0940%" height="15" fill="rgb(221,43,13)" fg:x="102751" fg:w="104"/><text x="93.1507%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (18 samples, 0.02%)</title><rect x="92.9948%" y="469" width="0.0163%" height="15" fill="rgb(249,5,37)" fg:x="102855" fg:w="18"/><text x="93.2448%" y="479.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (19 samples, 0.02%)</title><rect x="92.9948%" y="485" width="0.0172%" height="15" fill="rgb(226,25,44)" fg:x="102855" fg:w="19"/><text x="93.2448%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (14 samples, 0.01%)</title><rect x="93.0255%" y="469" width="0.0127%" height="15" fill="rgb(238,189,16)" fg:x="102889" fg:w="14"/><text x="93.2755%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.01%)</title><rect x="93.0255%" y="453" width="0.0127%" height="15" fill="rgb(251,186,8)" fg:x="102889" fg:w="14"/><text x="93.2755%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="93.0255%" y="437" width="0.0127%" height="15" fill="rgb(254,34,31)" fg:x="102889" fg:w="14"/><text x="93.2755%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.01%)</title><rect x="93.0255%" y="421" width="0.0127%" height="15" fill="rgb(225,215,27)" fg:x="102889" fg:w="14"/><text x="93.2755%" y="431.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::init (32 samples, 0.03%)</title><rect x="93.0255%" y="485" width="0.0289%" height="15" fill="rgb(221,192,48)" fg:x="102889" fg:w="32"/><text x="93.2755%" y="495.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (18 samples, 0.02%)</title><rect x="93.0382%" y="469" width="0.0163%" height="15" fill="rgb(219,137,20)" fg:x="102903" fg:w="18"/><text x="93.2882%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (18 samples, 0.02%)</title><rect x="93.0382%" y="453" width="0.0163%" height="15" fill="rgb(219,84,11)" fg:x="102903" fg:w="18"/><text x="93.2882%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (18 samples, 0.02%)</title><rect x="93.0382%" y="437" width="0.0163%" height="15" fill="rgb(224,10,23)" fg:x="102903" fg:w="18"/><text x="93.2882%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::map_buffer (20 samples, 0.02%)</title><rect x="93.0544%" y="485" width="0.0181%" height="15" fill="rgb(248,22,39)" fg:x="102921" fg:w="20"/><text x="93.3044%" y="495.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (12,572 samples, 11.37%)</title><rect x="81.7066%" y="645" width="11.3668%" height="15" fill="rgb(212,154,20)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="655.50">&lt;Func as bevy_ecs..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (12,572 samples, 11.37%)</title><rect x="81.7066%" y="629" width="11.3668%" height="15" fill="rgb(236,199,50)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="639.50">&lt;Func as bevy_ecs..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12,572 samples, 11.37%)</title><rect x="81.7066%" y="613" width="11.3668%" height="15" fill="rgb(211,9,17)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="623.50">core::ops::functi..</text></g><g><title>core::ops::function::FnMut::call_mut (12,572 samples, 11.37%)</title><rect x="81.7066%" y="597" width="11.3668%" height="15" fill="rgb(243,216,36)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="607.50">core::ops::functi..</text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (12,572 samples, 11.37%)</title><rect x="81.7066%" y="581" width="11.3668%" height="15" fill="rgb(250,2,10)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="591.50">stellar_coordinat..</text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (12,572 samples, 11.37%)</title><rect x="81.7066%" y="565" width="11.3668%" height="15" fill="rgb(226,50,48)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="575.50">bevy_render::rend..</text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (12,572 samples, 11.37%)</title><rect x="81.7066%" y="549" width="11.3668%" height="15" fill="rgb(243,81,16)" fg:x="90370" fg:w="12572"/><text x="81.9566%" y="559.50">&lt;wgpu::Device as ..</text></g><g><title>wgpu::Device::create_buffer (12,536 samples, 11.33%)</title><rect x="81.7392%" y="533" width="11.3342%" height="15" fill="rgb(250,14,2)" fg:x="90406" fg:w="12536"/><text x="81.9892%" y="543.50">wgpu::Device::cre..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (12,536 samples, 11.33%)</title><rect x="81.7392%" y="517" width="11.3342%" height="15" fill="rgb(233,135,29)" fg:x="90406" fg:w="12536"/><text x="81.9892%" y="527.50">&lt;wgpu::backend::d..</text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (12,536 samples, 11.33%)</title><rect x="81.7392%" y="501" width="11.3342%" height="15" fill="rgb(224,64,43)" fg:x="90406" fg:w="12536"/><text x="81.9892%" y="511.50">wgpu_core::device..</text></g><g><title>bevy_render::render_resource::pipeline_specializer::SpecializedMeshPipelines&lt;S&gt;::specialize (12 samples, 0.01%)</title><rect x="93.0798%" y="565" width="0.0108%" height="15" fill="rgb(238,84,13)" fg:x="102949" fg:w="12"/><text x="93.3298%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (24 samples, 0.02%)</title><rect x="93.0752%" y="645" width="0.0217%" height="15" fill="rgb(253,48,26)" fg:x="102944" fg:w="24"/><text x="93.3252%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run::call_inner (24 samples, 0.02%)</title><rect x="93.0752%" y="629" width="0.0217%" height="15" fill="rgb(205,223,31)" fg:x="102944" fg:w="24"/><text x="93.3252%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.02%)</title><rect x="93.0752%" y="613" width="0.0217%" height="15" fill="rgb(221,41,32)" fg:x="102944" fg:w="24"/><text x="93.3252%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (24 samples, 0.02%)</title><rect x="93.0752%" y="597" width="0.0217%" height="15" fill="rgb(213,158,31)" fg:x="102944" fg:w="24"/><text x="93.3252%" y="607.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::queue_custom (24 samples, 0.02%)</title><rect x="93.0752%" y="581" width="0.0217%" height="15" fill="rgb(245,126,43)" fg:x="102944" fg:w="24"/><text x="93.3252%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (12,607 samples, 11.40%)</title><rect x="81.7066%" y="709" width="11.3984%" height="15" fill="rgb(227,7,22)" fg:x="90370" fg:w="12607"/><text x="81.9566%" y="719.50">async_executor::E..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,607 samples, 11.40%)</title><rect x="81.7066%" y="693" width="11.3984%" height="15" fill="rgb(252,90,44)" fg:x="90370" fg:w="12607"/><text x="81.9566%" y="703.50">&lt;core::future::fr..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (12,607 samples, 11.40%)</title><rect x="81.7066%" y="677" width="11.3984%" height="15" fill="rgb(253,91,0)" fg:x="90370" fg:w="12607"/><text x="81.9566%" y="687.50">bevy_ecs::schedul..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (12,607 samples, 11.40%)</title><rect x="81.7066%" y="661" width="11.3984%" height="15" fill="rgb(252,175,49)" fg:x="90370" fg:w="12607"/><text x="81.9566%" y="671.50">&lt;bevy_ecs::system..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (12,637 samples, 11.43%)</title><rect x="81.7066%" y="837" width="11.4255%" height="15" fill="rgb(246,150,1)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="847.50">&lt;bevy_ecs::schedu..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (12,637 samples, 11.43%)</title><rect x="81.7066%" y="821" width="11.4255%" height="15" fill="rgb(241,192,25)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="831.50">bevy_tasks::task_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,637 samples, 11.43%)</title><rect x="81.7066%" y="805" width="11.4255%" height="15" fill="rgb(239,187,11)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="815.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,637 samples, 11.43%)</title><rect x="81.7066%" y="789" width="11.4255%" height="15" fill="rgb(218,202,51)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="799.50">std::thread::loca..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (12,637 samples, 11.43%)</title><rect x="81.7066%" y="773" width="11.4255%" height="15" fill="rgb(225,176,8)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="783.50">bevy_tasks::task_..</text></g><g><title>async_executor::Executor::try_tick (12,637 samples, 11.43%)</title><rect x="81.7066%" y="757" width="11.4255%" height="15" fill="rgb(219,122,41)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="767.50">async_executor::E..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12,637 samples, 11.43%)</title><rect x="81.7066%" y="741" width="11.4255%" height="15" fill="rgb(248,140,20)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="751.50">async_task::raw::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,637 samples, 11.43%)</title><rect x="81.7066%" y="725" width="11.4255%" height="15" fill="rgb(245,41,37)" fg:x="90370" fg:w="12637"/><text x="81.9566%" y="735.50">&lt;core::future::fr..</text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (30 samples, 0.03%)</title><rect x="93.1051%" y="709" width="0.0271%" height="15" fill="rgb(235,82,39)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="93.1051%" y="693" width="0.0271%" height="15" fill="rgb(230,108,42)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (30 samples, 0.03%)</title><rect x="93.1051%" y="677" width="0.0271%" height="15" fill="rgb(215,150,50)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (30 samples, 0.03%)</title><rect x="93.1051%" y="661" width="0.0271%" height="15" fill="rgb(233,212,5)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (30 samples, 0.03%)</title><rect x="93.1051%" y="645" width="0.0271%" height="15" fill="rgb(245,80,22)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (30 samples, 0.03%)</title><rect x="93.1051%" y="629" width="0.0271%" height="15" fill="rgb(238,129,16)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.03%)</title><rect x="93.1051%" y="613" width="0.0271%" height="15" fill="rgb(240,19,0)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.03%)</title><rect x="93.1051%" y="597" width="0.0271%" height="15" fill="rgb(232,42,35)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="607.50"></text></g><g><title>bevy_render::view::window::prepare_windows (30 samples, 0.03%)</title><rect x="93.1051%" y="581" width="0.0271%" height="15" fill="rgb(223,130,24)" fg:x="102977" fg:w="30"/><text x="93.3551%" y="591.50"></text></g><g><title>wgpu::Surface::get_current_texture (25 samples, 0.02%)</title><rect x="93.1096%" y="565" width="0.0226%" height="15" fill="rgb(237,16,22)" fg:x="102982" fg:w="25"/><text x="93.3596%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (25 samples, 0.02%)</title><rect x="93.1096%" y="549" width="0.0226%" height="15" fill="rgb(248,192,20)" fg:x="102982" fg:w="25"/><text x="93.3596%" y="559.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (25 samples, 0.02%)</title><rect x="93.1096%" y="533" width="0.0226%" height="15" fill="rgb(233,167,2)" fg:x="102982" fg:w="25"/><text x="93.3596%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (17 samples, 0.02%)</title><rect x="93.1168%" y="517" width="0.0154%" height="15" fill="rgb(252,71,44)" fg:x="102990" fg:w="17"/><text x="93.3668%" y="527.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (15 samples, 0.01%)</title><rect x="93.1322%" y="789" width="0.0136%" height="15" fill="rgb(238,37,47)" fg:x="103007" fg:w="15"/><text x="93.3822%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (15 samples, 0.01%)</title><rect x="93.1322%" y="773" width="0.0136%" height="15" fill="rgb(214,202,54)" fg:x="103007" fg:w="15"/><text x="93.3822%" y="783.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (25 samples, 0.02%)</title><rect x="93.1458%" y="741" width="0.0226%" height="15" fill="rgb(254,165,40)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="751.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (25 samples, 0.02%)</title><rect x="93.1458%" y="725" width="0.0226%" height="15" fill="rgb(246,173,38)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="735.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (25 samples, 0.02%)</title><rect x="93.1458%" y="709" width="0.0226%" height="15" fill="rgb(215,3,27)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="719.50"></text></g><g><title>__glx_Main (25 samples, 0.02%)</title><rect x="93.1458%" y="693" width="0.0226%" height="15" fill="rgb(239,169,51)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.02%)</title><rect x="93.1458%" y="677" width="0.0226%" height="15" fill="rgb(212,5,25)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="687.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.02%)</title><rect x="93.1458%" y="661" width="0.0226%" height="15" fill="rgb(243,45,17)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="671.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (25 samples, 0.02%)</title><rect x="93.1458%" y="645" width="0.0226%" height="15" fill="rgb(242,97,9)" fg:x="103022" fg:w="25"/><text x="93.3958%" y="655.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (24 samples, 0.02%)</title><rect x="93.1467%" y="629" width="0.0217%" height="15" fill="rgb(228,71,31)" fg:x="103023" fg:w="24"/><text x="93.3967%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (12,678 samples, 11.46%)</title><rect x="81.7066%" y="853" width="11.4626%" height="15" fill="rgb(252,184,16)" fg:x="90370" fg:w="12678"/><text x="81.9566%" y="863.50">&lt;bevy_ecs::schedu..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (41 samples, 0.04%)</title><rect x="93.1322%" y="837" width="0.0371%" height="15" fill="rgb(236,169,46)" fg:x="103007" fg:w="41"/><text x="93.3822%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.04%)</title><rect x="93.1322%" y="821" width="0.0371%" height="15" fill="rgb(207,17,47)" fg:x="103007" fg:w="41"/><text x="93.3822%" y="831.50"></text></g><g><title>bevy_render::renderer::render_system (41 samples, 0.04%)</title><rect x="93.1322%" y="805" width="0.0371%" height="15" fill="rgb(206,201,28)" fg:x="103007" fg:w="41"/><text x="93.3822%" y="815.50"></text></g><g><title>wgpu::SurfaceTexture::present (26 samples, 0.02%)</title><rect x="93.1458%" y="789" width="0.0235%" height="15" fill="rgb(224,184,23)" fg:x="103022" fg:w="26"/><text x="93.3958%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (26 samples, 0.02%)</title><rect x="93.1458%" y="773" width="0.0235%" height="15" fill="rgb(208,139,48)" fg:x="103022" fg:w="26"/><text x="93.3958%" y="783.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (26 samples, 0.02%)</title><rect x="93.1458%" y="757" width="0.0235%" height="15" fill="rgb(208,130,10)" fg:x="103022" fg:w="26"/><text x="93.3958%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (19 samples, 0.02%)</title><rect x="93.1901%" y="709" width="0.0172%" height="15" fill="rgb(211,213,45)" fg:x="103071" fg:w="19"/><text x="93.4401%" y="719.50"></text></g><g><title>async_executor::Executor::spawn (16 samples, 0.01%)</title><rect x="93.1928%" y="693" width="0.0145%" height="15" fill="rgb(235,100,30)" fg:x="103074" fg:w="16"/><text x="93.4428%" y="703.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (26 samples, 0.02%)</title><rect x="93.1846%" y="741" width="0.0235%" height="15" fill="rgb(206,144,31)" fg:x="103065" fg:w="26"/><text x="93.4346%" y="751.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (26 samples, 0.02%)</title><rect x="93.1846%" y="725" width="0.0235%" height="15" fill="rgb(224,200,26)" fg:x="103065" fg:w="26"/><text x="93.4346%" y="735.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="93.2217%" y="613" width="0.0118%" height="15" fill="rgb(247,104,53)" fg:x="103106" fg:w="13"/><text x="93.4717%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (13 samples, 0.01%)</title><rect x="93.2217%" y="597" width="0.0118%" height="15" fill="rgb(220,14,17)" fg:x="103106" fg:w="13"/><text x="93.4717%" y="607.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.01%)</title><rect x="93.2226%" y="581" width="0.0108%" height="15" fill="rgb(230,140,40)" fg:x="103107" fg:w="12"/><text x="93.4726%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="93.2208%" y="645" width="0.0181%" height="15" fill="rgb(229,2,41)" fg:x="103105" fg:w="20"/><text x="93.4708%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (20 samples, 0.02%)</title><rect x="93.2208%" y="629" width="0.0181%" height="15" fill="rgb(232,89,16)" fg:x="103105" fg:w="20"/><text x="93.4708%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="93.2127%" y="661" width="0.0335%" height="15" fill="rgb(247,59,52)" fg:x="103096" fg:w="37"/><text x="93.4627%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (22 samples, 0.02%)</title><rect x="93.2624%" y="645" width="0.0199%" height="15" fill="rgb(226,110,21)" fg:x="103151" fg:w="22"/><text x="93.5124%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (83 samples, 0.08%)</title><rect x="93.2127%" y="677" width="0.0750%" height="15" fill="rgb(224,176,43)" fg:x="103096" fg:w="83"/><text x="93.4627%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (46 samples, 0.04%)</title><rect x="93.2461%" y="661" width="0.0416%" height="15" fill="rgb(221,73,6)" fg:x="103133" fg:w="46"/><text x="93.4961%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (84 samples, 0.08%)</title><rect x="93.2127%" y="693" width="0.0759%" height="15" fill="rgb(232,78,19)" fg:x="103096" fg:w="84"/><text x="93.4627%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 0.08%)</title><rect x="93.2118%" y="709" width="0.0850%" height="15" fill="rgb(233,112,48)" fg:x="103095" fg:w="94"/><text x="93.4618%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (105 samples, 0.09%)</title><rect x="93.2099%" y="725" width="0.0949%" height="15" fill="rgb(243,131,47)" fg:x="103093" fg:w="105"/><text x="93.4599%" y="735.50"></text></g><g><title>async_executor::Executor::try_tick (130 samples, 0.12%)</title><rect x="93.2081%" y="741" width="0.1175%" height="15" fill="rgb(226,51,1)" fg:x="103091" fg:w="130"/><text x="93.4581%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="93.3049%" y="725" width="0.0208%" height="15" fill="rgb(247,58,7)" fg:x="103198" fg:w="23"/><text x="93.5549%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (22 samples, 0.02%)</title><rect x="93.3058%" y="709" width="0.0199%" height="15" fill="rgb(209,7,32)" fg:x="103199" fg:w="22"/><text x="93.5558%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (200 samples, 0.18%)</title><rect x="93.1693%" y="837" width="0.1808%" height="15" fill="rgb(209,39,41)" fg:x="103048" fg:w="200"/><text x="93.4193%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (200 samples, 0.18%)</title><rect x="93.1693%" y="821" width="0.1808%" height="15" fill="rgb(226,182,46)" fg:x="103048" fg:w="200"/><text x="93.4193%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (184 samples, 0.17%)</title><rect x="93.1837%" y="805" width="0.1664%" height="15" fill="rgb(230,219,10)" fg:x="103064" fg:w="184"/><text x="93.4337%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (184 samples, 0.17%)</title><rect x="93.1837%" y="789" width="0.1664%" height="15" fill="rgb(227,175,30)" fg:x="103064" fg:w="184"/><text x="93.4337%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (184 samples, 0.17%)</title><rect x="93.1837%" y="773" width="0.1664%" height="15" fill="rgb(217,2,50)" fg:x="103064" fg:w="184"/><text x="93.4337%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (183 samples, 0.17%)</title><rect x="93.1846%" y="757" width="0.1655%" height="15" fill="rgb(229,160,0)" fg:x="103065" fg:w="183"/><text x="93.4346%" y="767.50"></text></g><g><title>futures_lite::future::block_on (27 samples, 0.02%)</title><rect x="93.3257%" y="741" width="0.0244%" height="15" fill="rgb(207,78,37)" fg:x="103221" fg:w="27"/><text x="93.5757%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="93.3266%" y="725" width="0.0235%" height="15" fill="rgb(225,57,0)" fg:x="103222" fg:w="26"/><text x="93.5766%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="93.3266%" y="709" width="0.0235%" height="15" fill="rgb(232,154,2)" fg:x="103222" fg:w="26"/><text x="93.5766%" y="719.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (21 samples, 0.02%)</title><rect x="93.3311%" y="693" width="0.0190%" height="15" fill="rgb(241,212,25)" fg:x="103227" fg:w="21"/><text x="93.5811%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="93.3311%" y="677" width="0.0190%" height="15" fill="rgb(226,69,20)" fg:x="103227" fg:w="21"/><text x="93.5811%" y="687.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="93.3311%" y="661" width="0.0190%" height="15" fill="rgb(247,184,54)" fg:x="103227" fg:w="21"/><text x="93.5811%" y="671.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="93.3311%" y="645" width="0.0190%" height="15" fill="rgb(210,145,0)" fg:x="103227" fg:w="21"/><text x="93.5811%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (21 samples, 0.02%)</title><rect x="93.3311%" y="629" width="0.0190%" height="15" fill="rgb(253,82,12)" fg:x="103227" fg:w="21"/><text x="93.5811%" y="639.50"></text></g><g><title>async_task::header::Header::register (20 samples, 0.02%)</title><rect x="93.3320%" y="613" width="0.0181%" height="15" fill="rgb(245,42,11)" fg:x="103228" fg:w="20"/><text x="93.5820%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (53 samples, 0.05%)</title><rect x="93.3754%" y="741" width="0.0479%" height="15" fill="rgb(219,147,32)" fg:x="103276" fg:w="53"/><text x="93.6254%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (29 samples, 0.03%)</title><rect x="93.3971%" y="725" width="0.0262%" height="15" fill="rgb(246,12,7)" fg:x="103300" fg:w="29"/><text x="93.6471%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="93.4260%" y="693" width="0.0154%" height="15" fill="rgb(243,50,9)" fg:x="103332" fg:w="17"/><text x="93.6760%" y="703.50"></text></g><g><title>&lt;(C0,C1) as bevy_ecs::bundle::Bundle&gt;::get_components (27 samples, 0.02%)</title><rect x="93.4251%" y="709" width="0.0244%" height="15" fill="rgb(219,149,6)" fg:x="103331" fg:w="27"/><text x="93.6751%" y="719.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (30 samples, 0.03%)</title><rect x="93.4242%" y="725" width="0.0271%" height="15" fill="rgb(241,51,42)" fg:x="103330" fg:w="30"/><text x="93.6742%" y="735.50"></text></g><g><title>bevy_ecs::bundle::BundleSpawner::spawn_non_existent (34 samples, 0.03%)</title><rect x="93.4233%" y="741" width="0.0307%" height="15" fill="rgb(226,128,27)" fg:x="103329" fg:w="34"/><text x="93.6733%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (12,997 samples, 11.75%)</title><rect x="81.7066%" y="885" width="11.7510%" height="15" fill="rgb(244,144,4)" fg:x="90370" fg:w="12997"/><text x="81.9566%" y="895.50">&lt;alloc::boxed::Bo..</text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (12,997 samples, 11.75%)</title><rect x="81.7066%" y="869" width="11.7510%" height="15" fill="rgb(221,4,13)" fg:x="90370" fg:w="12997"/><text x="81.9566%" y="879.50">&lt;bevy_render::Ren..</text></g><g><title>bevy_render::extract (319 samples, 0.29%)</title><rect x="93.1693%" y="853" width="0.2884%" height="15" fill="rgb(208,170,28)" fg:x="103048" fg:w="319"/><text x="93.4193%" y="863.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::apply_buffers (119 samples, 0.11%)</title><rect x="93.3501%" y="837" width="0.1076%" height="15" fill="rgb(226,131,13)" fg:x="103248" fg:w="119"/><text x="93.6001%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::commands::command_queue::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (119 samples, 0.11%)</title><rect x="93.3501%" y="821" width="0.1076%" height="15" fill="rgb(215,72,41)" fg:x="103248" fg:w="119"/><text x="93.6001%" y="831.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (119 samples, 0.11%)</title><rect x="93.3501%" y="805" width="0.1076%" height="15" fill="rgb(243,108,20)" fg:x="103248" fg:w="119"/><text x="93.6001%" y="815.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::write_command (119 samples, 0.11%)</title><rect x="93.3501%" y="789" width="0.1076%" height="15" fill="rgb(230,189,17)" fg:x="103248" fg:w="119"/><text x="93.6001%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertOrSpawnBatch&lt;I,B&gt; as bevy_ecs::system::commands::Command&gt;::write (116 samples, 0.10%)</title><rect x="93.3528%" y="773" width="0.1049%" height="15" fill="rgb(220,50,17)" fg:x="103251" fg:w="116"/><text x="93.6028%" y="783.50"></text></g><g><title>bevy_ecs::world::World::insert_or_spawn_batch (116 samples, 0.10%)</title><rect x="93.3528%" y="757" width="0.1049%" height="15" fill="rgb(248,152,48)" fg:x="103251" fg:w="116"/><text x="93.6028%" y="767.50"></text></g><g><title>bevy_render::color::Color::hex (32 samples, 0.03%)</title><rect x="93.5192%" y="421" width="0.0289%" height="15" fill="rgb(244,91,11)" fg:x="103435" fg:w="32"/><text x="93.7692%" y="431.50"></text></g><g><title>bevy_render::color::decode_rgb (22 samples, 0.02%)</title><rect x="93.5282%" y="405" width="0.0199%" height="15" fill="rgb(220,157,5)" fg:x="103445" fg:w="22"/><text x="93.7782%" y="415.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (13,119 samples, 11.86%)</title><rect x="81.7066%" y="933" width="11.8613%" height="15" fill="rgb(253,137,8)" fg:x="90370" fg:w="13119"/><text x="81.9566%" y="943.50">winit::platform_im..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (13,119 samples, 11.86%)</title><rect x="81.7066%" y="917" width="11.8613%" height="15" fill="rgb(217,137,51)" fg:x="90370" fg:w="13119"/><text x="81.9566%" y="927.50">bevy_winit::winit_..</text></g><g><title>bevy_app::app::App::update (13,119 samples, 11.86%)</title><rect x="81.7066%" y="901" width="11.8613%" height="15" fill="rgb(218,209,53)" fg:x="90370" fg:w="13119"/><text x="81.9566%" y="911.50">bevy_app::app::App..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (122 samples, 0.11%)</title><rect x="93.4577%" y="885" width="0.1103%" height="15" fill="rgb(249,137,25)" fg:x="103367" fg:w="122"/><text x="93.7077%" y="895.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (121 samples, 0.11%)</title><rect x="93.4586%" y="869" width="0.1094%" height="15" fill="rgb(239,155,26)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (121 samples, 0.11%)</title><rect x="93.4586%" y="853" width="0.1094%" height="15" fill="rgb(227,85,46)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (121 samples, 0.11%)</title><rect x="93.4586%" y="837" width="0.1094%" height="15" fill="rgb(251,107,43)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (121 samples, 0.11%)</title><rect x="93.4586%" y="821" width="0.1094%" height="15" fill="rgb(234,170,33)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (121 samples, 0.11%)</title><rect x="93.4586%" y="805" width="0.1094%" height="15" fill="rgb(206,29,35)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (121 samples, 0.11%)</title><rect x="93.4586%" y="789" width="0.1094%" height="15" fill="rgb(227,138,25)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (121 samples, 0.11%)</title><rect x="93.4586%" y="773" width="0.1094%" height="15" fill="rgb(249,131,35)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (121 samples, 0.11%)</title><rect x="93.4586%" y="757" width="0.1094%" height="15" fill="rgb(239,6,40)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (121 samples, 0.11%)</title><rect x="93.4586%" y="741" width="0.1094%" height="15" fill="rgb(246,136,47)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (121 samples, 0.11%)</title><rect x="93.4586%" y="725" width="0.1094%" height="15" fill="rgb(253,58,26)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (121 samples, 0.11%)</title><rect x="93.4586%" y="709" width="0.1094%" height="15" fill="rgb(237,141,10)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (121 samples, 0.11%)</title><rect x="93.4586%" y="693" width="0.1094%" height="15" fill="rgb(234,156,12)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (121 samples, 0.11%)</title><rect x="93.4586%" y="677" width="0.1094%" height="15" fill="rgb(243,224,36)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (121 samples, 0.11%)</title><rect x="93.4586%" y="661" width="0.1094%" height="15" fill="rgb(205,229,51)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (121 samples, 0.11%)</title><rect x="93.4586%" y="645" width="0.1094%" height="15" fill="rgb(223,189,4)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (121 samples, 0.11%)</title><rect x="93.4586%" y="629" width="0.1094%" height="15" fill="rgb(249,167,54)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (121 samples, 0.11%)</title><rect x="93.4586%" y="613" width="0.1094%" height="15" fill="rgb(218,34,28)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (121 samples, 0.11%)</title><rect x="93.4586%" y="597" width="0.1094%" height="15" fill="rgb(232,109,42)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="607.50"></text></g><g><title>stellar_coordinates_test::setup (121 samples, 0.11%)</title><rect x="93.4586%" y="581" width="0.1094%" height="15" fill="rgb(248,214,46)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="591.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (121 samples, 0.11%)</title><rect x="93.4586%" y="565" width="0.1094%" height="15" fill="rgb(244,216,40)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="575.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (121 samples, 0.11%)</title><rect x="93.4586%" y="549" width="0.1094%" height="15" fill="rgb(231,226,31)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="559.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (121 samples, 0.11%)</title><rect x="93.4586%" y="533" width="0.1094%" height="15" fill="rgb(238,38,43)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="543.50"></text></g><g><title>std::sync::once::Once::call_once (121 samples, 0.11%)</title><rect x="93.4586%" y="517" width="0.1094%" height="15" fill="rgb(208,88,43)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="527.50"></text></g><g><title>std::sync::once::Once::call_inner (121 samples, 0.11%)</title><rect x="93.4586%" y="501" width="0.1094%" height="15" fill="rgb(205,136,37)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="511.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (121 samples, 0.11%)</title><rect x="93.4586%" y="485" width="0.1094%" height="15" fill="rgb(237,34,14)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="495.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (121 samples, 0.11%)</title><rect x="93.4586%" y="469" width="0.1094%" height="15" fill="rgb(236,193,44)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (121 samples, 0.11%)</title><rect x="93.4586%" y="453" width="0.1094%" height="15" fill="rgb(231,48,10)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="463.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (121 samples, 0.11%)</title><rect x="93.4586%" y="437" width="0.1094%" height="15" fill="rgb(213,141,34)" fg:x="103368" fg:w="121"/><text x="93.7086%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (19 samples, 0.02%)</title><rect x="93.5508%" y="421" width="0.0172%" height="15" fill="rgb(249,130,34)" fg:x="103470" fg:w="19"/><text x="93.8008%" y="431.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (13,122 samples, 11.86%)</title><rect x="81.7066%" y="981" width="11.8641%" height="15" fill="rgb(219,42,41)" fg:x="90370" fg:w="13122"/><text x="81.9566%" y="991.50">winit::platform_im..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (13,122 samples, 11.86%)</title><rect x="81.7066%" y="965" width="11.8641%" height="15" fill="rgb(224,100,54)" fg:x="90370" fg:w="13122"/><text x="81.9566%" y="975.50">winit::platform_im..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (13,122 samples, 11.86%)</title><rect x="81.7066%" y="949" width="11.8641%" height="15" fill="rgb(229,200,27)" fg:x="90370" fg:w="13122"/><text x="81.9566%" y="959.50">winit::platform_im..</text></g><g><title>glXCreateGLXPbufferSGIX (20 samples, 0.02%)</title><rect x="93.5707%" y="421" width="0.0181%" height="15" fill="rgb(217,118,10)" fg:x="103492" fg:w="20"/><text x="93.8207%" y="431.50"></text></g><g><title>_nv011glcore (20 samples, 0.02%)</title><rect x="93.5707%" y="405" width="0.0181%" height="15" fill="rgb(206,22,3)" fg:x="103492" fg:w="20"/><text x="93.8207%" y="415.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="93.5716%" y="389" width="0.0172%" height="15" fill="rgb(232,163,46)" fg:x="103493" fg:w="19"/><text x="93.8216%" y="399.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (127 samples, 0.11%)</title><rect x="93.5707%" y="469" width="0.1148%" height="15" fill="rgb(206,95,13)" fg:x="103492" fg:w="127"/><text x="93.8207%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (127 samples, 0.11%)</title><rect x="93.5707%" y="453" width="0.1148%" height="15" fill="rgb(253,154,18)" fg:x="103492" fg:w="127"/><text x="93.8207%" y="463.50"></text></g><g><title>__glx_Main (127 samples, 0.11%)</title><rect x="93.5707%" y="437" width="0.1148%" height="15" fill="rgb(219,32,23)" fg:x="103492" fg:w="127"/><text x="93.8207%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (107 samples, 0.10%)</title><rect x="93.5888%" y="421" width="0.0967%" height="15" fill="rgb(230,191,45)" fg:x="103512" fg:w="107"/><text x="93.8388%" y="431.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (107 samples, 0.10%)</title><rect x="93.5888%" y="405" width="0.0967%" height="15" fill="rgb(229,64,36)" fg:x="103512" fg:w="107"/><text x="93.8388%" y="415.50"></text></g><g><title>_nv011glcore (114 samples, 0.10%)</title><rect x="93.6855%" y="421" width="0.1031%" height="15" fill="rgb(205,129,25)" fg:x="103619" fg:w="114"/><text x="93.9355%" y="431.50"></text></g><g><title>__GI___libc_malloc (114 samples, 0.10%)</title><rect x="93.6855%" y="405" width="0.1031%" height="15" fill="rgb(254,112,7)" fg:x="103619" fg:w="114"/><text x="93.9355%" y="415.50"></text></g><g><title>_int_malloc (114 samples, 0.10%)</title><rect x="93.6855%" y="389" width="0.1031%" height="15" fill="rgb(226,53,48)" fg:x="103619" fg:w="114"/><text x="93.9355%" y="399.50"></text></g><g><title>unlink_chunk.constprop.0 (40 samples, 0.04%)</title><rect x="93.7524%" y="373" width="0.0362%" height="15" fill="rgb(214,153,38)" fg:x="103693" fg:w="40"/><text x="94.0024%" y="383.50"></text></g><g><title>ash::device::Device::create_buffer (159 samples, 0.14%)</title><rect x="93.6855%" y="469" width="0.1438%" height="15" fill="rgb(243,101,7)" fg:x="103619" fg:w="159"/><text x="93.9355%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (159 samples, 0.14%)</title><rect x="93.6855%" y="453" width="0.1438%" height="15" fill="rgb(240,140,22)" fg:x="103619" fg:w="159"/><text x="93.9355%" y="463.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (159 samples, 0.14%)</title><rect x="93.6855%" y="437" width="0.1438%" height="15" fill="rgb(235,114,2)" fg:x="103619" fg:w="159"/><text x="93.9355%" y="447.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (45 samples, 0.04%)</title><rect x="93.7886%" y="421" width="0.0407%" height="15" fill="rgb(242,59,12)" fg:x="103733" fg:w="45"/><text x="94.0386%" y="431.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (35 samples, 0.03%)</title><rect x="93.7976%" y="405" width="0.0316%" height="15" fill="rgb(252,134,9)" fg:x="103743" fg:w="35"/><text x="94.0476%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (32 samples, 0.03%)</title><rect x="93.8302%" y="453" width="0.0289%" height="15" fill="rgb(236,4,44)" fg:x="103779" fg:w="32"/><text x="94.0802%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.03%)</title><rect x="93.9070%" y="389" width="0.0262%" height="15" fill="rgb(254,172,41)" fg:x="103864" fg:w="29"/><text x="94.1570%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="93.9070%" y="421" width="0.0271%" height="15" fill="rgb(244,63,20)" fg:x="103864" fg:w="30"/><text x="94.1570%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="93.9070%" y="405" width="0.0271%" height="15" fill="rgb(250,73,31)" fg:x="103864" fg:w="30"/><text x="94.1570%" y="415.50"></text></g><g><title>gpu_alloc::buddy::Size::acquire (53 samples, 0.05%)</title><rect x="93.9387%" y="421" width="0.0479%" height="15" fill="rgb(241,38,36)" fg:x="103899" fg:w="53"/><text x="94.1887%" y="431.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (108 samples, 0.10%)</title><rect x="93.9043%" y="437" width="0.0976%" height="15" fill="rgb(245,211,2)" fg:x="103861" fg:w="108"/><text x="94.1543%" y="447.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block (35 samples, 0.03%)</title><rect x="94.0074%" y="421" width="0.0316%" height="15" fill="rgb(206,120,28)" fg:x="103975" fg:w="35"/><text x="94.2574%" y="431.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block_at (18 samples, 0.02%)</title><rect x="94.0228%" y="405" width="0.0163%" height="15" fill="rgb(211,59,34)" fg:x="103992" fg:w="18"/><text x="94.2728%" y="415.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (43 samples, 0.04%)</title><rect x="94.0020%" y="437" width="0.0389%" height="15" fill="rgb(233,168,5)" fg:x="103969" fg:w="43"/><text x="94.2520%" y="447.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (16 samples, 0.01%)</title><rect x="94.0508%" y="437" width="0.0145%" height="15" fill="rgb(234,33,13)" fg:x="104023" fg:w="16"/><text x="94.3008%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (551 samples, 0.50%)</title><rect x="93.5707%" y="661" width="0.4982%" height="15" fill="rgb(231,150,26)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (551 samples, 0.50%)</title><rect x="93.5707%" y="645" width="0.4982%" height="15" fill="rgb(217,191,4)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (551 samples, 0.50%)</title><rect x="93.5707%" y="629" width="0.4982%" height="15" fill="rgb(246,198,38)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (551 samples, 0.50%)</title><rect x="93.5707%" y="613" width="0.4982%" height="15" fill="rgb(245,64,37)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="623.50"></text></g><g><title>stellar_coordinates_test::GPUInstanceing::prepare_instance_buffers (551 samples, 0.50%)</title><rect x="93.5707%" y="597" width="0.4982%" height="15" fill="rgb(250,30,36)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="607.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (551 samples, 0.50%)</title><rect x="93.5707%" y="581" width="0.4982%" height="15" fill="rgb(217,86,53)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="591.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (551 samples, 0.50%)</title><rect x="93.5707%" y="565" width="0.4982%" height="15" fill="rgb(228,157,16)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="575.50"></text></g><g><title>wgpu::Device::create_buffer (551 samples, 0.50%)</title><rect x="93.5707%" y="549" width="0.4982%" height="15" fill="rgb(217,59,31)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (551 samples, 0.50%)</title><rect x="93.5707%" y="533" width="0.4982%" height="15" fill="rgb(237,138,41)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (551 samples, 0.50%)</title><rect x="93.5707%" y="517" width="0.4982%" height="15" fill="rgb(227,91,49)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="527.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (551 samples, 0.50%)</title><rect x="93.5707%" y="501" width="0.4982%" height="15" fill="rgb(247,21,44)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (551 samples, 0.50%)</title><rect x="93.5707%" y="485" width="0.4982%" height="15" fill="rgb(219,210,51)" fg:x="103492" fg:w="551"/><text x="93.8207%" y="495.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (265 samples, 0.24%)</title><rect x="93.8293%" y="469" width="0.2396%" height="15" fill="rgb(209,140,6)" fg:x="103778" fg:w="265"/><text x="94.0793%" y="479.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (232 samples, 0.21%)</title><rect x="93.8591%" y="453" width="0.2098%" height="15" fill="rgb(221,188,24)" fg:x="103811" fg:w="232"/><text x="94.1091%" y="463.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (565 samples, 0.51%)</title><rect x="93.5707%" y="725" width="0.5108%" height="15" fill="rgb(232,154,20)" fg:x="103492" fg:w="565"/><text x="93.8207%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (565 samples, 0.51%)</title><rect x="93.5707%" y="709" width="0.5108%" height="15" fill="rgb(244,137,50)" fg:x="103492" fg:w="565"/><text x="93.8207%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (565 samples, 0.51%)</title><rect x="93.5707%" y="693" width="0.5108%" height="15" fill="rgb(225,185,43)" fg:x="103492" fg:w="565"/><text x="93.8207%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (565 samples, 0.51%)</title><rect x="93.5707%" y="677" width="0.5108%" height="15" fill="rgb(213,205,38)" fg:x="103492" fg:w="565"/><text x="93.8207%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (570 samples, 0.52%)</title><rect x="93.5707%" y="853" width="0.5154%" height="15" fill="rgb(236,73,12)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (570 samples, 0.52%)</title><rect x="93.5707%" y="837" width="0.5154%" height="15" fill="rgb(235,219,13)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (570 samples, 0.52%)</title><rect x="93.5707%" y="821" width="0.5154%" height="15" fill="rgb(218,59,36)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (570 samples, 0.52%)</title><rect x="93.5707%" y="805" width="0.5154%" height="15" fill="rgb(205,110,39)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (570 samples, 0.52%)</title><rect x="93.5707%" y="789" width="0.5154%" height="15" fill="rgb(218,206,42)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (570 samples, 0.52%)</title><rect x="93.5707%" y="773" width="0.5154%" height="15" fill="rgb(248,125,24)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (570 samples, 0.52%)</title><rect x="93.5707%" y="757" width="0.5154%" height="15" fill="rgb(242,28,27)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (570 samples, 0.52%)</title><rect x="93.5707%" y="741" width="0.5154%" height="15" fill="rgb(216,228,15)" fg:x="103492" fg:w="570"/><text x="93.8207%" y="751.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (12 samples, 0.01%)</title><rect x="94.0861%" y="805" width="0.0108%" height="15" fill="rgb(235,116,46)" fg:x="104062" fg:w="12"/><text x="94.3361%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (586 samples, 0.53%)</title><rect x="93.5707%" y="869" width="0.5298%" height="15" fill="rgb(224,18,32)" fg:x="103492" fg:w="586"/><text x="93.8207%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (16 samples, 0.01%)</title><rect x="94.0861%" y="853" width="0.0145%" height="15" fill="rgb(252,5,12)" fg:x="104062" fg:w="16"/><text x="94.3361%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (16 samples, 0.01%)</title><rect x="94.0861%" y="837" width="0.0145%" height="15" fill="rgb(251,36,5)" fg:x="104062" fg:w="16"/><text x="94.3361%" y="847.50"></text></g><g><title>bevy_render::renderer::render_system (16 samples, 0.01%)</title><rect x="94.0861%" y="821" width="0.0145%" height="15" fill="rgb(217,53,14)" fg:x="104062" fg:w="16"/><text x="94.3361%" y="831.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="94.1096%" y="501" width="0.0316%" height="15" fill="rgb(215,86,45)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="511.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="94.1096%" y="485" width="0.0316%" height="15" fill="rgb(242,169,11)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="94.1096%" y="469" width="0.0316%" height="15" fill="rgb(211,213,45)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="94.1096%" y="453" width="0.0316%" height="15" fill="rgb(205,88,11)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="94.1096%" y="437" width="0.0316%" height="15" fill="rgb(252,69,26)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="94.1096%" y="421" width="0.0316%" height="15" fill="rgb(246,123,37)" fg:x="104088" fg:w="35"/><text x="94.3596%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.02%)</title><rect x="94.1168%" y="405" width="0.0244%" height="15" fill="rgb(212,205,5)" fg:x="104096" fg:w="27"/><text x="94.3668%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.02%)</title><rect x="94.1168%" y="389" width="0.0244%" height="15" fill="rgb(253,148,0)" fg:x="104096" fg:w="27"/><text x="94.3668%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="94.1168%" y="373" width="0.0244%" height="15" fill="rgb(239,22,4)" fg:x="104096" fg:w="27"/><text x="94.3668%" y="383.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (37 samples, 0.03%)</title><rect x="94.1087%" y="565" width="0.0335%" height="15" fill="rgb(226,26,53)" fg:x="104087" fg:w="37"/><text x="94.3587%" y="575.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="94.1087%" y="549" width="0.0335%" height="15" fill="rgb(225,229,45)" fg:x="104087" fg:w="37"/><text x="94.3587%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="94.1087%" y="533" width="0.0335%" height="15" fill="rgb(220,60,37)" fg:x="104087" fg:w="37"/><text x="94.3587%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (37 samples, 0.03%)</title><rect x="94.1087%" y="517" width="0.0335%" height="15" fill="rgb(217,180,35)" fg:x="104087" fg:w="37"/><text x="94.3587%" y="527.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (45 samples, 0.04%)</title><rect x="94.1078%" y="581" width="0.0407%" height="15" fill="rgb(229,7,53)" fg:x="104086" fg:w="45"/><text x="94.3578%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (46 samples, 0.04%)</title><rect x="94.1078%" y="645" width="0.0416%" height="15" fill="rgb(254,137,3)" fg:x="104086" fg:w="46"/><text x="94.3578%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (46 samples, 0.04%)</title><rect x="94.1078%" y="629" width="0.0416%" height="15" fill="rgb(215,140,41)" fg:x="104086" fg:w="46"/><text x="94.3578%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.04%)</title><rect x="94.1078%" y="613" width="0.0416%" height="15" fill="rgb(250,80,15)" fg:x="104086" fg:w="46"/><text x="94.3578%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (46 samples, 0.04%)</title><rect x="94.1078%" y="597" width="0.0416%" height="15" fill="rgb(252,191,6)" fg:x="104086" fg:w="46"/><text x="94.3578%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="94.1647%" y="565" width="0.0108%" height="15" fill="rgb(246,217,18)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="94.1647%" y="549" width="0.0108%" height="15" fill="rgb(223,93,7)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="94.1647%" y="533" width="0.0108%" height="15" fill="rgb(225,55,52)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="94.1647%" y="517" width="0.0108%" height="15" fill="rgb(240,31,24)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="94.1647%" y="501" width="0.0108%" height="15" fill="rgb(205,56,52)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="94.1647%" y="485" width="0.0108%" height="15" fill="rgb(246,146,12)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="495.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="94.1647%" y="469" width="0.0108%" height="15" fill="rgb(239,84,36)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="479.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="94.1647%" y="453" width="0.0108%" height="15" fill="rgb(207,41,40)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="463.50"></text></g><g><title>_int_malloc (12 samples, 0.01%)</title><rect x="94.1647%" y="437" width="0.0108%" height="15" fill="rgb(241,179,25)" fg:x="104149" fg:w="12"/><text x="94.4147%" y="447.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes (42 samples, 0.04%)</title><rect x="94.1493%" y="581" width="0.0380%" height="15" fill="rgb(210,0,34)" fg:x="104132" fg:w="42"/><text x="94.3993%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (46 samples, 0.04%)</title><rect x="94.1493%" y="645" width="0.0416%" height="15" fill="rgb(225,217,29)" fg:x="104132" fg:w="46"/><text x="94.3993%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run::call_inner (46 samples, 0.04%)</title><rect x="94.1493%" y="629" width="0.0416%" height="15" fill="rgb(216,191,38)" fg:x="104132" fg:w="46"/><text x="94.3993%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.04%)</title><rect x="94.1493%" y="613" width="0.0416%" height="15" fill="rgb(232,140,52)" fg:x="104132" fg:w="46"/><text x="94.3993%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (46 samples, 0.04%)</title><rect x="94.1493%" y="597" width="0.0416%" height="15" fill="rgb(223,158,51)" fg:x="104132" fg:w="46"/><text x="94.3993%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (695 samples, 0.63%)</title><rect x="93.5707%" y="901" width="0.6284%" height="15" fill="rgb(235,29,51)" fg:x="103492" fg:w="695"/><text x="93.8207%" y="911.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (695 samples, 0.63%)</title><rect x="93.5707%" y="885" width="0.6284%" height="15" fill="rgb(215,181,18)" fg:x="103492" fg:w="695"/><text x="93.8207%" y="895.50"></text></g><g><title>bevy_render::extract (109 samples, 0.10%)</title><rect x="94.1005%" y="869" width="0.0986%" height="15" fill="rgb(227,125,34)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (109 samples, 0.10%)</title><rect x="94.1005%" y="853" width="0.0986%" height="15" fill="rgb(230,197,49)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (109 samples, 0.10%)</title><rect x="94.1005%" y="837" width="0.0986%" height="15" fill="rgb(239,141,16)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (109 samples, 0.10%)</title><rect x="94.1005%" y="821" width="0.0986%" height="15" fill="rgb(225,105,43)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (109 samples, 0.10%)</title><rect x="94.1005%" y="805" width="0.0986%" height="15" fill="rgb(214,131,14)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (109 samples, 0.10%)</title><rect x="94.1005%" y="789" width="0.0986%" height="15" fill="rgb(229,177,11)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (109 samples, 0.10%)</title><rect x="94.1005%" y="773" width="0.0986%" height="15" fill="rgb(231,180,14)" fg:x="104078" fg:w="109"/><text x="94.3505%" y="783.50"></text></g><g><title>async_executor::Executor::try_tick (107 samples, 0.10%)</title><rect x="94.1023%" y="757" width="0.0967%" height="15" fill="rgb(232,88,2)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (107 samples, 0.10%)</title><rect x="94.1023%" y="741" width="0.0967%" height="15" fill="rgb(205,220,8)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.10%)</title><rect x="94.1023%" y="725" width="0.0967%" height="15" fill="rgb(225,23,53)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (107 samples, 0.10%)</title><rect x="94.1023%" y="709" width="0.0967%" height="15" fill="rgb(213,62,29)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.10%)</title><rect x="94.1023%" y="693" width="0.0967%" height="15" fill="rgb(227,75,7)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (107 samples, 0.10%)</title><rect x="94.1023%" y="677" width="0.0967%" height="15" fill="rgb(207,105,14)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="687.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (107 samples, 0.10%)</title><rect x="94.1023%" y="661" width="0.0967%" height="15" fill="rgb(245,62,29)" fg:x="104080" fg:w="107"/><text x="94.3523%" y="671.50"></text></g><g><title>core::slice::ascii::is_ascii (36 samples, 0.03%)</title><rect x="94.2343%" y="357" width="0.0325%" height="15" fill="rgb(236,202,4)" fg:x="104226" fg:w="36"/><text x="94.4843%" y="367.50"></text></g><g><title>core::slice::ascii::contains_nonascii (32 samples, 0.03%)</title><rect x="94.2380%" y="341" width="0.0289%" height="15" fill="rgb(250,67,1)" fg:x="104230" fg:w="32"/><text x="94.4880%" y="351.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::is_ascii (44 samples, 0.04%)</title><rect x="94.2343%" y="373" width="0.0398%" height="15" fill="rgb(253,115,44)" fg:x="104226" fg:w="44"/><text x="94.4843%" y="383.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (51 samples, 0.05%)</title><rect x="94.2325%" y="389" width="0.0461%" height="15" fill="rgb(251,139,18)" fg:x="104224" fg:w="51"/><text x="94.4825%" y="399.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (12 samples, 0.01%)</title><rect x="94.3112%" y="181" width="0.0108%" height="15" fill="rgb(218,22,32)" fg:x="104311" fg:w="12"/><text x="94.5612%" y="191.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (30 samples, 0.03%)</title><rect x="94.3012%" y="357" width="0.0271%" height="15" fill="rgb(243,53,5)" fg:x="104300" fg:w="30"/><text x="94.5512%" y="367.50"></text></g><g><title>std::io::Read::read_buf (24 samples, 0.02%)</title><rect x="94.3067%" y="341" width="0.0217%" height="15" fill="rgb(227,56,16)" fg:x="104306" fg:w="24"/><text x="94.5567%" y="351.50"></text></g><g><title>std::io::default_read_buf (24 samples, 0.02%)</title><rect x="94.3067%" y="325" width="0.0217%" height="15" fill="rgb(245,53,0)" fg:x="104306" fg:w="24"/><text x="94.5567%" y="335.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (24 samples, 0.02%)</title><rect x="94.3067%" y="309" width="0.0217%" height="15" fill="rgb(216,170,35)" fg:x="104306" fg:w="24"/><text x="94.5567%" y="319.50"></text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (24 samples, 0.02%)</title><rect x="94.3067%" y="293" width="0.0217%" height="15" fill="rgb(211,200,8)" fg:x="104306" fg:w="24"/><text x="94.5567%" y="303.50"></text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (24 samples, 0.02%)</title><rect x="94.3067%" y="277" width="0.0217%" height="15" fill="rgb(228,204,44)" fg:x="104306" fg:w="24"/><text x="94.5567%" y="287.50"></text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 0.02%)</title><rect x="94.3076%" y="261" width="0.0208%" height="15" fill="rgb(214,121,17)" fg:x="104307" fg:w="23"/><text x="94.5576%" y="271.50"></text></g><g><title>crc32fast::Hasher::update (23 samples, 0.02%)</title><rect x="94.3076%" y="245" width="0.0208%" height="15" fill="rgb(233,64,38)" fg:x="104307" fg:w="23"/><text x="94.5576%" y="255.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (23 samples, 0.02%)</title><rect x="94.3076%" y="229" width="0.0208%" height="15" fill="rgb(253,54,19)" fg:x="104307" fg:w="23"/><text x="94.5576%" y="239.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (23 samples, 0.02%)</title><rect x="94.3076%" y="213" width="0.0208%" height="15" fill="rgb(253,94,18)" fg:x="104307" fg:w="23"/><text x="94.5576%" y="223.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (19 samples, 0.02%)</title><rect x="94.3112%" y="197" width="0.0172%" height="15" fill="rgb(227,57,52)" fg:x="104311" fg:w="19"/><text x="94.5612%" y="207.50"></text></g><g><title>csv_core::reader::Dfa::get_output (97 samples, 0.09%)</title><rect x="94.5155%" y="325" width="0.0877%" height="15" fill="rgb(230,228,50)" fg:x="104537" fg:w="97"/><text x="94.7655%" y="335.50"></text></g><g><title>csv_core::reader::Dfa::new_read_record_result (22 samples, 0.02%)</title><rect x="94.6032%" y="325" width="0.0199%" height="15" fill="rgb(217,205,27)" fg:x="104634" fg:w="22"/><text x="94.8532%" y="335.50"></text></g><g><title>csv_core::reader::Reader::read_record_dfa (827 samples, 0.75%)</title><rect x="94.3528%" y="341" width="0.7477%" height="15" fill="rgb(252,71,50)" fg:x="104357" fg:w="827"/><text x="94.6028%" y="351.50"></text></g><g><title>csv_core::reader::DfaClasses::scan_and_copy (528 samples, 0.48%)</title><rect x="94.6231%" y="325" width="0.4774%" height="15" fill="rgb(209,86,4)" fg:x="104656" fg:w="528"/><text x="94.8731%" y="335.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (977 samples, 0.88%)</title><rect x="94.2199%" y="421" width="0.8833%" height="15" fill="rgb(229,94,0)" fg:x="104210" fg:w="977"/><text x="94.4699%" y="431.50"></text></g><g><title>csv::string_record::StringRecord::read (970 samples, 0.88%)</title><rect x="94.2262%" y="405" width="0.8770%" height="15" fill="rgb(252,223,21)" fg:x="104217" fg:w="970"/><text x="94.4762%" y="415.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (912 samples, 0.82%)</title><rect x="94.2786%" y="389" width="0.8246%" height="15" fill="rgb(230,210,4)" fg:x="104275" fg:w="912"/><text x="94.5286%" y="399.50"></text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (898 samples, 0.81%)</title><rect x="94.2913%" y="373" width="0.8119%" height="15" fill="rgb(240,149,38)" fg:x="104289" fg:w="898"/><text x="94.5413%" y="383.50"></text></g><g><title>csv_core::reader::Reader::read_record (848 samples, 0.77%)</title><rect x="94.3365%" y="357" width="0.7667%" height="15" fill="rgb(254,105,20)" fg:x="104339" fg:w="848"/><text x="94.5865%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (14 samples, 0.01%)</title><rect x="95.1159%" y="389" width="0.0127%" height="15" fill="rgb(253,87,46)" fg:x="105201" fg:w="14"/><text x="95.3659%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (36 samples, 0.03%)</title><rect x="95.1520%" y="309" width="0.0325%" height="15" fill="rgb(253,116,33)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="319.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (36 samples, 0.03%)</title><rect x="95.1520%" y="293" width="0.0325%" height="15" fill="rgb(229,198,5)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="303.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (36 samples, 0.03%)</title><rect x="95.1520%" y="277" width="0.0325%" height="15" fill="rgb(242,38,37)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="287.50"></text></g><g><title>&lt;serde::de::value::BorrowedBytesDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 0.03%)</title><rect x="95.1520%" y="261" width="0.0325%" height="15" fill="rgb(242,69,53)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="271.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_bytes (36 samples, 0.03%)</title><rect x="95.1520%" y="245" width="0.0325%" height="15" fill="rgb(249,80,16)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="255.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_bytes (36 samples, 0.03%)</title><rect x="95.1520%" y="229" width="0.0325%" height="15" fill="rgb(206,128,11)" fg:x="105241" fg:w="36"/><text x="95.4020%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_key (113 samples, 0.10%)</title><rect x="95.1520%" y="341" width="0.1022%" height="15" fill="rgb(212,35,20)" fg:x="105241" fg:w="113"/><text x="95.4020%" y="351.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_key_seed (113 samples, 0.10%)</title><rect x="95.1520%" y="325" width="0.1022%" height="15" fill="rgb(236,79,13)" fg:x="105241" fg:w="113"/><text x="95.4020%" y="335.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_header_bytes (74 samples, 0.07%)</title><rect x="95.1873%" y="309" width="0.0669%" height="15" fill="rgb(233,123,3)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="319.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header_bytes (74 samples, 0.07%)</title><rect x="95.1873%" y="293" width="0.0669%" height="15" fill="rgb(214,93,52)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="303.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header (74 samples, 0.07%)</title><rect x="95.1873%" y="277" width="0.0669%" height="15" fill="rgb(251,37,40)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (74 samples, 0.07%)</title><rect x="95.1873%" y="261" width="0.0669%" height="15" fill="rgb(227,80,54)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_header::{{closure}} (74 samples, 0.07%)</title><rect x="95.1873%" y="245" width="0.0669%" height="15" fill="rgb(254,48,11)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="255.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.07%)</title><rect x="95.1873%" y="229" width="0.0669%" height="15" fill="rgb(235,193,26)" fg:x="105280" fg:w="74"/><text x="95.4373%" y="239.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.07%)</title><rect x="95.1891%" y="213" width="0.0651%" height="15" fill="rgb(229,99,21)" fg:x="105282" fg:w="72"/><text x="95.4391%" y="223.50"></text></g><g><title>csv::byte_record::Bounds::ends (13 samples, 0.01%)</title><rect x="95.2424%" y="197" width="0.0118%" height="15" fill="rgb(211,140,41)" fg:x="105341" fg:w="13"/><text x="95.4924%" y="207.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="95.2569%" y="197" width="0.0199%" height="15" fill="rgb(240,227,30)" fg:x="105357" fg:w="22"/><text x="95.5069%" y="207.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="95.2605%" y="181" width="0.0163%" height="15" fill="rgb(215,224,45)" fg:x="105361" fg:w="18"/><text x="95.5105%" y="191.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (27 samples, 0.02%)</title><rect x="95.2542%" y="293" width="0.0244%" height="15" fill="rgb(206,123,31)" fg:x="105354" fg:w="27"/><text x="95.5042%" y="303.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (27 samples, 0.02%)</title><rect x="95.2542%" y="277" width="0.0244%" height="15" fill="rgb(210,138,16)" fg:x="105354" fg:w="27"/><text x="95.5042%" y="287.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field_bytes (27 samples, 0.02%)</title><rect x="95.2542%" y="261" width="0.0244%" height="15" fill="rgb(228,57,28)" fg:x="105354" fg:w="27"/><text x="95.5042%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field_bytes (27 samples, 0.02%)</title><rect x="95.2542%" y="245" width="0.0244%" height="15" fill="rgb(242,170,10)" fg:x="105354" fg:w="27"/><text x="95.5042%" y="255.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (27 samples, 0.02%)</title><rect x="95.2542%" y="229" width="0.0244%" height="15" fill="rgb(228,214,39)" fg:x="105354" fg:w="27"/><text x="95.5042%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="95.2551%" y="213" width="0.0235%" height="15" fill="rgb(218,179,33)" fg:x="105355" fg:w="26"/><text x="95.5051%" y="223.50"></text></g><g><title>&lt;csv::string_record::StringRecordIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="95.2831%" y="213" width="0.0244%" height="15" fill="rgb(235,193,39)" fg:x="105386" fg:w="27"/><text x="95.5331%" y="223.50"></text></g><g><title>&lt;csv::byte_record::ByteRecordIter as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="95.2849%" y="197" width="0.0226%" height="15" fill="rgb(219,221,36)" fg:x="105388" fg:w="25"/><text x="95.5349%" y="207.50"></text></g><g><title>&lt;csv::deserializer::DeRecordWrap&lt;T&gt; as csv::deserializer::DeRecord&gt;::next_field (37 samples, 0.03%)</title><rect x="95.2786%" y="261" width="0.0335%" height="15" fill="rgb(248,218,19)" fg:x="105381" fg:w="37"/><text x="95.5286%" y="271.50"></text></g><g><title>&lt;csv::deserializer::DeStringRecord as csv::deserializer::DeRecord&gt;::next_field (37 samples, 0.03%)</title><rect x="95.2786%" y="245" width="0.0335%" height="15" fill="rgb(205,50,9)" fg:x="105381" fg:w="37"/><text x="95.5286%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="95.2786%" y="229" width="0.0335%" height="15" fill="rgb(238,81,28)" fg:x="105381" fg:w="37"/><text x="95.5286%" y="239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.02%)</title><rect x="95.3157%" y="229" width="0.0190%" height="15" fill="rgb(235,110,19)" fg:x="105422" fg:w="21"/><text x="95.5657%" y="239.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (22 samples, 0.02%)</title><rect x="95.5074%" y="197" width="0.0199%" height="15" fill="rgb(214,7,14)" fg:x="105634" fg:w="22"/><text x="95.7574%" y="207.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (115 samples, 0.10%)</title><rect x="95.4260%" y="213" width="0.1040%" height="15" fill="rgb(211,77,3)" fg:x="105544" fg:w="115"/><text x="95.6760%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (17 samples, 0.02%)</title><rect x="95.5517%" y="197" width="0.0154%" height="15" fill="rgb(229,5,9)" fg:x="105683" fg:w="17"/><text x="95.8017%" y="207.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::first_is (17 samples, 0.02%)</title><rect x="95.5734%" y="181" width="0.0154%" height="15" fill="rgb(225,90,11)" fg:x="105707" fg:w="17"/><text x="95.8234%" y="191.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="95.5734%" y="165" width="0.0154%" height="15" fill="rgb(242,56,8)" fg:x="105707" fg:w="17"/><text x="95.8234%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="95.5734%" y="149" width="0.0154%" height="15" fill="rgb(249,212,39)" fg:x="105707" fg:w="17"/><text x="95.8234%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (17 samples, 0.02%)</title><rect x="95.5734%" y="133" width="0.0154%" height="15" fill="rgb(236,90,9)" fg:x="105707" fg:w="17"/><text x="95.8234%" y="143.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::read_u64 (13 samples, 0.01%)</title><rect x="95.5969%" y="165" width="0.0118%" height="15" fill="rgb(206,88,35)" fg:x="105733" fg:w="13"/><text x="95.8469%" y="175.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (26 samples, 0.02%)</title><rect x="95.6140%" y="165" width="0.0235%" height="15" fill="rgb(205,126,30)" fg:x="105752" fg:w="26"/><text x="95.8640%" y="175.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_8digits (53 samples, 0.05%)</title><rect x="95.5923%" y="181" width="0.0479%" height="15" fill="rgb(230,176,12)" fg:x="105728" fg:w="53"/><text x="95.8423%" y="191.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::{{closure}} (24 samples, 0.02%)</title><rect x="95.7081%" y="149" width="0.0217%" height="15" fill="rgb(243,19,9)" fg:x="105856" fg:w="24"/><text x="95.9581%" y="159.50"></text></g><g><title>core::num::dec2flt::common::AsciiStr::parse_digits (103 samples, 0.09%)</title><rect x="95.6403%" y="165" width="0.0931%" height="15" fill="rgb(245,171,17)" fg:x="105781" fg:w="103"/><text x="95.8903%" y="175.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (226 samples, 0.20%)</title><rect x="95.5318%" y="213" width="0.2043%" height="15" fill="rgb(227,52,21)" fg:x="105661" fg:w="226"/><text x="95.7818%" y="223.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (187 samples, 0.17%)</title><rect x="95.5670%" y="197" width="0.1691%" height="15" fill="rgb(238,69,14)" fg:x="105700" fg:w="187"/><text x="95.8170%" y="207.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (106 samples, 0.10%)</title><rect x="95.6403%" y="181" width="0.0958%" height="15" fill="rgb(241,156,39)" fg:x="105781" fg:w="106"/><text x="95.8903%" y="191.50"></text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,715 samples, 1.55%)</title><rect x="94.1991%" y="437" width="1.5506%" height="15" fill="rgb(212,227,28)" fg:x="104187" fg:w="1715"/><text x="94.4491%" y="447.50"></text></g><g><title>csv::string_record::StringRecord::deserialize (715 samples, 0.65%)</title><rect x="95.1032%" y="421" width="0.6465%" height="15" fill="rgb(209,118,27)" fg:x="105187" fg:w="715"/><text x="95.3532%" y="431.50"></text></g><g><title>csv::deserializer::deserialize_string_record (715 samples, 0.65%)</title><rect x="95.1032%" y="405" width="0.6465%" height="15" fill="rgb(226,102,5)" fg:x="105187" fg:w="715"/><text x="95.3532%" y="415.50"></text></g><g><title>stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize (681 samples, 0.62%)</title><rect x="95.1339%" y="389" width="0.6157%" height="15" fill="rgb(223,34,3)" fg:x="105221" fg:w="681"/><text x="95.3839%" y="399.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_struct (681 samples, 0.62%)</title><rect x="95.1339%" y="373" width="0.6157%" height="15" fill="rgb(221,81,38)" fg:x="105221" fg:w="681"/><text x="95.3839%" y="383.50"></text></g><g><title>&lt;stellar_coordinates_test::_::&lt;impl serde::de::Deserialize for stellar_coordinates_test::Pos&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (674 samples, 0.61%)</title><rect x="95.1403%" y="357" width="0.6094%" height="15" fill="rgb(236,219,28)" fg:x="105228" fg:w="674"/><text x="95.3903%" y="367.50"></text></g><g><title>serde::de::MapAccess::next_value (548 samples, 0.50%)</title><rect x="95.2542%" y="341" width="0.4955%" height="15" fill="rgb(213,200,14)" fg:x="105354" fg:w="548"/><text x="95.5042%" y="351.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed (548 samples, 0.50%)</title><rect x="95.2542%" y="325" width="0.4955%" height="15" fill="rgb(240,33,19)" fg:x="105354" fg:w="548"/><text x="95.5042%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (548 samples, 0.50%)</title><rect x="95.2542%" y="309" width="0.4955%" height="15" fill="rgb(233,113,27)" fg:x="105354" fg:w="548"/><text x="95.5042%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f32&gt;::deserialize (521 samples, 0.47%)</title><rect x="95.2786%" y="293" width="0.4711%" height="15" fill="rgb(220,221,18)" fg:x="105381" fg:w="521"/><text x="95.5286%" y="303.50"></text></g><g><title>&lt;&amp;mut csv::deserializer::DeRecordWrap&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_f32 (521 samples, 0.47%)</title><rect x="95.2786%" y="277" width="0.4711%" height="15" fill="rgb(238,92,8)" fg:x="105381" fg:w="521"/><text x="95.5286%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (480 samples, 0.43%)</title><rect x="95.3157%" y="261" width="0.4340%" height="15" fill="rgb(222,164,16)" fg:x="105422" fg:w="480"/><text x="95.5657%" y="271.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (480 samples, 0.43%)</title><rect x="95.3157%" y="245" width="0.4340%" height="15" fill="rgb(241,119,3)" fg:x="105422" fg:w="480"/><text x="95.5657%" y="255.50"></text></g><g><title>core::num::dec2flt::dec2flt (459 samples, 0.41%)</title><rect x="95.3347%" y="229" width="0.4150%" height="15" fill="rgb(241,44,8)" fg:x="105443" fg:w="459"/><text x="95.5847%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (15 samples, 0.01%)</title><rect x="95.7361%" y="213" width="0.0136%" height="15" fill="rgb(230,36,40)" fg:x="105887" fg:w="15"/><text x="95.9861%" y="223.50"></text></g><g><title>bevy_render::color::Color::hex (42 samples, 0.04%)</title><rect x="95.7515%" y="437" width="0.0380%" height="15" fill="rgb(243,16,36)" fg:x="105904" fg:w="42"/><text x="96.0015%" y="447.50"></text></g><g><title>bevy_render::color::decode_rgb (42 samples, 0.04%)</title><rect x="95.7515%" y="421" width="0.0380%" height="15" fill="rgb(231,4,26)" fg:x="105904" fg:w="42"/><text x="96.0015%" y="431.50"></text></g><g><title>hex::decode_to_slice (42 samples, 0.04%)</title><rect x="95.7515%" y="405" width="0.0380%" height="15" fill="rgb(240,9,31)" fg:x="105904" fg:w="42"/><text x="96.0015%" y="415.50"></text></g><g><title>hex::val (18 samples, 0.02%)</title><rect x="95.7732%" y="389" width="0.0163%" height="15" fill="rgb(207,173,15)" fg:x="105928" fg:w="18"/><text x="96.0232%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="95.7940%" y="149" width="0.0190%" height="15" fill="rgb(224,192,53)" fg:x="105951" fg:w="21"/><text x="96.0440%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="95.7940%" y="277" width="0.0199%" height="15" fill="rgb(223,67,28)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="95.7940%" y="261" width="0.0199%" height="15" fill="rgb(211,20,47)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="95.7940%" y="245" width="0.0199%" height="15" fill="rgb(240,228,2)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="95.7940%" y="229" width="0.0199%" height="15" fill="rgb(248,151,12)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="95.7940%" y="213" width="0.0199%" height="15" fill="rgb(244,8,39)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="223.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="95.7940%" y="197" width="0.0199%" height="15" fill="rgb(222,26,8)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="207.50"></text></g><g><title>__realloc (22 samples, 0.02%)</title><rect x="95.7940%" y="181" width="0.0199%" height="15" fill="rgb(213,106,44)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="191.50"></text></g><g><title>_int_realloc (22 samples, 0.02%)</title><rect x="95.7940%" y="165" width="0.0199%" height="15" fill="rgb(214,129,20)" fg:x="105951" fg:w="22"/><text x="96.0440%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.03%)</title><rect x="95.7940%" y="293" width="0.0280%" height="15" fill="rgb(212,32,13)" fg:x="105951" fg:w="31"/><text x="96.0440%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="95.8247%" y="277" width="0.0163%" height="15" fill="rgb(208,168,33)" fg:x="105985" fg:w="18"/><text x="96.0747%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.01%)</title><rect x="95.8591%" y="165" width="0.0108%" height="15" fill="rgb(231,207,8)" fg:x="106023" fg:w="12"/><text x="96.1091%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.03%)</title><rect x="95.8491%" y="229" width="0.0262%" height="15" fill="rgb(235,219,23)" fg:x="106012" fg:w="29"/><text x="96.0991%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.03%)</title><rect x="95.8491%" y="213" width="0.0262%" height="15" fill="rgb(226,216,26)" fg:x="106012" fg:w="29"/><text x="96.0991%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.03%)</title><rect x="95.8491%" y="197" width="0.0262%" height="15" fill="rgb(239,137,16)" fg:x="106012" fg:w="29"/><text x="96.0991%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.02%)</title><rect x="95.8591%" y="181" width="0.0163%" height="15" fill="rgb(207,12,36)" fg:x="106023" fg:w="18"/><text x="96.1091%" y="191.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="95.8790%" y="165" width="0.0145%" height="15" fill="rgb(210,214,24)" fg:x="106045" fg:w="16"/><text x="96.1290%" y="175.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="95.8790%" y="149" width="0.0145%" height="15" fill="rgb(206,56,30)" fg:x="106045" fg:w="16"/><text x="96.1290%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="95.8817%" y="133" width="0.0118%" height="15" fill="rgb(228,143,26)" fg:x="106048" fg:w="13"/><text x="96.1317%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="95.8817%" y="117" width="0.0118%" height="15" fill="rgb(216,218,46)" fg:x="106048" fg:w="13"/><text x="96.1317%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="95.8934%" y="117" width="0.0136%" height="15" fill="rgb(206,6,19)" fg:x="106061" fg:w="15"/><text x="96.1434%" y="127.50"></text></g><g><title>hashbrown::map::make_insert_hash (69 samples, 0.06%)</title><rect x="95.8464%" y="261" width="0.0624%" height="15" fill="rgb(239,177,51)" fg:x="106009" fg:w="69"/><text x="96.0964%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (66 samples, 0.06%)</title><rect x="95.8491%" y="245" width="0.0597%" height="15" fill="rgb(216,55,25)" fg:x="106012" fg:w="66"/><text x="96.0991%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="95.8790%" y="229" width="0.0298%" height="15" fill="rgb(231,163,29)" fg:x="106045" fg:w="33"/><text x="96.1290%" y="239.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="95.8790%" y="213" width="0.0298%" height="15" fill="rgb(232,149,50)" fg:x="106045" fg:w="33"/><text x="96.1290%" y="223.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (33 samples, 0.03%)</title><rect x="95.8790%" y="197" width="0.0298%" height="15" fill="rgb(223,142,48)" fg:x="106045" fg:w="33"/><text x="96.1290%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (33 samples, 0.03%)</title><rect x="95.8790%" y="181" width="0.0298%" height="15" fill="rgb(245,83,23)" fg:x="106045" fg:w="33"/><text x="96.1290%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash_slice (17 samples, 0.02%)</title><rect x="95.8934%" y="165" width="0.0154%" height="15" fill="rgb(224,63,2)" fg:x="106061" fg:w="17"/><text x="96.1434%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="95.8934%" y="149" width="0.0154%" height="15" fill="rgb(218,65,53)" fg:x="106061" fg:w="17"/><text x="96.1434%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="95.8934%" y="133" width="0.0154%" height="15" fill="rgb(221,84,29)" fg:x="106061" fg:w="17"/><text x="96.1434%" y="143.50"></text></g><g><title>glam::core::scalar::vector::&lt;impl glam::core::traits::vector::Vector&lt;T&gt; for glam::core::storage::XYZ&lt;T&gt;&gt;::cmpeq (20 samples, 0.02%)</title><rect x="95.9151%" y="165" width="0.0181%" height="15" fill="rgb(234,0,32)" fg:x="106085" fg:w="20"/><text x="96.1651%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (14 samples, 0.01%)</title><rect x="95.9205%" y="149" width="0.0127%" height="15" fill="rgb(206,20,16)" fg:x="106091" fg:w="14"/><text x="96.1705%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.02%)</title><rect x="95.9151%" y="229" width="0.0199%" height="15" fill="rgb(244,172,18)" fg:x="106085" fg:w="22"/><text x="96.1651%" y="239.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (22 samples, 0.02%)</title><rect x="95.9151%" y="213" width="0.0199%" height="15" fill="rgb(254,133,1)" fg:x="106085" fg:w="22"/><text x="96.1651%" y="223.50"></text></g><g><title>&lt;glam::vec3::IVec3 as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="95.9151%" y="197" width="0.0199%" height="15" fill="rgb(222,206,41)" fg:x="106085" fg:w="22"/><text x="96.1651%" y="207.50"></text></g><g><title>glam::vec3::IVec3::cmpeq (22 samples, 0.02%)</title><rect x="95.9151%" y="181" width="0.0199%" height="15" fill="rgb(212,3,42)" fg:x="106085" fg:w="22"/><text x="96.1651%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (165 samples, 0.15%)</title><rect x="95.7940%" y="325" width="0.1492%" height="15" fill="rgb(241,11,4)" fg:x="105951" fg:w="165"/><text x="96.0440%" y="335.50"></text></g><g><title>itertools::group_map::into_group_map::{{closure}} (165 samples, 0.15%)</title><rect x="95.7940%" y="309" width="0.1492%" height="15" fill="rgb(205,19,26)" fg:x="105951" fg:w="165"/><text x="96.0440%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (133 samples, 0.12%)</title><rect x="95.8229%" y="293" width="0.1202%" height="15" fill="rgb(210,179,32)" fg:x="105983" fg:w="133"/><text x="96.0729%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (113 samples, 0.10%)</title><rect x="95.8410%" y="277" width="0.1022%" height="15" fill="rgb(227,116,49)" fg:x="106003" fg:w="113"/><text x="96.0910%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.03%)</title><rect x="95.9088%" y="261" width="0.0344%" height="15" fill="rgb(211,146,6)" fg:x="106078" fg:w="38"/><text x="96.1588%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.03%)</title><rect x="95.9088%" y="245" width="0.0344%" height="15" fill="rgb(219,44,39)" fg:x="106078" fg:w="38"/><text x="96.1588%" y="255.50"></text></g><g><title>glam::vec3::Vec3::as_ivec3 (14 samples, 0.01%)</title><rect x="95.9468%" y="293" width="0.0127%" height="15" fill="rgb(234,128,11)" fg:x="106120" fg:w="14"/><text x="96.1968%" y="303.50"></text></g><g><title>itertools::Itertools::into_group_map_by (201 samples, 0.18%)</title><rect x="95.7894%" y="437" width="0.1817%" height="15" fill="rgb(220,183,53)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="447.50"></text></g><g><title>itertools::group_map::into_group_map_by (201 samples, 0.18%)</title><rect x="95.7894%" y="421" width="0.1817%" height="15" fill="rgb(213,219,32)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="431.50"></text></g><g><title>itertools::group_map::into_group_map (201 samples, 0.18%)</title><rect x="95.7894%" y="405" width="0.1817%" height="15" fill="rgb(232,156,16)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (201 samples, 0.18%)</title><rect x="95.7894%" y="389" width="0.1817%" height="15" fill="rgb(246,135,34)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (201 samples, 0.18%)</title><rect x="95.7894%" y="373" width="0.1817%" height="15" fill="rgb(241,99,0)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (201 samples, 0.18%)</title><rect x="95.7894%" y="357" width="0.1817%" height="15" fill="rgb(222,103,45)" fg:x="105946" fg:w="201"/><text x="96.0394%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (196 samples, 0.18%)</title><rect x="95.7940%" y="341" width="0.1772%" height="15" fill="rgb(212,57,4)" fg:x="105951" fg:w="196"/><text x="96.0440%" y="351.50"></text></g><g><title>itertools::group_map::into_group_map_by::{{closure}} (31 samples, 0.03%)</title><rect x="95.9431%" y="325" width="0.0280%" height="15" fill="rgb(215,68,47)" fg:x="106116" fg:w="31"/><text x="96.1931%" y="335.50"></text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize::{{closure}} (31 samples, 0.03%)</title><rect x="95.9431%" y="309" width="0.0280%" height="15" fill="rgb(230,84,2)" fg:x="106116" fg:w="31"/><text x="96.1931%" y="319.50"></text></g><g><title>glam::vec3::Vec3::floor (13 samples, 0.01%)</title><rect x="95.9594%" y="293" width="0.0118%" height="15" fill="rgb(220,102,14)" fg:x="106134" fg:w="13"/><text x="96.2094%" y="303.50"></text></g><g><title>glam::core::traits::vector::FloatVector3::floor (13 samples, 0.01%)</title><rect x="95.9594%" y="277" width="0.0118%" height="15" fill="rgb(240,10,32)" fg:x="106134" fg:w="13"/><text x="96.2094%" y="287.50"></text></g><g><title>&lt;f32 as glam::core::traits::scalar::Float&gt;::floor (13 samples, 0.01%)</title><rect x="95.9594%" y="261" width="0.0118%" height="15" fill="rgb(215,47,27)" fg:x="106134" fg:w="13"/><text x="96.2094%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (64 samples, 0.06%)</title><rect x="96.0390%" y="373" width="0.0579%" height="15" fill="rgb(233,188,43)" fg:x="106222" fg:w="64"/><text x="96.2890%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (64 samples, 0.06%)</title><rect x="96.0390%" y="357" width="0.0579%" height="15" fill="rgb(253,190,1)" fg:x="106222" fg:w="64"/><text x="96.2890%" y="367.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="96.0390%" y="341" width="0.0579%" height="15" fill="rgb(206,114,52)" fg:x="106222" fg:w="64"/><text x="96.2890%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (58 samples, 0.05%)</title><rect x="96.0444%" y="325" width="0.0524%" height="15" fill="rgb(233,120,37)" fg:x="106228" fg:w="58"/><text x="96.2944%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (58 samples, 0.05%)</title><rect x="96.0444%" y="309" width="0.0524%" height="15" fill="rgb(214,52,39)" fg:x="106228" fg:w="58"/><text x="96.2944%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (58 samples, 0.05%)</title><rect x="96.0444%" y="293" width="0.0524%" height="15" fill="rgb(223,80,29)" fg:x="106228" fg:w="58"/><text x="96.2944%" y="303.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (14 samples, 0.01%)</title><rect x="96.1809%" y="261" width="0.0127%" height="15" fill="rgb(230,101,40)" fg:x="106379" fg:w="14"/><text x="96.4309%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="96.2026%" y="245" width="0.0154%" height="15" fill="rgb(219,211,8)" fg:x="106403" fg:w="17"/><text x="96.4526%" y="255.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (51 samples, 0.05%)</title><rect x="96.1746%" y="277" width="0.0461%" height="15" fill="rgb(252,126,28)" fg:x="106372" fg:w="51"/><text x="96.4246%" y="287.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (30 samples, 0.03%)</title><rect x="96.1936%" y="261" width="0.0271%" height="15" fill="rgb(215,56,38)" fg:x="106393" fg:w="30"/><text x="96.4436%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (129 samples, 0.12%)</title><rect x="96.1746%" y="309" width="0.1166%" height="15" fill="rgb(249,55,44)" fg:x="106372" fg:w="129"/><text x="96.4246%" y="319.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (129 samples, 0.12%)</title><rect x="96.1746%" y="293" width="0.1166%" height="15" fill="rgb(220,221,32)" fg:x="106372" fg:w="129"/><text x="96.4246%" y="303.50"></text></g><g><title>std::sys_common::memchr::memrchr (67 samples, 0.06%)</title><rect x="96.2307%" y="277" width="0.0606%" height="15" fill="rgb(212,216,41)" fg:x="106434" fg:w="67"/><text x="96.4807%" y="287.50"></text></g><g><title>std::sys::unix::memchr::memrchr (67 samples, 0.06%)</title><rect x="96.2307%" y="261" width="0.0606%" height="15" fill="rgb(228,213,43)" fg:x="106434" fg:w="67"/><text x="96.4807%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (67 samples, 0.06%)</title><rect x="96.2307%" y="245" width="0.0606%" height="15" fill="rgb(211,31,26)" fg:x="106434" fg:w="67"/><text x="96.4807%" y="255.50"></text></g><g><title>__memrchr_avx2 (57 samples, 0.05%)</title><rect x="96.2397%" y="229" width="0.0515%" height="15" fill="rgb(229,202,19)" fg:x="106444" fg:w="57"/><text x="96.4897%" y="239.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.01%)</title><rect x="96.2912%" y="309" width="0.0108%" height="15" fill="rgb(229,105,46)" fg:x="106501" fg:w="12"/><text x="96.5412%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.01%)</title><rect x="96.2912%" y="293" width="0.0108%" height="15" fill="rgb(235,108,1)" fg:x="106501" fg:w="12"/><text x="96.5412%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (161 samples, 0.15%)</title><rect x="96.1574%" y="341" width="0.1456%" height="15" fill="rgb(245,111,35)" fg:x="106353" fg:w="161"/><text x="96.4074%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (148 samples, 0.13%)</title><rect x="96.1692%" y="325" width="0.1338%" height="15" fill="rgb(219,185,31)" fg:x="106366" fg:w="148"/><text x="96.4192%" y="335.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (15 samples, 0.01%)</title><rect x="96.3807%" y="229" width="0.0136%" height="15" fill="rgb(214,4,43)" fg:x="106600" fg:w="15"/><text x="96.6307%" y="239.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (12 samples, 0.01%)</title><rect x="96.3835%" y="213" width="0.0108%" height="15" fill="rgb(235,227,40)" fg:x="106603" fg:w="12"/><text x="96.6335%" y="223.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (43 samples, 0.04%)</title><rect x="96.3807%" y="261" width="0.0389%" height="15" fill="rgb(230,88,30)" fg:x="106600" fg:w="43"/><text x="96.6307%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (43 samples, 0.04%)</title><rect x="96.3807%" y="245" width="0.0389%" height="15" fill="rgb(216,217,1)" fg:x="106600" fg:w="43"/><text x="96.6307%" y="255.50"></text></g><g><title>std::sys_common::memchr::memrchr (23 samples, 0.02%)</title><rect x="96.3988%" y="229" width="0.0208%" height="15" fill="rgb(248,139,50)" fg:x="106620" fg:w="23"/><text x="96.6488%" y="239.50"></text></g><g><title>std::sys::unix::memchr::memrchr (23 samples, 0.02%)</title><rect x="96.3988%" y="213" width="0.0208%" height="15" fill="rgb(233,1,21)" fg:x="106620" fg:w="23"/><text x="96.6488%" y="223.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (23 samples, 0.02%)</title><rect x="96.3988%" y="197" width="0.0208%" height="15" fill="rgb(215,183,12)" fg:x="106620" fg:w="23"/><text x="96.6488%" y="207.50"></text></g><g><title>__memrchr_avx2 (20 samples, 0.02%)</title><rect x="96.4015%" y="181" width="0.0181%" height="15" fill="rgb(229,104,42)" fg:x="106623" fg:w="20"/><text x="96.6515%" y="191.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (58 samples, 0.05%)</title><rect x="96.3708%" y="293" width="0.0524%" height="15" fill="rgb(243,34,48)" fg:x="106589" fg:w="58"/><text x="96.6208%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (52 samples, 0.05%)</title><rect x="96.3762%" y="277" width="0.0470%" height="15" fill="rgb(239,11,44)" fg:x="106595" fg:w="52"/><text x="96.6262%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (31 samples, 0.03%)</title><rect x="96.4232%" y="293" width="0.0280%" height="15" fill="rgb(231,98,35)" fg:x="106647" fg:w="31"/><text x="96.6732%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (136 samples, 0.12%)</title><rect x="96.3364%" y="325" width="0.1230%" height="15" fill="rgb(233,28,25)" fg:x="106551" fg:w="136"/><text x="96.5864%" y="335.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (128 samples, 0.12%)</title><rect x="96.3437%" y="309" width="0.1157%" height="15" fill="rgb(234,123,11)" fg:x="106559" fg:w="128"/><text x="96.5937%" y="319.50"></text></g><g><title>core::fmt::run (172 samples, 0.16%)</title><rect x="96.3075%" y="341" width="0.1555%" height="15" fill="rgb(220,69,3)" fg:x="106519" fg:w="172"/><text x="96.5575%" y="351.50"></text></g><g><title>core::fmt::write (399 samples, 0.36%)</title><rect x="96.1086%" y="357" width="0.3607%" height="15" fill="rgb(214,64,36)" fg:x="106299" fg:w="399"/><text x="96.3586%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (415 samples, 0.38%)</title><rect x="96.0969%" y="373" width="0.3752%" height="15" fill="rgb(211,138,32)" fg:x="106286" fg:w="415"/><text x="96.3469%" y="383.50"></text></g><g><title>__tls_get_addr (29 samples, 0.03%)</title><rect x="96.4739%" y="341" width="0.0262%" height="15" fill="rgb(213,118,47)" fg:x="106703" fg:w="29"/><text x="96.7239%" y="351.50"></text></g><g><title>update_get_addr (16 samples, 0.01%)</title><rect x="96.4856%" y="325" width="0.0145%" height="15" fill="rgb(243,124,49)" fg:x="106716" fg:w="16"/><text x="96.7356%" y="335.50"></text></g><g><title>_dl_update_slotinfo (14 samples, 0.01%)</title><rect x="96.4874%" y="309" width="0.0127%" height="15" fill="rgb(221,30,28)" fg:x="106718" fg:w="14"/><text x="96.7374%" y="319.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (562 samples, 0.51%)</title><rect x="96.0290%" y="405" width="0.5081%" height="15" fill="rgb(246,37,13)" fg:x="106211" fg:w="562"/><text x="96.2790%" y="415.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (555 samples, 0.50%)</title><rect x="96.0354%" y="389" width="0.5018%" height="15" fill="rgb(249,66,14)" fg:x="106218" fg:w="555"/><text x="96.2854%" y="399.50"></text></g><g><title>std::io::stdio::Stdout::lock (72 samples, 0.07%)</title><rect x="96.4721%" y="373" width="0.0651%" height="15" fill="rgb(213,166,5)" fg:x="106701" fg:w="72"/><text x="96.7221%" y="383.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (72 samples, 0.07%)</title><rect x="96.4721%" y="357" width="0.0651%" height="15" fill="rgb(221,66,24)" fg:x="106701" fg:w="72"/><text x="96.7221%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (37 samples, 0.03%)</title><rect x="96.5037%" y="341" width="0.0335%" height="15" fill="rgb(210,132,17)" fg:x="106736" fg:w="37"/><text x="96.7537%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (37 samples, 0.03%)</title><rect x="96.5037%" y="325" width="0.0335%" height="15" fill="rgb(243,202,5)" fg:x="106736" fg:w="37"/><text x="96.7537%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="96.5037%" y="309" width="0.0335%" height="15" fill="rgb(233,70,48)" fg:x="106736" fg:w="37"/><text x="96.7537%" y="319.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (3,283 samples, 2.97%)</title><rect x="93.5707%" y="949" width="2.9683%" height="15" fill="rgb(238,41,26)" fg:x="103492" fg:w="3283"/><text x="93.8207%" y="959.50">win..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (3,283 samples, 2.97%)</title><rect x="93.5707%" y="933" width="2.9683%" height="15" fill="rgb(241,19,31)" fg:x="103492" fg:w="3283"/><text x="93.8207%" y="943.50">bev..</text></g><g><title>bevy_app::app::App::update (3,283 samples, 2.97%)</title><rect x="93.5707%" y="917" width="2.9683%" height="15" fill="rgb(214,76,10)" fg:x="103492" fg:w="3283"/><text x="93.8207%" y="927.50">bev..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,588 samples, 2.34%)</title><rect x="94.1991%" y="901" width="2.3399%" height="15" fill="rgb(254,202,22)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="911.50">b..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,588 samples, 2.34%)</title><rect x="94.1991%" y="885" width="2.3399%" height="15" fill="rgb(214,72,24)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="895.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,588 samples, 2.34%)</title><rect x="94.1991%" y="869" width="2.3399%" height="15" fill="rgb(221,92,46)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="879.50">&lt;..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,588 samples, 2.34%)</title><rect x="94.1991%" y="853" width="2.3399%" height="15" fill="rgb(246,13,50)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="863.50">&lt;..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,588 samples, 2.34%)</title><rect x="94.1991%" y="837" width="2.3399%" height="15" fill="rgb(240,165,38)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="847.50">b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,588 samples, 2.34%)</title><rect x="94.1991%" y="821" width="2.3399%" height="15" fill="rgb(241,24,51)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="831.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,588 samples, 2.34%)</title><rect x="94.1991%" y="805" width="2.3399%" height="15" fill="rgb(227,51,44)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="815.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,588 samples, 2.34%)</title><rect x="94.1991%" y="789" width="2.3399%" height="15" fill="rgb(231,121,3)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="799.50">b..</text></g><g><title>async_executor::Executor::try_tick (2,588 samples, 2.34%)</title><rect x="94.1991%" y="773" width="2.3399%" height="15" fill="rgb(245,3,41)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="783.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,588 samples, 2.34%)</title><rect x="94.1991%" y="757" width="2.3399%" height="15" fill="rgb(214,13,26)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="767.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,588 samples, 2.34%)</title><rect x="94.1991%" y="741" width="2.3399%" height="15" fill="rgb(252,75,11)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="751.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,588 samples, 2.34%)</title><rect x="94.1991%" y="725" width="2.3399%" height="15" fill="rgb(218,226,17)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="735.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,588 samples, 2.34%)</title><rect x="94.1991%" y="709" width="2.3399%" height="15" fill="rgb(248,89,38)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="719.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,588 samples, 2.34%)</title><rect x="94.1991%" y="693" width="2.3399%" height="15" fill="rgb(237,73,46)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="703.50">b..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,588 samples, 2.34%)</title><rect x="94.1991%" y="677" width="2.3399%" height="15" fill="rgb(242,78,33)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="687.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2,588 samples, 2.34%)</title><rect x="94.1991%" y="661" width="2.3399%" height="15" fill="rgb(235,60,3)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="671.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (2,588 samples, 2.34%)</title><rect x="94.1991%" y="645" width="2.3399%" height="15" fill="rgb(216,172,19)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="655.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,588 samples, 2.34%)</title><rect x="94.1991%" y="629" width="2.3399%" height="15" fill="rgb(227,6,42)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="639.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,588 samples, 2.34%)</title><rect x="94.1991%" y="613" width="2.3399%" height="15" fill="rgb(223,207,42)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="623.50">c..</text></g><g><title>stellar_coordinates_test::setup (2,588 samples, 2.34%)</title><rect x="94.1991%" y="597" width="2.3399%" height="15" fill="rgb(246,138,30)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="607.50">s..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (2,588 samples, 2.34%)</title><rect x="94.1991%" y="581" width="2.3399%" height="15" fill="rgb(251,199,47)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="591.50">&lt;..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (2,588 samples, 2.34%)</title><rect x="94.1991%" y="565" width="2.3399%" height="15" fill="rgb(228,218,44)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="575.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2,588 samples, 2.34%)</title><rect x="94.1991%" y="549" width="2.3399%" height="15" fill="rgb(220,68,6)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="559.50">l..</text></g><g><title>std::sync::once::Once::call_once (2,588 samples, 2.34%)</title><rect x="94.1991%" y="533" width="2.3399%" height="15" fill="rgb(240,60,26)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="543.50">s..</text></g><g><title>std::sync::once::Once::call_inner (2,588 samples, 2.34%)</title><rect x="94.1991%" y="517" width="2.3399%" height="15" fill="rgb(211,200,19)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="527.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2,588 samples, 2.34%)</title><rect x="94.1991%" y="501" width="2.3399%" height="15" fill="rgb(242,145,30)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="511.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (2,588 samples, 2.34%)</title><rect x="94.1991%" y="485" width="2.3399%" height="15" fill="rgb(225,64,13)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="495.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (2,588 samples, 2.34%)</title><rect x="94.1991%" y="469" width="2.3399%" height="15" fill="rgb(218,103,35)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="479.50">c..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (2,588 samples, 2.34%)</title><rect x="94.1991%" y="453" width="2.3399%" height="15" fill="rgb(216,93,46)" fg:x="104187" fg:w="2588"/><text x="94.4491%" y="463.50">&lt;..</text></g><g><title>std::io::stdio::_print (628 samples, 0.57%)</title><rect x="95.9712%" y="437" width="0.5678%" height="15" fill="rgb(225,159,27)" fg:x="106147" fg:w="628"/><text x="96.2212%" y="447.50"></text></g><g><title>std::io::stdio::print_to (568 samples, 0.51%)</title><rect x="96.0254%" y="421" width="0.5135%" height="15" fill="rgb(225,204,11)" fg:x="106207" fg:w="568"/><text x="96.2754%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (3,285 samples, 2.97%)</title><rect x="93.5707%" y="981" width="2.9701%" height="15" fill="rgb(205,56,4)" fg:x="103492" fg:w="3285"/><text x="93.8207%" y="991.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (3,285 samples, 2.97%)</title><rect x="93.5707%" y="965" width="2.9701%" height="15" fill="rgb(206,6,35)" fg:x="103492" fg:w="3285"/><text x="93.8207%" y="975.50">win..</text></g><g><title>&lt;bevy_pbr::render::mesh::SetMeshViewBindGroup&lt;_&gt; as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (12 samples, 0.01%)</title><rect x="96.5625%" y="709" width="0.0108%" height="15" fill="rgb(247,73,52)" fg:x="106801" fg:w="12"/><text x="96.8125%" y="719.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_vertex_buffer (26 samples, 0.02%)</title><rect x="96.5896%" y="693" width="0.0235%" height="15" fill="rgb(246,97,4)" fg:x="106831" fg:w="26"/><text x="96.8396%" y="703.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (21 samples, 0.02%)</title><rect x="96.5941%" y="677" width="0.0190%" height="15" fill="rgb(212,37,15)" fg:x="106836" fg:w="21"/><text x="96.8441%" y="687.50"></text></g><g><title>wgpu::backend::direct::pass_impl::&lt;impl wgpu::RenderInner&lt;wgpu::backend::direct::Context&gt; for wgpu_core::command::render::RenderPass&gt;::set_vertex_buffer (21 samples, 0.02%)</title><rect x="96.5941%" y="661" width="0.0190%" height="15" fill="rgb(208,130,40)" fg:x="106836" fg:w="21"/><text x="96.8441%" y="671.50"></text></g><g><title>&lt;E as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (83 samples, 0.08%)</title><rect x="96.5525%" y="725" width="0.0750%" height="15" fill="rgb(236,55,29)" fg:x="106790" fg:w="83"/><text x="96.8025%" y="735.50"></text></g><g><title>&lt;stellar_coordinates_test::GPUInstanceing::DrawMeshInstanced as bevy_render::render_phase::draw::EntityRenderCommand&gt;::render (53 samples, 0.05%)</title><rect x="96.5797%" y="709" width="0.0479%" height="15" fill="rgb(209,156,45)" fg:x="106820" fg:w="53"/><text x="96.8297%" y="719.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (85 samples, 0.08%)</title><rect x="96.5525%" y="741" width="0.0769%" height="15" fill="rgb(249,107,4)" fg:x="106790" fg:w="85"/><text x="96.8025%" y="751.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get_unchecked_manual (14 samples, 0.01%)</title><rect x="96.6294%" y="725" width="0.0127%" height="15" fill="rgb(227,7,13)" fg:x="106875" fg:w="14"/><text x="96.8794%" y="735.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (105 samples, 0.09%)</title><rect x="96.5498%" y="757" width="0.0949%" height="15" fill="rgb(250,129,14)" fg:x="106787" fg:w="105"/><text x="96.7998%" y="767.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get (17 samples, 0.02%)</title><rect x="96.6294%" y="741" width="0.0154%" height="15" fill="rgb(229,92,13)" fg:x="106875" fg:w="17"/><text x="96.8794%" y="751.50"></text></g><g><title>&lt;bevy_core_pipeline::main_pass_3d::MainPass3dNode as bevy_render::render_graph::node::Node&gt;::run (113 samples, 0.10%)</title><rect x="96.5480%" y="773" width="0.1022%" height="15" fill="rgb(245,98,39)" fg:x="106785" fg:w="113"/><text x="96.7980%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (115 samples, 0.10%)</title><rect x="96.5471%" y="805" width="0.1040%" height="15" fill="rgb(234,135,48)" fg:x="106784" fg:w="115"/><text x="96.7971%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (115 samples, 0.10%)</title><rect x="96.5471%" y="789" width="0.1040%" height="15" fill="rgb(230,98,28)" fg:x="106784" fg:w="115"/><text x="96.7971%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (36 samples, 0.03%)</title><rect x="96.6972%" y="741" width="0.0325%" height="15" fill="rgb(223,121,0)" fg:x="106950" fg:w="36"/><text x="96.9472%" y="751.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (49 samples, 0.04%)</title><rect x="96.6873%" y="757" width="0.0443%" height="15" fill="rgb(234,173,33)" fg:x="106939" fg:w="49"/><text x="96.9373%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::allocator::GpuAllocator&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="96.7605%" y="693" width="0.0208%" height="15" fill="rgb(245,47,8)" fg:x="107020" fg:w="23"/><text x="97.0105%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="96.7605%" y="677" width="0.0208%" height="15" fill="rgb(205,17,20)" fg:x="107020" fg:w="23"/><text x="97.0105%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (23 samples, 0.02%)</title><rect x="96.7605%" y="661" width="0.0208%" height="15" fill="rgb(232,151,16)" fg:x="107020" fg:w="23"/><text x="97.0105%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (23 samples, 0.02%)</title><rect x="96.7605%" y="645" width="0.0208%" height="15" fill="rgb(208,30,32)" fg:x="107020" fg:w="23"/><text x="97.0105%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="96.7605%" y="629" width="0.0208%" height="15" fill="rgb(254,26,3)" fg:x="107020" fg:w="23"/><text x="97.0105%" y="639.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (31 samples, 0.03%)</title><rect x="96.7813%" y="693" width="0.0280%" height="15" fill="rgb(240,177,30)" fg:x="107043" fg:w="31"/><text x="97.0313%" y="703.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (22 samples, 0.02%)</title><rect x="96.7894%" y="677" width="0.0199%" height="15" fill="rgb(248,76,44)" fg:x="107052" fg:w="22"/><text x="97.0394%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::buddy::BuddyBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (20 samples, 0.02%)</title><rect x="96.7912%" y="661" width="0.0181%" height="15" fill="rgb(241,186,54)" fg:x="107054" fg:w="20"/><text x="97.0412%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (20 samples, 0.02%)</title><rect x="96.7912%" y="645" width="0.0181%" height="15" fill="rgb(249,171,29)" fg:x="107054" fg:w="20"/><text x="97.0412%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="96.7912%" y="629" width="0.0181%" height="15" fill="rgb(237,151,44)" fg:x="107054" fg:w="20"/><text x="97.0412%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="96.7912%" y="613" width="0.0181%" height="15" fill="rgb(228,174,30)" fg:x="107054" fg:w="20"/><text x="97.0412%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="96.7912%" y="597" width="0.0181%" height="15" fill="rgb(252,14,37)" fg:x="107054" fg:w="20"/><text x="97.0412%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::into_inner (18 samples, 0.02%)</title><rect x="96.8093%" y="693" width="0.0163%" height="15" fill="rgb(207,111,40)" fg:x="107074" fg:w="18"/><text x="97.0593%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.02%)</title><rect x="96.8256%" y="693" width="0.0163%" height="15" fill="rgb(248,171,54)" fg:x="107092" fg:w="18"/><text x="97.0756%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.02%)</title><rect x="96.8256%" y="677" width="0.0163%" height="15" fill="rgb(211,127,2)" fg:x="107092" fg:w="18"/><text x="97.0756%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (18 samples, 0.02%)</title><rect x="96.8256%" y="661" width="0.0163%" height="15" fill="rgb(236,87,47)" fg:x="107092" fg:w="18"/><text x="97.0756%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.02%)</title><rect x="96.8256%" y="645" width="0.0163%" height="15" fill="rgb(223,190,45)" fg:x="107092" fg:w="18"/><text x="97.0756%" y="655.50"></text></g><g><title>_nv011glcore (106 samples, 0.10%)</title><rect x="96.9124%" y="677" width="0.0958%" height="15" fill="rgb(215,5,16)" fg:x="107188" fg:w="106"/><text x="97.1624%" y="687.50"></text></g><g><title>__free (102 samples, 0.09%)</title><rect x="96.9160%" y="661" width="0.0922%" height="15" fill="rgb(252,82,33)" fg:x="107192" fg:w="102"/><text x="97.1660%" y="671.50"></text></g><g><title>_int_free (92 samples, 0.08%)</title><rect x="96.9250%" y="645" width="0.0832%" height="15" fill="rgb(247,213,44)" fg:x="107202" fg:w="92"/><text x="97.1750%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (350 samples, 0.32%)</title><rect x="96.7523%" y="709" width="0.3164%" height="15" fill="rgb(205,196,44)" fg:x="107011" fg:w="350"/><text x="97.0023%" y="719.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (251 samples, 0.23%)</title><rect x="96.8419%" y="693" width="0.2269%" height="15" fill="rgb(237,96,54)" fg:x="107110" fg:w="251"/><text x="97.0919%" y="703.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (67 samples, 0.06%)</title><rect x="97.0082%" y="677" width="0.0606%" height="15" fill="rgb(230,113,34)" fg:x="107294" fg:w="67"/><text x="97.2582%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (368 samples, 0.33%)</title><rect x="96.7370%" y="741" width="0.3327%" height="15" fill="rgb(221,224,12)" fg:x="106994" fg:w="368"/><text x="96.9870%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (368 samples, 0.33%)</title><rect x="96.7370%" y="725" width="0.3327%" height="15" fill="rgb(219,112,44)" fg:x="106994" fg:w="368"/><text x="96.9870%" y="735.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (370 samples, 0.33%)</title><rect x="96.7361%" y="757" width="0.3345%" height="15" fill="rgb(210,31,13)" fg:x="106993" fg:w="370"/><text x="96.9861%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (603 samples, 0.55%)</title><rect x="96.5408%" y="885" width="0.5452%" height="15" fill="rgb(230,25,16)" fg:x="106777" fg:w="603"/><text x="96.7908%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&lt;F&gt; as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (596 samples, 0.54%)</title><rect x="96.5471%" y="869" width="0.5389%" height="15" fill="rgb(246,108,53)" fg:x="106784" fg:w="596"/><text x="96.7971%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (596 samples, 0.54%)</title><rect x="96.5471%" y="853" width="0.5389%" height="15" fill="rgb(241,172,50)" fg:x="106784" fg:w="596"/><text x="96.7971%" y="863.50"></text></g><g><title>bevy_render::renderer::render_system (596 samples, 0.54%)</title><rect x="96.5471%" y="837" width="0.5389%" height="15" fill="rgb(235,141,10)" fg:x="106784" fg:w="596"/><text x="96.7971%" y="847.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (596 samples, 0.54%)</title><rect x="96.5471%" y="821" width="0.5389%" height="15" fill="rgb(220,174,43)" fg:x="106784" fg:w="596"/><text x="96.7971%" y="831.50"></text></g><g><title>wgpu::Queue::submit (481 samples, 0.43%)</title><rect x="96.6511%" y="805" width="0.4349%" height="15" fill="rgb(215,181,40)" fg:x="106899" fg:w="481"/><text x="96.9011%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (481 samples, 0.43%)</title><rect x="96.6511%" y="789" width="0.4349%" height="15" fill="rgb(230,97,2)" fg:x="106899" fg:w="481"/><text x="96.9011%" y="799.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (481 samples, 0.43%)</title><rect x="96.6511%" y="773" width="0.4349%" height="15" fill="rgb(211,25,27)" fg:x="106899" fg:w="481"/><text x="96.9011%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (638 samples, 0.58%)</title><rect x="96.5408%" y="917" width="0.5768%" height="15" fill="rgb(230,87,26)" fg:x="106777" fg:w="638"/><text x="96.7908%" y="927.50"></text></g><g><title>&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build::{{closure}} (638 samples, 0.58%)</title><rect x="96.5408%" y="901" width="0.5768%" height="15" fill="rgb(227,160,17)" fg:x="106777" fg:w="638"/><text x="96.7908%" y="911.50"></text></g><g><title>bevy_render::extract (35 samples, 0.03%)</title><rect x="97.0860%" y="885" width="0.0316%" height="15" fill="rgb(244,85,34)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="895.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (35 samples, 0.03%)</title><rect x="97.0860%" y="869" width="0.0316%" height="15" fill="rgb(207,70,0)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (35 samples, 0.03%)</title><rect x="97.0860%" y="853" width="0.0316%" height="15" fill="rgb(223,129,7)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (35 samples, 0.03%)</title><rect x="97.0860%" y="837" width="0.0316%" height="15" fill="rgb(246,105,7)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.03%)</title><rect x="97.0860%" y="821" width="0.0316%" height="15" fill="rgb(215,154,42)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="97.0860%" y="805" width="0.0316%" height="15" fill="rgb(220,215,30)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (35 samples, 0.03%)</title><rect x="97.0860%" y="789" width="0.0316%" height="15" fill="rgb(228,81,51)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="799.50"></text></g><g><title>async_executor::Executor::try_tick (35 samples, 0.03%)</title><rect x="97.0860%" y="773" width="0.0316%" height="15" fill="rgb(247,71,54)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (35 samples, 0.03%)</title><rect x="97.0860%" y="757" width="0.0316%" height="15" fill="rgb(234,176,34)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="97.0860%" y="741" width="0.0316%" height="15" fill="rgb(241,103,54)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (35 samples, 0.03%)</title><rect x="97.0860%" y="725" width="0.0316%" height="15" fill="rgb(228,22,34)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="97.0860%" y="709" width="0.0316%" height="15" fill="rgb(241,179,48)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (35 samples, 0.03%)</title><rect x="97.0860%" y="693" width="0.0316%" height="15" fill="rgb(235,167,37)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (35 samples, 0.03%)</title><rect x="97.0860%" y="677" width="0.0316%" height="15" fill="rgb(213,109,30)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (35 samples, 0.03%)</title><rect x="97.0860%" y="661" width="0.0316%" height="15" fill="rgb(222,172,16)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run::call_inner (35 samples, 0.03%)</title><rect x="97.0860%" y="645" width="0.0316%" height="15" fill="rgb(233,192,5)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.03%)</title><rect x="97.0860%" y="629" width="0.0316%" height="15" fill="rgb(247,189,41)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 0.03%)</title><rect x="97.0860%" y="613" width="0.0316%" height="15" fill="rgb(218,134,47)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="623.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset (35 samples, 0.03%)</title><rect x="97.0860%" y="597" width="0.0316%" height="15" fill="rgb(216,29,3)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="607.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::extract_asset (35 samples, 0.03%)</title><rect x="97.0860%" y="581" width="0.0316%" height="15" fill="rgb(246,140,12)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="591.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::Mesh as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="97.0860%" y="565" width="0.0316%" height="15" fill="rgb(230,136,11)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="97.0860%" y="549" width="0.0316%" height="15" fill="rgb(247,22,47)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (35 samples, 0.03%)</title><rect x="97.0860%" y="533" width="0.0316%" height="15" fill="rgb(218,84,22)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="543.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="97.0860%" y="517" width="0.0316%" height="15" fill="rgb(216,87,39)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="527.50"></text></g><g><title>&lt;bevy_render::mesh::mesh::VertexAttributeValues as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="97.0860%" y="501" width="0.0316%" height="15" fill="rgb(221,178,8)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="97.0860%" y="485" width="0.0316%" height="15" fill="rgb(230,42,11)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="97.0860%" y="469" width="0.0316%" height="15" fill="rgb(237,229,4)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="97.0860%" y="453" width="0.0316%" height="15" fill="rgb(222,31,33)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="97.0860%" y="437" width="0.0316%" height="15" fill="rgb(210,17,39)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="97.0860%" y="421" width="0.0316%" height="15" fill="rgb(244,93,20)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="97.0860%" y="405" width="0.0316%" height="15" fill="rgb(210,40,47)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.03%)</title><rect x="97.0860%" y="389" width="0.0316%" height="15" fill="rgb(239,211,47)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.03%)</title><rect x="97.0860%" y="373" width="0.0316%" height="15" fill="rgb(251,223,49)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.03%)</title><rect x="97.0860%" y="357" width="0.0316%" height="15" fill="rgb(221,149,5)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="367.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="97.0860%" y="341" width="0.0316%" height="15" fill="rgb(219,224,51)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="351.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.03%)</title><rect x="97.0860%" y="325" width="0.0316%" height="15" fill="rgb(223,7,8)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="335.50"></text></g><g><title>_int_malloc (35 samples, 0.03%)</title><rect x="97.0860%" y="309" width="0.0316%" height="15" fill="rgb(241,217,22)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="319.50"></text></g><g><title>malloc_consolidate (35 samples, 0.03%)</title><rect x="97.0860%" y="293" width="0.0316%" height="15" fill="rgb(248,209,0)" fg:x="107380" fg:w="35"/><text x="97.3360%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (121 samples, 0.11%)</title><rect x="97.2207%" y="133" width="0.1094%" height="15" fill="rgb(217,205,4)" fg:x="107529" fg:w="121"/><text x="97.4707%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned_erms (257 samples, 0.23%)</title><rect x="98.0335%" y="117" width="0.2324%" height="15" fill="rgb(228,124,39)" fg:x="108428" fg:w="257"/><text x="98.2835%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (294 samples, 0.27%)</title><rect x="98.3310%" y="101" width="0.2658%" height="15" fill="rgb(250,116,42)" fg:x="108757" fg:w="294"/><text x="98.5810%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (368 samples, 0.33%)</title><rect x="98.2659%" y="117" width="0.3327%" height="15" fill="rgb(223,202,9)" fg:x="108685" fg:w="368"/><text x="98.5159%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (37 samples, 0.03%)</title><rect x="98.7062%" y="85" width="0.0335%" height="15" fill="rgb(242,222,40)" fg:x="109172" fg:w="37"/><text x="98.9562%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="98.7243%" y="69" width="0.0154%" height="15" fill="rgb(229,99,46)" fg:x="109192" fg:w="17"/><text x="98.9743%" y="79.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (17 samples, 0.02%)</title><rect x="98.7243%" y="53" width="0.0154%" height="15" fill="rgb(225,56,46)" fg:x="109192" fg:w="17"/><text x="98.9743%" y="63.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (17 samples, 0.02%)</title><rect x="98.7243%" y="37" width="0.0154%" height="15" fill="rgb(227,94,5)" fg:x="109192" fg:w="17"/><text x="98.9743%" y="47.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (40 samples, 0.04%)</title><rect x="98.7062%" y="101" width="0.0362%" height="15" fill="rgb(205,112,38)" fg:x="109172" fg:w="40"/><text x="98.9562%" y="111.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (175 samples, 0.16%)</title><rect x="98.5986%" y="117" width="0.1582%" height="15" fill="rgb(231,133,46)" fg:x="109053" fg:w="175"/><text x="98.8486%" y="127.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16 samples, 0.01%)</title><rect x="98.7423%" y="101" width="0.0145%" height="15" fill="rgb(217,16,9)" fg:x="109212" fg:w="16"/><text x="98.9923%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (16 samples, 0.01%)</title><rect x="98.7423%" y="85" width="0.0145%" height="15" fill="rgb(249,173,9)" fg:x="109212" fg:w="16"/><text x="98.9923%" y="95.50"></text></g><g><title>&lt;&amp;mut T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (51 samples, 0.05%)</title><rect x="98.8002%" y="85" width="0.0461%" height="15" fill="rgb(205,163,53)" fg:x="109276" fg:w="51"/><text x="99.0502%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (51 samples, 0.05%)</title><rect x="98.8002%" y="69" width="0.0461%" height="15" fill="rgb(217,54,41)" fg:x="109276" fg:w="51"/><text x="99.0502%" y="79.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (51 samples, 0.05%)</title><rect x="98.8002%" y="53" width="0.0461%" height="15" fill="rgb(228,216,12)" fg:x="109276" fg:w="51"/><text x="99.0502%" y="63.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (51 samples, 0.05%)</title><rect x="98.8002%" y="37" width="0.0461%" height="15" fill="rgb(244,228,15)" fg:x="109276" fg:w="51"/><text x="99.0502%" y="47.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (31 samples, 0.03%)</title><rect x="98.8463%" y="85" width="0.0280%" height="15" fill="rgb(221,176,53)" fg:x="109327" fg:w="31"/><text x="99.0963%" y="95.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (31 samples, 0.03%)</title><rect x="98.8463%" y="69" width="0.0280%" height="15" fill="rgb(205,94,34)" fg:x="109327" fg:w="31"/><text x="99.0963%" y="79.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (31 samples, 0.03%)</title><rect x="98.8463%" y="53" width="0.0280%" height="15" fill="rgb(213,110,48)" fg:x="109327" fg:w="31"/><text x="99.0963%" y="63.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (31 samples, 0.03%)</title><rect x="98.8463%" y="37" width="0.0280%" height="15" fill="rgb(236,142,28)" fg:x="109327" fg:w="31"/><text x="99.0963%" y="47.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (140 samples, 0.13%)</title><rect x="98.7604%" y="117" width="0.1266%" height="15" fill="rgb(225,135,29)" fg:x="109232" fg:w="140"/><text x="99.0104%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::read_u32_le (96 samples, 0.09%)</title><rect x="98.8002%" y="101" width="0.0868%" height="15" fill="rgb(252,45,31)" fg:x="109276" fg:w="96"/><text x="99.0502%" y="111.50"></text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left (18 samples, 0.02%)</title><rect x="98.8870%" y="117" width="0.0163%" height="15" fill="rgb(211,187,50)" fg:x="109372" fg:w="18"/><text x="99.1370%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (1,813 samples, 1.64%)</title><rect x="97.3301%" y="133" width="1.6392%" height="15" fill="rgb(229,109,7)" fg:x="107650" fg:w="1813"/><text x="97.5801%" y="143.50"></text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte (73 samples, 0.07%)</title><rect x="98.9033%" y="117" width="0.0660%" height="15" fill="rgb(251,131,51)" fg:x="109390" fg:w="73"/><text x="99.1533%" y="127.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (2,046 samples, 1.85%)</title><rect x="97.1230%" y="149" width="1.8499%" height="15" fill="rgb(251,180,35)" fg:x="107421" fg:w="2046"/><text x="97.3730%" y="159.50">m..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (2,050 samples, 1.85%)</title><rect x="97.1221%" y="165" width="1.8535%" height="15" fill="rgb(211,46,32)" fg:x="107420" fg:w="2050"/><text x="97.3721%" y="175.50">m..</text></g><g><title>&lt;flate2::deflate::bufread::DeflateDecoder&lt;R&gt; as std::io::Read&gt;::read (2,063 samples, 1.87%)</title><rect x="97.1176%" y="261" width="1.8652%" height="15" fill="rgb(248,123,17)" fg:x="107415" fg:w="2063"/><text x="97.3676%" y="271.50">&lt;..</text></g><g><title>flate2::zio::read (2,063 samples, 1.87%)</title><rect x="97.1176%" y="245" width="1.8652%" height="15" fill="rgb(227,141,18)" fg:x="107415" fg:w="2063"/><text x="97.3676%" y="255.50">f..</text></g><g><title>&lt;flate2::mem::Decompress as flate2::zio::Ops&gt;::run (2,062 samples, 1.86%)</title><rect x="97.1185%" y="229" width="1.8643%" height="15" fill="rgb(216,102,9)" fg:x="107416" fg:w="2062"/><text x="97.3685%" y="239.50">&lt;..</text></g><g><title>flate2::mem::Decompress::decompress (2,062 samples, 1.86%)</title><rect x="97.1185%" y="213" width="1.8643%" height="15" fill="rgb(253,47,13)" fg:x="107416" fg:w="2062"/><text x="97.3685%" y="223.50">f..</text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2,062 samples, 1.86%)</title><rect x="97.1185%" y="197" width="1.8643%" height="15" fill="rgb(226,93,23)" fg:x="107416" fg:w="2062"/><text x="97.3685%" y="207.50">&lt;..</text></g><g><title>miniz_oxide::inflate::stream::inflate (2,058 samples, 1.86%)</title><rect x="97.1221%" y="181" width="1.8607%" height="15" fill="rgb(247,104,17)" fg:x="107420" fg:w="2058"/><text x="97.3721%" y="191.50">m..</text></g><g><title>&lt;csv::reader::DeserializeRecordsIntoIter&lt;R,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,064 samples, 1.87%)</title><rect x="97.1176%" y="453" width="1.8661%" height="15" fill="rgb(233,203,26)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="463.50">&lt;..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_record (2,064 samples, 1.87%)</title><rect x="97.1176%" y="437" width="1.8661%" height="15" fill="rgb(244,98,49)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="447.50">c..</text></g><g><title>csv::string_record::StringRecord::read (2,064 samples, 1.87%)</title><rect x="97.1176%" y="421" width="1.8661%" height="15" fill="rgb(235,134,22)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="431.50">c..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record (2,064 samples, 1.87%)</title><rect x="97.1176%" y="405" width="1.8661%" height="15" fill="rgb(221,70,32)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="415.50">c..</text></g><g><title>csv::reader::Reader&lt;R&gt;::read_byte_record_impl (2,064 samples, 1.87%)</title><rect x="97.1176%" y="389" width="1.8661%" height="15" fill="rgb(238,15,50)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="399.50">c..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2,064 samples, 1.87%)</title><rect x="97.1176%" y="373" width="1.8661%" height="15" fill="rgb(215,221,48)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="383.50">&lt;..</text></g><g><title>std::io::Read::read_buf (2,064 samples, 1.87%)</title><rect x="97.1176%" y="357" width="1.8661%" height="15" fill="rgb(236,73,3)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="367.50">s..</text></g><g><title>std::io::default_read_buf (2,064 samples, 1.87%)</title><rect x="97.1176%" y="341" width="1.8661%" height="15" fill="rgb(250,107,11)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="351.50">s..</text></g><g><title>std::io::Read::read_buf::{{closure}} (2,064 samples, 1.87%)</title><rect x="97.1176%" y="325" width="1.8661%" height="15" fill="rgb(242,39,14)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="335.50">s..</text></g><g><title>&lt;flate2::gz::read::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (2,064 samples, 1.87%)</title><rect x="97.1176%" y="309" width="1.8661%" height="15" fill="rgb(248,164,37)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="319.50">&lt;..</text></g><g><title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (2,064 samples, 1.87%)</title><rect x="97.1176%" y="293" width="1.8661%" height="15" fill="rgb(217,60,12)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="303.50">&lt;..</text></g><g><title>&lt;flate2::crc::CrcReader&lt;R&gt; as std::io::Read&gt;::read (2,064 samples, 1.87%)</title><rect x="97.1176%" y="277" width="1.8661%" height="15" fill="rgb(240,125,29)" fg:x="107415" fg:w="2064"/><text x="97.3676%" y="287.50">&lt;..</text></g><g><title>core::fmt::Formatter::write_formatted_parts (22 samples, 0.02%)</title><rect x="98.9865%" y="325" width="0.0199%" height="15" fill="rgb(208,207,28)" fg:x="109482" fg:w="22"/><text x="99.2365%" y="335.50"></text></g><g><title>core::num::flt2dec::decoder::decode (13 samples, 0.01%)</title><rect x="99.0181%" y="309" width="0.0118%" height="15" fill="rgb(209,159,27)" fg:x="109517" fg:w="13"/><text x="99.2681%" y="319.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (13 samples, 0.01%)</title><rect x="99.0326%" y="309" width="0.0118%" height="15" fill="rgb(251,176,53)" fg:x="109533" fg:w="13"/><text x="99.2826%" y="319.50"></text></g><g><title>core::num::diy_float::Fp::mul (18 samples, 0.02%)</title><rect x="99.2044%" y="261" width="0.0163%" height="15" fill="rgb(211,85,7)" fg:x="109723" fg:w="18"/><text x="99.4544%" y="271.50"></text></g><g><title>core::num::diy_float::Fp::normalize (17 samples, 0.02%)</title><rect x="99.2206%" y="261" width="0.0154%" height="15" fill="rgb(216,64,54)" fg:x="109741" fg:w="17"/><text x="99.4706%" y="271.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::cached_power (20 samples, 0.02%)</title><rect x="99.2360%" y="261" width="0.0181%" height="15" fill="rgb(217,54,24)" fg:x="109758" fg:w="20"/><text x="99.4860%" y="271.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (3,003 samples, 2.72%)</title><rect x="96.5408%" y="981" width="2.7151%" height="15" fill="rgb(208,206,53)" fg:x="106777" fg:w="3003"/><text x="96.7908%" y="991.50">wi..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (3,003 samples, 2.72%)</title><rect x="96.5408%" y="965" width="2.7151%" height="15" fill="rgb(251,74,39)" fg:x="106777" fg:w="3003"/><text x="96.7908%" y="975.50">wi..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (3,003 samples, 2.72%)</title><rect x="96.5408%" y="949" width="2.7151%" height="15" fill="rgb(226,47,5)" fg:x="106777" fg:w="3003"/><text x="96.7908%" y="959.50">be..</text></g><g><title>bevy_app::app::App::update (3,003 samples, 2.72%)</title><rect x="96.5408%" y="933" width="2.7151%" height="15" fill="rgb(234,111,33)" fg:x="106777" fg:w="3003"/><text x="96.7908%" y="943.50">be..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,365 samples, 2.14%)</title><rect x="97.1176%" y="917" width="2.1383%" height="15" fill="rgb(251,14,10)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="927.50">b..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,365 samples, 2.14%)</title><rect x="97.1176%" y="901" width="2.1383%" height="15" fill="rgb(232,43,0)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="911.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,365 samples, 2.14%)</title><rect x="97.1176%" y="885" width="2.1383%" height="15" fill="rgb(222,68,43)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="895.50">&lt;..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,365 samples, 2.14%)</title><rect x="97.1176%" y="869" width="2.1383%" height="15" fill="rgb(217,24,23)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="879.50">&lt;..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,365 samples, 2.14%)</title><rect x="97.1176%" y="853" width="2.1383%" height="15" fill="rgb(229,209,14)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="863.50">b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,365 samples, 2.14%)</title><rect x="97.1176%" y="837" width="2.1383%" height="15" fill="rgb(250,149,48)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="847.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,365 samples, 2.14%)</title><rect x="97.1176%" y="821" width="2.1383%" height="15" fill="rgb(210,120,37)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="831.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,365 samples, 2.14%)</title><rect x="97.1176%" y="805" width="2.1383%" height="15" fill="rgb(210,21,8)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="815.50">b..</text></g><g><title>async_executor::Executor::try_tick (2,365 samples, 2.14%)</title><rect x="97.1176%" y="789" width="2.1383%" height="15" fill="rgb(243,145,7)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="799.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,365 samples, 2.14%)</title><rect x="97.1176%" y="773" width="2.1383%" height="15" fill="rgb(238,178,32)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="783.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,365 samples, 2.14%)</title><rect x="97.1176%" y="757" width="2.1383%" height="15" fill="rgb(222,4,10)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="767.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,365 samples, 2.14%)</title><rect x="97.1176%" y="741" width="2.1383%" height="15" fill="rgb(239,7,37)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="751.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,365 samples, 2.14%)</title><rect x="97.1176%" y="725" width="2.1383%" height="15" fill="rgb(215,31,37)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="735.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,365 samples, 2.14%)</title><rect x="97.1176%" y="709" width="2.1383%" height="15" fill="rgb(224,83,33)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="719.50">b..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,365 samples, 2.14%)</title><rect x="97.1176%" y="693" width="2.1383%" height="15" fill="rgb(239,55,3)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="703.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2,365 samples, 2.14%)</title><rect x="97.1176%" y="677" width="2.1383%" height="15" fill="rgb(247,92,11)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="687.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run::call_inner (2,365 samples, 2.14%)</title><rect x="97.1176%" y="661" width="2.1383%" height="15" fill="rgb(239,200,7)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="671.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,365 samples, 2.14%)</title><rect x="97.1176%" y="645" width="2.1383%" height="15" fill="rgb(227,115,8)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="655.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (2,365 samples, 2.14%)</title><rect x="97.1176%" y="629" width="2.1383%" height="15" fill="rgb(215,189,27)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="639.50">c..</text></g><g><title>stellar_coordinates_test::setup (2,365 samples, 2.14%)</title><rect x="97.1176%" y="613" width="2.1383%" height="15" fill="rgb(251,216,39)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="623.50">s..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref (2,365 samples, 2.14%)</title><rect x="97.1176%" y="597" width="2.1383%" height="15" fill="rgb(207,29,47)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="607.50">&lt;..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__stability (2,365 samples, 2.14%)</title><rect x="97.1176%" y="581" width="2.1383%" height="15" fill="rgb(210,71,34)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="591.50">&lt;..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (2,365 samples, 2.14%)</title><rect x="97.1176%" y="565" width="2.1383%" height="15" fill="rgb(253,217,51)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="575.50">l..</text></g><g><title>std::sync::once::Once::call_once (2,365 samples, 2.14%)</title><rect x="97.1176%" y="549" width="2.1383%" height="15" fill="rgb(222,117,46)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="559.50">s..</text></g><g><title>std::sync::once::Once::call_inner (2,365 samples, 2.14%)</title><rect x="97.1176%" y="533" width="2.1383%" height="15" fill="rgb(226,132,6)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="543.50">s..</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2,365 samples, 2.14%)</title><rect x="97.1176%" y="517" width="2.1383%" height="15" fill="rgb(254,145,51)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="527.50">s..</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (2,365 samples, 2.14%)</title><rect x="97.1176%" y="501" width="2.1383%" height="15" fill="rgb(231,199,27)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="511.50">l..</text></g><g><title>core::ops::function::FnOnce::call_once (2,365 samples, 2.14%)</title><rect x="97.1176%" y="485" width="2.1383%" height="15" fill="rgb(245,158,14)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="495.50">c..</text></g><g><title>&lt;stellar_coordinates_test::CHUNKS as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (2,365 samples, 2.14%)</title><rect x="97.1176%" y="469" width="2.1383%" height="15" fill="rgb(240,113,14)" fg:x="107415" fg:w="2365"/><text x="97.3676%" y="479.50">&lt;..</text></g><g><title>std::io::stdio::_print (301 samples, 0.27%)</title><rect x="98.9838%" y="453" width="0.2721%" height="15" fill="rgb(210,20,13)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="463.50"></text></g><g><title>std::io::stdio::print_to (301 samples, 0.27%)</title><rect x="98.9838%" y="437" width="0.2721%" height="15" fill="rgb(241,144,13)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (301 samples, 0.27%)</title><rect x="98.9838%" y="421" width="0.2721%" height="15" fill="rgb(235,43,34)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (301 samples, 0.27%)</title><rect x="98.9838%" y="405" width="0.2721%" height="15" fill="rgb(208,36,20)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (301 samples, 0.27%)</title><rect x="98.9838%" y="389" width="0.2721%" height="15" fill="rgb(239,204,10)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="399.50"></text></g><g><title>core::fmt::write (301 samples, 0.27%)</title><rect x="98.9838%" y="373" width="0.2721%" height="15" fill="rgb(217,84,43)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="383.50"></text></g><g><title>core::fmt::run (301 samples, 0.27%)</title><rect x="98.9838%" y="357" width="0.2721%" height="15" fill="rgb(241,170,50)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="367.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (301 samples, 0.27%)</title><rect x="98.9838%" y="341" width="0.2721%" height="15" fill="rgb(226,205,29)" fg:x="109479" fg:w="301"/><text x="99.2338%" y="351.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (275 samples, 0.25%)</title><rect x="99.0073%" y="325" width="0.2486%" height="15" fill="rgb(233,113,1)" fg:x="109505" fg:w="275"/><text x="99.2573%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (233 samples, 0.21%)</title><rect x="99.0452%" y="309" width="0.2107%" height="15" fill="rgb(253,98,13)" fg:x="109547" fg:w="233"/><text x="99.2952%" y="319.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (233 samples, 0.21%)</title><rect x="99.0452%" y="293" width="0.2107%" height="15" fill="rgb(211,115,12)" fg:x="109547" fg:w="233"/><text x="99.2952%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (216 samples, 0.20%)</title><rect x="99.0606%" y="277" width="0.1953%" height="15" fill="rgb(208,12,16)" fg:x="109564" fg:w="216"/><text x="99.3106%" y="287.50"></text></g><g><title>[unknown] (75,219 samples, 68.01%)</title><rect x="31.2487%" y="997" width="68.0081%" height="15" fill="rgb(237,193,54)" fg:x="34562" fg:w="75219"/><text x="31.4987%" y="1007.50">[unknown]</text></g><g><title>___pthread_cond_timedwait (43 samples, 0.04%)</title><rect x="99.3888%" y="917" width="0.0389%" height="15" fill="rgb(243,22,42)" fg:x="109927" fg:w="43"/><text x="99.6388%" y="927.50"></text></g><g><title>__futex_abstimed_wait_common (42 samples, 0.04%)</title><rect x="99.3897%" y="901" width="0.0380%" height="15" fill="rgb(233,151,36)" fg:x="109928" fg:w="42"/><text x="99.6397%" y="911.50"></text></g><g><title>__sscanf (25 samples, 0.02%)</title><rect x="99.4295%" y="917" width="0.0226%" height="15" fill="rgb(237,57,45)" fg:x="109972" fg:w="25"/><text x="99.6795%" y="927.50"></text></g><g><title>__vfscanf_internal (14 samples, 0.01%)</title><rect x="99.4394%" y="901" width="0.0127%" height="15" fill="rgb(221,88,17)" fg:x="109983" fg:w="14"/><text x="99.6894%" y="911.50"></text></g><g><title>_nv011glcore (77 samples, 0.07%)</title><rect x="99.3852%" y="965" width="0.0696%" height="15" fill="rgb(230,79,15)" fg:x="109923" fg:w="77"/><text x="99.6352%" y="975.50"></text></g><g><title>vk_optimusGetDeviceProcAddr (77 samples, 0.07%)</title><rect x="99.3852%" y="949" width="0.0696%" height="15" fill="rgb(213,57,13)" fg:x="109923" fg:w="77"/><text x="99.6352%" y="959.50"></text></g><g><title>_nv011glcore (75 samples, 0.07%)</title><rect x="99.3870%" y="933" width="0.0678%" height="15" fill="rgb(222,116,39)" fg:x="109925" fg:w="75"/><text x="99.6370%" y="943.50"></text></g><g><title>std::thread::sleep (45 samples, 0.04%)</title><rect x="99.4693%" y="757" width="0.0407%" height="15" fill="rgb(245,107,2)" fg:x="110016" fg:w="45"/><text x="99.7193%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (45 samples, 0.04%)</title><rect x="99.4693%" y="741" width="0.0407%" height="15" fill="rgb(238,1,10)" fg:x="110016" fg:w="45"/><text x="99.7193%" y="751.50"></text></g><g><title>__GI___nanosleep (44 samples, 0.04%)</title><rect x="99.4702%" y="725" width="0.0398%" height="15" fill="rgb(249,4,48)" fg:x="110017" fg:w="44"/><text x="99.7202%" y="735.50"></text></g><g><title>__clock_nanosleep (42 samples, 0.04%)</title><rect x="99.4720%" y="709" width="0.0380%" height="15" fill="rgb(223,151,18)" fg:x="110019" fg:w="42"/><text x="99.7220%" y="719.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.06%)</title><rect x="99.4548%" y="885" width="0.0588%" height="15" fill="rgb(227,65,43)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="895.50"></text></g><g><title>std::panicking::try (65 samples, 0.06%)</title><rect x="99.4548%" y="869" width="0.0588%" height="15" fill="rgb(218,40,45)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="879.50"></text></g><g><title>std::panicking::try::do_call (65 samples, 0.06%)</title><rect x="99.4548%" y="853" width="0.0588%" height="15" fill="rgb(252,121,31)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="99.4548%" y="837" width="0.0588%" height="15" fill="rgb(219,158,43)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="847.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (65 samples, 0.06%)</title><rect x="99.4548%" y="821" width="0.0588%" height="15" fill="rgb(231,162,42)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (65 samples, 0.06%)</title><rect x="99.4548%" y="805" width="0.0588%" height="15" fill="rgb(217,179,25)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="815.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (65 samples, 0.06%)</title><rect x="99.4548%" y="789" width="0.0588%" height="15" fill="rgb(206,212,31)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="799.50"></text></g><g><title>gilrs::ff::server::run (65 samples, 0.06%)</title><rect x="99.4548%" y="773" width="0.0588%" height="15" fill="rgb(235,144,12)" fg:x="110000" fg:w="65"/><text x="99.7048%" y="783.50"></text></g><g><title>__GI___clone (277 samples, 0.25%)</title><rect x="99.2640%" y="997" width="0.2504%" height="15" fill="rgb(213,51,10)" fg:x="109789" fg:w="277"/><text x="99.5140%" y="1007.50"></text></g><g><title>start_thread (165 samples, 0.15%)</title><rect x="99.3653%" y="981" width="0.1492%" height="15" fill="rgb(231,145,14)" fg:x="109901" fg:w="165"/><text x="99.6153%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (66 samples, 0.06%)</title><rect x="99.4548%" y="965" width="0.0597%" height="15" fill="rgb(235,15,28)" fg:x="110000" fg:w="66"/><text x="99.7048%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="99.4548%" y="949" width="0.0597%" height="15" fill="rgb(237,206,10)" fg:x="110000" fg:w="66"/><text x="99.7048%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="99.4548%" y="933" width="0.0597%" height="15" fill="rgb(236,227,27)" fg:x="110000" fg:w="66"/><text x="99.7048%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 0.06%)</title><rect x="99.4548%" y="917" width="0.0597%" height="15" fill="rgb(246,83,35)" fg:x="110000" fg:w="66"/><text x="99.7048%" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (66 samples, 0.06%)</title><rect x="99.4548%" y="901" width="0.0597%" height="15" fill="rgb(220,136,24)" fg:x="110000" fg:w="66"/><text x="99.7048%" y="911.50"></text></g><g><title>__memmove_chk_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="99.5199%" y="997" width="0.0118%" height="15" fill="rgb(217,3,25)" fg:x="110072" fg:w="13"/><text x="99.7699%" y="1007.50"></text></g><g><title>[libudev.so.1.7.3] (18 samples, 0.02%)</title><rect x="99.5633%" y="501" width="0.0163%" height="15" fill="rgb(239,24,14)" fg:x="110120" fg:w="18"/><text x="99.8133%" y="511.50"></text></g><g><title>[libudev.so.1.7.3] (12 samples, 0.01%)</title><rect x="99.5687%" y="485" width="0.0108%" height="15" fill="rgb(244,16,53)" fg:x="110126" fg:w="12"/><text x="99.8187%" y="495.50"></text></g><g><title>[libudev.so.1.7.3] (28 samples, 0.03%)</title><rect x="99.5606%" y="517" width="0.0253%" height="15" fill="rgb(208,175,44)" fg:x="110117" fg:w="28"/><text x="99.8106%" y="527.50"></text></g><g><title>[libudev.so.1.7.3] (31 samples, 0.03%)</title><rect x="99.5606%" y="533" width="0.0280%" height="15" fill="rgb(252,18,48)" fg:x="110117" fg:w="31"/><text x="99.8106%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (32 samples, 0.03%)</title><rect x="99.5606%" y="549" width="0.0289%" height="15" fill="rgb(234,199,32)" fg:x="110117" fg:w="32"/><text x="99.8106%" y="559.50"></text></g><g><title>[libudev.so.1.7.3] (16 samples, 0.01%)</title><rect x="99.5904%" y="517" width="0.0145%" height="15" fill="rgb(225,77,54)" fg:x="110150" fg:w="16"/><text x="99.8404%" y="527.50"></text></g><g><title>udev_device_new_from_environment (17 samples, 0.02%)</title><rect x="99.5904%" y="549" width="0.0154%" height="15" fill="rgb(225,42,25)" fg:x="110150" fg:w="17"/><text x="99.8404%" y="559.50"></text></g><g><title>udev_device_new_from_environment (17 samples, 0.02%)</title><rect x="99.5904%" y="533" width="0.0154%" height="15" fill="rgb(242,227,46)" fg:x="110150" fg:w="17"/><text x="99.8404%" y="543.50"></text></g><g><title>[libudev.so.1.7.3] (54 samples, 0.05%)</title><rect x="99.5597%" y="565" width="0.0488%" height="15" fill="rgb(246,197,35)" fg:x="110116" fg:w="54"/><text x="99.8097%" y="575.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (65 samples, 0.06%)</title><rect x="99.5570%" y="693" width="0.0588%" height="15" fill="rgb(215,159,26)" fg:x="110113" fg:w="65"/><text x="99.8070%" y="703.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (65 samples, 0.06%)</title><rect x="99.5570%" y="677" width="0.0588%" height="15" fill="rgb(212,194,50)" fg:x="110113" fg:w="65"/><text x="99.8070%" y="687.50"></text></g><g><title>gilrs_core::Gilrs::new (64 samples, 0.06%)</title><rect x="99.5579%" y="661" width="0.0579%" height="15" fill="rgb(246,132,1)" fg:x="110114" fg:w="64"/><text x="99.8079%" y="671.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (64 samples, 0.06%)</title><rect x="99.5579%" y="645" width="0.0579%" height="15" fill="rgb(217,71,7)" fg:x="110114" fg:w="64"/><text x="99.8079%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (64 samples, 0.06%)</title><rect x="99.5579%" y="629" width="0.0579%" height="15" fill="rgb(252,59,32)" fg:x="110114" fg:w="64"/><text x="99.8079%" y="639.50"></text></g><g><title>udev_enumerate_scan_devices (64 samples, 0.06%)</title><rect x="99.5579%" y="613" width="0.0579%" height="15" fill="rgb(253,204,25)" fg:x="110114" fg:w="64"/><text x="99.8079%" y="623.50"></text></g><g><title>udev_device_get_properties_list_entry (64 samples, 0.06%)</title><rect x="99.5579%" y="597" width="0.0579%" height="15" fill="rgb(232,21,16)" fg:x="110114" fg:w="64"/><text x="99.8079%" y="607.50"></text></g><g><title>udev_device_get_properties_list_entry (63 samples, 0.06%)</title><rect x="99.5588%" y="581" width="0.0570%" height="15" fill="rgb(248,90,29)" fg:x="110115" fg:w="63"/><text x="99.8088%" y="591.50"></text></g><g><title>__libc_start_main_alias_2 (70 samples, 0.06%)</title><rect x="99.5561%" y="981" width="0.0633%" height="15" fill="rgb(249,223,7)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="991.50"></text></g><g><title>__libc_start_call_main (70 samples, 0.06%)</title><rect x="99.5561%" y="965" width="0.0633%" height="15" fill="rgb(231,119,42)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="975.50"></text></g><g><title>main (70 samples, 0.06%)</title><rect x="99.5561%" y="949" width="0.0633%" height="15" fill="rgb(215,41,35)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="959.50"></text></g><g><title>std::rt::lang_start_internal (70 samples, 0.06%)</title><rect x="99.5561%" y="933" width="0.0633%" height="15" fill="rgb(220,44,45)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="943.50"></text></g><g><title>std::panic::catch_unwind (70 samples, 0.06%)</title><rect x="99.5561%" y="917" width="0.0633%" height="15" fill="rgb(253,197,36)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="927.50"></text></g><g><title>std::panicking::try (70 samples, 0.06%)</title><rect x="99.5561%" y="901" width="0.0633%" height="15" fill="rgb(245,225,54)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="911.50"></text></g><g><title>std::panicking::try::do_call (70 samples, 0.06%)</title><rect x="99.5561%" y="885" width="0.0633%" height="15" fill="rgb(239,94,37)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="895.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (70 samples, 0.06%)</title><rect x="99.5561%" y="869" width="0.0633%" height="15" fill="rgb(242,217,10)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="879.50"></text></g><g><title>std::panic::catch_unwind (70 samples, 0.06%)</title><rect x="99.5561%" y="853" width="0.0633%" height="15" fill="rgb(250,193,7)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="863.50"></text></g><g><title>std::panicking::try (70 samples, 0.06%)</title><rect x="99.5561%" y="837" width="0.0633%" height="15" fill="rgb(230,104,19)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="847.50"></text></g><g><title>std::panicking::try::do_call (70 samples, 0.06%)</title><rect x="99.5561%" y="821" width="0.0633%" height="15" fill="rgb(230,181,4)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (70 samples, 0.06%)</title><rect x="99.5561%" y="805" width="0.0633%" height="15" fill="rgb(216,219,49)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}} (70 samples, 0.06%)</title><rect x="99.5561%" y="789" width="0.0633%" height="15" fill="rgb(254,144,0)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (70 samples, 0.06%)</title><rect x="99.5561%" y="773" width="0.0633%" height="15" fill="rgb(205,209,38)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (70 samples, 0.06%)</title><rect x="99.5561%" y="757" width="0.0633%" height="15" fill="rgb(240,21,42)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="767.50"></text></g><g><title>stellar_coordinates_test::main (70 samples, 0.06%)</title><rect x="99.5561%" y="741" width="0.0633%" height="15" fill="rgb(241,132,3)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="751.50"></text></g><g><title>bevy_app::app::App::add_plugins (70 samples, 0.06%)</title><rect x="99.5561%" y="725" width="0.0633%" height="15" fill="rgb(225,14,2)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="735.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (70 samples, 0.06%)</title><rect x="99.5561%" y="709" width="0.0633%" height="15" fill="rgb(210,141,35)" fg:x="110112" fg:w="70"/><text x="99.8061%" y="719.50"></text></g><g><title>_start (80 samples, 0.07%)</title><rect x="99.5515%" y="997" width="0.0723%" height="15" fill="rgb(251,14,44)" fg:x="110107" fg:w="80"/><text x="99.8015%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (15 samples, 0.01%)</title><rect x="99.6311%" y="981" width="0.0136%" height="15" fill="rgb(247,48,18)" fg:x="110195" fg:w="15"/><text x="99.8811%" y="991.50"></text></g><g><title>anon.66e00361830fbcf4a9f413e446d89f20.33.llvm.7410351951593621753 (18 samples, 0.02%)</title><rect x="99.6311%" y="997" width="0.0163%" height="15" fill="rgb(225,0,40)" fg:x="110195" fg:w="18"/><text x="99.8811%" y="1007.50"></text></g><g><title>async_executor::Executor::is_empty (135 samples, 0.12%)</title><rect x="99.6772%" y="997" width="0.1221%" height="15" fill="rgb(221,31,33)" fg:x="110246" fg:w="135"/><text x="99.9272%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (135 samples, 0.12%)</title><rect x="99.6772%" y="981" width="0.1221%" height="15" fill="rgb(237,42,40)" fg:x="110246" fg:w="135"/><text x="99.9272%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::is_empty (14 samples, 0.01%)</title><rect x="99.7993%" y="997" width="0.0127%" height="15" fill="rgb(233,51,29)" fg:x="110381" fg:w="14"/><text x="100.0493%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (14 samples, 0.01%)</title><rect x="99.7993%" y="981" width="0.0127%" height="15" fill="rgb(226,58,20)" fg:x="110381" fg:w="14"/><text x="100.0493%" y="991.50"></text></g><g><title>stellar_coordin (81,690 samples, 73.86%)</title><rect x="26.0110%" y="1013" width="73.8588%" height="15" fill="rgb(208,98,7)" fg:x="28769" fg:w="81690"/><text x="26.2610%" y="1023.50">stellar_coordin</text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.8843%" y="997" width="0.0127%" height="15" fill="rgb(228,143,44)" fg:x="110475" fg:w="14"/><text x="100.1343%" y="1007.50"></text></g><g><title>pa_mainloop_dispatch (50 samples, 0.05%)</title><rect x="99.8978%" y="901" width="0.0452%" height="15" fill="rgb(246,55,38)" fg:x="110490" fg:w="50"/><text x="100.1478%" y="911.50"></text></g><g><title>pa_srbchannel_read (33 samples, 0.03%)</title><rect x="99.9132%" y="885" width="0.0298%" height="15" fill="rgb(247,87,16)" fg:x="110507" fg:w="33"/><text x="100.1632%" y="895.50"></text></g><g><title>pa_pstream_register_memfd_mempool (29 samples, 0.03%)</title><rect x="99.9168%" y="869" width="0.0262%" height="15" fill="rgb(234,129,42)" fg:x="110511" fg:w="29"/><text x="100.1668%" y="879.50"></text></g><g><title>pa_pstream_register_memfd_mempool (27 samples, 0.02%)</title><rect x="99.9186%" y="853" width="0.0244%" height="15" fill="rgb(220,82,16)" fg:x="110513" fg:w="27"/><text x="100.1686%" y="863.50"></text></g><g><title>pa_pstream_set_srbchannel (25 samples, 0.02%)</title><rect x="99.9204%" y="837" width="0.0226%" height="15" fill="rgb(211,88,4)" fg:x="110515" fg:w="25"/><text x="100.1704%" y="847.50"></text></g><g><title>__libc_poll (53 samples, 0.05%)</title><rect x="99.9430%" y="869" width="0.0479%" height="15" fill="rgb(248,151,21)" fg:x="110540" fg:w="53"/><text x="100.1930%" y="879.50"></text></g><g><title>pa_mainloop_poll (59 samples, 0.05%)</title><rect x="99.9430%" y="901" width="0.0533%" height="15" fill="rgb(238,163,6)" fg:x="110540" fg:w="59"/><text x="100.1930%" y="911.50"></text></g><g><title>pa_stream_set_name (59 samples, 0.05%)</title><rect x="99.9430%" y="885" width="0.0533%" height="15" fill="rgb(209,183,11)" fg:x="110540" fg:w="59"/><text x="100.1930%" y="895.50"></text></g><g><title>all (110,603 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(219,37,20)" fg:x="0" fg:w="110603"/><text x="0.2500%" y="1039.50"></text></g><g><title>threaded-ml (144 samples, 0.13%)</title><rect x="99.8698%" y="1013" width="0.1302%" height="15" fill="rgb(210,158,4)" fg:x="110459" fg:w="144"/><text x="100.1198%" y="1023.50"></text></g><g><title>__GI___clone (114 samples, 0.10%)</title><rect x="99.8969%" y="997" width="0.1031%" height="15" fill="rgb(221,167,53)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="1007.50"></text></g><g><title>start_thread (114 samples, 0.10%)</title><rect x="99.8969%" y="981" width="0.1031%" height="15" fill="rgb(237,151,45)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="991.50"></text></g><g><title>pa_mutex_unlock (114 samples, 0.10%)</title><rect x="99.8969%" y="965" width="0.1031%" height="15" fill="rgb(231,39,3)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="975.50"></text></g><g><title>pa_stream_update_sample_rate (114 samples, 0.10%)</title><rect x="99.8969%" y="949" width="0.1031%" height="15" fill="rgb(212,167,28)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="959.50"></text></g><g><title>pa_mainloop_run (114 samples, 0.10%)</title><rect x="99.8969%" y="933" width="0.1031%" height="15" fill="rgb(232,178,8)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="943.50"></text></g><g><title>pa_mainloop_iterate (114 samples, 0.10%)</title><rect x="99.8969%" y="917" width="0.1031%" height="15" fill="rgb(225,151,20)" fg:x="110489" fg:w="114"/><text x="100.1469%" y="927.50"></text></g></svg></svg>